<?xml version="1.0" encoding="utf-8"?>
<namespace name="Office97" platform="Win32">
  <const name="OfficeMajorVersion" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="OfficeMinorVersion" type="Integer">
    <value>
      $0
    </value>
  </const>
  <variable name="LIBID_Office" type="TGUID" visibility="public" />
  <variable name="IID_IAccessible" type="TGUID" visibility="public" />
  <variable name="IID__IMsoDispObj" type="TGUID" visibility="public" />
  <variable name="IID__IMsoOleAccDispObj" type="TGUID" visibility="public" />
  <variable name="IID_CommandBars" type="TGUID" visibility="public" />
  <variable name="IID_CommandBar" type="TGUID" visibility="public" />
  <variable name="IID_CommandBarControls" type="TGUID" visibility="public" />
  <variable name="IID_CommandBarControl" type="TGUID" visibility="public" />
  <variable name="IID_CommandBarButton" type="TGUID" visibility="public" />
  <variable name="IID_CommandBarPopup" type="TGUID" visibility="public" />
  <variable name="IID_CommandBarComboBox" type="TGUID" visibility="public" />
  <variable name="IID_Adjustments" type="TGUID" visibility="public" />
  <variable name="IID_CalloutFormat" type="TGUID" visibility="public" />
  <variable name="IID_ColorFormat" type="TGUID" visibility="public" />
  <variable name="IID_ConnectorFormat" type="TGUID" visibility="public" />
  <variable name="IID_FillFormat" type="TGUID" visibility="public" />
  <variable name="IID_FreeformBuilder" type="TGUID" visibility="public" />
  <variable name="IID_GroupShapes" type="TGUID" visibility="public" />
  <variable name="IID_LineFormat" type="TGUID" visibility="public" />
  <variable name="IID_ShapeNode" type="TGUID" visibility="public" />
  <variable name="IID_ShapeNodes" type="TGUID" visibility="public" />
  <variable name="IID_PictureFormat" type="TGUID" visibility="public" />
  <variable name="IID_ShadowFormat" type="TGUID" visibility="public" />
  <variable name="IID_Shape" type="TGUID" visibility="public" />
  <variable name="IID_ShapeRange" type="TGUID" visibility="public" />
  <variable name="IID_Shapes" type="TGUID" visibility="public" />
  <variable name="IID_TextEffectFormat" type="TGUID" visibility="public" />
  <variable name="IID_TextFrame" type="TGUID" visibility="public" />
  <variable name="IID_ThreeDFormat" type="TGUID" visibility="public" />
  <variable name="IID_Assistant" type="TGUID" visibility="public" />
  <variable name="IID_Balloon" type="TGUID" visibility="public" />
  <variable name="IID_BalloonCheckboxes" type="TGUID" visibility="public" />
  <variable name="IID_BalloonCheckbox" type="TGUID" visibility="public" />
  <variable name="IID_BalloonLabels" type="TGUID" visibility="public" />
  <variable name="IID_BalloonLabel" type="TGUID" visibility="public" />
  <variable name="IID_DocumentProperty" type="TGUID" visibility="public" />
  <variable name="IID_DocumentProperties" type="TGUID" visibility="public" />
  <variable name="IID_IFoundFiles" type="TGUID" visibility="public" />
  <variable name="IID_IFind" type="TGUID" visibility="public" />
  <variable name="IID_FoundFiles" type="TGUID" visibility="public" />
  <variable name="IID_PropertyTest" type="TGUID" visibility="public" />
  <variable name="IID_PropertyTests" type="TGUID" visibility="public" />
  <variable name="IID_FileSearch" type="TGUID" visibility="public" />
  <type name="MsoLineDashStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoLineDashStyleMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoLineSolid" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoLineSquareDot" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoLineRoundDot" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoLineDash" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoLineDashDot" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoLineDashDotDot" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoLineLongDash" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoLineLongDashDot" type="Integer">
    <value>
      $8
    </value>
  </const>
  <type name="MsoLineStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoLineStyleMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoLineSingle" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoLineThinThin" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoLineThinThick" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoLineThickThin" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoLineThickBetweenThin" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoArrowheadStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoArrowheadStyleMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoArrowheadNone" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoArrowheadTriangle" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoArrowheadOpen" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoArrowheadStealth" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoArrowheadDiamond" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoArrowheadOval" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="MsoArrowheadWidth" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoArrowheadWidthMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoArrowheadNarrow" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoArrowheadWidthMedium" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoArrowheadWide" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoArrowheadLength" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoArrowheadLengthMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoArrowheadShort" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoArrowheadLengthMedium" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoArrowheadLong" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoFillType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoFillMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoFillSolid" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoFillPatterned" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoFillGradient" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoFillTextured" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoFillBackground" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoFillPicture" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="MsoGradientStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoGradientMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoGradientHorizontal" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoGradientVertical" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoGradientDiagonalUp" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoGradientDiagonalDown" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoGradientFromCorner" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoGradientFromTitle" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoGradientFromCenter" type="Integer">
    <value>
      $7
    </value>
  </const>
  <type name="MsoGradientColorType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoGradientColorMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoGradientOneColor" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoGradientTwoColors" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoGradientPresetColors" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoTextureType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoTextureTypeMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoTexturePreset" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoTextureUserDefined" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoPresetTexture" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPresetTextureMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoTexturePapyrus" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoTextureCanvas" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoTextureDenim" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoTextureWovenMat" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoTextureWaterDroplets" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoTexturePaperBag" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoTextureFishFossil" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoTextureSand" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoTextureGreenMarble" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoTextureWhiteMarble" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoTextureBrownMarble" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoTextureGranite" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoTextureNewsprint" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoTextureRecycledPaper" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoTextureParchment" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoTextureStationery" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoTextureBlueTissuePaper" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoTexturePinkTissuePaper" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoTexturePurpleMesh" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoTextureBouquet" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="msoTextureCork" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="msoTextureWalnut" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="msoTextureOak" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="msoTextureMediumWood" type="Integer">
    <value>
      $18
    </value>
  </const>
  <type name="MsoPatternType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPatternMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoPattern5Percent" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoPattern10Percent" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoPattern20Percent" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoPattern25Percent" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoPattern30Percent" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoPattern40Percent" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoPattern50Percent" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoPattern60Percent" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoPattern70Percent" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoPattern75Percent" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoPattern80Percent" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoPattern90Percent" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoPatternDarkHorizontal" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoPatternDarkVertical" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoPatternDarkDownwardDiagonal" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoPatternDarkUpwardDiagonal" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoPatternSmallCheckerBoard" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoPatternTrellis" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoPatternLightHorizontal" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoPatternLightVertical" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="msoPatternLightDownwardDiagonal" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="msoPatternLightUpwardDiagonal" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="msoPatternSmallGrid" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="msoPatternDottedDiamond" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="msoPatternWideDownwardDiagonal" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="msoPatternWideUpwardDiagonal" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="msoPatternDashedUpwardDiagonal" type="Integer">
    <value>
      $1B
    </value>
  </const>
  <const name="msoPatternDashedDownwardDiagonal" type="Integer">
    <value>
      $1C
    </value>
  </const>
  <const name="msoPatternNarrowVertical" type="Integer">
    <value>
      $1D
    </value>
  </const>
  <const name="msoPatternNarrowHorizontal" type="Integer">
    <value>
      $1E
    </value>
  </const>
  <const name="msoPatternDashedVertical" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="msoPatternDashedHorizontal" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="msoPatternLargeConfetti" type="Integer">
    <value>
      $21
    </value>
  </const>
  <const name="msoPatternLargeGrid" type="Integer">
    <value>
      $22
    </value>
  </const>
  <const name="msoPatternHorizontalBrick" type="Integer">
    <value>
      $23
    </value>
  </const>
  <const name="msoPatternLargeCheckerBoard" type="Integer">
    <value>
      $24
    </value>
  </const>
  <const name="msoPatternSmallConfetti" type="Integer">
    <value>
      $25
    </value>
  </const>
  <const name="msoPatternZigZag" type="Integer">
    <value>
      $26
    </value>
  </const>
  <const name="msoPatternSolidDiamond" type="Integer">
    <value>
      $27
    </value>
  </const>
  <const name="msoPatternDiagonalBrick" type="Integer">
    <value>
      $28
    </value>
  </const>
  <const name="msoPatternOutlinedDiamond" type="Integer">
    <value>
      $29
    </value>
  </const>
  <const name="msoPatternPlaid" type="Integer">
    <value>
      $2A
    </value>
  </const>
  <const name="msoPatternSphere" type="Integer">
    <value>
      $2B
    </value>
  </const>
  <const name="msoPatternWeave" type="Integer">
    <value>
      $2C
    </value>
  </const>
  <const name="msoPatternDottedGrid" type="Integer">
    <value>
      $2D
    </value>
  </const>
  <const name="msoPatternDivot" type="Integer">
    <value>
      $2E
    </value>
  </const>
  <const name="msoPatternShingle" type="Integer">
    <value>
      $2F
    </value>
  </const>
  <const name="msoPatternWave" type="Integer">
    <value>
      $30
    </value>
  </const>
  <type name="MsoPresetGradientType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPresetGradientMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoGradientEarlySunset" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoGradientLateSunset" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoGradientNightfall" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoGradientDaybreak" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoGradientHorizon" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoGradientDesert" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoGradientOcean" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoGradientCalmWater" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoGradientFire" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoGradientFog" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoGradientMoss" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoGradientPeacock" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoGradientWheat" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoGradientParchment" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoGradientMahogany" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoGradientRainbow" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoGradientRainbowII" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoGradientGold" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoGradientGoldII" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoGradientBrass" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="msoGradientChrome" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="msoGradientChromeII" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="msoGradientSilver" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="msoGradientSapphire" type="Integer">
    <value>
      $18
    </value>
  </const>
  <type name="MsoShadowType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoShadowMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoShadow1" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoShadow2" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoShadow3" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoShadow4" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoShadow5" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoShadow6" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoShadow7" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoShadow8" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoShadow9" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoShadow10" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoShadow11" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoShadow12" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoShadow13" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoShadow14" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoShadow15" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoShadow16" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoShadow17" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoShadow18" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoShadow19" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoShadow20" type="Integer">
    <value>
      $14
    </value>
  </const>
  <type name="MsoPresetTextEffect" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoTextEffectMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoTextEffect1" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoTextEffect2" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoTextEffect3" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoTextEffect4" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoTextEffect5" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoTextEffect6" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoTextEffect7" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoTextEffect8" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoTextEffect9" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoTextEffect10" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoTextEffect11" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoTextEffect12" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoTextEffect13" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoTextEffect14" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoTextEffect15" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoTextEffect16" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoTextEffect17" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoTextEffect18" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoTextEffect19" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoTextEffect20" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoTextEffect21" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="msoTextEffect22" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="msoTextEffect23" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="msoTextEffect24" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="msoTextEffect25" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="msoTextEffect26" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="msoTextEffect27" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="msoTextEffect28" type="Integer">
    <value>
      $1B
    </value>
  </const>
  <const name="msoTextEffect29" type="Integer">
    <value>
      $1C
    </value>
  </const>
  <const name="msoTextEffect30" type="Integer">
    <value>
      $1D
    </value>
  </const>
  <type name="MsoPresetTextEffectShape" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoTextEffectShapeMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoTextEffectShapePlainText" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoTextEffectShapeStop" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoTextEffectShapeTriangleUp" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoTextEffectShapeTriangleDown" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoTextEffectShapeChevronUp" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoTextEffectShapeChevronDown" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoTextEffectShapeRingInside" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoTextEffectShapeRingOutside" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoTextEffectShapeArchUpCurve" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoTextEffectShapeArchDownCurve" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoTextEffectShapeCircleCurve" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoTextEffectShapeButtonCurve" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoTextEffectShapeArchUpPour" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoTextEffectShapeArchDownPour" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoTextEffectShapeCirclePour" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoTextEffectShapeButtonPour" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoTextEffectShapeCurveUp" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoTextEffectShapeCurveDown" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoTextEffectShapeCanUp" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoTextEffectShapeCanDown" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="msoTextEffectShapeWave1" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="msoTextEffectShapeWave2" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="msoTextEffectShapeDoubleWave1" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="msoTextEffectShapeDoubleWave2" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="msoTextEffectShapeInflate" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="msoTextEffectShapeDeflate" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="msoTextEffectShapeInflateBottom" type="Integer">
    <value>
      $1B
    </value>
  </const>
  <const name="msoTextEffectShapeDeflateBottom" type="Integer">
    <value>
      $1C
    </value>
  </const>
  <const name="msoTextEffectShapeInflateTop" type="Integer">
    <value>
      $1D
    </value>
  </const>
  <const name="msoTextEffectShapeDeflateTop" type="Integer">
    <value>
      $1E
    </value>
  </const>
  <const name="msoTextEffectShapeDeflateInflate" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="msoTextEffectShapeDeflateInflateDeflate" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="msoTextEffectShapeFadeRight" type="Integer">
    <value>
      $21
    </value>
  </const>
  <const name="msoTextEffectShapeFadeLeft" type="Integer">
    <value>
      $22
    </value>
  </const>
  <const name="msoTextEffectShapeFadeUp" type="Integer">
    <value>
      $23
    </value>
  </const>
  <const name="msoTextEffectShapeFadeDown" type="Integer">
    <value>
      $24
    </value>
  </const>
  <const name="msoTextEffectShapeSlantUp" type="Integer">
    <value>
      $25
    </value>
  </const>
  <const name="msoTextEffectShapeSlantDown" type="Integer">
    <value>
      $26
    </value>
  </const>
  <const name="msoTextEffectShapeCascadeUp" type="Integer">
    <value>
      $27
    </value>
  </const>
  <const name="msoTextEffectShapeCascadeDown" type="Integer">
    <value>
      $28
    </value>
  </const>
  <type name="MsoTextEffectAlignment" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoTextEffectAlignmentMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoTextEffectAlignmentLeft" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoTextEffectAlignmentCentered" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoTextEffectAlignmentRight" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoTextEffectAlignmentLetterJustify" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoTextEffectAlignmentWordJustify" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoTextEffectAlignmentStretchJustify" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="MsoPresetLightingDirection" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPresetLightingDirectionMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoLightingTopLeft" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoLightingTop" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoLightingTopRight" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoLightingLeft" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoLightingNone" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoLightingRight" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoLightingBottomLeft" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoLightingBottom" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoLightingBottomRight" type="Integer">
    <value>
      $9
    </value>
  </const>
  <type name="MsoPresetLightingSoftness" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPresetLightingSoftnessMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoLightingDim" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoLightingNormal" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoLightingBright" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoPresetMaterial" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPresetMaterialMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoMaterialMatte" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoMaterialPlastic" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoMaterialMetal" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoMaterialWireFrame" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="MsoPresetExtrusionDirection" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPresetExtrusionDirectionMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoExtrusionBottomRight" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoExtrusionBottom" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoExtrusionBottomLeft" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoExtrusionRight" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoExtrusionNone" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoExtrusionLeft" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoExtrusionTopRight" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoExtrusionTop" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoExtrusionTopLeft" type="Integer">
    <value>
      $9
    </value>
  </const>
  <type name="MsoPresetThreeDFormat" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPresetThreeDFormatMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoThreeD1" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoThreeD2" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoThreeD3" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoThreeD4" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoThreeD5" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoThreeD6" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoThreeD7" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoThreeD8" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoThreeD9" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoThreeD10" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoThreeD11" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoThreeD12" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoThreeD13" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoThreeD14" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoThreeD15" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoThreeD16" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoThreeD17" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoThreeD18" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoThreeD19" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoThreeD20" type="Integer">
    <value>
      $14
    </value>
  </const>
  <type name="MsoExtrusionColorType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoExtrusionColorTypeMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoExtrusionColorAutomatic" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoExtrusionColorCustom" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoAlignCmd" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoAlignLefts" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoAlignCenters" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoAlignRights" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoAlignTops" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoAlignMiddles" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoAlignBottoms" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoDistributeCmd" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoDistributeHorizontally" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoDistributeVertically" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="MsoConnectorType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoConnectorTypeMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoConnectorStraight" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoConnectorElbow" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoConnectorCurve" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoHorizontalAnchor" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoHorizontalAnchorMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoAnchorNone" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoAnchorCenter" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoVerticalAnchor" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoVerticalAnchorMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoAnchorTop" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoAnchorTopBaseline" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoAnchorMiddle" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoAnchorBottom" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoAnchorBottomBaseLine" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoOrientation" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoOrientationMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoOrientationHorizontal" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoOrientationVertical" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoZOrderCmd" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoBringToFront" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoSendToBack" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoBringForward" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoSendBackward" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoBringInFrontOfText" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoSendBehindText" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoSegmentType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoSegmentLine" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoSegmentCurve" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="MsoEditingType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoEditingAuto" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoEditingCorner" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoEditingSmooth" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoEditingSymmetric" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoAutoShapeType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoShapeMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoShapeRectangle" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoShapeParallelogram" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoShapeTrapezoid" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoShapeDiamond" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoShapeRoundedRectangle" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoShapeOctagon" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoShapeIsoscelesTriangle" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoShapeRightTriangle" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoShapeOval" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoShapeHexagon" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoShapeCross" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoShapeRegularPentagon" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoShapeCan" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoShapeCube" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoShapeBevel" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoShapeFoldedCorner" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoShapeSmileyFace" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoShapeDonut" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoShapeNoSymbol" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoShapeBlockArc" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="msoShapeHeart" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="msoShapeLightningBolt" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="msoShapeSun" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="msoShapeMoon" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="msoShapeArc" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="msoShapeDoubleBracket" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="msoShapeDoubleBrace" type="Integer">
    <value>
      $1B
    </value>
  </const>
  <const name="msoShapePlaque" type="Integer">
    <value>
      $1C
    </value>
  </const>
  <const name="msoShapeLeftBracket" type="Integer">
    <value>
      $1D
    </value>
  </const>
  <const name="msoShapeRightBracket" type="Integer">
    <value>
      $1E
    </value>
  </const>
  <const name="msoShapeLeftBrace" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="msoShapeRightBrace" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="msoShapeRightArrow" type="Integer">
    <value>
      $21
    </value>
  </const>
  <const name="msoShapeLeftArrow" type="Integer">
    <value>
      $22
    </value>
  </const>
  <const name="msoShapeUpArrow" type="Integer">
    <value>
      $23
    </value>
  </const>
  <const name="msoShapeDownArrow" type="Integer">
    <value>
      $24
    </value>
  </const>
  <const name="msoShapeLeftRightArrow" type="Integer">
    <value>
      $25
    </value>
  </const>
  <const name="msoShapeUpDownArrow" type="Integer">
    <value>
      $26
    </value>
  </const>
  <const name="msoShapeQuadArrow" type="Integer">
    <value>
      $27
    </value>
  </const>
  <const name="msoShapeLeftRightUpArrow" type="Integer">
    <value>
      $28
    </value>
  </const>
  <const name="msoShapeBentArrow" type="Integer">
    <value>
      $29
    </value>
  </const>
  <const name="msoShapeUTurnArrow" type="Integer">
    <value>
      $2A
    </value>
  </const>
  <const name="msoShapeLeftUpArrow" type="Integer">
    <value>
      $2B
    </value>
  </const>
  <const name="msoShapeBentUpArrow" type="Integer">
    <value>
      $2C
    </value>
  </const>
  <const name="msoShapeCurvedRightArrow" type="Integer">
    <value>
      $2D
    </value>
  </const>
  <const name="msoShapeCurvedLeftArrow" type="Integer">
    <value>
      $2E
    </value>
  </const>
  <const name="msoShapeCurvedUpArrow" type="Integer">
    <value>
      $2F
    </value>
  </const>
  <const name="msoShapeCurvedDownArrow" type="Integer">
    <value>
      $30
    </value>
  </const>
  <const name="msoShapeStripedRightArrow" type="Integer">
    <value>
      $31
    </value>
  </const>
  <const name="msoShapeNotchedRightArrow" type="Integer">
    <value>
      $32
    </value>
  </const>
  <const name="msoShapePentagon" type="Integer">
    <value>
      $33
    </value>
  </const>
  <const name="msoShapeChevron" type="Integer">
    <value>
      $34
    </value>
  </const>
  <const name="msoShapeRightArrowCallout" type="Integer">
    <value>
      $35
    </value>
  </const>
  <const name="msoShapeLeftArrowCallout" type="Integer">
    <value>
      $36
    </value>
  </const>
  <const name="msoShapeUpArrowCallout" type="Integer">
    <value>
      $37
    </value>
  </const>
  <const name="msoShapeDownArrowCallout" type="Integer">
    <value>
      $38
    </value>
  </const>
  <const name="msoShapeLeftRightArrowCallout" type="Integer">
    <value>
      $39
    </value>
  </const>
  <const name="msoShapeUpDownArrowCallout" type="Integer">
    <value>
      $3A
    </value>
  </const>
  <const name="msoShapeQuadArrowCallout" type="Integer">
    <value>
      $3B
    </value>
  </const>
  <const name="msoShapeCircularArrow" type="Integer">
    <value>
      $3C
    </value>
  </const>
  <const name="msoShapeFlowchartProcess" type="Integer">
    <value>
      $3D
    </value>
  </const>
  <const name="msoShapeFlowchartAlternateProcess" type="Integer">
    <value>
      $3E
    </value>
  </const>
  <const name="msoShapeFlowchartDecision" type="Integer">
    <value>
      $3F
    </value>
  </const>
  <const name="msoShapeFlowchartData" type="Integer">
    <value>
      $40
    </value>
  </const>
  <const name="msoShapeFlowchartPredefinedProcess" type="Integer">
    <value>
      $41
    </value>
  </const>
  <const name="msoShapeFlowchartInternalStorage" type="Integer">
    <value>
      $42
    </value>
  </const>
  <const name="msoShapeFlowchartDocument" type="Integer">
    <value>
      $43
    </value>
  </const>
  <const name="msoShapeFlowchartMultidocument" type="Integer">
    <value>
      $44
    </value>
  </const>
  <const name="msoShapeFlowchartTerminator" type="Integer">
    <value>
      $45
    </value>
  </const>
  <const name="msoShapeFlowchartPreparation" type="Integer">
    <value>
      $46
    </value>
  </const>
  <const name="msoShapeFlowchartManualInput" type="Integer">
    <value>
      $47
    </value>
  </const>
  <const name="msoShapeFlowchartManualOperation" type="Integer">
    <value>
      $48
    </value>
  </const>
  <const name="msoShapeFlowchartConnector" type="Integer">
    <value>
      $49
    </value>
  </const>
  <const name="msoShapeFlowchartOffpageConnector" type="Integer">
    <value>
      $4A
    </value>
  </const>
  <const name="msoShapeFlowchartCard" type="Integer">
    <value>
      $4B
    </value>
  </const>
  <const name="msoShapeFlowchartPunchedTape" type="Integer">
    <value>
      $4C
    </value>
  </const>
  <const name="msoShapeFlowchartSummingJunction" type="Integer">
    <value>
      $4D
    </value>
  </const>
  <const name="msoShapeFlowchartOr" type="Integer">
    <value>
      $4E
    </value>
  </const>
  <const name="msoShapeFlowchartCollate" type="Integer">
    <value>
      $4F
    </value>
  </const>
  <const name="msoShapeFlowchartSort" type="Integer">
    <value>
      $50
    </value>
  </const>
  <const name="msoShapeFlowchartExtract" type="Integer">
    <value>
      $51
    </value>
  </const>
  <const name="msoShapeFlowchartMerge" type="Integer">
    <value>
      $52
    </value>
  </const>
  <const name="msoShapeFlowchartStoredData" type="Integer">
    <value>
      $53
    </value>
  </const>
  <const name="msoShapeFlowchartDelay" type="Integer">
    <value>
      $54
    </value>
  </const>
  <const name="msoShapeFlowchartSequentialAccessStorage" type="Integer">
    <value>
      $55
    </value>
  </const>
  <const name="msoShapeFlowchartMagneticDisk" type="Integer">
    <value>
      $56
    </value>
  </const>
  <const name="msoShapeFlowchartDirectAccessStorage" type="Integer">
    <value>
      $57
    </value>
  </const>
  <const name="msoShapeFlowchartDisplay" type="Integer">
    <value>
      $58
    </value>
  </const>
  <const name="msoShapeExplosion1" type="Integer">
    <value>
      $59
    </value>
  </const>
  <const name="msoShapeExplosion2" type="Integer">
    <value>
      $5A
    </value>
  </const>
  <const name="msoShape4pointStar" type="Integer">
    <value>
      $5B
    </value>
  </const>
  <const name="msoShape5pointStar" type="Integer">
    <value>
      $5C
    </value>
  </const>
  <const name="msoShape8pointStar" type="Integer">
    <value>
      $5D
    </value>
  </const>
  <const name="msoShape16pointStar" type="Integer">
    <value>
      $5E
    </value>
  </const>
  <const name="msoShape24pointStar" type="Integer">
    <value>
      $5F
    </value>
  </const>
  <const name="msoShape32pointStar" type="Integer">
    <value>
      $60
    </value>
  </const>
  <const name="msoShapeUpRibbon" type="Integer">
    <value>
      $61
    </value>
  </const>
  <const name="msoShapeDownRibbon" type="Integer">
    <value>
      $62
    </value>
  </const>
  <const name="msoShapeCurvedUpRibbon" type="Integer">
    <value>
      $63
    </value>
  </const>
  <const name="msoShapeCurvedDownRibbon" type="Integer">
    <value>
      $64
    </value>
  </const>
  <const name="msoShapeVerticalScroll" type="Integer">
    <value>
      $65
    </value>
  </const>
  <const name="msoShapeHorizontalScroll" type="Integer">
    <value>
      $66
    </value>
  </const>
  <const name="msoShapeWave" type="Integer">
    <value>
      $67
    </value>
  </const>
  <const name="msoShapeDoubleWave" type="Integer">
    <value>
      $68
    </value>
  </const>
  <const name="msoShapeRectangularCallout" type="Integer">
    <value>
      $69
    </value>
  </const>
  <const name="msoShapeRoundedRectangularCallout" type="Integer">
    <value>
      $6A
    </value>
  </const>
  <const name="msoShapeOvalCallout" type="Integer">
    <value>
      $6B
    </value>
  </const>
  <const name="msoShapeCloudCallout" type="Integer">
    <value>
      $6C
    </value>
  </const>
  <const name="msoShapeLineCallout1" type="Integer">
    <value>
      $6D
    </value>
  </const>
  <const name="msoShapeLineCallout2" type="Integer">
    <value>
      $6E
    </value>
  </const>
  <const name="msoShapeLineCallout3" type="Integer">
    <value>
      $6F
    </value>
  </const>
  <const name="msoShapeLineCallout4" type="Integer">
    <value>
      $70
    </value>
  </const>
  <const name="msoShapeLineCallout1AccentBar" type="Integer">
    <value>
      $71
    </value>
  </const>
  <const name="msoShapeLineCallout2AccentBar" type="Integer">
    <value>
      $72
    </value>
  </const>
  <const name="msoShapeLineCallout3AccentBar" type="Integer">
    <value>
      $73
    </value>
  </const>
  <const name="msoShapeLineCallout4AccentBar" type="Integer">
    <value>
      $74
    </value>
  </const>
  <const name="msoShapeLineCallout1NoBorder" type="Integer">
    <value>
      $75
    </value>
  </const>
  <const name="msoShapeLineCallout2NoBorder" type="Integer">
    <value>
      $76
    </value>
  </const>
  <const name="msoShapeLineCallout3NoBorder" type="Integer">
    <value>
      $77
    </value>
  </const>
  <const name="msoShapeLineCallout4NoBorder" type="Integer">
    <value>
      $78
    </value>
  </const>
  <const name="msoShapeLineCallout1BorderandAccentBar" type="Integer">
    <value>
      $79
    </value>
  </const>
  <const name="msoShapeLineCallout2BorderandAccentBar" type="Integer">
    <value>
      $7A
    </value>
  </const>
  <const name="msoShapeLineCallout3BorderandAccentBar" type="Integer">
    <value>
      $7B
    </value>
  </const>
  <const name="msoShapeLineCallout4BorderandAccentBar" type="Integer">
    <value>
      $7C
    </value>
  </const>
  <const name="msoShapeActionButtonCustom" type="Integer">
    <value>
      $7D
    </value>
  </const>
  <const name="msoShapeActionButtonHome" type="Integer">
    <value>
      $7E
    </value>
  </const>
  <const name="msoShapeActionButtonHelp" type="Integer">
    <value>
      $7F
    </value>
  </const>
  <const name="msoShapeActionButtonInformation" type="Integer">
    <value>
      $80
    </value>
  </const>
  <const name="msoShapeActionButtonBackorPrevious" type="Integer">
    <value>
      $81
    </value>
  </const>
  <const name="msoShapeActionButtonForwardorNext" type="Integer">
    <value>
      $82
    </value>
  </const>
  <const name="msoShapeActionButtonBeginning" type="Integer">
    <value>
      $83
    </value>
  </const>
  <const name="msoShapeActionButtonEnd" type="Integer">
    <value>
      $84
    </value>
  </const>
  <const name="msoShapeActionButtonReturn" type="Integer">
    <value>
      $85
    </value>
  </const>
  <const name="msoShapeActionButtonDocument" type="Integer">
    <value>
      $86
    </value>
  </const>
  <const name="msoShapeActionButtonSound" type="Integer">
    <value>
      $87
    </value>
  </const>
  <const name="msoShapeActionButtonMovie" type="Integer">
    <value>
      $88
    </value>
  </const>
  <const name="msoShapeBalloon" type="Integer">
    <value>
      $89
    </value>
  </const>
  <const name="msoShapeNotPrimitive" type="Integer">
    <value>
      $8A
    </value>
  </const>
  <type name="MsoShapeType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoShapeTypeMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoAutoShape" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoCallout" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoChart" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoComment" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoFreeform" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoGroup" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoEmbeddedOLEObject" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoFormControl" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoLine" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoLinkedOLEObject" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoLinkedPicture" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoOLEControlObject" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoPicture" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoPlaceholder" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoTextEffect" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoMedia" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoTextBox" type="Integer">
    <value>
      $11
    </value>
  </const>
  <type name="MsoFlipCmd" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoFlipHorizontal" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoFlipVertical" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="MsoTriState" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoTrue" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="msoFalse" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoCTrue" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoTriStateToggle" type="Integer">
    <value>
      $FFFFFFFD
    </value>
  </const>
  <const name="msoTriStateMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <type name="MsoColorType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoColorTypeMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoColorTypeRGB" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoColorTypeScheme" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoPictureColorType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPictureMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoPictureAutomatic" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoPictureGrayscale" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoPictureBlackAndWhite" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoPictureWatermark" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="MsoCalloutAngleType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoCalloutAngleMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoCalloutAngleAutomatic" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoCalloutAngle30" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoCalloutAngle45" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoCalloutAngle60" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoCalloutAngle90" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoCalloutDropType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoCalloutDropMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoCalloutDropCustom" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoCalloutDropTop" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoCalloutDropCenter" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoCalloutDropBottom" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="MsoCalloutType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoCalloutMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoCalloutOne" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoCalloutTwo" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoCalloutThree" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoCalloutFour" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="MsoBlackWhiteMode" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoBlackWhiteMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoBlackWhiteAutomatic" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoBlackWhiteGrayScale" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoBlackWhiteLightGrayScale" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoBlackWhiteInverseGrayScale" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoBlackWhiteGrayOutline" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoBlackWhiteBlackTextAndLine" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoBlackWhiteHighContrast" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoBlackWhiteBlack" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoBlackWhiteWhite" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoBlackWhiteDontShow" type="Integer">
    <value>
      $A
    </value>
  </const>
  <type name="MsoMixedType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoIntegerMixed" type="Integer">
    <value>
      $8000
    </value>
  </const>
  <const name="msoSingleMixed" type="Integer">
    <value>
      $80000000
    </value>
  </const>
  <type name="MsoTextOrientation" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoTextOrientationMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoTextOrientationHorizontal" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoTextOrientationUpward" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoTextOrientationDownward" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoTextOrientationVerticalFarEast" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoTextOrientationVertical" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoTextOrientationHorizontalRotatedFarEast" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="MsoScaleFrom" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoScaleFromTopLeft" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoScaleFromMiddle" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoScaleFromBottomRight" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoBarPosition" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoBarLeft" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoBarTop" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoBarRight" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoBarBottom" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoBarFloating" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoBarPopup" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoBarMenuBar" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="MsoBarProtection" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoBarNoProtection" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoBarNoCustomize" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoBarNoResize" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoBarNoMove" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoBarNoChangeVisible" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoBarNoChangeDock" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoBarNoVerticalDock" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="msoBarNoHorizontalDock" type="Integer">
    <value>
      $40
    </value>
  </const>
  <type name="MsoBarType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoBarTypeNormal" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoBarTypeMenuBar" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoBarTypePopup" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoControlType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoControlCustom" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoControlButton" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoControlEdit" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoControlDropdown" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoControlComboBox" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoControlButtonDropdown" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoControlSplitDropdown" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoControlOCXDropdown" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoControlGenericDropdown" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoControlGraphicDropdown" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoControlPopup" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoControlGraphicPopup" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoControlButtonPopup" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoControlSplitButtonPopup" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoControlSplitButtonMRUPopup" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoControlLabel" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoControlExpandingGrid" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoControlSplitExpandingGrid" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoControlGrid" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoControlGauge" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoControlGraphicCombo" type="Integer">
    <value>
      $14
    </value>
  </const>
  <type name="MsoButtonState" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoButtonUp" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoButtonDown" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="msoButtonMixed" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoControlOLEUsage" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoControlOLEUsageNeither" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoControlOLEUsageServer" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoControlOLEUsageClient" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoControlOLEUsageBoth" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoButtonStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoButtonAutomatic" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoButtonIcon" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoButtonCaption" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoButtonIconAndCaption" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoComboStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoComboNormal" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoComboLabel" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="MsoOLEMenuGroup" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoOLEMenuGroupNone" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="msoOLEMenuGroupFile" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoOLEMenuGroupEdit" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoOLEMenuGroupContainer" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoOLEMenuGroupObject" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoOLEMenuGroupWindow" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoOLEMenuGroupHelp" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoMenuAnimation" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoMenuAnimationNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoMenuAnimationRandom" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoMenuAnimationUnfold" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoMenuAnimationSlide" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoBarRow" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoBarRowFirst" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoBarRowLast" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <type name="MsoHyperlinkType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoHyperlinkRange" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoHyperlinkShape" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoHyperlinkInlineShape" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoExtraInfoMethod" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoMethodGet" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoMethodPost" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="MsoAnimationType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoAnimationIdle" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoAnimationGreeting" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoAnimationGoodbye" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoAnimationBeginSpeaking" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoAnimationCharacterSuccessMajor" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoAnimationGetAttentionMajor" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoAnimationGetAttentionMinor" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoAnimationSearching" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoAnimationPrinting" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoAnimationGestureRight" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoAnimationWritingNotingSomething" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="msoAnimationWorkingAtSomething" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="msoAnimationThinking" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="msoAnimationSendingMail" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="msoAnimationListensToComputer" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="msoAnimationDisappear" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="msoAnimationAppear" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="msoAnimationGetArtsy" type="Integer">
    <value>
      $64
    </value>
  </const>
  <const name="msoAnimationGetTechy" type="Integer">
    <value>
      $65
    </value>
  </const>
  <const name="msoAnimationGetWizardy" type="Integer">
    <value>
      $66
    </value>
  </const>
  <const name="msoAnimationCheckingSomething" type="Integer">
    <value>
      $67
    </value>
  </const>
  <const name="msoAnimationLookDown" type="Integer">
    <value>
      $68
    </value>
  </const>
  <const name="msoAnimationLookDownLeft" type="Integer">
    <value>
      $69
    </value>
  </const>
  <const name="msoAnimationLookDownRight" type="Integer">
    <value>
      $6A
    </value>
  </const>
  <const name="msoAnimationLookLeft" type="Integer">
    <value>
      $6B
    </value>
  </const>
  <const name="msoAnimationLookRight" type="Integer">
    <value>
      $6C
    </value>
  </const>
  <const name="msoAnimationLookUp" type="Integer">
    <value>
      $6D
    </value>
  </const>
  <const name="msoAnimationLookUpLeft" type="Integer">
    <value>
      $6E
    </value>
  </const>
  <const name="msoAnimationLookUpRight" type="Integer">
    <value>
      $6F
    </value>
  </const>
  <const name="msoAnimationSaving" type="Integer">
    <value>
      $70
    </value>
  </const>
  <const name="msoAnimationGestureDown" type="Integer">
    <value>
      $71
    </value>
  </const>
  <const name="msoAnimationGestureLeft" type="Integer">
    <value>
      $72
    </value>
  </const>
  <const name="msoAnimationGestureUp" type="Integer">
    <value>
      $73
    </value>
  </const>
  <const name="msoAnimationEmptyTrash" type="Integer">
    <value>
      $74
    </value>
  </const>
  <type name="MsoButtonSetType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoButtonSetNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoButtonSetOK" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoButtonSetCancel" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoButtonSetOkCancel" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoButtonSetYesNo" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoButtonSetYesNoCancel" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoButtonSetBackClose" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoButtonSetNextClose" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoButtonSetBackNextClose" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoButtonSetRetryCancel" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoButtonSetAbortRetryIgnore" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoButtonSetSearchClose" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoButtonSetBackNextSnooze" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoButtonSetTipsOptionsClose" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoButtonSetYesAllNoCancel" type="Integer">
    <value>
      $E
    </value>
  </const>
  <type name="MsoIconType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoIconNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoIconAlert" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoIconTip" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoBalloonType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoBalloonTypeButtons" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoBalloonTypeBullets" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoBalloonTypeNumbers" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoModeType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoModeModal" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoModeAutoDown" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoModeModeless" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoBalloonErrorType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoBalloonErrorNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoBalloonErrorOther" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoBalloonErrorTooBig" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoBalloonErrorOutOfMemory" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoBalloonErrorBadPictureRef" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoBalloonErrorBadReference" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoBalloonErrorButtonlessModal" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoBalloonErrorButtonModeless" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoBalloonErrorBadCharacter" type="Integer">
    <value>
      $8
    </value>
  </const>
  <type name="MsoWizardActType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoWizardActInactive" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoWizardActActive" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoWizardActSuspend" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoWizardActResume" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoWizardMsgType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoWizardMsgLocalStateOn" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoWizardMsgLocalStateOff" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoWizardMsgShowHelp" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoWizardMsgSuspending" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoWizardMsgResuming" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoBalloonButtonType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoBalloonButtonYesToAll" type="Integer">
    <value>
      $FFFFFFF1
    </value>
  </const>
  <const name="msoBalloonButtonOptions" type="Integer">
    <value>
      $FFFFFFF2
    </value>
  </const>
  <const name="msoBalloonButtonTips" type="Integer">
    <value>
      $FFFFFFF3
    </value>
  </const>
  <const name="msoBalloonButtonClose" type="Integer">
    <value>
      $FFFFFFF4
    </value>
  </const>
  <const name="msoBalloonButtonSnooze" type="Integer">
    <value>
      $FFFFFFF5
    </value>
  </const>
  <const name="msoBalloonButtonSearch" type="Integer">
    <value>
      $FFFFFFF6
    </value>
  </const>
  <const name="msoBalloonButtonIgnore" type="Integer">
    <value>
      $FFFFFFF7
    </value>
  </const>
  <const name="msoBalloonButtonAbort" type="Integer">
    <value>
      $FFFFFFF8
    </value>
  </const>
  <const name="msoBalloonButtonRetry" type="Integer">
    <value>
      $FFFFFFF9
    </value>
  </const>
  <const name="msoBalloonButtonNext" type="Integer">
    <value>
      $FFFFFFFA
    </value>
  </const>
  <const name="msoBalloonButtonBack" type="Integer">
    <value>
      $FFFFFFFB
    </value>
  </const>
  <const name="msoBalloonButtonNo" type="Integer">
    <value>
      $FFFFFFFC
    </value>
  </const>
  <const name="msoBalloonButtonYes" type="Integer">
    <value>
      $FFFFFFFD
    </value>
  </const>
  <const name="msoBalloonButtonCancel" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoBalloonButtonOK" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="msoBalloonButtonNull" type="Integer">
    <value>
      $0
    </value>
  </const>
  <type name="DocProperties" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="offPropertyTypeNumber" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="offPropertyTypeBoolean" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="offPropertyTypeDate" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="offPropertyTypeString" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="offPropertyTypeFloat" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoDocProperties" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPropertyTypeNumber" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoPropertyTypeBoolean" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoPropertyTypeDate" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoPropertyTypeString" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoPropertyTypeFloat" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoFileFindOptions" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoOptionsNew" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoOptionsAdd" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoOptionsWithin" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoFileFindView" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoViewFileInfo" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoViewPreview" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoViewSummaryInfo" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoFileFindSortBy" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoFileFindSortbyAuthor" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoFileFindSortbyDateCreated" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoFileFindSortbyLastSavedBy" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoFileFindSortbyDateSaved" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoFileFindSortbyFileName" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoFileFindSortbySize" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoFileFindSortbyTitle" type="Integer">
    <value>
      $7
    </value>
  </const>
  <type name="MsoFileFindListBy" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoListbyName" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoListbyTitle" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoLastModified" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoLastModifiedYesterday" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoLastModifiedToday" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoLastModifiedLastWeek" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoLastModifiedThisWeek" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoLastModifiedLastMonth" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoLastModifiedThisMonth" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoLastModifiedAnyTime" type="Integer">
    <value>
      $7
    </value>
  </const>
  <type name="MsoSortBy" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoSortByFileName" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoSortBySize" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoSortByFileType" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoSortByLastModified" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="MsoSortOrder" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoSortOrderAscending" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoSortOrderDescending" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoConnector" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoConnectorAnd" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoConnectorOr" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoCondition" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoConditionFileTypeAllFiles" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoConditionFileTypeOfficeFiles" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoConditionFileTypeWordDocuments" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoConditionFileTypeExcelWorkbooks" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoConditionFileTypePowerPointPresentations" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoConditionFileTypeBinders" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoConditionFileTypeDatabases" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoConditionFileTypeTemplates" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoConditionIncludes" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoConditionIncludesPhrase" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoConditionBeginsWith" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoConditionEndsWith" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoConditionIncludesNearEachOther" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoConditionIsExactly" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoConditionIsNot" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoConditionYesterday" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoConditionToday" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoConditionTomorrow" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoConditionLastWeek" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoConditionThisWeek" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="msoConditionNextWeek" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="msoConditionLastMonth" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="msoConditionThisMonth" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="msoConditionNextMonth" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="msoConditionAnytime" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="msoConditionAnytimeBetween" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="msoConditionOn" type="Integer">
    <value>
      $1B
    </value>
  </const>
  <const name="msoConditionOnOrAfter" type="Integer">
    <value>
      $1C
    </value>
  </const>
  <const name="msoConditionOnOrBefore" type="Integer">
    <value>
      $1D
    </value>
  </const>
  <const name="msoConditionInTheNext" type="Integer">
    <value>
      $1E
    </value>
  </const>
  <const name="msoConditionInTheLast" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="msoConditionEquals" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="msoConditionDoesNotEqual" type="Integer">
    <value>
      $21
    </value>
  </const>
  <const name="msoConditionAnyNumberBetween" type="Integer">
    <value>
      $22
    </value>
  </const>
  <const name="msoConditionAtMost" type="Integer">
    <value>
      $23
    </value>
  </const>
  <const name="msoConditionAtLeast" type="Integer">
    <value>
      $24
    </value>
  </const>
  <const name="msoConditionMoreThan" type="Integer">
    <value>
      $25
    </value>
  </const>
  <const name="msoConditionLessThan" type="Integer">
    <value>
      $26
    </value>
  </const>
  <const name="msoConditionIsYes" type="Integer">
    <value>
      $27
    </value>
  </const>
  <const name="msoConditionIsNo" type="Integer">
    <value>
      $28
    </value>
  </const>
  <type name="MsoFileType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoFileTypeAllFiles" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoFileTypeOfficeFiles" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoFileTypeWordDocuments" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoFileTypeExcelWorkbooks" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoFileTypePowerPointPresentations" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoFileTypeBinders" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoFileTypeDatabases" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoFileTypeTemplates" type="Integer">
    <value>
      $8
    </value>
  </const>
  <type name="MsoRGBType" type="integer" loBound="-2147483648" hiBound="2147483647" file="System.pas" line="12" />
  <interface name="IAccessible" GUID="{618736E0-3C3D-11CF-810C-00AA00389B71}" ancestor="IDispatch">
    <function name="Get_accParent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_accChildCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_accChild" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_accName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_accValue" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_accDescription" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_accRole" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_accState" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_accHelp" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_accHelpTopic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pszHelpFile" type="WideString" paramflags="out" />
        <parameter name="varChild" type="OleVariant" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_accKeyboardShortcut" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_accFocus" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_accSelection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_accDefaultAction" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="accSelect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="flagsSelect" type="Integer" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="accLocation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pxLeft" type="Integer" paramflags="out" />
        <parameter name="pyTop" type="Integer" paramflags="out" />
        <parameter name="pcxWidth" type="Integer" paramflags="out" />
        <parameter name="pcyHeight" type="Integer" paramflags="out" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="accNavigate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="navDir" type="Integer" />
        <parameter name="varStart" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="accHitTest" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="accDoDefaultAction" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="Set_accName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <parameter name="pszName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_accValue" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <parameter name="pszValue" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="accParent" visibility="public" read="Get_accParent" type="IDispatch" />
    <property name="accChildCount" visibility="public" read="Get_accChildCount" type="Integer" />
    <property name="accChild[varChild]" visibility="public" read="Get_accChild" type="IDispatch" />
    <property name="accName[varChild]" visibility="public" read="Get_accName" write="Set_accName" type="WideString" />
    <property name="accValue[varChild]" visibility="public" read="Get_accValue" write="Set_accValue" type="WideString" />
    <property name="accDescription[varChild]" visibility="public" read="Get_accDescription" type="WideString" />
    <property name="accRole[varChild]" visibility="public" read="Get_accRole" type="OleVariant" />
    <property name="accState[varChild]" visibility="public" read="Get_accState" type="OleVariant" />
    <property name="accHelp[varChild]" visibility="public" read="Get_accHelp" type="WideString" />
    <property name="accHelpTopic[pszHelpFile][varChild]" visibility="public" read="Get_accHelpTopic" type="Integer" />
    <property name="accKeyboardShortcut[varChild]" visibility="public" read="Get_accKeyboardShortcut" type="WideString" />
    <property name="accFocus" visibility="public" read="Get_accFocus" type="OleVariant" default="0" />
    <property name="accSelection" visibility="public" read="Get_accSelection" type="OleVariant" default="0" />
    <property name="accDefaultAction[varChild]" visibility="public" read="Get_accDefaultAction" type="WideString" />
  </interface>
  <interface name="IAccessibleDisp" GUID="{618736E0-3C3D-11CF-810C-00AA00389B71}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="accParent" visibility="automated" type="IDispatch" />
    <property name="accChildCount" visibility="automated" type="Integer" />
    <property name="accChild[varChild]" visibility="automated" type="IDispatch" />
    <property name="accName[varChild]" visibility="automated" type="WideString" />
    <property name="accValue[varChild]" visibility="automated" type="WideString" />
    <property name="accDescription[varChild]" visibility="automated" type="WideString" />
    <property name="accRole[varChild]" visibility="automated" type="OleVariant" />
    <property name="accState[varChild]" visibility="automated" type="OleVariant" />
    <property name="accHelp[varChild]" visibility="automated" type="WideString" />
    <property name="accHelpTopic[pszHelpFile][varChild]" visibility="automated" type="Integer" />
    <property name="accKeyboardShortcut[varChild]" visibility="automated" type="WideString" />
    <property name="accFocus" visibility="automated" type="OleVariant" />
    <property name="accSelection" visibility="automated" type="OleVariant" />
    <property name="accDefaultAction[varChild]" visibility="automated" type="WideString" />
    <procedure name="accSelect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="flagsSelect" type="Integer" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="accLocation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="pxLeft" type="Integer" paramflags="out" />
        <parameter name="pyTop" type="Integer" paramflags="out" />
        <parameter name="pcxWidth" type="Integer" paramflags="out" />
        <parameter name="pcyHeight" type="Integer" paramflags="out" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="accNavigate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="navDir" type="Integer" />
        <parameter name="varStart" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="accHitTest" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="accDoDefaultAction" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
  </interface>
  <interface name="_IMsoDispObj" GUID="{000C0300-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="IDispatch" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
  </interface>
  <interface name="_IMsoDispObjDisp" GUID="{000C0300-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="_IMsoOleAccDispObj" GUID="{000C0301-0000-0000-C000-000000000046}" ancestor="IAccessible">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="IDispatch" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
  </interface>
  <interface name="_IMsoOleAccDispObjDisp" GUID="{000C0301-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="accParent" visibility="automated" type="IDispatch" />
    <property name="accChildCount" visibility="automated" type="Integer" />
    <property name="accChild[varChild]" visibility="automated" type="IDispatch" />
    <property name="accName[varChild]" visibility="automated" type="WideString" />
    <property name="accValue[varChild]" visibility="automated" type="WideString" />
    <property name="accDescription[varChild]" visibility="automated" type="WideString" />
    <property name="accRole[varChild]" visibility="automated" type="OleVariant" />
    <property name="accState[varChild]" visibility="automated" type="OleVariant" />
    <property name="accHelp[varChild]" visibility="automated" type="WideString" />
    <property name="accHelpTopic[pszHelpFile][varChild]" visibility="automated" type="Integer" />
    <property name="accKeyboardShortcut[varChild]" visibility="automated" type="WideString" />
    <property name="accFocus" visibility="automated" type="OleVariant" />
    <property name="accSelection" visibility="automated" type="OleVariant" />
    <property name="accDefaultAction[varChild]" visibility="automated" type="WideString" />
    <procedure name="accSelect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="flagsSelect" type="Integer" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="accLocation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="pxLeft" type="Integer" paramflags="out" />
        <parameter name="pyTop" type="Integer" paramflags="out" />
        <parameter name="pcxWidth" type="Integer" paramflags="out" />
        <parameter name="pcyHeight" type="Integer" paramflags="out" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="accNavigate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="navDir" type="Integer" />
        <parameter name="varStart" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="accHitTest" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="accDoDefaultAction" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
  </interface>
  <interface name="CommandBars" GUID="{000C0302-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_ActionControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <function name="Get_ActiveMenuBar" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBar" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="OleVariant" />
        <parameter name="Position" type="OleVariant" />
        <parameter name="MenuBar" type="OleVariant" />
        <parameter name="Temporary" type="OleVariant" />
        <retval type="CommandBar" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_DisplayTooltips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayTooltips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfDisplayTooltips" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_DisplayKeysInTooltips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayKeysInTooltips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfDisplayKeys" type="WordBool" />
      </parameters>
    </procedure>
    <function name="FindControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="OleVariant" />
        <parameter name="Id" type="OleVariant" />
        <parameter name="Tag" type="OleVariant" />
        <parameter name="Visible" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="CommandBar" />
      </parameters>
    </function>
    <function name="Get_LargeButtons" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_LargeButtons" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfLargeButtons" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MenuAnimationStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_MenuAnimationStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pma" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="ReleaseFocus" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="ActionControl" visibility="public" read="Get_ActionControl" type="CommandBarControl" />
    <property name="ActiveMenuBar" visibility="public" read="Get_ActiveMenuBar" type="CommandBar" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="DisplayTooltips" visibility="public" read="Get_DisplayTooltips" type="WordBool" />
    <property name="DisplayKeysInTooltips" visibility="public" read="Get_DisplayKeysInTooltips" type="WordBool" />
    <property name="Item[Index]" visibility="public" read="Get_Item" type="CommandBar" />
    <property name="LargeButtons" visibility="public" read="Get_LargeButtons" type="WordBool" />
    <property name="MenuAnimationStyle" visibility="public" read="Get_MenuAnimationStyle" type="TOleEnum" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="CommandBarsDisp" GUID="{000C0302-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="ActionControl" visibility="automated" type="CommandBarControl" />
    <property name="ActiveMenuBar" visibility="automated" type="CommandBar" />
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="OleVariant" />
        <parameter name="Position" type="OleVariant" />
        <parameter name="MenuBar" type="OleVariant" />
        <parameter name="Temporary" type="OleVariant" />
        <retval type="CommandBar" />
      </parameters>
    </function>
    <property name="Count" visibility="automated" type="Integer" />
    <property name="DisplayTooltips" visibility="automated" type="WordBool" />
    <property name="DisplayKeysInTooltips" visibility="automated" type="WordBool" />
    <function name="FindControl" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="OleVariant" />
        <parameter name="Id" type="OleVariant" />
        <parameter name="Tag" type="OleVariant" />
        <parameter name="Visible" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <property name="Item[Index]" visibility="automated" type="CommandBar" />
    <property name="LargeButtons" visibility="automated" type="WordBool" />
    <property name="MenuAnimationStyle" visibility="automated" type="TOleEnum" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="ReleaseFocus" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="CommandBar" GUID="{000C0304-0000-0000-C000-000000000046}" ancestor="_IMsoOleAccDispObj">
    <function name="Get_BuiltIn" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Context" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Context" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrContext" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Controls" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBarControls" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_Enabled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Enabled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfEnabled" type="WordBool" />
      </parameters>
    </procedure>
    <function name="FindControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="OleVariant" />
        <parameter name="Id" type="OleVariant" />
        <parameter name="Tag" type="OleVariant" />
        <parameter name="Visible" type="OleVariant" />
        <parameter name="Recursive" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdy" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_InstanceId" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pxpLeft" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_NameLocal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_NameLocal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrNameLocal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Position" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Position" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ppos" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_RowIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_RowIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="piRow" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Protection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Protection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pprot" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Reset" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ShowPopup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="x" type="OleVariant" />
        <parameter name="y" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="Get_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pypTop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfVisible" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdx" type="Integer" />
      </parameters>
    </procedure>
    <property name="BuiltIn" visibility="public" read="Get_BuiltIn" type="WordBool" />
    <property name="Context" visibility="public" read="Get_Context" type="WideString" default="0" />
    <property name="Controls" visibility="public" read="Get_Controls" type="CommandBarControls" />
    <property name="Enabled" visibility="public" read="Get_Enabled" type="WordBool" />
    <property name="Height" visibility="public" read="Get_Height" type="Integer" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="InstanceId" visibility="public" read="Get_InstanceId" type="Integer" />
    <property name="Left" visibility="public" read="Get_Left" type="Integer" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="NameLocal" visibility="public" read="Get_NameLocal" type="WideString" default="0" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Position" visibility="public" read="Get_Position" type="TOleEnum" />
    <property name="RowIndex" visibility="public" read="Get_RowIndex" type="Integer" />
    <property name="Protection" visibility="public" read="Get_Protection" type="TOleEnum" />
    <property name="Top" visibility="public" read="Get_Top" type="Integer" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="Visible" visibility="public" read="Get_Visible" type="WordBool" />
    <property name="Width" visibility="public" read="Get_Width" type="Integer" />
  </interface>
  <interface name="CommandBarDisp" GUID="{000C0304-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="BuiltIn" visibility="automated" type="WordBool" />
    <property name="Context" visibility="automated" type="WideString" />
    <property name="Controls" visibility="automated" type="CommandBarControls" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Enabled" visibility="automated" type="WordBool" />
    <function name="FindControl" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="OleVariant" />
        <parameter name="Id" type="OleVariant" />
        <parameter name="Tag" type="OleVariant" />
        <parameter name="Visible" type="OleVariant" />
        <parameter name="Recursive" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <property name="Height" visibility="automated" type="Integer" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="InstanceId" visibility="automated" type="Integer" />
    <property name="Left" visibility="automated" type="Integer" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="NameLocal" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Position" visibility="automated" type="TOleEnum" />
    <property name="RowIndex" visibility="automated" type="Integer" />
    <property name="Protection" visibility="automated" type="TOleEnum" />
    <procedure name="Reset" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ShowPopup" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="x" type="OleVariant" />
        <parameter name="y" type="OleVariant" />
      </parameters>
    </procedure>
    <property name="Top" visibility="automated" type="Integer" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="WordBool" />
    <property name="Width" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="accParent" visibility="automated" type="IDispatch" />
    <property name="accChildCount" visibility="automated" type="Integer" />
    <property name="accChild[varChild]" visibility="automated" type="IDispatch" />
    <property name="accName[varChild]" visibility="automated" type="WideString" />
    <property name="accValue[varChild]" visibility="automated" type="WideString" />
    <property name="accDescription[varChild]" visibility="automated" type="WideString" />
    <property name="accRole[varChild]" visibility="automated" type="OleVariant" />
    <property name="accState[varChild]" visibility="automated" type="OleVariant" />
    <property name="accHelp[varChild]" visibility="automated" type="WideString" />
    <property name="accHelpTopic[pszHelpFile][varChild]" visibility="automated" type="Integer" />
    <property name="accKeyboardShortcut[varChild]" visibility="automated" type="WideString" />
    <property name="accFocus" visibility="automated" type="OleVariant" />
    <property name="accSelection" visibility="automated" type="OleVariant" />
    <property name="accDefaultAction[varChild]" visibility="automated" type="WideString" />
    <procedure name="accSelect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="flagsSelect" type="Integer" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="accLocation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="pxLeft" type="Integer" paramflags="out" />
        <parameter name="pyTop" type="Integer" paramflags="out" />
        <parameter name="pcxWidth" type="Integer" paramflags="out" />
        <parameter name="pcyHeight" type="Integer" paramflags="out" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="accNavigate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="navDir" type="Integer" />
        <parameter name="varStart" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="accHitTest" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="accDoDefaultAction" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
  </interface>
  <interface name="CommandBarControls" GUID="{000C0306-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="OleVariant" />
        <parameter name="Id" type="OleVariant" />
        <parameter name="Parameter" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <parameter name="Temporary" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBar" />
      </parameters>
    </function>
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Item[Index]" visibility="public" read="Get_Item" type="CommandBarControl" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Parent" visibility="public" read="Get_Parent" type="CommandBar" />
  </interface>
  <interface name="CommandBarControlsDisp" GUID="{000C0306-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="OleVariant" />
        <parameter name="Id" type="OleVariant" />
        <parameter name="Parameter" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <parameter name="Temporary" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Item[Index]" visibility="automated" type="CommandBarControl" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Parent" visibility="automated" type="CommandBar" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="CommandBarControl" GUID="{000C0308-0000-0000-C000-000000000046}" ancestor="_IMsoOleAccDispObj">
    <function name="Get_BeginGroup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_BeginGroup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfBeginGroup" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_BuiltIn" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Caption" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Caption" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrCaption" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Control" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Copy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Temporary" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="Get_DescriptionText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_DescriptionText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrText" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Enabled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Enabled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfEnabled" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Execute" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdy" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_HelpContextId" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_HelpContextId" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pid" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_HelpFile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_HelpFile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrFilename" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Id" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_InstanceId" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Move" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <function name="Get_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_OLEUsage" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_OLEUsage" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pcou" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_OnAction" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_OnAction" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrOnAction" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBar" />
      </parameters>
    </function>
    <function name="Get_Parameter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Parameter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrParam" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Priority" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Priority" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pnPri" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Reset" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SetFocus" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_Tag" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Tag" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrTag" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_TooltipText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_TooltipText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrTooltip" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfVisible" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdx" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Reserved1" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reserved2" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reserved3" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reserved4" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reserved5" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reserved6" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reserved7" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reserved8" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="BeginGroup" visibility="public" read="Get_BeginGroup" type="WordBool" />
    <property name="BuiltIn" visibility="public" read="Get_BuiltIn" type="WordBool" />
    <property name="Caption" visibility="public" read="Get_Caption" type="WideString" default="0" />
    <property name="Control" visibility="public" read="Get_Control" type="IDispatch" />
    <property name="DescriptionText" visibility="public" read="Get_DescriptionText" type="WideString" default="0" />
    <property name="Enabled" visibility="public" read="Get_Enabled" type="WordBool" />
    <property name="Height" visibility="public" read="Get_Height" type="Integer" />
    <property name="HelpContextId" visibility="public" read="Get_HelpContextId" type="Integer" />
    <property name="HelpFile" visibility="public" read="Get_HelpFile" type="WideString" default="0" />
    <property name="Id" visibility="public" read="Get_Id" type="Integer" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="InstanceId" visibility="public" read="Get_InstanceId" type="Integer" />
    <property name="Left" visibility="public" read="Get_Left" type="Integer" />
    <property name="OLEUsage" visibility="public" read="Get_OLEUsage" type="TOleEnum" />
    <property name="OnAction" visibility="public" read="Get_OnAction" type="WideString" default="0" />
    <property name="Parent" visibility="public" read="Get_Parent" type="CommandBar" />
    <property name="Parameter" visibility="public" read="Get_Parameter" type="WideString" default="0" />
    <property name="Priority" visibility="public" read="Get_Priority" type="Integer" />
    <property name="Tag" visibility="public" read="Get_Tag" type="WideString" default="0" />
    <property name="TooltipText" visibility="public" read="Get_TooltipText" type="WideString" default="0" />
    <property name="Top" visibility="public" read="Get_Top" type="Integer" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="Visible" visibility="public" read="Get_Visible" type="WordBool" />
    <property name="Width" visibility="public" read="Get_Width" type="Integer" />
  </interface>
  <interface name="CommandBarControlDisp" GUID="{000C0308-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="BeginGroup" visibility="automated" type="WordBool" />
    <property name="BuiltIn" visibility="automated" type="WordBool" />
    <property name="Caption" visibility="automated" type="WideString" />
    <property name="Control" visibility="automated" type="IDispatch" />
    <function name="Copy" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Temporary" type="OleVariant" />
      </parameters>
    </procedure>
    <property name="DescriptionText" visibility="automated" type="WideString" />
    <property name="Enabled" visibility="automated" type="WordBool" />
    <procedure name="Execute" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Height" visibility="automated" type="Integer" />
    <property name="HelpContextId" visibility="automated" type="Integer" />
    <property name="HelpFile" visibility="automated" type="WideString" />
    <property name="Id" visibility="automated" type="Integer" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="InstanceId" visibility="automated" type="Integer" />
    <function name="Move" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <property name="Left" visibility="automated" type="Integer" />
    <property name="OLEUsage" visibility="automated" type="TOleEnum" />
    <property name="OnAction" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="CommandBar" />
    <property name="Parameter" visibility="automated" type="WideString" />
    <property name="Priority" visibility="automated" type="Integer" />
    <procedure name="Reset" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetFocus" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Tag" visibility="automated" type="WideString" />
    <property name="TooltipText" visibility="automated" type="WideString" />
    <property name="Top" visibility="automated" type="Integer" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="WordBool" />
    <property name="Width" visibility="automated" type="Integer" />
    <procedure name="Reserved1" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved2" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved3" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved4" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved5" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved6" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved7" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved8" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="accParent" visibility="automated" type="IDispatch" />
    <property name="accChildCount" visibility="automated" type="Integer" />
    <property name="accChild[varChild]" visibility="automated" type="IDispatch" />
    <property name="accName[varChild]" visibility="automated" type="WideString" />
    <property name="accValue[varChild]" visibility="automated" type="WideString" />
    <property name="accDescription[varChild]" visibility="automated" type="WideString" />
    <property name="accRole[varChild]" visibility="automated" type="OleVariant" />
    <property name="accState[varChild]" visibility="automated" type="OleVariant" />
    <property name="accHelp[varChild]" visibility="automated" type="WideString" />
    <property name="accHelpTopic[pszHelpFile][varChild]" visibility="automated" type="Integer" />
    <property name="accKeyboardShortcut[varChild]" visibility="automated" type="WideString" />
    <property name="accFocus" visibility="automated" type="OleVariant" />
    <property name="accSelection" visibility="automated" type="OleVariant" />
    <property name="accDefaultAction[varChild]" visibility="automated" type="WideString" />
    <procedure name="accSelect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="flagsSelect" type="Integer" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="accLocation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="pxLeft" type="Integer" paramflags="out" />
        <parameter name="pyTop" type="Integer" paramflags="out" />
        <parameter name="pcxWidth" type="Integer" paramflags="out" />
        <parameter name="pcyHeight" type="Integer" paramflags="out" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="accNavigate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="navDir" type="Integer" />
        <parameter name="varStart" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="accHitTest" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="accDoDefaultAction" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
  </interface>
  <interface name="CommandBarButton" GUID="{000C030E-0000-0000-C000-000000000046}" ancestor="CommandBarControl">
    <function name="Get_BuiltInFace" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_BuiltInFace" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfBuiltIn" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="CopyFace" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_FaceId" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_FaceId" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pid" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="PasteFace" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_ShortcutText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ShortcutText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrText" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_State" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_State" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pstate" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pstyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="BuiltInFace" visibility="public" read="Get_BuiltInFace" type="WordBool" />
    <property name="FaceId" visibility="public" read="Get_FaceId" type="Integer" />
    <property name="ShortcutText" visibility="public" read="Get_ShortcutText" type="WideString" default="0" />
    <property name="State" visibility="public" read="Get_State" type="TOleEnum" />
    <property name="Style" visibility="public" read="Get_Style" type="TOleEnum" />
  </interface>
  <interface name="CommandBarButtonDisp" GUID="{000C030E-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="BuiltInFace" visibility="automated" type="WordBool" />
    <procedure name="CopyFace" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="FaceId" visibility="automated" type="Integer" />
    <procedure name="PasteFace" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="ShortcutText" visibility="automated" type="WideString" />
    <property name="State" visibility="automated" type="TOleEnum" />
    <property name="Style" visibility="automated" type="TOleEnum" />
    <property name="BeginGroup" visibility="automated" type="WordBool" />
    <property name="BuiltIn" visibility="automated" type="WordBool" />
    <property name="Caption" visibility="automated" type="WideString" />
    <property name="Control" visibility="automated" type="IDispatch" />
    <function name="Copy" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Temporary" type="OleVariant" />
      </parameters>
    </procedure>
    <property name="DescriptionText" visibility="automated" type="WideString" />
    <property name="Enabled" visibility="automated" type="WordBool" />
    <procedure name="Execute" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Height" visibility="automated" type="Integer" />
    <property name="HelpContextId" visibility="automated" type="Integer" />
    <property name="HelpFile" visibility="automated" type="WideString" />
    <property name="Id" visibility="automated" type="Integer" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="InstanceId" visibility="automated" type="Integer" />
    <function name="Move" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <property name="Left" visibility="automated" type="Integer" />
    <property name="OLEUsage" visibility="automated" type="TOleEnum" />
    <property name="OnAction" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="CommandBar" />
    <property name="Parameter" visibility="automated" type="WideString" />
    <property name="Priority" visibility="automated" type="Integer" />
    <procedure name="Reset" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetFocus" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Tag" visibility="automated" type="WideString" />
    <property name="TooltipText" visibility="automated" type="WideString" />
    <property name="Top" visibility="automated" type="Integer" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="WordBool" />
    <property name="Width" visibility="automated" type="Integer" />
    <procedure name="Reserved1" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved2" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved3" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved4" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved5" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved6" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved7" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved8" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="accParent" visibility="automated" type="IDispatch" />
    <property name="accChildCount" visibility="automated" type="Integer" />
    <property name="accChild[varChild]" visibility="automated" type="IDispatch" />
    <property name="accName[varChild]" visibility="automated" type="WideString" />
    <property name="accValue[varChild]" visibility="automated" type="WideString" />
    <property name="accDescription[varChild]" visibility="automated" type="WideString" />
    <property name="accRole[varChild]" visibility="automated" type="OleVariant" />
    <property name="accState[varChild]" visibility="automated" type="OleVariant" />
    <property name="accHelp[varChild]" visibility="automated" type="WideString" />
    <property name="accHelpTopic[pszHelpFile][varChild]" visibility="automated" type="Integer" />
    <property name="accKeyboardShortcut[varChild]" visibility="automated" type="WideString" />
    <property name="accFocus" visibility="automated" type="OleVariant" />
    <property name="accSelection" visibility="automated" type="OleVariant" />
    <property name="accDefaultAction[varChild]" visibility="automated" type="WideString" />
    <procedure name="accSelect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="flagsSelect" type="Integer" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="accLocation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="pxLeft" type="Integer" paramflags="out" />
        <parameter name="pyTop" type="Integer" paramflags="out" />
        <parameter name="pcxWidth" type="Integer" paramflags="out" />
        <parameter name="pcyHeight" type="Integer" paramflags="out" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="accNavigate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="navDir" type="Integer" />
        <parameter name="varStart" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="accHitTest" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="accDoDefaultAction" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
  </interface>
  <interface name="CommandBarPopup" GUID="{000C030A-0000-0000-C000-000000000046}" ancestor="CommandBarControl">
    <function name="Get_CommandBar" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBar" />
      </parameters>
    </function>
    <function name="Get_Controls" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBarControls" />
      </parameters>
    </function>
    <function name="Get_OLEMenuGroup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_OLEMenuGroup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pomg" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="CommandBar" visibility="public" read="Get_CommandBar" type="CommandBar" />
    <property name="Controls" visibility="public" read="Get_Controls" type="CommandBarControls" />
    <property name="OLEMenuGroup" visibility="public" read="Get_OLEMenuGroup" type="TOleEnum" />
  </interface>
  <interface name="CommandBarPopupDisp" GUID="{000C030A-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="CommandBar" visibility="automated" type="CommandBar" />
    <property name="Controls" visibility="automated" type="CommandBarControls" />
    <property name="OLEMenuGroup" visibility="automated" type="TOleEnum" />
    <property name="BeginGroup" visibility="automated" type="WordBool" />
    <property name="BuiltIn" visibility="automated" type="WordBool" />
    <property name="Caption" visibility="automated" type="WideString" />
    <property name="Control" visibility="automated" type="IDispatch" />
    <function name="Copy" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Temporary" type="OleVariant" />
      </parameters>
    </procedure>
    <property name="DescriptionText" visibility="automated" type="WideString" />
    <property name="Enabled" visibility="automated" type="WordBool" />
    <procedure name="Execute" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Height" visibility="automated" type="Integer" />
    <property name="HelpContextId" visibility="automated" type="Integer" />
    <property name="HelpFile" visibility="automated" type="WideString" />
    <property name="Id" visibility="automated" type="Integer" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="InstanceId" visibility="automated" type="Integer" />
    <function name="Move" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <property name="Left" visibility="automated" type="Integer" />
    <property name="OLEUsage" visibility="automated" type="TOleEnum" />
    <property name="OnAction" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="CommandBar" />
    <property name="Parameter" visibility="automated" type="WideString" />
    <property name="Priority" visibility="automated" type="Integer" />
    <procedure name="Reset" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetFocus" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Tag" visibility="automated" type="WideString" />
    <property name="TooltipText" visibility="automated" type="WideString" />
    <property name="Top" visibility="automated" type="Integer" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="WordBool" />
    <property name="Width" visibility="automated" type="Integer" />
    <procedure name="Reserved1" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved2" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved3" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved4" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved5" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved6" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved7" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved8" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="accParent" visibility="automated" type="IDispatch" />
    <property name="accChildCount" visibility="automated" type="Integer" />
    <property name="accChild[varChild]" visibility="automated" type="IDispatch" />
    <property name="accName[varChild]" visibility="automated" type="WideString" />
    <property name="accValue[varChild]" visibility="automated" type="WideString" />
    <property name="accDescription[varChild]" visibility="automated" type="WideString" />
    <property name="accRole[varChild]" visibility="automated" type="OleVariant" />
    <property name="accState[varChild]" visibility="automated" type="OleVariant" />
    <property name="accHelp[varChild]" visibility="automated" type="WideString" />
    <property name="accHelpTopic[pszHelpFile][varChild]" visibility="automated" type="Integer" />
    <property name="accKeyboardShortcut[varChild]" visibility="automated" type="WideString" />
    <property name="accFocus" visibility="automated" type="OleVariant" />
    <property name="accSelection" visibility="automated" type="OleVariant" />
    <property name="accDefaultAction[varChild]" visibility="automated" type="WideString" />
    <procedure name="accSelect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="flagsSelect" type="Integer" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="accLocation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="pxLeft" type="Integer" paramflags="out" />
        <parameter name="pyTop" type="Integer" paramflags="out" />
        <parameter name="pcxWidth" type="Integer" paramflags="out" />
        <parameter name="pcyHeight" type="Integer" paramflags="out" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="accNavigate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="navDir" type="Integer" />
        <parameter name="varStart" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="accHitTest" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="accDoDefaultAction" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
  </interface>
  <interface name="CommandBarComboBox" GUID="{000C030C-0000-0000-C000-000000000046}" ancestor="CommandBarControl">
    <procedure name="AddItem" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Text" type="WideString" paramflags="const" />
        <parameter name="Index" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="Clear" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_DropDownLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_DropDownLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pcLines" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_DropDownWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_DropDownWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdx" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_List" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_List" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="pbstrItem" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ListCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_ListHeaderCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_ListHeaderCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pcItems" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_ListIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_ListIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pi" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="RemoveItem" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pstyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrText" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="DropDownLines" visibility="public" read="Get_DropDownLines" type="Integer" />
    <property name="DropDownWidth" visibility="public" read="Get_DropDownWidth" type="Integer" />
    <property name="List[Index]" visibility="public" read="Get_List" type="WideString" />
    <property name="ListCount" visibility="public" read="Get_ListCount" type="Integer" />
    <property name="ListHeaderCount" visibility="public" read="Get_ListHeaderCount" type="Integer" />
    <property name="ListIndex" visibility="public" read="Get_ListIndex" type="Integer" />
    <property name="Style" visibility="public" read="Get_Style" type="TOleEnum" />
    <property name="Text" visibility="public" read="Get_Text" type="WideString" default="0" />
  </interface>
  <interface name="CommandBarComboBoxDisp" GUID="{000C030C-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <procedure name="AddItem" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Text" type="WideString" paramflags="const" />
        <parameter name="Index" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="Clear" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="DropDownLines" visibility="automated" type="Integer" />
    <property name="DropDownWidth" visibility="automated" type="Integer" />
    <property name="List[Index]" visibility="automated" type="WideString" />
    <property name="ListCount" visibility="automated" type="Integer" />
    <property name="ListHeaderCount" visibility="automated" type="Integer" />
    <property name="ListIndex" visibility="automated" type="Integer" />
    <procedure name="RemoveItem" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <property name="Style" visibility="automated" type="TOleEnum" />
    <property name="Text" visibility="automated" type="WideString" />
    <property name="BeginGroup" visibility="automated" type="WordBool" />
    <property name="BuiltIn" visibility="automated" type="WordBool" />
    <property name="Caption" visibility="automated" type="WideString" />
    <property name="Control" visibility="automated" type="IDispatch" />
    <function name="Copy" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Temporary" type="OleVariant" />
      </parameters>
    </procedure>
    <property name="DescriptionText" visibility="automated" type="WideString" />
    <property name="Enabled" visibility="automated" type="WordBool" />
    <procedure name="Execute" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Height" visibility="automated" type="Integer" />
    <property name="HelpContextId" visibility="automated" type="Integer" />
    <property name="HelpFile" visibility="automated" type="WideString" />
    <property name="Id" visibility="automated" type="Integer" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="InstanceId" visibility="automated" type="Integer" />
    <function name="Move" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <property name="Left" visibility="automated" type="Integer" />
    <property name="OLEUsage" visibility="automated" type="TOleEnum" />
    <property name="OnAction" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="CommandBar" />
    <property name="Parameter" visibility="automated" type="WideString" />
    <property name="Priority" visibility="automated" type="Integer" />
    <procedure name="Reset" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetFocus" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Tag" visibility="automated" type="WideString" />
    <property name="TooltipText" visibility="automated" type="WideString" />
    <property name="Top" visibility="automated" type="Integer" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="WordBool" />
    <property name="Width" visibility="automated" type="Integer" />
    <procedure name="Reserved1" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved2" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved3" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved4" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved5" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved6" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved7" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved8" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="accParent" visibility="automated" type="IDispatch" />
    <property name="accChildCount" visibility="automated" type="Integer" />
    <property name="accChild[varChild]" visibility="automated" type="IDispatch" />
    <property name="accName[varChild]" visibility="automated" type="WideString" />
    <property name="accValue[varChild]" visibility="automated" type="WideString" />
    <property name="accDescription[varChild]" visibility="automated" type="WideString" />
    <property name="accRole[varChild]" visibility="automated" type="OleVariant" />
    <property name="accState[varChild]" visibility="automated" type="OleVariant" />
    <property name="accHelp[varChild]" visibility="automated" type="WideString" />
    <property name="accHelpTopic[pszHelpFile][varChild]" visibility="automated" type="Integer" />
    <property name="accKeyboardShortcut[varChild]" visibility="automated" type="WideString" />
    <property name="accFocus" visibility="automated" type="OleVariant" />
    <property name="accSelection" visibility="automated" type="OleVariant" />
    <property name="accDefaultAction[varChild]" visibility="automated" type="WideString" />
    <procedure name="accSelect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="flagsSelect" type="Integer" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="accLocation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="pxLeft" type="Integer" paramflags="out" />
        <parameter name="pyTop" type="Integer" paramflags="out" />
        <parameter name="pcxWidth" type="Integer" paramflags="out" />
        <parameter name="pcyHeight" type="Integer" paramflags="out" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="accNavigate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="navDir" type="Integer" />
        <parameter name="varStart" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="accHitTest" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="accDoDefaultAction" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
  </interface>
  <interface name="Adjustments" GUID="{000C0310-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="Val" type="Single" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Item[Index]" visibility="public" read="Get_Item" write="Set_Item" type="Single" />
  </interface>
  <interface name="AdjustmentsDisp" GUID="{000C0310-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Item[Index]" visibility="automated" type="Single" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="CalloutFormat" GUID="{000C0311-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="AutomaticLength" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="CustomDrop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Drop" type="Single" />
      </parameters>
    </procedure>
    <procedure name="CustomLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Length" type="Single" />
      </parameters>
    </procedure>
    <procedure name="PresetDrop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="DropType" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Accent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Accent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Accent" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Angle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Angle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Angle" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_AutoAttach" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_AutoAttach" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="AutoAttach" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_AutoLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Border" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Border" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Border" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Drop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <function name="Get_DropType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Gap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Gap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Gap" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Length" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Accent" visibility="public" read="Get_Accent" write="Set_Accent" type="TOleEnum" />
    <property name="Angle" visibility="public" read="Get_Angle" write="Set_Angle" type="TOleEnum" />
    <property name="AutoAttach" visibility="public" read="Get_AutoAttach" write="Set_AutoAttach" type="TOleEnum" />
    <property name="AutoLength" visibility="public" read="Get_AutoLength" type="TOleEnum" />
    <property name="Border" visibility="public" read="Get_Border" write="Set_Border" type="TOleEnum" />
    <property name="Drop" visibility="public" read="Get_Drop" type="Single" default="0" />
    <property name="DropType" visibility="public" read="Get_DropType" type="TOleEnum" />
    <property name="Gap" visibility="public" read="Get_Gap" write="Set_Gap" type="Single" default="0" />
    <property name="Length" visibility="public" read="Get_Length" type="Single" default="0" />
    <property name="type_" visibility="public" read="Get_type_" write="Set_type_" type="TOleEnum" />
  </interface>
  <interface name="CalloutFormatDisp" GUID="{000C0311-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="AutomaticLength" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="CustomDrop" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Drop" type="Single" />
      </parameters>
    </procedure>
    <procedure name="CustomLength" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Length" type="Single" />
      </parameters>
    </procedure>
    <procedure name="PresetDrop" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="DropType" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Accent" visibility="automated" type="TOleEnum" />
    <property name="Angle" visibility="automated" type="TOleEnum" />
    <property name="AutoAttach" visibility="automated" type="TOleEnum" />
    <property name="AutoLength" visibility="automated" type="TOleEnum" />
    <property name="Border" visibility="automated" type="TOleEnum" />
    <property name="Drop" visibility="automated" type="Single" />
    <property name="DropType" visibility="automated" type="TOleEnum" />
    <property name="Gap" visibility="automated" type="Single" />
    <property name="Length" visibility="automated" type="Single" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ColorFormat" GUID="{000C0312-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_RGB" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_RGB" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RGB" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_SchemeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_SchemeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SchemeColor" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="RGB" visibility="public" read="Get_RGB" write="Set_RGB" type="Integer" />
    <property name="SchemeColor" visibility="public" read="Get_SchemeColor" write="Set_SchemeColor" type="Integer" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
  </interface>
  <interface name="ColorFormatDisp" GUID="{000C0312-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="RGB" visibility="automated" type="Integer" />
    <property name="SchemeColor" visibility="automated" type="Integer" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ConnectorFormat" GUID="{000C0313-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="BeginConnect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ConnectedShape" type="Shape" paramflags="const" />
        <parameter name="ConnectionSite" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="BeginDisconnect" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="EndConnect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ConnectedShape" type="Shape" paramflags="const" />
        <parameter name="ConnectionSite" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="EndDisconnect" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_BeginConnected" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_BeginConnectedShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get_BeginConnectionSite" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_EndConnected" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_EndConnectedShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get_EndConnectionSite" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="BeginConnected" visibility="public" read="Get_BeginConnected" type="TOleEnum" />
    <property name="BeginConnectedShape" visibility="public" read="Get_BeginConnectedShape" type="Shape" />
    <property name="BeginConnectionSite" visibility="public" read="Get_BeginConnectionSite" type="Integer" />
    <property name="EndConnected" visibility="public" read="Get_EndConnected" type="TOleEnum" />
    <property name="EndConnectedShape" visibility="public" read="Get_EndConnectedShape" type="Shape" />
    <property name="EndConnectionSite" visibility="public" read="Get_EndConnectionSite" type="Integer" />
    <property name="type_" visibility="public" read="Get_type_" write="Set_type_" type="TOleEnum" />
  </interface>
  <interface name="ConnectorFormatDisp" GUID="{000C0313-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="BeginConnect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ConnectedShape" type="Shape" paramflags="const" />
        <parameter name="ConnectionSite" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="BeginDisconnect" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="EndConnect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ConnectedShape" type="Shape" paramflags="const" />
        <parameter name="ConnectionSite" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="EndDisconnect" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="BeginConnected" visibility="automated" type="TOleEnum" />
    <property name="BeginConnectedShape" visibility="automated" type="Shape" />
    <property name="BeginConnectionSite" visibility="automated" type="Integer" />
    <property name="EndConnected" visibility="automated" type="TOleEnum" />
    <property name="EndConnectedShape" visibility="automated" type="Shape" />
    <property name="EndConnectionSite" visibility="automated" type="Integer" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="FillFormat" GUID="{000C0314-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Background" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="OneColorGradient" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
        <parameter name="Variant" type="Integer" />
        <parameter name="Degree" type="Single" />
      </parameters>
    </procedure>
    <procedure name="Patterned" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Pattern" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="PresetGradient" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
        <parameter name="Variant" type="Integer" />
        <parameter name="PresetGradientType" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="PresetTextured" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetTexture" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Solid" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="TwoColorGradient" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
        <parameter name="Variant" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="UserPicture" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PictureFile" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="UserTextured" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="TextureFile" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_BackColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ColorFormat" />
      </parameters>
    </function>
    <procedure name="Set_BackColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BackColor" type="ColorFormat" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ForeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ColorFormat" />
      </parameters>
    </function>
    <procedure name="Set_ForeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ForeColor" type="ColorFormat" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_GradientColorType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_GradientDegree" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <function name="Get_GradientStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_GradientVariant" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Pattern" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_PresetGradientType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_PresetTexture" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_TextureName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_TextureType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Transparency" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Transparency" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Transparency" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Visible" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="BackColor" visibility="public" read="Get_BackColor" write="Set_BackColor" type="ColorFormat" />
    <property name="ForeColor" visibility="public" read="Get_ForeColor" write="Set_ForeColor" type="ColorFormat" />
    <property name="GradientColorType" visibility="public" read="Get_GradientColorType" type="TOleEnum" />
    <property name="GradientDegree" visibility="public" read="Get_GradientDegree" type="Single" default="0" />
    <property name="GradientStyle" visibility="public" read="Get_GradientStyle" type="TOleEnum" />
    <property name="GradientVariant" visibility="public" read="Get_GradientVariant" type="Integer" />
    <property name="Pattern" visibility="public" read="Get_Pattern" type="TOleEnum" />
    <property name="PresetGradientType" visibility="public" read="Get_PresetGradientType" type="TOleEnum" />
    <property name="PresetTexture" visibility="public" read="Get_PresetTexture" type="TOleEnum" />
    <property name="TextureName" visibility="public" read="Get_TextureName" type="WideString" default="0" />
    <property name="TextureType" visibility="public" read="Get_TextureType" type="TOleEnum" />
    <property name="Transparency" visibility="public" read="Get_Transparency" write="Set_Transparency" type="Single" default="0" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="TOleEnum" />
  </interface>
  <interface name="FillFormatDisp" GUID="{000C0314-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="Background" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="OneColorGradient" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
        <parameter name="Variant" type="Integer" />
        <parameter name="Degree" type="Single" />
      </parameters>
    </procedure>
    <procedure name="Patterned" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Pattern" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="PresetGradient" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
        <parameter name="Variant" type="Integer" />
        <parameter name="PresetGradientType" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="PresetTextured" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="PresetTexture" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Solid" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="TwoColorGradient" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
        <parameter name="Variant" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="UserPicture" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="PictureFile" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="UserTextured" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="TextureFile" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="BackColor" visibility="automated" type="ColorFormat" />
    <property name="ForeColor" visibility="automated" type="ColorFormat" />
    <property name="GradientColorType" visibility="automated" type="TOleEnum" />
    <property name="GradientDegree" visibility="automated" type="Single" />
    <property name="GradientStyle" visibility="automated" type="TOleEnum" />
    <property name="GradientVariant" visibility="automated" type="Integer" />
    <property name="Pattern" visibility="automated" type="TOleEnum" />
    <property name="PresetGradientType" visibility="automated" type="TOleEnum" />
    <property name="PresetTexture" visibility="automated" type="TOleEnum" />
    <property name="TextureName" visibility="automated" type="WideString" />
    <property name="TextureType" visibility="automated" type="TOleEnum" />
    <property name="Transparency" visibility="automated" type="Single" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="FreeformBuilder" GUID="{000C0315-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="AddNodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SegmentType" type="TOleEnum" />
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <parameter name="X2" type="Single" />
        <parameter name="Y2" type="Single" />
        <parameter name="X3" type="Single" />
        <parameter name="Y3" type="Single" />
      </parameters>
    </procedure>
    <function name="ConvertToShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="FreeformBuilderDisp" GUID="{000C0315-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="AddNodes" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="SegmentType" type="TOleEnum" />
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <parameter name="X2" type="Single" />
        <parameter name="Y2" type="Single" />
        <parameter name="X3" type="Single" />
        <parameter name="Y3" type="Single" />
      </parameters>
    </procedure>
    <function name="ConvertToShape" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="GroupShapes" GUID="{000C0316-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="GroupShapesDisp" GUID="{000C0316-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="LineFormat" GUID="{000C0317-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_BackColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ColorFormat" />
      </parameters>
    </function>
    <procedure name="Set_BackColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BackColor" type="ColorFormat" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_BeginArrowheadLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_BeginArrowheadLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BeginArrowheadLength" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_BeginArrowheadStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_BeginArrowheadStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BeginArrowheadStyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_BeginArrowheadWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_BeginArrowheadWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BeginArrowheadWidth" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_DashStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_DashStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="DashStyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_EndArrowheadLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_EndArrowheadLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="EndArrowheadLength" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_EndArrowheadStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_EndArrowheadStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="EndArrowheadStyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_EndArrowheadWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_EndArrowheadWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="EndArrowheadWidth" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_ForeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ColorFormat" />
      </parameters>
    </function>
    <procedure name="Set_ForeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ForeColor" type="ColorFormat" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Pattern" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Pattern" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Pattern" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Transparency" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Transparency" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Transparency" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Visible" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Weight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Weight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Weight" type="Single" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="BackColor" visibility="public" read="Get_BackColor" write="Set_BackColor" type="ColorFormat" />
    <property name="BeginArrowheadLength" visibility="public" read="Get_BeginArrowheadLength" write="Set_BeginArrowheadLength" type="TOleEnum" />
    <property name="BeginArrowheadStyle" visibility="public" read="Get_BeginArrowheadStyle" write="Set_BeginArrowheadStyle" type="TOleEnum" />
    <property name="BeginArrowheadWidth" visibility="public" read="Get_BeginArrowheadWidth" write="Set_BeginArrowheadWidth" type="TOleEnum" />
    <property name="DashStyle" visibility="public" read="Get_DashStyle" write="Set_DashStyle" type="TOleEnum" />
    <property name="EndArrowheadLength" visibility="public" read="Get_EndArrowheadLength" write="Set_EndArrowheadLength" type="TOleEnum" />
    <property name="EndArrowheadStyle" visibility="public" read="Get_EndArrowheadStyle" write="Set_EndArrowheadStyle" type="TOleEnum" />
    <property name="EndArrowheadWidth" visibility="public" read="Get_EndArrowheadWidth" write="Set_EndArrowheadWidth" type="TOleEnum" />
    <property name="ForeColor" visibility="public" read="Get_ForeColor" write="Set_ForeColor" type="ColorFormat" />
    <property name="Pattern" visibility="public" read="Get_Pattern" write="Set_Pattern" type="TOleEnum" />
    <property name="Style" visibility="public" read="Get_Style" write="Set_Style" type="TOleEnum" />
    <property name="Transparency" visibility="public" read="Get_Transparency" write="Set_Transparency" type="Single" default="0" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="TOleEnum" />
    <property name="Weight" visibility="public" read="Get_Weight" write="Set_Weight" type="Single" default="0" />
  </interface>
  <interface name="LineFormatDisp" GUID="{000C0317-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="BackColor" visibility="automated" type="ColorFormat" />
    <property name="BeginArrowheadLength" visibility="automated" type="TOleEnum" />
    <property name="BeginArrowheadStyle" visibility="automated" type="TOleEnum" />
    <property name="BeginArrowheadWidth" visibility="automated" type="TOleEnum" />
    <property name="DashStyle" visibility="automated" type="TOleEnum" />
    <property name="EndArrowheadLength" visibility="automated" type="TOleEnum" />
    <property name="EndArrowheadStyle" visibility="automated" type="TOleEnum" />
    <property name="EndArrowheadWidth" visibility="automated" type="TOleEnum" />
    <property name="ForeColor" visibility="automated" type="ColorFormat" />
    <property name="Pattern" visibility="automated" type="TOleEnum" />
    <property name="Style" visibility="automated" type="TOleEnum" />
    <property name="Transparency" visibility="automated" type="Single" />
    <property name="Visible" visibility="automated" type="TOleEnum" />
    <property name="Weight" visibility="automated" type="Single" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ShapeNode" GUID="{000C0318-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_EditingType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Points" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_SegmentType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="EditingType" visibility="public" read="Get_EditingType" type="TOleEnum" />
    <property name="Points" visibility="public" read="Get_Points" type="OleVariant" default="0" />
    <property name="SegmentType" visibility="public" read="Get_SegmentType" type="TOleEnum" />
  </interface>
  <interface name="ShapeNodeDisp" GUID="{000C0318-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="EditingType" visibility="automated" type="TOleEnum" />
    <property name="Points" visibility="automated" type="OleVariant" />
    <property name="SegmentType" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ShapeNodes" GUID="{000C0319-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="ShapeNode" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Insert" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="SegmentType" type="TOleEnum" />
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <parameter name="X2" type="Single" />
        <parameter name="Y2" type="Single" />
        <parameter name="X3" type="Single" />
        <parameter name="Y3" type="Single" />
      </parameters>
    </procedure>
    <procedure name="SetEditingType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="EditingType" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
      </parameters>
    </procedure>
    <procedure name="SetSegmentType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="SegmentType" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="ShapeNodesDisp" GUID="{000C0319-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="ShapeNode" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Insert" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="SegmentType" type="TOleEnum" />
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <parameter name="X2" type="Single" />
        <parameter name="Y2" type="Single" />
        <parameter name="X3" type="Single" />
        <parameter name="Y3" type="Single" />
      </parameters>
    </procedure>
    <procedure name="SetEditingType" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="EditingType" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetPosition" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
      </parameters>
    </procedure>
    <procedure name="SetSegmentType" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="SegmentType" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="PictureFormat" GUID="{000C031A-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="IncrementBrightness" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementContrast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Brightness" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Brightness" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Brightness" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ColorType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_ColorType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ColorType" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Contrast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Contrast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Contrast" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_CropBottom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_CropBottom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="CropBottom" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_CropLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_CropLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="CropLeft" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_CropRight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_CropRight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="CropRight" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_CropTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_CropTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="CropTop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_TransparencyColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_TransparencyColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="TransparencyColor" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_TransparentBackground" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_TransparentBackground" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="TransparentBackground" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Brightness" visibility="public" read="Get_Brightness" write="Set_Brightness" type="Single" default="0" />
    <property name="ColorType" visibility="public" read="Get_ColorType" write="Set_ColorType" type="TOleEnum" />
    <property name="Contrast" visibility="public" read="Get_Contrast" write="Set_Contrast" type="Single" default="0" />
    <property name="CropBottom" visibility="public" read="Get_CropBottom" write="Set_CropBottom" type="Single" default="0" />
    <property name="CropLeft" visibility="public" read="Get_CropLeft" write="Set_CropLeft" type="Single" default="0" />
    <property name="CropRight" visibility="public" read="Get_CropRight" write="Set_CropRight" type="Single" default="0" />
    <property name="CropTop" visibility="public" read="Get_CropTop" write="Set_CropTop" type="Single" default="0" />
    <property name="TransparencyColor" visibility="public" read="Get_TransparencyColor" write="Set_TransparencyColor" type="Integer" />
    <property name="TransparentBackground" visibility="public" read="Get_TransparentBackground" write="Set_TransparentBackground" type="TOleEnum" />
  </interface>
  <interface name="PictureFormatDisp" GUID="{000C031A-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="IncrementBrightness" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementContrast" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <property name="Brightness" visibility="automated" type="Single" />
    <property name="ColorType" visibility="automated" type="TOleEnum" />
    <property name="Contrast" visibility="automated" type="Single" />
    <property name="CropBottom" visibility="automated" type="Single" />
    <property name="CropLeft" visibility="automated" type="Single" />
    <property name="CropRight" visibility="automated" type="Single" />
    <property name="CropTop" visibility="automated" type="Single" />
    <property name="TransparencyColor" visibility="automated" type="Integer" />
    <property name="TransparentBackground" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ShadowFormat" GUID="{000C031B-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="IncrementOffsetX" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementOffsetY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ForeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ColorFormat" />
      </parameters>
    </function>
    <procedure name="Set_ForeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ForeColor" type="ColorFormat" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Obscured" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Obscured" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Obscured" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_OffsetX" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_OffsetX" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="OffsetX" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_OffsetY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_OffsetY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="OffsetY" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Transparency" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Transparency" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Transparency" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Visible" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="ForeColor" visibility="public" read="Get_ForeColor" write="Set_ForeColor" type="ColorFormat" />
    <property name="Obscured" visibility="public" read="Get_Obscured" write="Set_Obscured" type="TOleEnum" />
    <property name="OffsetX" visibility="public" read="Get_OffsetX" write="Set_OffsetX" type="Single" default="0" />
    <property name="OffsetY" visibility="public" read="Get_OffsetY" write="Set_OffsetY" type="Single" default="0" />
    <property name="Transparency" visibility="public" read="Get_Transparency" write="Set_Transparency" type="Single" default="0" />
    <property name="type_" visibility="public" read="Get_type_" write="Set_type_" type="TOleEnum" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="TOleEnum" />
  </interface>
  <interface name="ShadowFormatDisp" GUID="{000C031B-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="IncrementOffsetX" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementOffsetY" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <property name="ForeColor" visibility="automated" type="ColorFormat" />
    <property name="Obscured" visibility="automated" type="TOleEnum" />
    <property name="OffsetX" visibility="automated" type="Single" />
    <property name="OffsetY" visibility="automated" type="Single" />
    <property name="Transparency" visibility="automated" type="Single" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="Shape" GUID="{000C031C-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Apply" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Duplicate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="Flip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FlipCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="IncrementLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementRotation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="PickUp" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="RerouteConnections" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ScaleHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="fScale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="ScaleWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="fScale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Replace" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="SetShapesDefaultProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Ungroup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="ZOrder" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ZOrderCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Adjustments" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Adjustments" />
      </parameters>
    </function>
    <function name="Get_AutoShapeType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_AutoShapeType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="AutoShapeType" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_BlackWhiteMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_BlackWhiteMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BlackWhiteMode" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Callout" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CalloutFormat" />
      </parameters>
    </function>
    <function name="Get_ConnectionSiteCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Connector" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_ConnectorFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ConnectorFormat" />
      </parameters>
    </function>
    <function name="Get_Fill" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FillFormat" />
      </parameters>
    </function>
    <function name="Get_GroupItems" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="GroupShapes" />
      </parameters>
    </function>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Height" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_HorizontalFlip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Left" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Line" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="LineFormat" />
      </parameters>
    </function>
    <function name="Get_LockAspectRatio" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LockAspectRatio" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="LockAspectRatio" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Nodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShapeNodes" />
      </parameters>
    </function>
    <function name="Get_Rotation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Rotation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Rotation" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_PictureFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="PictureFormat" />
      </parameters>
    </function>
    <function name="Get_Shadow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShadowFormat" />
      </parameters>
    </function>
    <function name="Get_TextEffect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TextEffectFormat" />
      </parameters>
    </function>
    <function name="Get_TextFrame" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TextFrame" />
      </parameters>
    </function>
    <function name="Get_ThreeD" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ThreeDFormat" />
      </parameters>
    </function>
    <function name="Get_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Top" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_VerticalFlip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Vertices" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Visible" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Width" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ZOrderPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Adjustments" visibility="public" read="Get_Adjustments" type="Adjustments" />
    <property name="AutoShapeType" visibility="public" read="Get_AutoShapeType" write="Set_AutoShapeType" type="TOleEnum" />
    <property name="BlackWhiteMode" visibility="public" read="Get_BlackWhiteMode" write="Set_BlackWhiteMode" type="TOleEnum" />
    <property name="Callout" visibility="public" read="Get_Callout" type="CalloutFormat" />
    <property name="ConnectionSiteCount" visibility="public" read="Get_ConnectionSiteCount" type="Integer" />
    <property name="Connector" visibility="public" read="Get_Connector" type="TOleEnum" />
    <property name="ConnectorFormat" visibility="public" read="Get_ConnectorFormat" type="ConnectorFormat" />
    <property name="Fill" visibility="public" read="Get_Fill" type="FillFormat" />
    <property name="GroupItems" visibility="public" read="Get_GroupItems" type="GroupShapes" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Single" default="0" />
    <property name="HorizontalFlip" visibility="public" read="Get_HorizontalFlip" type="TOleEnum" />
    <property name="Left" visibility="public" read="Get_Left" write="Set_Left" type="Single" default="0" />
    <property name="Line" visibility="public" read="Get_Line" type="LineFormat" />
    <property name="LockAspectRatio" visibility="public" read="Get_LockAspectRatio" write="Set_LockAspectRatio" type="TOleEnum" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
    <property name="Nodes" visibility="public" read="Get_Nodes" type="ShapeNodes" />
    <property name="Rotation" visibility="public" read="Get_Rotation" write="Set_Rotation" type="Single" default="0" />
    <property name="PictureFormat" visibility="public" read="Get_PictureFormat" type="PictureFormat" />
    <property name="Shadow" visibility="public" read="Get_Shadow" type="ShadowFormat" />
    <property name="TextEffect" visibility="public" read="Get_TextEffect" type="TextEffectFormat" />
    <property name="TextFrame" visibility="public" read="Get_TextFrame" type="TextFrame" />
    <property name="ThreeD" visibility="public" read="Get_ThreeD" type="ThreeDFormat" />
    <property name="Top" visibility="public" read="Get_Top" write="Set_Top" type="Single" default="0" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="VerticalFlip" visibility="public" read="Get_VerticalFlip" type="TOleEnum" />
    <property name="Vertices" visibility="public" read="Get_Vertices" type="OleVariant" default="0" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="TOleEnum" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Single" default="0" />
    <property name="ZOrderPosition" visibility="public" read="Get_ZOrderPosition" type="Integer" />
  </interface>
  <interface name="ShapeDisp" GUID="{000C031C-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="Apply" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Duplicate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="Flip" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FlipCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="IncrementLeft" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementRotation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementTop" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="PickUp" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="RerouteConnections" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ScaleHeight" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="fScale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="ScaleWidth" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="fScale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Replace" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="SetShapesDefaultProperties" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Ungroup" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="ZOrder" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ZOrderCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Adjustments" visibility="automated" type="Adjustments" />
    <property name="AutoShapeType" visibility="automated" type="TOleEnum" />
    <property name="BlackWhiteMode" visibility="automated" type="TOleEnum" />
    <property name="Callout" visibility="automated" type="CalloutFormat" />
    <property name="ConnectionSiteCount" visibility="automated" type="Integer" />
    <property name="Connector" visibility="automated" type="TOleEnum" />
    <property name="ConnectorFormat" visibility="automated" type="ConnectorFormat" />
    <property name="Fill" visibility="automated" type="FillFormat" />
    <property name="GroupItems" visibility="automated" type="GroupShapes" />
    <property name="Height" visibility="automated" type="Single" />
    <property name="HorizontalFlip" visibility="automated" type="TOleEnum" />
    <property name="Left" visibility="automated" type="Single" />
    <property name="Line" visibility="automated" type="LineFormat" />
    <property name="LockAspectRatio" visibility="automated" type="TOleEnum" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Nodes" visibility="automated" type="ShapeNodes" />
    <property name="Rotation" visibility="automated" type="Single" />
    <property name="PictureFormat" visibility="automated" type="PictureFormat" />
    <property name="Shadow" visibility="automated" type="ShadowFormat" />
    <property name="TextEffect" visibility="automated" type="TextEffectFormat" />
    <property name="TextFrame" visibility="automated" type="TextFrame" />
    <property name="ThreeD" visibility="automated" type="ThreeDFormat" />
    <property name="Top" visibility="automated" type="Single" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="VerticalFlip" visibility="automated" type="TOleEnum" />
    <property name="Vertices" visibility="automated" type="OleVariant" />
    <property name="Visible" visibility="automated" type="TOleEnum" />
    <property name="Width" visibility="automated" type="Single" />
    <property name="ZOrderPosition" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ShapeRange" GUID="{000C031D-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <procedure name="Align" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="AlignCmd" type="TOleEnum" />
        <parameter name="RelativeTo" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Apply" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Distribute" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="DistributeCmd" type="TOleEnum" />
        <parameter name="RelativeTo" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Duplicate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="Flip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FlipCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="IncrementLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementRotation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <function name="Group" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="PickUp" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Regroup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="RerouteConnections" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ScaleHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="fScale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="ScaleWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="fScale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Replace" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="SetShapesDefaultProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Ungroup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="ZOrder" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ZOrderCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Adjustments" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Adjustments" />
      </parameters>
    </function>
    <function name="Get_AutoShapeType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_AutoShapeType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="AutoShapeType" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_BlackWhiteMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_BlackWhiteMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BlackWhiteMode" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Callout" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CalloutFormat" />
      </parameters>
    </function>
    <function name="Get_ConnectionSiteCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Connector" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_ConnectorFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ConnectorFormat" />
      </parameters>
    </function>
    <function name="Get_Fill" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FillFormat" />
      </parameters>
    </function>
    <function name="Get_GroupItems" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="GroupShapes" />
      </parameters>
    </function>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Height" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_HorizontalFlip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Left" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Line" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="LineFormat" />
      </parameters>
    </function>
    <function name="Get_LockAspectRatio" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LockAspectRatio" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="LockAspectRatio" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Nodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShapeNodes" />
      </parameters>
    </function>
    <function name="Get_Rotation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Rotation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Rotation" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_PictureFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="PictureFormat" />
      </parameters>
    </function>
    <function name="Get_Shadow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShadowFormat" />
      </parameters>
    </function>
    <function name="Get_TextEffect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TextEffectFormat" />
      </parameters>
    </function>
    <function name="Get_TextFrame" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TextFrame" />
      </parameters>
    </function>
    <function name="Get_ThreeD" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ThreeDFormat" />
      </parameters>
    </function>
    <function name="Get_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Top" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_VerticalFlip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Vertices" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Visible" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Width" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ZOrderPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Adjustments" visibility="public" read="Get_Adjustments" type="Adjustments" />
    <property name="AutoShapeType" visibility="public" read="Get_AutoShapeType" write="Set_AutoShapeType" type="TOleEnum" />
    <property name="BlackWhiteMode" visibility="public" read="Get_BlackWhiteMode" write="Set_BlackWhiteMode" type="TOleEnum" />
    <property name="Callout" visibility="public" read="Get_Callout" type="CalloutFormat" />
    <property name="ConnectionSiteCount" visibility="public" read="Get_ConnectionSiteCount" type="Integer" />
    <property name="Connector" visibility="public" read="Get_Connector" type="TOleEnum" />
    <property name="ConnectorFormat" visibility="public" read="Get_ConnectorFormat" type="ConnectorFormat" />
    <property name="Fill" visibility="public" read="Get_Fill" type="FillFormat" />
    <property name="GroupItems" visibility="public" read="Get_GroupItems" type="GroupShapes" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Single" default="0" />
    <property name="HorizontalFlip" visibility="public" read="Get_HorizontalFlip" type="TOleEnum" />
    <property name="Left" visibility="public" read="Get_Left" write="Set_Left" type="Single" default="0" />
    <property name="Line" visibility="public" read="Get_Line" type="LineFormat" />
    <property name="LockAspectRatio" visibility="public" read="Get_LockAspectRatio" write="Set_LockAspectRatio" type="TOleEnum" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
    <property name="Nodes" visibility="public" read="Get_Nodes" type="ShapeNodes" />
    <property name="Rotation" visibility="public" read="Get_Rotation" write="Set_Rotation" type="Single" default="0" />
    <property name="PictureFormat" visibility="public" read="Get_PictureFormat" type="PictureFormat" />
    <property name="Shadow" visibility="public" read="Get_Shadow" type="ShadowFormat" />
    <property name="TextEffect" visibility="public" read="Get_TextEffect" type="TextEffectFormat" />
    <property name="TextFrame" visibility="public" read="Get_TextFrame" type="TextFrame" />
    <property name="ThreeD" visibility="public" read="Get_ThreeD" type="ThreeDFormat" />
    <property name="Top" visibility="public" read="Get_Top" write="Set_Top" type="Single" default="0" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="VerticalFlip" visibility="public" read="Get_VerticalFlip" type="TOleEnum" />
    <property name="Vertices" visibility="public" read="Get_Vertices" type="OleVariant" default="0" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="TOleEnum" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Single" default="0" />
    <property name="ZOrderPosition" visibility="public" read="Get_ZOrderPosition" type="Integer" />
  </interface>
  <interface name="ShapeRangeDisp" GUID="{000C031D-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <procedure name="Align" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="AlignCmd" type="TOleEnum" />
        <parameter name="RelativeTo" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Apply" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Distribute" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="DistributeCmd" type="TOleEnum" />
        <parameter name="RelativeTo" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Duplicate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="Flip" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FlipCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="IncrementLeft" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementRotation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementTop" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <function name="Group" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="PickUp" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Regroup" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="RerouteConnections" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ScaleHeight" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="fScale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="ScaleWidth" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="fScale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Replace" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="SetShapesDefaultProperties" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Ungroup" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="ZOrder" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ZOrderCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Adjustments" visibility="automated" type="Adjustments" />
    <property name="AutoShapeType" visibility="automated" type="TOleEnum" />
    <property name="BlackWhiteMode" visibility="automated" type="TOleEnum" />
    <property name="Callout" visibility="automated" type="CalloutFormat" />
    <property name="ConnectionSiteCount" visibility="automated" type="Integer" />
    <property name="Connector" visibility="automated" type="TOleEnum" />
    <property name="ConnectorFormat" visibility="automated" type="ConnectorFormat" />
    <property name="Fill" visibility="automated" type="FillFormat" />
    <property name="GroupItems" visibility="automated" type="GroupShapes" />
    <property name="Height" visibility="automated" type="Single" />
    <property name="HorizontalFlip" visibility="automated" type="TOleEnum" />
    <property name="Left" visibility="automated" type="Single" />
    <property name="Line" visibility="automated" type="LineFormat" />
    <property name="LockAspectRatio" visibility="automated" type="TOleEnum" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Nodes" visibility="automated" type="ShapeNodes" />
    <property name="Rotation" visibility="automated" type="Single" />
    <property name="PictureFormat" visibility="automated" type="PictureFormat" />
    <property name="Shadow" visibility="automated" type="ShadowFormat" />
    <property name="TextEffect" visibility="automated" type="TextEffectFormat" />
    <property name="TextFrame" visibility="automated" type="TextFrame" />
    <property name="ThreeD" visibility="automated" type="ThreeDFormat" />
    <property name="Top" visibility="automated" type="Single" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="VerticalFlip" visibility="automated" type="TOleEnum" />
    <property name="Vertices" visibility="automated" type="OleVariant" />
    <property name="Visible" visibility="automated" type="TOleEnum" />
    <property name="Width" visibility="automated" type="Single" />
    <property name="ZOrderPosition" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="Shapes" GUID="{000C031E-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="AddCallout" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddConnector" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="BeginX" type="Single" />
        <parameter name="BeginY" type="Single" />
        <parameter name="EndX" type="Single" />
        <parameter name="EndY" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddCurve" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SafeArrayOfPoints" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddLabel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Orientation" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddLine" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BeginX" type="Single" />
        <parameter name="BeginY" type="Single" />
        <parameter name="EndX" type="Single" />
        <parameter name="EndY" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddPicture" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="LinkToFile" type="TOleEnum" />
        <parameter name="SaveWithDocument" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddPolyline" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SafeArrayOfPoints" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddTextEffect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetTextEffect" type="TOleEnum" />
        <parameter name="Text" type="WideString" paramflags="const" />
        <parameter name="FontName" type="WideString" paramflags="const" />
        <parameter name="FontSize" type="Single" />
        <parameter name="FontBold" type="TOleEnum" />
        <parameter name="FontItalic" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddTextbox" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Orientation" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="BuildFreeform" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <retval type="FreeformBuilder" />
      </parameters>
    </function>
    <function name="Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="SelectAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_Background" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get_Default" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Background" visibility="public" read="Get_Background" type="Shape" />
    <property name="Default" visibility="public" read="Get_Default" type="Shape" />
  </interface>
  <interface name="ShapesDisp" GUID="{000C031E-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <function name="AddCallout" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddConnector" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="BeginX" type="Single" />
        <parameter name="BeginY" type="Single" />
        <parameter name="EndX" type="Single" />
        <parameter name="EndY" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddCurve" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="SafeArrayOfPoints" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddLabel" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Orientation" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddLine" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="BeginX" type="Single" />
        <parameter name="BeginY" type="Single" />
        <parameter name="EndX" type="Single" />
        <parameter name="EndY" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddPicture" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="LinkToFile" type="TOleEnum" />
        <parameter name="SaveWithDocument" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddPolyline" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="SafeArrayOfPoints" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddShape" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddTextEffect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="PresetTextEffect" type="TOleEnum" />
        <parameter name="Text" type="WideString" paramflags="const" />
        <parameter name="FontName" type="WideString" paramflags="const" />
        <parameter name="FontSize" type="Single" />
        <parameter name="FontBold" type="TOleEnum" />
        <parameter name="FontItalic" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddTextbox" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Orientation" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="BuildFreeform" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <retval type="FreeformBuilder" />
      </parameters>
    </function>
    <function name="Range" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="SelectAll" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Background" visibility="automated" type="Shape" />
    <property name="Default" visibility="automated" type="Shape" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="TextEffectFormat" GUID="{000C031F-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="ToggleVerticalText" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Alignment" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_FontBold" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_FontBold" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FontBold" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_FontItalic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_FontItalic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FontItalic" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_FontName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_FontName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FontName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_FontSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_FontSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FontSize" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_KernedPairs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_KernedPairs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="KernedPairs" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_NormalizedHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_NormalizedHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NormalizedHeight" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PresetShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_PresetShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetShape" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PresetTextEffect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_PresetTextEffect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Preset" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_RotatedChars" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_RotatedChars" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RotatedChars" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Text" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Tracking" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Tracking" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Tracking" type="Single" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Alignment" visibility="public" read="Get_Alignment" write="Set_Alignment" type="TOleEnum" />
    <property name="FontBold" visibility="public" read="Get_FontBold" write="Set_FontBold" type="TOleEnum" />
    <property name="FontItalic" visibility="public" read="Get_FontItalic" write="Set_FontItalic" type="TOleEnum" />
    <property name="FontName" visibility="public" read="Get_FontName" write="Set_FontName" type="WideString" default="0" />
    <property name="FontSize" visibility="public" read="Get_FontSize" write="Set_FontSize" type="Single" default="0" />
    <property name="KernedPairs" visibility="public" read="Get_KernedPairs" write="Set_KernedPairs" type="TOleEnum" />
    <property name="NormalizedHeight" visibility="public" read="Get_NormalizedHeight" write="Set_NormalizedHeight" type="TOleEnum" />
    <property name="PresetShape" visibility="public" read="Get_PresetShape" write="Set_PresetShape" type="TOleEnum" />
    <property name="PresetTextEffect" visibility="public" read="Get_PresetTextEffect" write="Set_PresetTextEffect" type="TOleEnum" />
    <property name="RotatedChars" visibility="public" read="Get_RotatedChars" write="Set_RotatedChars" type="TOleEnum" />
    <property name="Text" visibility="public" read="Get_Text" write="Set_Text" type="WideString" default="0" />
    <property name="Tracking" visibility="public" read="Get_Tracking" write="Set_Tracking" type="Single" default="0" />
  </interface>
  <interface name="TextEffectFormatDisp" GUID="{000C031F-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="ToggleVerticalText" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Alignment" visibility="automated" type="TOleEnum" />
    <property name="FontBold" visibility="automated" type="TOleEnum" />
    <property name="FontItalic" visibility="automated" type="TOleEnum" />
    <property name="FontName" visibility="automated" type="WideString" />
    <property name="FontSize" visibility="automated" type="Single" />
    <property name="KernedPairs" visibility="automated" type="TOleEnum" />
    <property name="NormalizedHeight" visibility="automated" type="TOleEnum" />
    <property name="PresetShape" visibility="automated" type="TOleEnum" />
    <property name="PresetTextEffect" visibility="automated" type="TOleEnum" />
    <property name="RotatedChars" visibility="automated" type="TOleEnum" />
    <property name="Text" visibility="automated" type="WideString" />
    <property name="Tracking" visibility="automated" type="Single" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="TextFrame" GUID="{000C0320-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_MarginBottom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_MarginBottom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="MarginBottom" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_MarginLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_MarginLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="MarginLeft" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_MarginRight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_MarginRight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="MarginRight" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_MarginTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_MarginTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="MarginTop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Orientation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Orientation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Orientation" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="MarginBottom" visibility="public" read="Get_MarginBottom" write="Set_MarginBottom" type="Single" default="0" />
    <property name="MarginLeft" visibility="public" read="Get_MarginLeft" write="Set_MarginLeft" type="Single" default="0" />
    <property name="MarginRight" visibility="public" read="Get_MarginRight" write="Set_MarginRight" type="Single" default="0" />
    <property name="MarginTop" visibility="public" read="Get_MarginTop" write="Set_MarginTop" type="Single" default="0" />
    <property name="Orientation" visibility="public" read="Get_Orientation" write="Set_Orientation" type="TOleEnum" />
  </interface>
  <interface name="TextFrameDisp" GUID="{000C0320-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="MarginBottom" visibility="automated" type="Single" />
    <property name="MarginLeft" visibility="automated" type="Single" />
    <property name="MarginRight" visibility="automated" type="Single" />
    <property name="MarginTop" visibility="automated" type="Single" />
    <property name="Orientation" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ThreeDFormat" GUID="{000C0321-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="IncrementRotationX" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementRotationY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="ResetRotation" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SetThreeDFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetThreeDFormat" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetExtrusionDirection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetExtrusionDirection" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Depth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Depth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Depth" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ExtrusionColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ColorFormat" />
      </parameters>
    </function>
    <function name="Get_ExtrusionColorType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_ExtrusionColorType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ExtrusionColorType" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Perspective" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Perspective" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Perspective" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PresetExtrusionDirection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_PresetLightingDirection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_PresetLightingDirection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetLightingDirection" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PresetLightingSoftness" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_PresetLightingSoftness" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetLightingSoftness" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PresetMaterial" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_PresetMaterial" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetMaterial" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PresetThreeDFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_RotationX" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_RotationX" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RotationX" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_RotationY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_RotationY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RotationY" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Visible" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Depth" visibility="public" read="Get_Depth" write="Set_Depth" type="Single" default="0" />
    <property name="ExtrusionColor" visibility="public" read="Get_ExtrusionColor" type="ColorFormat" />
    <property name="ExtrusionColorType" visibility="public" read="Get_ExtrusionColorType" write="Set_ExtrusionColorType" type="TOleEnum" />
    <property name="Perspective" visibility="public" read="Get_Perspective" write="Set_Perspective" type="TOleEnum" />
    <property name="PresetExtrusionDirection" visibility="public" read="Get_PresetExtrusionDirection" type="TOleEnum" />
    <property name="PresetLightingDirection" visibility="public" read="Get_PresetLightingDirection" write="Set_PresetLightingDirection" type="TOleEnum" />
    <property name="PresetLightingSoftness" visibility="public" read="Get_PresetLightingSoftness" write="Set_PresetLightingSoftness" type="TOleEnum" />
    <property name="PresetMaterial" visibility="public" read="Get_PresetMaterial" write="Set_PresetMaterial" type="TOleEnum" />
    <property name="PresetThreeDFormat" visibility="public" read="Get_PresetThreeDFormat" type="TOleEnum" />
    <property name="RotationX" visibility="public" read="Get_RotationX" write="Set_RotationX" type="Single" default="0" />
    <property name="RotationY" visibility="public" read="Get_RotationY" write="Set_RotationY" type="Single" default="0" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="TOleEnum" />
  </interface>
  <interface name="ThreeDFormatDisp" GUID="{000C0321-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="IncrementRotationX" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementRotationY" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="ResetRotation" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetThreeDFormat" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="PresetThreeDFormat" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetExtrusionDirection" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="PresetExtrusionDirection" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Depth" visibility="automated" type="Single" />
    <property name="ExtrusionColor" visibility="automated" type="ColorFormat" />
    <property name="ExtrusionColorType" visibility="automated" type="TOleEnum" />
    <property name="Perspective" visibility="automated" type="TOleEnum" />
    <property name="PresetExtrusionDirection" visibility="automated" type="TOleEnum" />
    <property name="PresetLightingDirection" visibility="automated" type="TOleEnum" />
    <property name="PresetLightingSoftness" visibility="automated" type="TOleEnum" />
    <property name="PresetMaterial" visibility="automated" type="TOleEnum" />
    <property name="PresetThreeDFormat" visibility="automated" type="TOleEnum" />
    <property name="RotationX" visibility="automated" type="Single" />
    <property name="RotationY" visibility="automated" type="Single" />
    <property name="Visible" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="Assistant" GUID="{000C0322-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Move" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Set_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pyTop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pxLeft" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Help" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="StartWizard" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="On_" type="WordBool" />
        <parameter name="Callback" type="WideString" paramflags="const" />
        <parameter name="PrivateX" type="Integer" />
        <parameter name="Animation" type="OleVariant" />
        <parameter name="CustomTeaser" type="OleVariant" />
        <parameter name="Top" type="OleVariant" />
        <parameter name="Left" type="OleVariant" />
        <parameter name="Bottom" type="OleVariant" />
        <parameter name="Right" type="OleVariant" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="EndWizard" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="WizardID" type="Integer" />
        <parameter name="varfSuccess" type="WordBool" />
        <parameter name="Animation" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="ActivateWizard" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="WizardID" type="Integer" />
        <parameter name="act" type="TOleEnum" />
        <parameter name="Animation" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="ResetTips" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_NewBalloon" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_BalloonError" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfVisible" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Animation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Animation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pfca" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Reduced" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Reduced" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfReduced" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Set_AssistWithHelp" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfAssistWithHelp" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AssistWithHelp" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AssistWithWizards" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfAssistWithWizards" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AssistWithWizards" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AssistWithAlerts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfAssistWithAlerts" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AssistWithAlerts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MoveWhenInTheWay" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfMove" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MoveWhenInTheWay" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Sounds" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfSounds" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Sounds" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_FeatureTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfFeatures" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_FeatureTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MouseTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfMouse" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MouseTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_KeyboardShortcutTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfKeyboardShortcuts" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_KeyboardShortcutTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_HighPriorityTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfHighPriorityTips" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_HighPriorityTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_TipOfDay" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfTipOfDay" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_TipOfDay" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_GuessHelp" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfGuessHelp" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_GuessHelp" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SearchWhenProgramming" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfSearchInProgram" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SearchWhenProgramming" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_FileName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_FileName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Top" visibility="public" write="Set_Top" type="Integer" />
    <property name="Left" visibility="public" write="Set_Left" type="Integer" />
    <property name="NewBalloon" visibility="public" read="Get_NewBalloon" type="IDispatch" />
    <property name="BalloonError" visibility="public" read="Get_BalloonError" type="TOleEnum" />
    <property name="Visible" visibility="public" read="Get_Visible" type="WordBool" />
    <property name="Animation" visibility="public" read="Get_Animation" type="TOleEnum" />
    <property name="Reduced" visibility="public" read="Get_Reduced" type="WordBool" />
    <property name="AssistWithHelp" visibility="public" write="Set_AssistWithHelp" type="WordBool" />
    <property name="AssistWithWizards" visibility="public" write="Set_AssistWithWizards" type="WordBool" />
    <property name="AssistWithAlerts" visibility="public" write="Set_AssistWithAlerts" type="WordBool" />
    <property name="MoveWhenInTheWay" visibility="public" write="Set_MoveWhenInTheWay" type="WordBool" />
    <property name="Sounds" visibility="public" write="Set_Sounds" type="WordBool" />
    <property name="FeatureTips" visibility="public" write="Set_FeatureTips" type="WordBool" />
    <property name="MouseTips" visibility="public" write="Set_MouseTips" type="WordBool" />
    <property name="KeyboardShortcutTips" visibility="public" write="Set_KeyboardShortcutTips" type="WordBool" />
    <property name="HighPriorityTips" visibility="public" write="Set_HighPriorityTips" type="WordBool" />
    <property name="TipOfDay" visibility="public" write="Set_TipOfDay" type="WordBool" />
    <property name="GuessHelp" visibility="public" write="Set_GuessHelp" type="WordBool" />
    <property name="SearchWhenProgramming" visibility="public" write="Set_SearchWhenProgramming" type="WordBool" />
    <property name="Item" visibility="public" read="Get_Item" type="WideString" default="0" />
    <property name="FileName" visibility="public" read="Get_FileName" type="WideString" default="0" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
  </interface>
  <interface name="AssistantDisp" GUID="{000C0322-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="Move" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
      </parameters>
    </procedure>
    <property name="Top" visibility="automated" type="Integer" />
    <property name="Left" visibility="automated" type="Integer" />
    <procedure name="Help" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="StartWizard" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="On_" type="WordBool" />
        <parameter name="Callback" type="WideString" paramflags="const" />
        <parameter name="PrivateX" type="Integer" />
        <parameter name="Animation" type="OleVariant" />
        <parameter name="CustomTeaser" type="OleVariant" />
        <parameter name="Top" type="OleVariant" />
        <parameter name="Left" type="OleVariant" />
        <parameter name="Bottom" type="OleVariant" />
        <parameter name="Right" type="OleVariant" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="EndWizard" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="WizardID" type="Integer" />
        <parameter name="varfSuccess" type="WordBool" />
        <parameter name="Animation" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="ActivateWizard" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="WizardID" type="Integer" />
        <parameter name="act" type="TOleEnum" />
        <parameter name="Animation" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="ResetTips" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="NewBalloon" visibility="automated" type="IDispatch" />
    <property name="BalloonError" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="WordBool" />
    <property name="Animation" visibility="automated" type="TOleEnum" />
    <property name="Reduced" visibility="automated" type="WordBool" />
    <property name="AssistWithHelp" visibility="automated" type="WordBool" />
    <property name="AssistWithWizards" visibility="automated" type="WordBool" />
    <property name="AssistWithAlerts" visibility="automated" type="WordBool" />
    <property name="MoveWhenInTheWay" visibility="automated" type="WordBool" />
    <property name="Sounds" visibility="automated" type="WordBool" />
    <property name="FeatureTips" visibility="automated" type="WordBool" />
    <property name="MouseTips" visibility="automated" type="WordBool" />
    <property name="KeyboardShortcutTips" visibility="automated" type="WordBool" />
    <property name="HighPriorityTips" visibility="automated" type="WordBool" />
    <property name="TipOfDay" visibility="automated" type="WordBool" />
    <property name="GuessHelp" visibility="automated" type="WordBool" />
    <property name="SearchWhenProgramming" visibility="automated" type="WordBool" />
    <property name="Item" visibility="automated" type="WideString" />
    <property name="FileName" visibility="automated" type="WideString" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="Balloon" GUID="{000C0324-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Checkboxes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Labels" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Set_BalloonType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbty" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_BalloonType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Icon" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="picn" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Icon" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Heading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Heading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Mode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Mode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Animation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pfca" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Animation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Button" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="psbs" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Button" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Callback" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Callback" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Private_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="plPrivate" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Private_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="SetAvoidRectangle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Left" type="Integer" />
        <parameter name="Top" type="Integer" />
        <parameter name="Right" type="Integer" />
        <parameter name="Bottom" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Show" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Close" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Checkboxes" visibility="public" read="Get_Checkboxes" type="IDispatch" />
    <property name="Labels" visibility="public" read="Get_Labels" type="IDispatch" />
    <property name="BalloonType" visibility="public" write="Set_BalloonType" type="TOleEnum" />
    <property name="Icon" visibility="public" write="Set_Icon" type="TOleEnum" />
    <property name="Heading" visibility="public" write="Set_Heading" type="WideString" default="0" />
    <property name="Text" visibility="public" write="Set_Text" type="WideString" default="0" />
    <property name="Mode" visibility="public" write="Set_Mode" type="TOleEnum" />
    <property name="Animation" visibility="public" write="Set_Animation" type="TOleEnum" />
    <property name="Button" visibility="public" write="Set_Button" type="TOleEnum" />
    <property name="Callback" visibility="public" write="Set_Callback" type="WideString" default="0" />
    <property name="Private_" visibility="public" write="Set_Private_" type="Integer" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
  </interface>
  <interface name="BalloonDisp" GUID="{000C0324-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Checkboxes" visibility="automated" type="IDispatch" />
    <property name="Labels" visibility="automated" type="IDispatch" />
    <property name="BalloonType" visibility="automated" type="TOleEnum" />
    <property name="Icon" visibility="automated" type="TOleEnum" />
    <property name="Heading" visibility="automated" type="WideString" />
    <property name="Text" visibility="automated" type="WideString" />
    <property name="Mode" visibility="automated" type="TOleEnum" />
    <property name="Animation" visibility="automated" type="TOleEnum" />
    <property name="Button" visibility="automated" type="TOleEnum" />
    <property name="Callback" visibility="automated" type="WideString" />
    <property name="Private_" visibility="automated" type="Integer" />
    <procedure name="SetAvoidRectangle" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Left" type="Integer" />
        <parameter name="Top" type="Integer" />
        <parameter name="Right" type="Integer" />
        <parameter name="Bottom" type="Integer" />
      </parameters>
    </procedure>
    <property name="Name" visibility="automated" type="WideString" />
    <function name="Show" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Close" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="BalloonCheckboxes" GUID="{000C0326-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pccbx" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Item[Index]" visibility="public" read="Get_Item" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="BalloonCheckboxesDisp" GUID="{000C0326-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Item[Index]" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="BalloonCheckbox" GUID="{000C0328-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Set_Checked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfChecked" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Checked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <property name="Item" visibility="public" read="Get_Item" type="WideString" default="0" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Checked" visibility="public" write="Set_Checked" type="WordBool" />
    <property name="Text" visibility="public" write="Set_Text" type="WideString" default="0" />
  </interface>
  <interface name="BalloonCheckboxDisp" GUID="{000C0328-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Item" visibility="automated" type="WideString" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Checked" visibility="automated" type="WordBool" />
    <property name="Text" visibility="automated" type="WideString" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="BalloonLabels" GUID="{000C032E-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pcwz" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Item[Index]" visibility="public" read="Get_Item" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="BalloonLabelsDisp" GUID="{000C032E-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Item[Index]" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="BalloonLabel" GUID="{000C0330-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Set_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <property name="Item" visibility="public" read="Get_Item" type="WideString" default="0" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Text" visibility="public" write="Set_Text" type="WideString" default="0" />
  </interface>
  <interface name="BalloonLabelDisp" GUID="{000C0330-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Item" visibility="automated" type="WideString" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Text" visibility="automated" type="WideString" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="DocumentProperty" GUID="{2DF8D04E-5BFA-101B-BDE5-00AA0044DE52}" ancestor="IDispatch">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Delete" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="lcid" type="Integer" />
        <parameter name="pbstrRetVal" type="WideString" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Set_Name" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="lcid" type="Integer" />
        <parameter name="pbstrRetVal" type="WideString" paramflags="const" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_Value" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="lcid" type="Integer" />
        <parameter name="pvargRetVal" type="OleVariant" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Set_Value" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="lcid" type="Integer" />
        <parameter name="pvargRetVal" type="OleVariant" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="lcid" type="Integer" />
        <parameter name="ptypeRetVal" type="TOleEnum" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Set_type_" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="lcid" type="Integer" />
        <parameter name="ptypeRetVal" type="TOleEnum" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_LinkToContent" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="pfLinkRetVal" type="WordBool" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Set_LinkToContent" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="pfLinkRetVal" type="WordBool" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_LinkSource" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="pbstrSourceRetVal" type="WideString" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Set_LinkSource" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="pbstrSourceRetVal" type="WideString" paramflags="const" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="ppidisp" type="IDispatch" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="plCreator" type="Integer" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
  </interface>
  <interface name="DocumentProperties" GUID="{2DF8D04D-5BFA-101B-BDE5-00AA0044DE52}" ancestor="IDispatch">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <parameter name="lcid" type="Integer" />
        <parameter name="ppIDocProp" type="DocumentProperty" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="pc" type="Integer" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="LinkToContent" type="WordBool" />
        <parameter name="Type_" type="OleVariant" />
        <parameter name="Value" type="OleVariant" />
        <parameter name="LinkSource" type="OleVariant" />
        <parameter name="lcid" type="Integer" />
        <parameter name="ppIDocProp" type="DocumentProperty" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="ppunkEnum" type="IInterface" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="ppidisp" type="IDispatch" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="plCreator" type="Integer" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
  </interface>
  <interface name="IFoundFiles" GUID="{000C0338-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <property name="Item[Index]" visibility="public" read="Get_Item" type="WideString" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="IFoundFilesDisp" GUID="{000C0338-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Item[Index]" visibility="automated" type="WideString" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
  </interface>
  <interface name="IFind" GUID="{000C0337-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_SearchPath" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_SubDir" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Title" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Author" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Keywords" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Subject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Options" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_MatchCase" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_PatternMatch" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_DateSavedFrom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_DateSavedTo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_SavedBy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_DateCreatedFrom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_DateCreatedTo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_View" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_SortBy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_ListBy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_SelectedFile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Results" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IFoundFiles" />
      </parameters>
    </function>
    <function name="Show" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_SearchPath" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_SubDir" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="retval" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Set_Title" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_Author" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_Keywords" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_Subject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_Options" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="penmOptions" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Set_MatchCase" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="retval" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Set_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_PatternMatch" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="retval" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Set_DateSavedFrom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdatSavedFrom" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="Set_DateSavedTo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdatSavedTo" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="Set_SavedBy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_DateCreatedFrom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdatCreatedFrom" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="Set_DateCreatedTo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdatCreatedTo" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="Set_View" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="penmView" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Set_SortBy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="penmSortBy" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Set_ListBy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="penmListBy" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Set_SelectedFile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pintSelectedFile" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Execute" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Load" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrQueryName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Save" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrQueryName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrQueryName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_FileType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_FileType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="plFileType" type="Integer" />
      </parameters>
    </procedure>
    <property name="SearchPath" visibility="public" read="Get_SearchPath" write="Set_SearchPath" type="WideString" default="0" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="SubDir" visibility="public" read="Get_SubDir" type="WordBool" />
    <property name="Title" visibility="public" read="Get_Title" type="WideString" default="0" />
    <property name="Author" visibility="public" read="Get_Author" type="WideString" default="0" />
    <property name="Keywords" visibility="public" read="Get_Keywords" type="WideString" default="0" />
    <property name="Subject" visibility="public" read="Get_Subject" type="WideString" default="0" />
    <property name="Options" visibility="public" read="Get_Options" type="TOleEnum" />
    <property name="MatchCase" visibility="public" read="Get_MatchCase" type="WordBool" />
    <property name="Text" visibility="public" read="Get_Text" type="WideString" default="0" />
    <property name="PatternMatch" visibility="public" read="Get_PatternMatch" type="WordBool" />
    <property name="DateSavedFrom" visibility="public" read="Get_DateSavedFrom" type="OleVariant" default="0" />
    <property name="DateSavedTo" visibility="public" read="Get_DateSavedTo" type="OleVariant" default="0" />
    <property name="SavedBy" visibility="public" read="Get_SavedBy" type="WideString" default="0" />
    <property name="DateCreatedFrom" visibility="public" read="Get_DateCreatedFrom" type="OleVariant" default="0" />
    <property name="DateCreatedTo" visibility="public" read="Get_DateCreatedTo" type="OleVariant" default="0" />
    <property name="View" visibility="public" read="Get_View" type="TOleEnum" />
    <property name="SortBy" visibility="public" read="Get_SortBy" type="TOleEnum" />
    <property name="ListBy" visibility="public" read="Get_ListBy" type="TOleEnum" />
    <property name="SelectedFile" visibility="public" read="Get_SelectedFile" type="Integer" />
    <property name="Results" visibility="public" read="Get_Results" type="IFoundFiles" />
    <property name="FileType" visibility="public" read="Get_FileType" type="Integer" />
  </interface>
  <interface name="IFindDisp" GUID="{000C0337-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="SearchPath" visibility="automated" type="WideString" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="SubDir" visibility="automated" type="WordBool" />
    <property name="Title" visibility="automated" type="WideString" />
    <property name="Author" visibility="automated" type="WideString" />
    <property name="Keywords" visibility="automated" type="WideString" />
    <property name="Subject" visibility="automated" type="WideString" />
    <property name="Options" visibility="automated" type="TOleEnum" />
    <property name="MatchCase" visibility="automated" type="WordBool" />
    <property name="Text" visibility="automated" type="WideString" />
    <property name="PatternMatch" visibility="automated" type="WordBool" />
    <property name="DateSavedFrom" visibility="automated" type="OleVariant" />
    <property name="DateSavedTo" visibility="automated" type="OleVariant" />
    <property name="SavedBy" visibility="automated" type="WideString" />
    <property name="DateCreatedFrom" visibility="automated" type="OleVariant" />
    <property name="DateCreatedTo" visibility="automated" type="OleVariant" />
    <property name="View" visibility="automated" type="TOleEnum" />
    <property name="SortBy" visibility="automated" type="TOleEnum" />
    <property name="ListBy" visibility="automated" type="TOleEnum" />
    <property name="SelectedFile" visibility="automated" type="Integer" />
    <property name="Results" visibility="automated" type="IFoundFiles" />
    <function name="Show" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Execute" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Load" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrQueryName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Save" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrQueryName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrQueryName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="FileType" visibility="automated" type="Integer" />
  </interface>
  <interface name="FoundFiles" GUID="{000C0331-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="lcid" type="Integer" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <property name="Item[Index][lcid]" visibility="public" read="Get_Item" type="WideString" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="FoundFilesDisp" GUID="{000C0331-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Item[Index][lcid]" visibility="automated" type="WideString" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="PropertyTest" GUID="{000C0333-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Condition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Value" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_SecondValue" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_Connector" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Condition" visibility="public" read="Get_Condition" type="TOleEnum" />
    <property name="Value" visibility="public" read="Get_Value" type="OleVariant" default="0" />
    <property name="SecondValue" visibility="public" read="Get_SecondValue" type="OleVariant" default="0" />
    <property name="Connector" visibility="public" read="Get_Connector" type="TOleEnum" />
  </interface>
  <interface name="PropertyTestDisp" GUID="{000C0333-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Condition" visibility="automated" type="TOleEnum" />
    <property name="Value" visibility="automated" type="OleVariant" />
    <property name="SecondValue" visibility="automated" type="OleVariant" />
    <property name="Connector" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="PropertyTests" GUID="{000C0334-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="lcid" type="Integer" />
        <retval type="PropertyTest" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Condition" type="TOleEnum" />
        <parameter name="Value" type="OleVariant" />
        <parameter name="SecondValue" type="OleVariant" />
        <parameter name="Connector" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Remove" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <property name="Item[Index][lcid]" visibility="public" read="Get_Item" type="PropertyTest" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="PropertyTestsDisp" GUID="{000C0334-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Item[Index][lcid]" visibility="automated" type="PropertyTest" />
    <property name="Count" visibility="automated" type="Integer" />
    <procedure name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Condition" type="TOleEnum" />
        <parameter name="Value" type="OleVariant" />
        <parameter name="SecondValue" type="OleVariant" />
        <parameter name="Connector" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Remove" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="FileSearch" GUID="{000C0332-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_SearchSubFolders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SearchSubFolders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SearchSubFoldersRetVal" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchTextExactly" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchTextExactly" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="MatchTextRetVal" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchAllWordForms" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchAllWordForms" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="MatchAllWordFormsRetVal" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_FileName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_FileName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileNameRetVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_FileType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_FileType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileTypeRetVal" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_LastModified" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LastModified" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="LastModifiedRetVal" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_TextOrProperty" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_TextOrProperty" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="TextOrProperty" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_LookIn" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_LookIn" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="LookInRetVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Execute" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SortBy" type="TOleEnum" />
        <parameter name="SortOrder" type="TOleEnum" />
        <parameter name="AlwaysAccurate" type="WordBool" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="NewSearch" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_FoundFiles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FoundFiles" />
      </parameters>
    </function>
    <function name="Get_PropertyTests" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="PropertyTests" />
      </parameters>
    </function>
    <property name="SearchSubFolders" visibility="public" read="Get_SearchSubFolders" write="Set_SearchSubFolders" type="WordBool" />
    <property name="MatchTextExactly" visibility="public" read="Get_MatchTextExactly" write="Set_MatchTextExactly" type="WordBool" />
    <property name="MatchAllWordForms" visibility="public" read="Get_MatchAllWordForms" write="Set_MatchAllWordForms" type="WordBool" />
    <property name="FileName" visibility="public" read="Get_FileName" write="Set_FileName" type="WideString" default="0" />
    <property name="FileType" visibility="public" read="Get_FileType" write="Set_FileType" type="TOleEnum" />
    <property name="LastModified" visibility="public" read="Get_LastModified" write="Set_LastModified" type="TOleEnum" />
    <property name="TextOrProperty" visibility="public" read="Get_TextOrProperty" write="Set_TextOrProperty" type="WideString" default="0" />
    <property name="LookIn" visibility="public" read="Get_LookIn" write="Set_LookIn" type="WideString" default="0" />
    <property name="FoundFiles" visibility="public" read="Get_FoundFiles" type="FoundFiles" />
    <property name="PropertyTests" visibility="public" read="Get_PropertyTests" type="PropertyTests" />
  </interface>
  <interface name="FileSearchDisp" GUID="{000C0332-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="SearchSubFolders" visibility="automated" type="WordBool" />
    <property name="MatchTextExactly" visibility="automated" type="WordBool" />
    <property name="MatchAllWordForms" visibility="automated" type="WordBool" />
    <property name="FileName" visibility="automated" type="WideString" />
    <property name="FileType" visibility="automated" type="TOleEnum" />
    <property name="LastModified" visibility="automated" type="TOleEnum" />
    <property name="TextOrProperty" visibility="automated" type="WideString" />
    <property name="LookIn" visibility="automated" type="WideString" />
    <function name="Execute" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="SortBy" type="TOleEnum" />
        <parameter name="SortOrder" type="TOleEnum" />
        <parameter name="AlwaysAccurate" type="WordBool" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="NewSearch" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="FoundFiles" visibility="automated" type="FoundFiles" />
    <property name="PropertyTests" visibility="automated" type="PropertyTests" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
</namespace>
