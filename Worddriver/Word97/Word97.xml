<?xml version="1.0" encoding="utf-8"?>
<namespace name="Word97" platform="Win32">
  <const name="WordMajorVersion" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="WordMinorVersion" type="Integer">
    <value>
      $0
    </value>
  </const>
  <variable name="LIBID_Word" type="TGUID" visibility="public" />
  <variable name="IID__Application" type="TGUID" visibility="public" />
  <variable name="IID__Global" type="TGUID" visibility="public" />
  <variable name="IID_FontNames" type="TGUID" visibility="public" />
  <variable name="IID_Languages" type="TGUID" visibility="public" />
  <variable name="IID_Language" type="TGUID" visibility="public" />
  <variable name="IID_Documents" type="TGUID" visibility="public" />
  <variable name="IID__Document" type="TGUID" visibility="public" />
  <variable name="IID_Template" type="TGUID" visibility="public" />
  <variable name="IID_Templates" type="TGUID" visibility="public" />
  <variable name="IID_RoutingSlip" type="TGUID" visibility="public" />
  <variable name="IID_Bookmark" type="TGUID" visibility="public" />
  <variable name="IID_Bookmarks" type="TGUID" visibility="public" />
  <variable name="IID_Variable" type="TGUID" visibility="public" />
  <variable name="IID_Variables" type="TGUID" visibility="public" />
  <variable name="IID_RecentFile" type="TGUID" visibility="public" />
  <variable name="IID_RecentFiles" type="TGUID" visibility="public" />
  <variable name="IID_Window" type="TGUID" visibility="public" />
  <variable name="IID_Windows" type="TGUID" visibility="public" />
  <variable name="IID_Pane" type="TGUID" visibility="public" />
  <variable name="IID_Panes" type="TGUID" visibility="public" />
  <variable name="IID_Range" type="TGUID" visibility="public" />
  <variable name="IID_ListFormat" type="TGUID" visibility="public" />
  <variable name="IID_Find" type="TGUID" visibility="public" />
  <variable name="IID_Replacement" type="TGUID" visibility="public" />
  <variable name="IID_Characters" type="TGUID" visibility="public" />
  <variable name="IID_Words" type="TGUID" visibility="public" />
  <variable name="IID_Sentences" type="TGUID" visibility="public" />
  <variable name="IID_Sections" type="TGUID" visibility="public" />
  <variable name="IID_Section" type="TGUID" visibility="public" />
  <variable name="IID_Paragraphs" type="TGUID" visibility="public" />
  <variable name="IID_Paragraph" type="TGUID" visibility="public" />
  <variable name="IID_DropCap" type="TGUID" visibility="public" />
  <variable name="IID_TabStops" type="TGUID" visibility="public" />
  <variable name="IID_TabStop" type="TGUID" visibility="public" />
  <variable name="IID__ParagraphFormat" type="TGUID" visibility="public" />
  <variable name="IID__Font" type="TGUID" visibility="public" />
  <variable name="IID_Table" type="TGUID" visibility="public" />
  <variable name="IID_Row" type="TGUID" visibility="public" />
  <variable name="IID_Column" type="TGUID" visibility="public" />
  <variable name="IID_Cell" type="TGUID" visibility="public" />
  <variable name="IID_Tables" type="TGUID" visibility="public" />
  <variable name="IID_Rows" type="TGUID" visibility="public" />
  <variable name="IID_Columns" type="TGUID" visibility="public" />
  <variable name="IID_Cells" type="TGUID" visibility="public" />
  <variable name="IID_AutoCorrect" type="TGUID" visibility="public" />
  <variable name="IID_AutoCorrectEntries" type="TGUID" visibility="public" />
  <variable name="IID_AutoCorrectEntry" type="TGUID" visibility="public" />
  <variable name="IID_FirstLetterExceptions" type="TGUID" visibility="public" />
  <variable name="IID_FirstLetterException" type="TGUID" visibility="public" />
  <variable name="IID_TwoInitialCapsExceptions" type="TGUID" visibility="public" />
  <variable name="IID_TwoInitialCapsException" type="TGUID" visibility="public" />
  <variable name="IID_Footnotes" type="TGUID" visibility="public" />
  <variable name="IID_Endnotes" type="TGUID" visibility="public" />
  <variable name="IID_Comments" type="TGUID" visibility="public" />
  <variable name="IID_Footnote" type="TGUID" visibility="public" />
  <variable name="IID_Endnote" type="TGUID" visibility="public" />
  <variable name="IID_Comment" type="TGUID" visibility="public" />
  <variable name="IID_Borders" type="TGUID" visibility="public" />
  <variable name="IID_Border" type="TGUID" visibility="public" />
  <variable name="IID_Shading" type="TGUID" visibility="public" />
  <variable name="IID_TextRetrievalMode" type="TGUID" visibility="public" />
  <variable name="IID_AutoTextEntries" type="TGUID" visibility="public" />
  <variable name="IID_AutoTextEntry" type="TGUID" visibility="public" />
  <variable name="IID_System" type="TGUID" visibility="public" />
  <variable name="IID_OLEFormat" type="TGUID" visibility="public" />
  <variable name="IID_LinkFormat" type="TGUID" visibility="public" />
  <variable name="IID__OLEControl" type="TGUID" visibility="public" />
  <variable name="IID_Fields" type="TGUID" visibility="public" />
  <variable name="IID_Field" type="TGUID" visibility="public" />
  <variable name="IID_Browser" type="TGUID" visibility="public" />
  <variable name="IID_Styles" type="TGUID" visibility="public" />
  <variable name="IID_Style" type="TGUID" visibility="public" />
  <variable name="IID_Frames" type="TGUID" visibility="public" />
  <variable name="IID_Frame" type="TGUID" visibility="public" />
  <variable name="IID_FormFields" type="TGUID" visibility="public" />
  <variable name="IID_FormField" type="TGUID" visibility="public" />
  <variable name="IID_TextInput" type="TGUID" visibility="public" />
  <variable name="IID_CheckBox" type="TGUID" visibility="public" />
  <variable name="IID_DropDown" type="TGUID" visibility="public" />
  <variable name="IID_ListEntries" type="TGUID" visibility="public" />
  <variable name="IID_ListEntry" type="TGUID" visibility="public" />
  <variable name="IID_TablesOfFigures" type="TGUID" visibility="public" />
  <variable name="IID_TableOfFigures" type="TGUID" visibility="public" />
  <variable name="IID_MailMerge" type="TGUID" visibility="public" />
  <variable name="IID_MailMergeFields" type="TGUID" visibility="public" />
  <variable name="IID_MailMergeField" type="TGUID" visibility="public" />
  <variable name="IID_MailMergeDataSource" type="TGUID" visibility="public" />
  <variable name="IID_MailMergeFieldNames" type="TGUID" visibility="public" />
  <variable name="IID_MailMergeFieldName" type="TGUID" visibility="public" />
  <variable name="IID_MailMergeDataFields" type="TGUID" visibility="public" />
  <variable name="IID_MailMergeDataField" type="TGUID" visibility="public" />
  <variable name="IID_Envelope" type="TGUID" visibility="public" />
  <variable name="IID_MailingLabel" type="TGUID" visibility="public" />
  <variable name="IID_CustomLabels" type="TGUID" visibility="public" />
  <variable name="IID_CustomLabel" type="TGUID" visibility="public" />
  <variable name="IID_TablesOfContents" type="TGUID" visibility="public" />
  <variable name="IID_TableOfContents" type="TGUID" visibility="public" />
  <variable name="IID_TablesOfAuthorities" type="TGUID" visibility="public" />
  <variable name="IID_TableOfAuthorities" type="TGUID" visibility="public" />
  <variable name="IID_Dialogs" type="TGUID" visibility="public" />
  <variable name="IID_Dialog" type="TGUID" visibility="public" />
  <variable name="IID_PageSetup" type="TGUID" visibility="public" />
  <variable name="IID_LineNumbering" type="TGUID" visibility="public" />
  <variable name="IID_TextColumns" type="TGUID" visibility="public" />
  <variable name="IID_TextColumn" type="TGUID" visibility="public" />
  <variable name="IID_WordSelection" type="TGUID" visibility="public" />
  <variable name="IID_TablesOfAuthoritiesCategories" type="TGUID" visibility="public" />
  <variable name="IID_TableOfAuthoritiesCategory" type="TGUID" visibility="public" />
  <variable name="IID_CaptionLabels" type="TGUID" visibility="public" />
  <variable name="IID_CaptionLabel" type="TGUID" visibility="public" />
  <variable name="IID_AutoCaptions" type="TGUID" visibility="public" />
  <variable name="IID_AutoCaption" type="TGUID" visibility="public" />
  <variable name="IID_Indexes" type="TGUID" visibility="public" />
  <variable name="IID_Index" type="TGUID" visibility="public" />
  <variable name="IID_AddIn" type="TGUID" visibility="public" />
  <variable name="IID_AddIns" type="TGUID" visibility="public" />
  <variable name="IID_Revisions" type="TGUID" visibility="public" />
  <variable name="IID_Revision" type="TGUID" visibility="public" />
  <variable name="IID_Task" type="TGUID" visibility="public" />
  <variable name="IID_Tasks" type="TGUID" visibility="public" />
  <variable name="IID_HeadersFooters" type="TGUID" visibility="public" />
  <variable name="IID_HeaderFooter" type="TGUID" visibility="public" />
  <variable name="IID_PageNumbers" type="TGUID" visibility="public" />
  <variable name="IID_PageNumber" type="TGUID" visibility="public" />
  <variable name="IID_Subdocuments" type="TGUID" visibility="public" />
  <variable name="IID_Subdocument" type="TGUID" visibility="public" />
  <variable name="IID_HeadingStyles" type="TGUID" visibility="public" />
  <variable name="IID_HeadingStyle" type="TGUID" visibility="public" />
  <variable name="IID_StoryRanges" type="TGUID" visibility="public" />
  <variable name="IID_ListLevel" type="TGUID" visibility="public" />
  <variable name="IID_ListLevels" type="TGUID" visibility="public" />
  <variable name="IID_ListTemplate" type="TGUID" visibility="public" />
  <variable name="IID_ListTemplates" type="TGUID" visibility="public" />
  <variable name="IID_ListParagraphs" type="TGUID" visibility="public" />
  <variable name="IID_List" type="TGUID" visibility="public" />
  <variable name="IID_Lists" type="TGUID" visibility="public" />
  <variable name="IID_ListGallery" type="TGUID" visibility="public" />
  <variable name="IID_ListGalleries" type="TGUID" visibility="public" />
  <variable name="IID_KeyBindings" type="TGUID" visibility="public" />
  <variable name="IID_KeysBoundTo" type="TGUID" visibility="public" />
  <variable name="IID_KeyBinding" type="TGUID" visibility="public" />
  <variable name="IID_FileConverter" type="TGUID" visibility="public" />
  <variable name="IID_FileConverters" type="TGUID" visibility="public" />
  <variable name="IID_SynonymInfo" type="TGUID" visibility="public" />
  <variable name="IID_Hyperlinks" type="TGUID" visibility="public" />
  <variable name="IID_Hyperlink" type="TGUID" visibility="public" />
  <variable name="IID_Shapes" type="TGUID" visibility="public" />
  <variable name="IID_ShapeRange" type="TGUID" visibility="public" />
  <variable name="IID_GroupShapes" type="TGUID" visibility="public" />
  <variable name="IID_Shape" type="TGUID" visibility="public" />
  <variable name="IID_TextFrame" type="TGUID" visibility="public" />
  <variable name="IID__LetterContent" type="TGUID" visibility="public" />
  <variable name="IID_View" type="TGUID" visibility="public" />
  <variable name="IID_Zoom" type="TGUID" visibility="public" />
  <variable name="IID_Zooms" type="TGUID" visibility="public" />
  <variable name="IID_InlineShape" type="TGUID" visibility="public" />
  <variable name="IID_InlineShapes" type="TGUID" visibility="public" />
  <variable name="IID_SpellingSuggestions" type="TGUID" visibility="public" />
  <variable name="IID_SpellingSuggestion" type="TGUID" visibility="public" />
  <variable name="IID_Dictionaries" type="TGUID" visibility="public" />
  <variable name="IID_HangulHanjaConversionDictionaries" type="TGUID" visibility="public" />
  <variable name="IID_Dictionary" type="TGUID" visibility="public" />
  <variable name="IID_ReadabilityStatistics" type="TGUID" visibility="public" />
  <variable name="IID_ReadabilityStatistic" type="TGUID" visibility="public" />
  <variable name="IID_Versions" type="TGUID" visibility="public" />
  <variable name="IID_Version" type="TGUID" visibility="public" />
  <variable name="IID_Options" type="TGUID" visibility="public" />
  <variable name="IID_MailMessage" type="TGUID" visibility="public" />
  <variable name="IID_ProofreadingErrors" type="TGUID" visibility="public" />
  <variable name="IID_Mailer" type="TGUID" visibility="public" />
  <variable name="IID_WrapFormat" type="TGUID" visibility="public" />
  <variable name="IID_HangulAndAlphabetExceptions" type="TGUID" visibility="public" />
  <variable name="IID_HangulAndAlphabetException" type="TGUID" visibility="public" />
  <variable name="IID_Adjustments" type="TGUID" visibility="public" />
  <variable name="IID_CalloutFormat" type="TGUID" visibility="public" />
  <variable name="IID_ColorFormat" type="TGUID" visibility="public" />
  <variable name="IID_ConnectorFormat" type="TGUID" visibility="public" />
  <variable name="IID_FillFormat" type="TGUID" visibility="public" />
  <variable name="IID_FreeformBuilder" type="TGUID" visibility="public" />
  <variable name="IID_LineFormat" type="TGUID" visibility="public" />
  <variable name="IID_PictureFormat" type="TGUID" visibility="public" />
  <variable name="IID_ShadowFormat" type="TGUID" visibility="public" />
  <variable name="IID_ShapeNode" type="TGUID" visibility="public" />
  <variable name="IID_ShapeNodes" type="TGUID" visibility="public" />
  <variable name="IID_TextEffectFormat" type="TGUID" visibility="public" />
  <variable name="IID_ThreeDFormat" type="TGUID" visibility="public" />
  <variable name="DIID_ApplicationEvents" type="TGUID" visibility="public" />
  <variable name="CLASS_WordGlobal" type="TGUID" visibility="public" />
  <variable name="CLASS_WordApplication" type="TGUID" visibility="public" />
  <variable name="DIID_DocumentEvents" type="TGUID" visibility="public" />
  <variable name="CLASS_WordDocument" type="TGUID" visibility="public" />
  <variable name="CLASS_WordFont" type="TGUID" visibility="public" />
  <variable name="CLASS_WordParagraphFormat" type="TGUID" visibility="public" />
  <variable name="DIID_OCXEvents" type="TGUID" visibility="public" />
  <variable name="CLASS_WordOLEControl" type="TGUID" visibility="public" />
  <variable name="CLASS_WordLetterContent" type="TGUID" visibility="public" />
  <type name="WdMailSystem" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdNoMailSystem" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdMAPI" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdPowerTalk" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdMAPIandPowerTalk" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdTemplateType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdNormalTemplate" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdGlobalTemplate" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdAttachedTemplate" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdContinue" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdContinueDisabled" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdResetList" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdContinueList" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdIMEMode" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdIMEModeNoControl" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdIMEModeOn" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdIMEModeOff" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdIMEModeHiragana" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdIMEModeKatakana" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdIMEModeKatakanaHalf" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdIMEModeAlphaFull" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdIMEModeAlpha" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdIMEModeHangulFull" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdIMEModeHangul" type="Integer">
    <value>
      $A
    </value>
  </const>
  <type name="WdBaselineAlignment" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdBaselineAlignTop" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdBaselineAlignCenter" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdBaselineAlignBaseline" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdBaselineAlignFarEast50" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdBaselineAlignAuto" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdIndexFilter" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdIndexFilterNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdIndexFilterAiueo" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdIndexFilterAkasatana" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdIndexFilterChosung" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdIndexFilterLow" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdIndexFilterMedium" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdIndexFilterFull" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="WdIndexSortBy" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdIndexSortByStroke" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdIndexSortBySyllable" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdJustificationMode" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdJustificationModeExpand" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdJustificationModeCompress" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdJustificationModeCompressKana" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdFarEastLineBreakLevel" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdFarEastLineBreakLevelNormal" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdFarEastLineBreakLevelStrict" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdFarEastLineBreakLevelCustom" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdMultipleWordConversionsMode" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdHangulToHanja" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdHanjaToHangul" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdColorIndex" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdAuto" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdBlack" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdBlue" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdTurquoise" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdBrightGreen" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdPink" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdRed" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdYellow" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdWhite" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdDarkBlue" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdTeal" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdGreen" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdViolet" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="wdDarkRed" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="wdDarkYellow" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="wdGray50" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="wdGray25" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="wdByAuthor" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="wdNoHighlight" type="Integer">
    <value>
      $0
    </value>
  </const>
  <type name="WdTextureIndex" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdTextureNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdTexture2Pt5Percent" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="wdTexture5Percent" type="Integer">
    <value>
      $32
    </value>
  </const>
  <const name="wdTexture7Pt5Percent" type="Integer">
    <value>
      $4B
    </value>
  </const>
  <const name="wdTexture10Percent" type="Integer">
    <value>
      $64
    </value>
  </const>
  <const name="wdTexture12Pt5Percent" type="Integer">
    <value>
      $7D
    </value>
  </const>
  <const name="wdTexture15Percent" type="Integer">
    <value>
      $96
    </value>
  </const>
  <const name="wdTexture17Pt5Percent" type="Integer">
    <value>
      $AF
    </value>
  </const>
  <const name="wdTexture20Percent" type="Integer">
    <value>
      $C8
    </value>
  </const>
  <const name="wdTexture22Pt5Percent" type="Integer">
    <value>
      $E1
    </value>
  </const>
  <const name="wdTexture25Percent" type="Integer">
    <value>
      $FA
    </value>
  </const>
  <const name="wdTexture27Pt5Percent" type="Integer">
    <value>
      $113
    </value>
  </const>
  <const name="wdTexture30Percent" type="Integer">
    <value>
      $12C
    </value>
  </const>
  <const name="wdTexture32Pt5Percent" type="Integer">
    <value>
      $145
    </value>
  </const>
  <const name="wdTexture35Percent" type="Integer">
    <value>
      $15E
    </value>
  </const>
  <const name="wdTexture37Pt5Percent" type="Integer">
    <value>
      $177
    </value>
  </const>
  <const name="wdTexture40Percent" type="Integer">
    <value>
      $190
    </value>
  </const>
  <const name="wdTexture42Pt5Percent" type="Integer">
    <value>
      $1A9
    </value>
  </const>
  <const name="wdTexture45Percent" type="Integer">
    <value>
      $1C2
    </value>
  </const>
  <const name="wdTexture47Pt5Percent" type="Integer">
    <value>
      $1DB
    </value>
  </const>
  <const name="wdTexture50Percent" type="Integer">
    <value>
      $1F4
    </value>
  </const>
  <const name="wdTexture52Pt5Percent" type="Integer">
    <value>
      $20D
    </value>
  </const>
  <const name="wdTexture55Percent" type="Integer">
    <value>
      $226
    </value>
  </const>
  <const name="wdTexture57Pt5Percent" type="Integer">
    <value>
      $23F
    </value>
  </const>
  <const name="wdTexture60Percent" type="Integer">
    <value>
      $258
    </value>
  </const>
  <const name="wdTexture62Pt5Percent" type="Integer">
    <value>
      $271
    </value>
  </const>
  <const name="wdTexture65Percent" type="Integer">
    <value>
      $28A
    </value>
  </const>
  <const name="wdTexture67Pt5Percent" type="Integer">
    <value>
      $2A3
    </value>
  </const>
  <const name="wdTexture70Percent" type="Integer">
    <value>
      $2BC
    </value>
  </const>
  <const name="wdTexture72Pt5Percent" type="Integer">
    <value>
      $2D5
    </value>
  </const>
  <const name="wdTexture75Percent" type="Integer">
    <value>
      $2EE
    </value>
  </const>
  <const name="wdTexture77Pt5Percent" type="Integer">
    <value>
      $307
    </value>
  </const>
  <const name="wdTexture80Percent" type="Integer">
    <value>
      $320
    </value>
  </const>
  <const name="wdTexture82Pt5Percent" type="Integer">
    <value>
      $339
    </value>
  </const>
  <const name="wdTexture85Percent" type="Integer">
    <value>
      $352
    </value>
  </const>
  <const name="wdTexture87Pt5Percent" type="Integer">
    <value>
      $36B
    </value>
  </const>
  <const name="wdTexture90Percent" type="Integer">
    <value>
      $384
    </value>
  </const>
  <const name="wdTexture92Pt5Percent" type="Integer">
    <value>
      $39D
    </value>
  </const>
  <const name="wdTexture95Percent" type="Integer">
    <value>
      $3B6
    </value>
  </const>
  <const name="wdTexture97Pt5Percent" type="Integer">
    <value>
      $3CF
    </value>
  </const>
  <const name="wdTextureSolid" type="Integer">
    <value>
      $3E8
    </value>
  </const>
  <const name="wdTextureDarkHorizontal" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="wdTextureDarkVertical" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="wdTextureDarkDiagonalDown" type="Integer">
    <value>
      $FFFFFFFD
    </value>
  </const>
  <const name="wdTextureDarkDiagonalUp" type="Integer">
    <value>
      $FFFFFFFC
    </value>
  </const>
  <const name="wdTextureDarkCross" type="Integer">
    <value>
      $FFFFFFFB
    </value>
  </const>
  <const name="wdTextureDarkDiagonalCross" type="Integer">
    <value>
      $FFFFFFFA
    </value>
  </const>
  <const name="wdTextureHorizontal" type="Integer">
    <value>
      $FFFFFFF9
    </value>
  </const>
  <const name="wdTextureVertical" type="Integer">
    <value>
      $FFFFFFF8
    </value>
  </const>
  <const name="wdTextureDiagonalDown" type="Integer">
    <value>
      $FFFFFFF7
    </value>
  </const>
  <const name="wdTextureDiagonalUp" type="Integer">
    <value>
      $FFFFFFF6
    </value>
  </const>
  <const name="wdTextureCross" type="Integer">
    <value>
      $FFFFFFF5
    </value>
  </const>
  <const name="wdTextureDiagonalCross" type="Integer">
    <value>
      $FFFFFFF4
    </value>
  </const>
  <type name="WdUnderline" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdUnderlineNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdUnderlineSingle" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdUnderlineWords" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdUnderlineDouble" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdUnderlineDotted" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdUnderlineThick" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdUnderlineDash" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdUnderlineDotDash" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdUnderlineDotDotDash" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdUnderlineWavy" type="Integer">
    <value>
      $B
    </value>
  </const>
  <type name="WdEmphasisMark" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdEmphasisMarkNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdEmphasisMarkOverSolidCircle" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdEmphasisMarkOverComma" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdEmphasisMarkOverWhiteCircle" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdEmphasisMarkUnderSolidCircle" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdInternationalIndex" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdListSeparator" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="wdDecimalSeparator" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="wdThousandsSeparator" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="wdCurrencyCode" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="wd24HourClock" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="wdInternationalAM" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="wdInternationalPM" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="wdTimeSeparator" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="wdDateSeparator" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="wdProductLanguageID" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <type name="WdAutoMacros" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdAutoExec" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdAutoNew" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdAutoOpen" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdAutoClose" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdAutoExit" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdCaptionPosition" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdCaptionPositionAbove" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdCaptionPositionBelow" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdCountry" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdUS" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdCanada" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdLatinAmerica" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdNetherlands" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="wdFrance" type="Integer">
    <value>
      $21
    </value>
  </const>
  <const name="wdSpain" type="Integer">
    <value>
      $22
    </value>
  </const>
  <const name="wdItaly" type="Integer">
    <value>
      $27
    </value>
  </const>
  <const name="wdUK" type="Integer">
    <value>
      $2C
    </value>
  </const>
  <const name="wdDenmark" type="Integer">
    <value>
      $2D
    </value>
  </const>
  <const name="wdSweden" type="Integer">
    <value>
      $2E
    </value>
  </const>
  <const name="wdNorway" type="Integer">
    <value>
      $2F
    </value>
  </const>
  <const name="wdGermany" type="Integer">
    <value>
      $31
    </value>
  </const>
  <const name="wdPeru" type="Integer">
    <value>
      $33
    </value>
  </const>
  <const name="wdMexico" type="Integer">
    <value>
      $34
    </value>
  </const>
  <const name="wdArgentina" type="Integer">
    <value>
      $36
    </value>
  </const>
  <const name="wdBrazil" type="Integer">
    <value>
      $37
    </value>
  </const>
  <const name="wdChile" type="Integer">
    <value>
      $38
    </value>
  </const>
  <const name="wdVenezuela" type="Integer">
    <value>
      $3A
    </value>
  </const>
  <const name="wdJapan" type="Integer">
    <value>
      $51
    </value>
  </const>
  <const name="wdTaiwan" type="Integer">
    <value>
      $376
    </value>
  </const>
  <const name="wdChina" type="Integer">
    <value>
      $56
    </value>
  </const>
  <const name="wdKorea" type="Integer">
    <value>
      $52
    </value>
  </const>
  <const name="wdFinland" type="Integer">
    <value>
      $166
    </value>
  </const>
  <const name="wdIceland" type="Integer">
    <value>
      $162
    </value>
  </const>
  <type name="WdHeadingSeparator" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdHeadingSeparatorNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdHeadingSeparatorBlankLine" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdHeadingSeparatorLetter" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdHeadingSeparatorLetterLow" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdHeadingSeparatorLetterFull" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdSeparatorType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdSeparatorHyphen" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdSeparatorPeriod" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdSeparatorColon" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdSeparatorEmDash" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdSeparatorEnDash" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdPageNumberAlignment" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdAlignPageNumberLeft" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdAlignPageNumberCenter" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdAlignPageNumberRight" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdAlignPageNumberInside" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdAlignPageNumberOutside" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdBorderType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdBorderTop" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="wdBorderLeft" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="wdBorderBottom" type="Integer">
    <value>
      $FFFFFFFD
    </value>
  </const>
  <const name="wdBorderRight" type="Integer">
    <value>
      $FFFFFFFC
    </value>
  </const>
  <const name="wdBorderHorizontal" type="Integer">
    <value>
      $FFFFFFFB
    </value>
  </const>
  <const name="wdBorderVertical" type="Integer">
    <value>
      $FFFFFFFA
    </value>
  </const>
  <type name="WdBorderTypeHID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdBorderDiagonalDown" type="Integer">
    <value>
      $FFFFFFF9
    </value>
  </const>
  <const name="wdBorderDiagonalUp" type="Integer">
    <value>
      $FFFFFFF8
    </value>
  </const>
  <type name="WdFramePosition" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdFrameTop" type="Integer">
    <value>
      $FFF0BDC1
    </value>
  </const>
  <const name="wdFrameLeft" type="Integer">
    <value>
      $FFF0BDC2
    </value>
  </const>
  <const name="wdFrameBottom" type="Integer">
    <value>
      $FFF0BDC3
    </value>
  </const>
  <const name="wdFrameRight" type="Integer">
    <value>
      $FFF0BDC4
    </value>
  </const>
  <const name="wdFrameCenter" type="Integer">
    <value>
      $FFF0BDC5
    </value>
  </const>
  <const name="wdFrameInside" type="Integer">
    <value>
      $FFF0BDC6
    </value>
  </const>
  <const name="wdFrameOutside" type="Integer">
    <value>
      $FFF0BDC7
    </value>
  </const>
  <type name="WdAnimation" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdAnimationNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdAnimationLasVegasLights" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdAnimationBlinkingBackground" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdAnimationSparkleText" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdAnimationMarchingBlackAnts" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdAnimationMarchingRedAnts" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdAnimationShimmer" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="WdCharacterCase" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdNextCase" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="wdLowerCase" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdUpperCase" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdTitleWord" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdTitleSentence" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdToggleCase" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="WdCharacterCaseHID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdHalfWidth" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdFullWidth" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdKatakana" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdHiragana" type="Integer">
    <value>
      $9
    </value>
  </const>
  <type name="WdSummaryMode" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdSummaryModeHighlight" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdSummaryModeHideAllButSummary" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdSummaryModeInsert" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdSummaryModeCreateNew" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdSummaryLength" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wd10Sentences" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="wd20Sentences" type="Integer">
    <value>
      $FFFFFFFD
    </value>
  </const>
  <const name="wd100Words" type="Integer">
    <value>
      $FFFFFFFC
    </value>
  </const>
  <const name="wd500Words" type="Integer">
    <value>
      $FFFFFFFB
    </value>
  </const>
  <const name="wd10Percent" type="Integer">
    <value>
      $FFFFFFFA
    </value>
  </const>
  <const name="wd25Percent" type="Integer">
    <value>
      $FFFFFFF9
    </value>
  </const>
  <const name="wd50Percent" type="Integer">
    <value>
      $FFFFFFF8
    </value>
  </const>
  <const name="wd75Percent" type="Integer">
    <value>
      $FFFFFFF7
    </value>
  </const>
  <type name="WdStyleType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdStyleTypeParagraph" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdStyleTypeCharacter" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdUnits" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdCharacter" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdWord" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdSentence" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdParagraph" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdLine" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdStory" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdScreen" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdSection" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdColumn" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdRow" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdWindow" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdCell" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="wdCharacterFormatting" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="wdParagraphFormatting" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="wdTable" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="wdItem" type="Integer">
    <value>
      $10
    </value>
  </const>
  <type name="WdGoToItem" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdGoToBookmark" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="wdGoToSection" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdGoToPage" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdGoToTable" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdGoToLine" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdGoToFootnote" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdGoToEndnote" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdGoToComment" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdGoToField" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdGoToGraphic" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdGoToObject" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdGoToEquation" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdGoToHeading" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdGoToPercent" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="wdGoToSpellingError" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="wdGoToGrammaticalError" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="wdGoToProofreadingError" type="Integer">
    <value>
      $F
    </value>
  </const>
  <type name="WdGoToDirection" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdGoToFirst" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdGoToLast" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="wdGoToNext" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdGoToRelative" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdGoToPrevious" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdGoToAbsolute" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdCollapseDirection" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdCollapseStart" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdCollapseEnd" type="Integer">
    <value>
      $0
    </value>
  </const>
  <type name="WdRowHeightRule" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdRowHeightAuto" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdRowHeightAtLeast" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdRowHeightExactly" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdFrameSizeRule" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdFrameAuto" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdFrameAtLeast" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdFrameExact" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdInsertCells" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdInsertCellsShiftRight" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdInsertCellsShiftDown" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdInsertCellsEntireRow" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdInsertCellsEntireColumn" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdDeleteCells" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdDeleteCellsShiftLeft" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdDeleteCellsShiftUp" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdDeleteCellsEntireRow" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdDeleteCellsEntireColumn" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdListApplyTo" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdListApplyToWholeList" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdListApplyToThisPointForward" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdListApplyToSelection" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdAlertLevel" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdAlertsNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdAlertsMessageBox" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="wdAlertsAll" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <type name="WdCursorType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdCursorWait" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdCursorIBeam" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdCursorNormal" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdCursorNorthwestArrow" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdEnableCancelKey" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdCancelDisabled" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdCancelInterrupt" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdRulerStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdAdjustNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdAdjustProportional" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdAdjustFirstColumn" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdAdjustSameWidth" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdParagraphAlignment" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdAlignParagraphLeft" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdAlignParagraphCenter" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdAlignParagraphRight" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdAlignParagraphJustify" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdParagraphAlignmentHID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdAlignParagraphDistribute" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdListLevelAlignment" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdListLevelAlignLeft" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdListLevelAlignCenter" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdListLevelAlignRight" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdRowAlignment" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdAlignRowLeft" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdAlignRowCenter" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdAlignRowRight" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdTabAlignment" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdAlignTabLeft" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdAlignTabCenter" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdAlignTabRight" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdAlignTabDecimal" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdAlignTabBar" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdAlignTabList" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="WdVerticalAlignment" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdAlignVerticalTop" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdAlignVerticalCenter" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdAlignVerticalJustify" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdAlignVerticalBottom" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdCellVerticalAlignment" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdCellAlignVerticalTop" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdCellAlignVerticalCenter" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdCellAlignVerticalBottom" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdTrailingCharacter" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdTrailingTab" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdTrailingSpace" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdTrailingNone" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdListGalleryType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdBulletGallery" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdNumberGallery" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdOutlineNumberGallery" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdListNumberStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdListNumberStyleArabic" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdListNumberStyleUppercaseRoman" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdListNumberStyleLowercaseRoman" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdListNumberStyleUppercaseLetter" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdListNumberStyleLowercaseLetter" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdListNumberStyleOrdinal" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdListNumberStyleCardinalText" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdListNumberStyleOrdinalText" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdListNumberStyleArabicLZ" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="wdListNumberStyleBullet" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="wdListNumberStyleLegal" type="Integer">
    <value>
      $FD
    </value>
  </const>
  <const name="wdListNumberStyleLegalLZ" type="Integer">
    <value>
      $FE
    </value>
  </const>
  <const name="wdListNumberStyleNone" type="Integer">
    <value>
      $FF
    </value>
  </const>
  <type name="WdListNumberStyleHID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdListNumberStyleKanji" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdListNumberStyleKanjiDigit" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdListNumberStyleAiueoHalfWidth" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="wdListNumberStyleIrohaHalfWidth" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="wdListNumberStyleArabicFullWidth" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="wdListNumberStyleKanjiTraditional" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="wdListNumberStyleKanjiTraditional2" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="wdListNumberStyleNumberInCircle" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="wdListNumberStyleAiueo" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="wdListNumberStyleIroha" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="wdListNumberStyleGanada" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="wdListNumberStyleChosung" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="wdListNumberStyleGBNum1" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="wdListNumberStyleGBNum2" type="Integer">
    <value>
      $1B
    </value>
  </const>
  <const name="wdListNumberStyleGBNum3" type="Integer">
    <value>
      $1C
    </value>
  </const>
  <const name="wdListNumberStyleGBNum4" type="Integer">
    <value>
      $1D
    </value>
  </const>
  <const name="wdListNumberStyleZodiac1" type="Integer">
    <value>
      $1E
    </value>
  </const>
  <const name="wdListNumberStyleZodiac2" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="wdListNumberStyleZodiac3" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="wdListNumberStyleTradChinNum1" type="Integer">
    <value>
      $21
    </value>
  </const>
  <const name="wdListNumberStyleTradChinNum2" type="Integer">
    <value>
      $22
    </value>
  </const>
  <const name="wdListNumberStyleTradChinNum3" type="Integer">
    <value>
      $23
    </value>
  </const>
  <const name="wdListNumberStyleTradChinNum4" type="Integer">
    <value>
      $24
    </value>
  </const>
  <const name="wdListNumberStyleSimpChinNum1" type="Integer">
    <value>
      $25
    </value>
  </const>
  <const name="wdListNumberStyleSimpChinNum2" type="Integer">
    <value>
      $26
    </value>
  </const>
  <const name="wdListNumberStyleSimpChinNum3" type="Integer">
    <value>
      $27
    </value>
  </const>
  <const name="wdListNumberStyleSimpChinNum4" type="Integer">
    <value>
      $28
    </value>
  </const>
  <const name="wdListNumberStyleHanjaRead" type="Integer">
    <value>
      $29
    </value>
  </const>
  <const name="wdListNumberStyleHanjaReadDigit" type="Integer">
    <value>
      $2A
    </value>
  </const>
  <const name="wdListNumberStyleHangul" type="Integer">
    <value>
      $2B
    </value>
  </const>
  <const name="wdListNumberStyleHanja" type="Integer">
    <value>
      $2C
    </value>
  </const>
  <type name="WdNoteNumberStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdNoteNumberStyleArabic" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdNoteNumberStyleUppercaseRoman" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdNoteNumberStyleLowercaseRoman" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdNoteNumberStyleUppercaseLetter" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdNoteNumberStyleLowercaseLetter" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdNoteNumberStyleSymbol" type="Integer">
    <value>
      $9
    </value>
  </const>
  <type name="WdNoteNumberStyleHID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdNoteNumberStyleArabicFullWidth" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="wdNoteNumberStyleKanji" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdNoteNumberStyleKanjiDigit" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdNoteNumberStyleKanjiTraditional" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="wdNoteNumberStyleNumberInCircle" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="wdNoteNumberStyleHanjaRead" type="Integer">
    <value>
      $29
    </value>
  </const>
  <const name="wdNoteNumberStyleHanjaReadDigit" type="Integer">
    <value>
      $2A
    </value>
  </const>
  <const name="wdNoteNumberStyleTradChinNum1" type="Integer">
    <value>
      $21
    </value>
  </const>
  <const name="wdNoteNumberStyleTradChinNum2" type="Integer">
    <value>
      $22
    </value>
  </const>
  <const name="wdNoteNumberStyleSimpChinNum1" type="Integer">
    <value>
      $25
    </value>
  </const>
  <const name="wdNoteNumberStyleSimpChinNum2" type="Integer">
    <value>
      $26
    </value>
  </const>
  <type name="WdCaptionNumberStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdCaptionNumberStyleArabic" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdCaptionNumberStyleUppercaseRoman" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdCaptionNumberStyleLowercaseRoman" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdCaptionNumberStyleUppercaseLetter" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdCaptionNumberStyleLowercaseLetter" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdCaptionNumberStyleHID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdCaptionNumberStyleArabicFullWidth" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="wdCaptionNumberStyleKanji" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdCaptionNumberStyleKanjiDigit" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdCaptionNumberStyleKanjiTraditional" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="wdCaptionNumberStyleNumberInCircle" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="wdCaptionNumberStyleGanada" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="wdCaptionNumberStyleChosung" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="wdCaptionNumberStyleZodiac1" type="Integer">
    <value>
      $1E
    </value>
  </const>
  <const name="wdCaptionNumberStyleZodiac2" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="wdCaptionNumberStyleHanjaRead" type="Integer">
    <value>
      $29
    </value>
  </const>
  <const name="wdCaptionNumberStyleHanjaReadDigit" type="Integer">
    <value>
      $2A
    </value>
  </const>
  <const name="wdCaptionNumberStyleTradChinNum2" type="Integer">
    <value>
      $22
    </value>
  </const>
  <const name="wdCaptionNumberStyleTradChinNum3" type="Integer">
    <value>
      $23
    </value>
  </const>
  <const name="wdCaptionNumberStyleSimpChinNum2" type="Integer">
    <value>
      $26
    </value>
  </const>
  <const name="wdCaptionNumberStyleSimpChinNum3" type="Integer">
    <value>
      $27
    </value>
  </const>
  <type name="WdPageNumberStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdPageNumberStyleArabic" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdPageNumberStyleUppercaseRoman" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdPageNumberStyleLowercaseRoman" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdPageNumberStyleUppercaseLetter" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdPageNumberStyleLowercaseLetter" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdPageNumberStyleHID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdPageNumberStyleArabicFullWidth" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="wdPageNumberStyleKanji" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdPageNumberStyleKanjiDigit" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdPageNumberStyleKanjiTraditional" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="wdPageNumberStyleNumberInCircle" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="wdPageNumberStyleHanjaRead" type="Integer">
    <value>
      $29
    </value>
  </const>
  <const name="wdPageNumberStyleHanjaReadDigit" type="Integer">
    <value>
      $2A
    </value>
  </const>
  <const name="wdPageNumberStyleTradChinNum1" type="Integer">
    <value>
      $21
    </value>
  </const>
  <const name="wdPageNumberStyleTradChinNum2" type="Integer">
    <value>
      $22
    </value>
  </const>
  <const name="wdPageNumberStyleSimpChinNum1" type="Integer">
    <value>
      $25
    </value>
  </const>
  <const name="wdPageNumberStyleSimpChinNum2" type="Integer">
    <value>
      $26
    </value>
  </const>
  <type name="WdStatistic" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdStatisticWords" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdStatisticLines" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdStatisticPages" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdStatisticCharacters" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdStatisticParagraphs" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdStatisticCharactersWithSpaces" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="WdStatisticHID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdStatisticFarEastCharacters" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="WdBuiltInProperty" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdPropertyTitle" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdPropertySubject" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdPropertyAuthor" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdPropertyKeywords" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdPropertyComments" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdPropertyTemplate" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdPropertyLastAuthor" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdPropertyRevision" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdPropertyAppName" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdPropertyTimeLastPrinted" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdPropertyTimeCreated" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdPropertyTimeLastSaved" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="wdPropertyVBATotalEdit" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="wdPropertyPages" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="wdPropertyWords" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="wdPropertyCharacters" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="wdPropertySecurity" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="wdPropertyCategory" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="wdPropertyFormat" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="wdPropertyManager" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="wdPropertyCompany" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="wdPropertyBytes" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="wdPropertyLines" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="wdPropertyParas" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="wdPropertySlides" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="wdPropertyNotes" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="wdPropertyHiddenSlides" type="Integer">
    <value>
      $1B
    </value>
  </const>
  <const name="wdPropertyMMClips" type="Integer">
    <value>
      $1C
    </value>
  </const>
  <const name="wdPropertyHyperlinkBase" type="Integer">
    <value>
      $1D
    </value>
  </const>
  <const name="wdPropertyCharsWSpaces" type="Integer">
    <value>
      $1E
    </value>
  </const>
  <type name="WdLineSpacing" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdLineSpaceSingle" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdLineSpace1pt5" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdLineSpaceDouble" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdLineSpaceAtLeast" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdLineSpaceExactly" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdLineSpaceMultiple" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="WdNumberType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdNumberParagraph" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdNumberListNum" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdNumberAllNumbers" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdListType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdListNoNumbering" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdListListNumOnly" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdListBullet" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdListSimpleNumbering" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdListOutlineNumbering" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdListMixedNumbering" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="WdStoryType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdMainTextStory" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdFootnotesStory" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdEndnotesStory" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdCommentsStory" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdTextFrameStory" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdEvenPagesHeaderStory" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdPrimaryHeaderStory" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdEvenPagesFooterStory" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdPrimaryFooterStory" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdFirstPageHeaderStory" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdFirstPageFooterStory" type="Integer">
    <value>
      $B
    </value>
  </const>
  <type name="WdSaveFormat" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdFormatDocument" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdFormatTemplate" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdFormatText" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdFormatTextLineBreaks" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdFormatDOSText" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdFormatDOSTextLineBreaks" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdFormatRTF" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdFormatUnicodeText" type="Integer">
    <value>
      $7
    </value>
  </const>
  <type name="WdOpenFormat" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdOpenFormatAuto" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdOpenFormatDocument" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdOpenFormatTemplate" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdOpenFormatRTF" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdOpenFormatText" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdOpenFormatUnicodeText" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="WdHeaderFooterIndex" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdHeaderFooterPrimary" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdHeaderFooterFirstPage" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdHeaderFooterEvenPages" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdTocFormat" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdTOCTemplate" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdTOCClassic" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdTOCDistinctive" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdTOCFancy" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdTOCModern" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdTOCFormal" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdTOCSimple" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="WdTofFormat" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdTOFTemplate" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdTOFClassic" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdTOFDistinctive" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdTOFCentered" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdTOFFormal" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdTOFSimple" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="WdToaFormat" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdTOATemplate" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdTOAClassic" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdTOADistinctive" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdTOAFormal" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdTOASimple" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdLineStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdLineStyleNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdLineStyleSingle" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdLineStyleDot" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdLineStyleDashSmallGap" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdLineStyleDashLargeGap" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdLineStyleDashDot" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdLineStyleDashDotDot" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdLineStyleDouble" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdLineStyleTriple" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdLineStyleThinThickSmallGap" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdLineStyleThickThinSmallGap" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdLineStyleThinThickThinSmallGap" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdLineStyleThinThickMedGap" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="wdLineStyleThickThinMedGap" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="wdLineStyleThinThickThinMedGap" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="wdLineStyleThinThickLargeGap" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="wdLineStyleThickThinLargeGap" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="wdLineStyleThinThickThinLargeGap" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="wdLineStyleSingleWavy" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="wdLineStyleDoubleWavy" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="wdLineStyleDashDotStroked" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="wdLineStyleEmboss3D" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="wdLineStyleEngrave3D" type="Integer">
    <value>
      $16
    </value>
  </const>
  <type name="WdLineWidth" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdLineWidth025pt" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdLineWidth050pt" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdLineWidth075pt" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdLineWidth100pt" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdLineWidth150pt" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="wdLineWidth225pt" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="wdLineWidth300pt" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="wdLineWidth450pt" type="Integer">
    <value>
      $24
    </value>
  </const>
  <const name="wdLineWidth600pt" type="Integer">
    <value>
      $30
    </value>
  </const>
  <type name="WdBreakType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdSectionBreakNextPage" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdSectionBreakContinuous" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdSectionBreakEvenPage" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdSectionBreakOddPage" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdLineBreak" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdPageBreak" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdColumnBreak" type="Integer">
    <value>
      $8
    </value>
  </const>
  <type name="WdTabLeader" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdTabLeaderSpaces" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdTabLeaderDots" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdTabLeaderDashes" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdTabLeaderLines" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdTabLeaderHID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdTabLeaderHeavy" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdTabLeaderMiddleDot" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="WdMeasurementUnits" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdInches" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdCentimeters" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdPoints" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdPicas" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdMeasurementUnitsHID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdMillimeters" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdDropPosition" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdDropNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdDropNormal" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdDropMargin" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdNumberingRule" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdRestartContinuous" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdRestartSection" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdRestartPage" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdFootnoteLocation" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdBottomOfPage" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdBeneathText" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdEndnoteLocation" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdEndOfSection" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdEndOfDocument" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdSortSeparator" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdSortSeparateByTabs" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdSortSeparateByCommas" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdSortSeparateByDefaultTableSeparator" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdTableFieldSeparator" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdSeparateByParagraphs" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdSeparateByTabs" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdSeparateByCommas" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdSeparateByDefaultListSeparator" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdSortFieldType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdSortFieldAlphanumeric" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdSortFieldNumeric" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdSortFieldDate" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdSortFieldTypeHID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdSortFieldSyllable" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdSortFieldJapanJIS" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdSortFieldStroke" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdSortFieldKoreaKS" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="WdSortOrder" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdSortOrderAscending" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdSortOrderDescending" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdTableFormat" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdTableFormatNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdTableFormatSimple1" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdTableFormatSimple2" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdTableFormatSimple3" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdTableFormatClassic1" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdTableFormatClassic2" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdTableFormatClassic3" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdTableFormatClassic4" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdTableFormatColorful1" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdTableFormatColorful2" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdTableFormatColorful3" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdTableFormatColumns1" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdTableFormatColumns2" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="wdTableFormatColumns3" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="wdTableFormatColumns4" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="wdTableFormatColumns5" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="wdTableFormatGrid1" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="wdTableFormatGrid2" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="wdTableFormatGrid3" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="wdTableFormatGrid4" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="wdTableFormatGrid5" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="wdTableFormatGrid6" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="wdTableFormatGrid7" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="wdTableFormatGrid8" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="wdTableFormatList1" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="wdTableFormatList2" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="wdTableFormatList3" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="wdTableFormatList4" type="Integer">
    <value>
      $1B
    </value>
  </const>
  <const name="wdTableFormatList5" type="Integer">
    <value>
      $1C
    </value>
  </const>
  <const name="wdTableFormatList6" type="Integer">
    <value>
      $1D
    </value>
  </const>
  <const name="wdTableFormatList7" type="Integer">
    <value>
      $1E
    </value>
  </const>
  <const name="wdTableFormatList8" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="wdTableFormat3DEffects1" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="wdTableFormat3DEffects2" type="Integer">
    <value>
      $21
    </value>
  </const>
  <const name="wdTableFormat3DEffects3" type="Integer">
    <value>
      $22
    </value>
  </const>
  <const name="wdTableFormatContemporary" type="Integer">
    <value>
      $23
    </value>
  </const>
  <const name="wdTableFormatElegant" type="Integer">
    <value>
      $24
    </value>
  </const>
  <const name="wdTableFormatProfessional" type="Integer">
    <value>
      $25
    </value>
  </const>
  <const name="wdTableFormatSubtle1" type="Integer">
    <value>
      $26
    </value>
  </const>
  <const name="wdTableFormatSubtle2" type="Integer">
    <value>
      $27
    </value>
  </const>
  <type name="WdTableFormatApply" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdTableFormatApplyBorders" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdTableFormatApplyShading" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdTableFormatApplyFont" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdTableFormatApplyColor" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdTableFormatApplyAutoFit" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="wdTableFormatApplyHeadingRows" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="wdTableFormatApplyLastRow" type="Integer">
    <value>
      $40
    </value>
  </const>
  <const name="wdTableFormatApplyFirstColumn" type="Integer">
    <value>
      $80
    </value>
  </const>
  <const name="wdTableFormatApplyLastColumn" type="Integer">
    <value>
      $100
    </value>
  </const>
  <type name="WdLanguageID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdLanguageNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdNoProofing" type="Integer">
    <value>
      $400
    </value>
  </const>
  <const name="wdDanish" type="Integer">
    <value>
      $406
    </value>
  </const>
  <const name="wdGerman" type="Integer">
    <value>
      $407
    </value>
  </const>
  <const name="wdSwissGerman" type="Integer">
    <value>
      $807
    </value>
  </const>
  <const name="wdEnglishAUS" type="Integer">
    <value>
      $C09
    </value>
  </const>
  <const name="wdEnglishUK" type="Integer">
    <value>
      $809
    </value>
  </const>
  <const name="wdEnglishUS" type="Integer">
    <value>
      $409
    </value>
  </const>
  <const name="wdEnglishCanadian" type="Integer">
    <value>
      $1009
    </value>
  </const>
  <const name="wdEnglishNewZealand" type="Integer">
    <value>
      $1409
    </value>
  </const>
  <const name="wdEnglishSouthAfrica" type="Integer">
    <value>
      $1C09
    </value>
  </const>
  <const name="wdSpanish" type="Integer">
    <value>
      $40A
    </value>
  </const>
  <const name="wdFrench" type="Integer">
    <value>
      $40C
    </value>
  </const>
  <const name="wdFrenchCanadian" type="Integer">
    <value>
      $C0C
    </value>
  </const>
  <const name="wdItalian" type="Integer">
    <value>
      $410
    </value>
  </const>
  <const name="wdDutch" type="Integer">
    <value>
      $413
    </value>
  </const>
  <const name="wdNorwegianBokmol" type="Integer">
    <value>
      $414
    </value>
  </const>
  <const name="wdNorwegianNynorsk" type="Integer">
    <value>
      $814
    </value>
  </const>
  <const name="wdBrazilianPortuguese" type="Integer">
    <value>
      $416
    </value>
  </const>
  <const name="wdPortuguese" type="Integer">
    <value>
      $816
    </value>
  </const>
  <const name="wdFinnish" type="Integer">
    <value>
      $40B
    </value>
  </const>
  <const name="wdSwedish" type="Integer">
    <value>
      $41D
    </value>
  </const>
  <const name="wdCatalan" type="Integer">
    <value>
      $403
    </value>
  </const>
  <const name="wdGreek" type="Integer">
    <value>
      $408
    </value>
  </const>
  <const name="wdTurkish" type="Integer">
    <value>
      $41F
    </value>
  </const>
  <const name="wdRussian" type="Integer">
    <value>
      $419
    </value>
  </const>
  <const name="wdCzech" type="Integer">
    <value>
      $405
    </value>
  </const>
  <const name="wdHungarian" type="Integer">
    <value>
      $40E
    </value>
  </const>
  <const name="wdPolish" type="Integer">
    <value>
      $415
    </value>
  </const>
  <const name="wdSlovenian" type="Integer">
    <value>
      $424
    </value>
  </const>
  <const name="wdBasque" type="Integer">
    <value>
      $42D
    </value>
  </const>
  <const name="wdMalaysian" type="Integer">
    <value>
      $43E
    </value>
  </const>
  <const name="wdJapanese" type="Integer">
    <value>
      $411
    </value>
  </const>
  <const name="wdKorean" type="Integer">
    <value>
      $412
    </value>
  </const>
  <const name="wdSimplifiedChinese" type="Integer">
    <value>
      $804
    </value>
  </const>
  <const name="wdTraditionalChinese" type="Integer">
    <value>
      $404
    </value>
  </const>
  <const name="wdSwissFrench" type="Integer">
    <value>
      $100C
    </value>
  </const>
  <const name="wdSesotho" type="Integer">
    <value>
      $430
    </value>
  </const>
  <const name="wdTsonga" type="Integer">
    <value>
      $431
    </value>
  </const>
  <const name="wdTswana" type="Integer">
    <value>
      $432
    </value>
  </const>
  <const name="wdVenda" type="Integer">
    <value>
      $433
    </value>
  </const>
  <const name="wdXhosa" type="Integer">
    <value>
      $434
    </value>
  </const>
  <const name="wdZulu" type="Integer">
    <value>
      $435
    </value>
  </const>
  <const name="wdAfrikaans" type="Integer">
    <value>
      $436
    </value>
  </const>
  <const name="wdArabic" type="Integer">
    <value>
      $401
    </value>
  </const>
  <const name="wdHebrew" type="Integer">
    <value>
      $40D
    </value>
  </const>
  <const name="wdSlovak" type="Integer">
    <value>
      $41B
    </value>
  </const>
  <const name="wdFarsi" type="Integer">
    <value>
      $429
    </value>
  </const>
  <const name="wdRomanian" type="Integer">
    <value>
      $418
    </value>
  </const>
  <const name="wdCroatian" type="Integer">
    <value>
      $41A
    </value>
  </const>
  <const name="wdUkrainian" type="Integer">
    <value>
      $422
    </value>
  </const>
  <const name="wdByelorussian" type="Integer">
    <value>
      $423
    </value>
  </const>
  <const name="wdEstonian" type="Integer">
    <value>
      $425
    </value>
  </const>
  <const name="wdLatvian" type="Integer">
    <value>
      $426
    </value>
  </const>
  <const name="wdMacedonian" type="Integer">
    <value>
      $42F
    </value>
  </const>
  <const name="wdSerbianLatin" type="Integer">
    <value>
      $81A
    </value>
  </const>
  <const name="wdSerbianCyrillic" type="Integer">
    <value>
      $C1A
    </value>
  </const>
  <const name="wdIcelandic" type="Integer">
    <value>
      $40F
    </value>
  </const>
  <const name="wdBelgianFrench" type="Integer">
    <value>
      $80C
    </value>
  </const>
  <const name="wdBelgianDutch" type="Integer">
    <value>
      $813
    </value>
  </const>
  <const name="wdBulgarian" type="Integer">
    <value>
      $402
    </value>
  </const>
  <const name="wdMexicanSpanish" type="Integer">
    <value>
      $80A
    </value>
  </const>
  <const name="wdSpanishModernSort" type="Integer">
    <value>
      $C0A
    </value>
  </const>
  <const name="wdSwissItalian" type="Integer">
    <value>
      $810
    </value>
  </const>
  <type name="WdFieldType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdFieldEmpty" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="wdFieldRef" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdFieldIndexEntry" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdFieldFootnoteRef" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdFieldSet" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdFieldIf" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdFieldIndex" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdFieldTOCEntry" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdFieldStyleRef" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdFieldRefDoc" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdFieldSequence" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="wdFieldTOC" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="wdFieldInfo" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="wdFieldTitle" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="wdFieldSubject" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="wdFieldAuthor" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="wdFieldKeyWord" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="wdFieldComments" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="wdFieldLastSavedBy" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="wdFieldCreateDate" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="wdFieldSaveDate" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="wdFieldPrintDate" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="wdFieldRevisionNum" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="wdFieldEditTime" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="wdFieldNumPages" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="wdFieldNumWords" type="Integer">
    <value>
      $1B
    </value>
  </const>
  <const name="wdFieldNumChars" type="Integer">
    <value>
      $1C
    </value>
  </const>
  <const name="wdFieldFileName" type="Integer">
    <value>
      $1D
    </value>
  </const>
  <const name="wdFieldTemplate" type="Integer">
    <value>
      $1E
    </value>
  </const>
  <const name="wdFieldDate" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="wdFieldTime" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="wdFieldPage" type="Integer">
    <value>
      $21
    </value>
  </const>
  <const name="wdFieldExpression" type="Integer">
    <value>
      $22
    </value>
  </const>
  <const name="wdFieldQuote" type="Integer">
    <value>
      $23
    </value>
  </const>
  <const name="wdFieldInclude" type="Integer">
    <value>
      $24
    </value>
  </const>
  <const name="wdFieldPageRef" type="Integer">
    <value>
      $25
    </value>
  </const>
  <const name="wdFieldAsk" type="Integer">
    <value>
      $26
    </value>
  </const>
  <const name="wdFieldFillIn" type="Integer">
    <value>
      $27
    </value>
  </const>
  <const name="wdFieldData" type="Integer">
    <value>
      $28
    </value>
  </const>
  <const name="wdFieldNext" type="Integer">
    <value>
      $29
    </value>
  </const>
  <const name="wdFieldNextIf" type="Integer">
    <value>
      $2A
    </value>
  </const>
  <const name="wdFieldSkipIf" type="Integer">
    <value>
      $2B
    </value>
  </const>
  <const name="wdFieldMergeRec" type="Integer">
    <value>
      $2C
    </value>
  </const>
  <const name="wdFieldDDE" type="Integer">
    <value>
      $2D
    </value>
  </const>
  <const name="wdFieldDDEAuto" type="Integer">
    <value>
      $2E
    </value>
  </const>
  <const name="wdFieldGlossary" type="Integer">
    <value>
      $2F
    </value>
  </const>
  <const name="wdFieldPrint" type="Integer">
    <value>
      $30
    </value>
  </const>
  <const name="wdFieldFormula" type="Integer">
    <value>
      $31
    </value>
  </const>
  <const name="wdFieldGoToButton" type="Integer">
    <value>
      $32
    </value>
  </const>
  <const name="wdFieldMacroButton" type="Integer">
    <value>
      $33
    </value>
  </const>
  <const name="wdFieldAutoNumOutline" type="Integer">
    <value>
      $34
    </value>
  </const>
  <const name="wdFieldAutoNumLegal" type="Integer">
    <value>
      $35
    </value>
  </const>
  <const name="wdFieldAutoNum" type="Integer">
    <value>
      $36
    </value>
  </const>
  <const name="wdFieldImport" type="Integer">
    <value>
      $37
    </value>
  </const>
  <const name="wdFieldLink" type="Integer">
    <value>
      $38
    </value>
  </const>
  <const name="wdFieldSymbol" type="Integer">
    <value>
      $39
    </value>
  </const>
  <const name="wdFieldEmbed" type="Integer">
    <value>
      $3A
    </value>
  </const>
  <const name="wdFieldMergeField" type="Integer">
    <value>
      $3B
    </value>
  </const>
  <const name="wdFieldUserName" type="Integer">
    <value>
      $3C
    </value>
  </const>
  <const name="wdFieldUserInitials" type="Integer">
    <value>
      $3D
    </value>
  </const>
  <const name="wdFieldUserAddress" type="Integer">
    <value>
      $3E
    </value>
  </const>
  <const name="wdFieldBarCode" type="Integer">
    <value>
      $3F
    </value>
  </const>
  <const name="wdFieldDocVariable" type="Integer">
    <value>
      $40
    </value>
  </const>
  <const name="wdFieldSection" type="Integer">
    <value>
      $41
    </value>
  </const>
  <const name="wdFieldSectionPages" type="Integer">
    <value>
      $42
    </value>
  </const>
  <const name="wdFieldIncludePicture" type="Integer">
    <value>
      $43
    </value>
  </const>
  <const name="wdFieldIncludeText" type="Integer">
    <value>
      $44
    </value>
  </const>
  <const name="wdFieldFileSize" type="Integer">
    <value>
      $45
    </value>
  </const>
  <const name="wdFieldFormTextInput" type="Integer">
    <value>
      $46
    </value>
  </const>
  <const name="wdFieldFormCheckBox" type="Integer">
    <value>
      $47
    </value>
  </const>
  <const name="wdFieldNoteRef" type="Integer">
    <value>
      $48
    </value>
  </const>
  <const name="wdFieldTOA" type="Integer">
    <value>
      $49
    </value>
  </const>
  <const name="wdFieldTOAEntry" type="Integer">
    <value>
      $4A
    </value>
  </const>
  <const name="wdFieldMergeSeq" type="Integer">
    <value>
      $4B
    </value>
  </const>
  <const name="wdFieldPrivate" type="Integer">
    <value>
      $4D
    </value>
  </const>
  <const name="wdFieldDatabase" type="Integer">
    <value>
      $4E
    </value>
  </const>
  <const name="wdFieldAutoText" type="Integer">
    <value>
      $4F
    </value>
  </const>
  <const name="wdFieldCompare" type="Integer">
    <value>
      $50
    </value>
  </const>
  <const name="wdFieldAddin" type="Integer">
    <value>
      $51
    </value>
  </const>
  <const name="wdFieldSubscriber" type="Integer">
    <value>
      $52
    </value>
  </const>
  <const name="wdFieldFormDropDown" type="Integer">
    <value>
      $53
    </value>
  </const>
  <const name="wdFieldAdvance" type="Integer">
    <value>
      $54
    </value>
  </const>
  <const name="wdFieldDocProperty" type="Integer">
    <value>
      $55
    </value>
  </const>
  <const name="wdFieldOCX" type="Integer">
    <value>
      $57
    </value>
  </const>
  <const name="wdFieldHyperlink" type="Integer">
    <value>
      $58
    </value>
  </const>
  <const name="wdFieldAutoTextList" type="Integer">
    <value>
      $59
    </value>
  </const>
  <const name="wdFieldListNum" type="Integer">
    <value>
      $5A
    </value>
  </const>
  <const name="wdFieldHTMLActiveX" type="Integer">
    <value>
      $5B
    </value>
  </const>
  <type name="WdBuiltinStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdStyleNormal" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="wdStyleEnvelopeAddress" type="Integer">
    <value>
      $FFFFFFDB
    </value>
  </const>
  <const name="wdStyleEnvelopeReturn" type="Integer">
    <value>
      $FFFFFFDA
    </value>
  </const>
  <const name="wdStyleBodyText" type="Integer">
    <value>
      $FFFFFFBD
    </value>
  </const>
  <const name="wdStyleHeading1" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="wdStyleHeading2" type="Integer">
    <value>
      $FFFFFFFD
    </value>
  </const>
  <const name="wdStyleHeading3" type="Integer">
    <value>
      $FFFFFFFC
    </value>
  </const>
  <const name="wdStyleHeading4" type="Integer">
    <value>
      $FFFFFFFB
    </value>
  </const>
  <const name="wdStyleHeading5" type="Integer">
    <value>
      $FFFFFFFA
    </value>
  </const>
  <const name="wdStyleHeading6" type="Integer">
    <value>
      $FFFFFFF9
    </value>
  </const>
  <const name="wdStyleHeading7" type="Integer">
    <value>
      $FFFFFFF8
    </value>
  </const>
  <const name="wdStyleHeading8" type="Integer">
    <value>
      $FFFFFFF7
    </value>
  </const>
  <const name="wdStyleHeading9" type="Integer">
    <value>
      $FFFFFFF6
    </value>
  </const>
  <const name="wdStyleIndex1" type="Integer">
    <value>
      $FFFFFFF5
    </value>
  </const>
  <const name="wdStyleIndex2" type="Integer">
    <value>
      $FFFFFFF4
    </value>
  </const>
  <const name="wdStyleIndex3" type="Integer">
    <value>
      $FFFFFFF3
    </value>
  </const>
  <const name="wdStyleIndex4" type="Integer">
    <value>
      $FFFFFFF2
    </value>
  </const>
  <const name="wdStyleIndex5" type="Integer">
    <value>
      $FFFFFFF1
    </value>
  </const>
  <const name="wdStyleIndex6" type="Integer">
    <value>
      $FFFFFFF0
    </value>
  </const>
  <const name="wdStyleIndex7" type="Integer">
    <value>
      $FFFFFFEF
    </value>
  </const>
  <const name="wdStyleIndex8" type="Integer">
    <value>
      $FFFFFFEE
    </value>
  </const>
  <const name="wdStyleIndex9" type="Integer">
    <value>
      $FFFFFFED
    </value>
  </const>
  <const name="wdStyleTOC1" type="Integer">
    <value>
      $FFFFFFEC
    </value>
  </const>
  <const name="wdStyleTOC2" type="Integer">
    <value>
      $FFFFFFEB
    </value>
  </const>
  <const name="wdStyleTOC3" type="Integer">
    <value>
      $FFFFFFEA
    </value>
  </const>
  <const name="wdStyleTOC4" type="Integer">
    <value>
      $FFFFFFE9
    </value>
  </const>
  <const name="wdStyleTOC5" type="Integer">
    <value>
      $FFFFFFE8
    </value>
  </const>
  <const name="wdStyleTOC6" type="Integer">
    <value>
      $FFFFFFE7
    </value>
  </const>
  <const name="wdStyleTOC7" type="Integer">
    <value>
      $FFFFFFE6
    </value>
  </const>
  <const name="wdStyleTOC8" type="Integer">
    <value>
      $FFFFFFE5
    </value>
  </const>
  <const name="wdStyleTOC9" type="Integer">
    <value>
      $FFFFFFE4
    </value>
  </const>
  <const name="wdStyleNormalIndent" type="Integer">
    <value>
      $FFFFFFE3
    </value>
  </const>
  <const name="wdStyleFootnoteText" type="Integer">
    <value>
      $FFFFFFE2
    </value>
  </const>
  <const name="wdStyleCommentText" type="Integer">
    <value>
      $FFFFFFE1
    </value>
  </const>
  <const name="wdStyleHeader" type="Integer">
    <value>
      $FFFFFFE0
    </value>
  </const>
  <const name="wdStyleFooter" type="Integer">
    <value>
      $FFFFFFDF
    </value>
  </const>
  <const name="wdStyleIndexHeading" type="Integer">
    <value>
      $FFFFFFDE
    </value>
  </const>
  <const name="wdStyleCaption" type="Integer">
    <value>
      $FFFFFFDD
    </value>
  </const>
  <const name="wdStyleTableOfFigures" type="Integer">
    <value>
      $FFFFFFDC
    </value>
  </const>
  <const name="wdStyleFootnoteReference" type="Integer">
    <value>
      $FFFFFFD9
    </value>
  </const>
  <const name="wdStyleCommentReference" type="Integer">
    <value>
      $FFFFFFD8
    </value>
  </const>
  <const name="wdStyleLineNumber" type="Integer">
    <value>
      $FFFFFFD7
    </value>
  </const>
  <const name="wdStylePageNumber" type="Integer">
    <value>
      $FFFFFFD6
    </value>
  </const>
  <const name="wdStyleEndnoteReference" type="Integer">
    <value>
      $FFFFFFD5
    </value>
  </const>
  <const name="wdStyleEndnoteText" type="Integer">
    <value>
      $FFFFFFD4
    </value>
  </const>
  <const name="wdStyleTableOfAuthorities" type="Integer">
    <value>
      $FFFFFFD3
    </value>
  </const>
  <const name="wdStyleMacroText" type="Integer">
    <value>
      $FFFFFFD2
    </value>
  </const>
  <const name="wdStyleTOAHeading" type="Integer">
    <value>
      $FFFFFFD1
    </value>
  </const>
  <const name="wdStyleList" type="Integer">
    <value>
      $FFFFFFD0
    </value>
  </const>
  <const name="wdStyleListBullet" type="Integer">
    <value>
      $FFFFFFCF
    </value>
  </const>
  <const name="wdStyleListNumber" type="Integer">
    <value>
      $FFFFFFCE
    </value>
  </const>
  <const name="wdStyleList2" type="Integer">
    <value>
      $FFFFFFCD
    </value>
  </const>
  <const name="wdStyleList3" type="Integer">
    <value>
      $FFFFFFCC
    </value>
  </const>
  <const name="wdStyleList4" type="Integer">
    <value>
      $FFFFFFCB
    </value>
  </const>
  <const name="wdStyleList5" type="Integer">
    <value>
      $FFFFFFCA
    </value>
  </const>
  <const name="wdStyleListBullet2" type="Integer">
    <value>
      $FFFFFFC9
    </value>
  </const>
  <const name="wdStyleListBullet3" type="Integer">
    <value>
      $FFFFFFC8
    </value>
  </const>
  <const name="wdStyleListBullet4" type="Integer">
    <value>
      $FFFFFFC7
    </value>
  </const>
  <const name="wdStyleListBullet5" type="Integer">
    <value>
      $FFFFFFC6
    </value>
  </const>
  <const name="wdStyleListNumber2" type="Integer">
    <value>
      $FFFFFFC5
    </value>
  </const>
  <const name="wdStyleListNumber3" type="Integer">
    <value>
      $FFFFFFC4
    </value>
  </const>
  <const name="wdStyleListNumber4" type="Integer">
    <value>
      $FFFFFFC3
    </value>
  </const>
  <const name="wdStyleListNumber5" type="Integer">
    <value>
      $FFFFFFC2
    </value>
  </const>
  <const name="wdStyleTitle" type="Integer">
    <value>
      $FFFFFFC1
    </value>
  </const>
  <const name="wdStyleClosing" type="Integer">
    <value>
      $FFFFFFC0
    </value>
  </const>
  <const name="wdStyleSignature" type="Integer">
    <value>
      $FFFFFFBF
    </value>
  </const>
  <const name="wdStyleDefaultParagraphFont" type="Integer">
    <value>
      $FFFFFFBE
    </value>
  </const>
  <const name="wdStyleBodyTextIndent" type="Integer">
    <value>
      $FFFFFFBC
    </value>
  </const>
  <const name="wdStyleListContinue" type="Integer">
    <value>
      $FFFFFFBB
    </value>
  </const>
  <const name="wdStyleListContinue2" type="Integer">
    <value>
      $FFFFFFBA
    </value>
  </const>
  <const name="wdStyleListContinue3" type="Integer">
    <value>
      $FFFFFFB9
    </value>
  </const>
  <const name="wdStyleListContinue4" type="Integer">
    <value>
      $FFFFFFB8
    </value>
  </const>
  <const name="wdStyleListContinue5" type="Integer">
    <value>
      $FFFFFFB7
    </value>
  </const>
  <const name="wdStyleMessageHeader" type="Integer">
    <value>
      $FFFFFFB6
    </value>
  </const>
  <const name="wdStyleSubtitle" type="Integer">
    <value>
      $FFFFFFB5
    </value>
  </const>
  <const name="wdStyleSalutation" type="Integer">
    <value>
      $FFFFFFB4
    </value>
  </const>
  <const name="wdStyleDate" type="Integer">
    <value>
      $FFFFFFB3
    </value>
  </const>
  <const name="wdStyleBodyTextFirstIndent" type="Integer">
    <value>
      $FFFFFFB2
    </value>
  </const>
  <const name="wdStyleBodyTextFirstIndent2" type="Integer">
    <value>
      $FFFFFFB1
    </value>
  </const>
  <const name="wdStyleNoteHeading" type="Integer">
    <value>
      $FFFFFFB0
    </value>
  </const>
  <const name="wdStyleBodyText2" type="Integer">
    <value>
      $FFFFFFAF
    </value>
  </const>
  <const name="wdStyleBodyText3" type="Integer">
    <value>
      $FFFFFFAE
    </value>
  </const>
  <const name="wdStyleBodyTextIndent2" type="Integer">
    <value>
      $FFFFFFAD
    </value>
  </const>
  <const name="wdStyleBodyTextIndent3" type="Integer">
    <value>
      $FFFFFFAC
    </value>
  </const>
  <const name="wdStyleBlockQuotation" type="Integer">
    <value>
      $FFFFFFAB
    </value>
  </const>
  <const name="wdStyleHyperlink" type="Integer">
    <value>
      $FFFFFFAA
    </value>
  </const>
  <const name="wdStyleHyperlinkFollowed" type="Integer">
    <value>
      $FFFFFFA9
    </value>
  </const>
  <const name="wdStyleStrong" type="Integer">
    <value>
      $FFFFFFA8
    </value>
  </const>
  <const name="wdStyleEmphasis" type="Integer">
    <value>
      $FFFFFFA7
    </value>
  </const>
  <const name="wdStyleNavPane" type="Integer">
    <value>
      $FFFFFFA6
    </value>
  </const>
  <const name="wdStylePlainText" type="Integer">
    <value>
      $FFFFFFA5
    </value>
  </const>
  <type name="WdWordDialogTab" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdDialogToolsOptionsTabView" type="Integer">
    <value>
      $CC
    </value>
  </const>
  <const name="wdDialogToolsOptionsTabGeneral" type="Integer">
    <value>
      $CB
    </value>
  </const>
  <const name="wdDialogToolsOptionsTabEdit" type="Integer">
    <value>
      $E0
    </value>
  </const>
  <const name="wdDialogToolsOptionsTabPrint" type="Integer">
    <value>
      $D0
    </value>
  </const>
  <const name="wdDialogToolsOptionsTabSave" type="Integer">
    <value>
      $D1
    </value>
  </const>
  <const name="wdDialogToolsOptionsTabProofread" type="Integer">
    <value>
      $D3
    </value>
  </const>
  <const name="wdDialogToolsOptionsTabTrackChanges" type="Integer">
    <value>
      $182
    </value>
  </const>
  <const name="wdDialogToolsOptionsTabUserInfo" type="Integer">
    <value>
      $D5
    </value>
  </const>
  <const name="wdDialogToolsOptionsTabCompatibility" type="Integer">
    <value>
      $20D
    </value>
  </const>
  <const name="wdDialogToolsOptionsTabFileLocations" type="Integer">
    <value>
      $E1
    </value>
  </const>
  <const name="wdDialogFilePageSetupTabMargins" type="Integer">
    <value>
      $249F0
    </value>
  </const>
  <const name="wdDialogFilePageSetupTabPaperSize" type="Integer">
    <value>
      $249F1
    </value>
  </const>
  <const name="wdDialogFilePageSetupTabPaperSource" type="Integer">
    <value>
      $249F2
    </value>
  </const>
  <const name="wdDialogFilePageSetupTabLayout" type="Integer">
    <value>
      $249F3
    </value>
  </const>
  <const name="wdDialogInsertSymbolTabSymbols" type="Integer">
    <value>
      $30D40
    </value>
  </const>
  <const name="wdDialogInsertSymbolTabSpecialCharacters" type="Integer">
    <value>
      $30D41
    </value>
  </const>
  <const name="wdDialogNoteOptionsTabAllFootnotes" type="Integer">
    <value>
      $493E0
    </value>
  </const>
  <const name="wdDialogNoteOptionsTabAllEndnotes" type="Integer">
    <value>
      $493E1
    </value>
  </const>
  <const name="wdDialogInsertIndexAndTablesTabIndex" type="Integer">
    <value>
      $61A80
    </value>
  </const>
  <const name="wdDialogInsertIndexAndTablesTabTableOfContents" type="Integer">
    <value>
      $61A81
    </value>
  </const>
  <const name="wdDialogInsertIndexAndTablesTabTableOfFigures" type="Integer">
    <value>
      $61A82
    </value>
  </const>
  <const name="wdDialogInsertIndexAndTablesTabTableOfAuthorities" type="Integer">
    <value>
      $61A83
    </value>
  </const>
  <const name="wdDialogOrganizerTabStyles" type="Integer">
    <value>
      $7A120
    </value>
  </const>
  <const name="wdDialogOrganizerTabAutoText" type="Integer">
    <value>
      $7A121
    </value>
  </const>
  <const name="wdDialogOrganizerTabCommandBars" type="Integer">
    <value>
      $7A122
    </value>
  </const>
  <const name="wdDialogOrganizerTabMacros" type="Integer">
    <value>
      $7A123
    </value>
  </const>
  <const name="wdDialogFormatFontTabFont" type="Integer">
    <value>
      $927C0
    </value>
  </const>
  <const name="wdDialogFormatFontTabCharacterSpacing" type="Integer">
    <value>
      $927C1
    </value>
  </const>
  <const name="wdDialogFormatFontTabAnimation" type="Integer">
    <value>
      $927C2
    </value>
  </const>
  <const name="wdDialogFormatBordersAndShadingTabBorders" type="Integer">
    <value>
      $AAE60
    </value>
  </const>
  <const name="wdDialogFormatBordersAndShadingTabPageBorder" type="Integer">
    <value>
      $AAE61
    </value>
  </const>
  <const name="wdDialogFormatBordersAndShadingTabShading" type="Integer">
    <value>
      $AAE62
    </value>
  </const>
  <const name="wdDialogToolsEnvelopesAndLabelsTabEnvelopes" type="Integer">
    <value>
      $C3500
    </value>
  </const>
  <const name="wdDialogToolsEnvelopesAndLabelsTabLabels" type="Integer">
    <value>
      $C3501
    </value>
  </const>
  <const name="wdDialogFormatParagraphTabIndentsAndSpacing" type="Integer">
    <value>
      $F4240
    </value>
  </const>
  <const name="wdDialogFormatParagraphTabTextFlow" type="Integer">
    <value>
      $F4241
    </value>
  </const>
  <const name="wdDialogFormatDrawingObjectTabColorsAndLines" type="Integer">
    <value>
      $124F80
    </value>
  </const>
  <const name="wdDialogFormatDrawingObjectTabSize" type="Integer">
    <value>
      $124F81
    </value>
  </const>
  <const name="wdDialogFormatDrawingObjectTabPosition" type="Integer">
    <value>
      $124F82
    </value>
  </const>
  <const name="wdDialogFormatDrawingObjectTabWrapping" type="Integer">
    <value>
      $124F83
    </value>
  </const>
  <const name="wdDialogFormatDrawingObjectTabPicture" type="Integer">
    <value>
      $124F84
    </value>
  </const>
  <const name="wdDialogFormatDrawingObjectTabTextbox" type="Integer">
    <value>
      $124F85
    </value>
  </const>
  <const name="wdDialogToolsAutoCorrectExceptionsTabFirstLetter" type="Integer">
    <value>
      $155CC0
    </value>
  </const>
  <const name="wdDialogToolsAutoCorrectExceptionsTabInitialCaps" type="Integer">
    <value>
      $155CC1
    </value>
  </const>
  <const name="wdDialogFormatBulletsAndNumberingTabBulleted" type="Integer">
    <value>
      $16E360
    </value>
  </const>
  <const name="wdDialogFormatBulletsAndNumberingTabNumbered" type="Integer">
    <value>
      $16E361
    </value>
  </const>
  <const name="wdDialogFormatBulletsAndNumberingTabOutlineNumbered" type="Integer">
    <value>
      $16E362
    </value>
  </const>
  <const name="wdDialogLetterWizardTabLetterFormat" type="Integer">
    <value>
      $186A00
    </value>
  </const>
  <const name="wdDialogLetterWizardTabRecipientInfo" type="Integer">
    <value>
      $186A01
    </value>
  </const>
  <const name="wdDialogLetterWizardTabOtherElements" type="Integer">
    <value>
      $186A02
    </value>
  </const>
  <const name="wdDialogLetterWizardTabSenderInfo" type="Integer">
    <value>
      $186A03
    </value>
  </const>
  <const name="wdDialogToolsAutoManagerTabAutoCorrect" type="Integer">
    <value>
      $19F0A0
    </value>
  </const>
  <const name="wdDialogToolsAutoManagerTabAutoFormatAsYouType" type="Integer">
    <value>
      $19F0A1
    </value>
  </const>
  <const name="wdDialogToolsAutoManagerTabAutoText" type="Integer">
    <value>
      $19F0A2
    </value>
  </const>
  <const name="wdDialogToolsAutoManagerTabAutoFormat" type="Integer">
    <value>
      $19F0A3
    </value>
  </const>
  <type name="WdWordDialogTabHID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdDialogToolsOptionsTabTypography" type="Integer">
    <value>
      $2E3
    </value>
  </const>
  <const name="wdDialogToolsOptionsTabFuzzy" type="Integer">
    <value>
      $316
    </value>
  </const>
  <const name="wdDialogToolsOptionsTabHangulHanjaConversion" type="Integer">
    <value>
      $312
    </value>
  </const>
  <const name="wdDialogFilePageSetupTabCharsLines" type="Integer">
    <value>
      $249F4
    </value>
  </const>
  <const name="wdDialogFormatParagraphTabTeisai" type="Integer">
    <value>
      $F4242
    </value>
  </const>
  <const name="wdDialogToolsAutoCorrectExceptionsTabHangulAndAlphabet" type="Integer">
    <value>
      $155CC2
    </value>
  </const>
  <type name="WdWordDialog" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdDialogHelpAbout" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdDialogHelpWordPerfectHelp" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdDialogHelpWordPerfectHelpOptions" type="Integer">
    <value>
      $1FF
    </value>
  </const>
  <const name="wdDialogFormatChangeCase" type="Integer">
    <value>
      $142
    </value>
  </const>
  <const name="wdDialogToolsWordCount" type="Integer">
    <value>
      $E4
    </value>
  </const>
  <const name="wdDialogDocumentStatistics" type="Integer">
    <value>
      $4E
    </value>
  </const>
  <const name="wdDialogFileNew" type="Integer">
    <value>
      $4F
    </value>
  </const>
  <const name="wdDialogFileOpen" type="Integer">
    <value>
      $50
    </value>
  </const>
  <const name="wdDialogMailMergeOpenDataSource" type="Integer">
    <value>
      $51
    </value>
  </const>
  <const name="wdDialogMailMergeOpenHeaderSource" type="Integer">
    <value>
      $52
    </value>
  </const>
  <const name="wdDialogMailMergeUseAddressBook" type="Integer">
    <value>
      $30B
    </value>
  </const>
  <const name="wdDialogFileSaveAs" type="Integer">
    <value>
      $54
    </value>
  </const>
  <const name="wdDialogFileSummaryInfo" type="Integer">
    <value>
      $56
    </value>
  </const>
  <const name="wdDialogToolsTemplates" type="Integer">
    <value>
      $57
    </value>
  </const>
  <const name="wdDialogOrganizer" type="Integer">
    <value>
      $DE
    </value>
  </const>
  <const name="wdDialogFilePrint" type="Integer">
    <value>
      $58
    </value>
  </const>
  <const name="wdDialogMailMerge" type="Integer">
    <value>
      $2A4
    </value>
  </const>
  <const name="wdDialogMailMergeCheck" type="Integer">
    <value>
      $2A5
    </value>
  </const>
  <const name="wdDialogMailMergeQueryOptions" type="Integer">
    <value>
      $2A9
    </value>
  </const>
  <const name="wdDialogMailMergeFindRecord" type="Integer">
    <value>
      $239
    </value>
  </const>
  <const name="wdDialogMailMergeInsertIf" type="Integer">
    <value>
      $FD1
    </value>
  </const>
  <const name="wdDialogMailMergeInsertNextIf" type="Integer">
    <value>
      $FD5
    </value>
  </const>
  <const name="wdDialogMailMergeInsertSkipIf" type="Integer">
    <value>
      $FD7
    </value>
  </const>
  <const name="wdDialogMailMergeInsertFillIn" type="Integer">
    <value>
      $FD0
    </value>
  </const>
  <const name="wdDialogMailMergeInsertAsk" type="Integer">
    <value>
      $FCF
    </value>
  </const>
  <const name="wdDialogMailMergeInsertSet" type="Integer">
    <value>
      $FD6
    </value>
  </const>
  <const name="wdDialogMailMergeHelper" type="Integer">
    <value>
      $2A8
    </value>
  </const>
  <const name="wdDialogLetterWizard" type="Integer">
    <value>
      $335
    </value>
  </const>
  <const name="wdDialogFilePrintSetup" type="Integer">
    <value>
      $61
    </value>
  </const>
  <const name="wdDialogFileFind" type="Integer">
    <value>
      $63
    </value>
  </const>
  <const name="wdDialogMailMergeCreateDataSource" type="Integer">
    <value>
      $282
    </value>
  </const>
  <const name="wdDialogMailMergeCreateHeaderSource" type="Integer">
    <value>
      $283
    </value>
  </const>
  <const name="wdDialogEditPasteSpecial" type="Integer">
    <value>
      $6F
    </value>
  </const>
  <const name="wdDialogEditFind" type="Integer">
    <value>
      $70
    </value>
  </const>
  <const name="wdDialogEditReplace" type="Integer">
    <value>
      $75
    </value>
  </const>
  <const name="wdDialogEditGoToOld" type="Integer">
    <value>
      $32B
    </value>
  </const>
  <const name="wdDialogEditGoTo" type="Integer">
    <value>
      $380
    </value>
  </const>
  <const name="wdDialogCreateAutoText" type="Integer">
    <value>
      $368
    </value>
  </const>
  <const name="wdDialogEditAutoText" type="Integer">
    <value>
      $3D9
    </value>
  </const>
  <const name="wdDialogEditLinks" type="Integer">
    <value>
      $7C
    </value>
  </const>
  <const name="wdDialogEditObject" type="Integer">
    <value>
      $7D
    </value>
  </const>
  <const name="wdDialogConvertObject" type="Integer">
    <value>
      $188
    </value>
  </const>
  <const name="wdDialogTableToText" type="Integer">
    <value>
      $80
    </value>
  </const>
  <const name="wdDialogTextToTable" type="Integer">
    <value>
      $7F
    </value>
  </const>
  <const name="wdDialogTableInsertTable" type="Integer">
    <value>
      $81
    </value>
  </const>
  <const name="wdDialogTableInsertCells" type="Integer">
    <value>
      $82
    </value>
  </const>
  <const name="wdDialogTableInsertRow" type="Integer">
    <value>
      $83
    </value>
  </const>
  <const name="wdDialogTableDeleteCells" type="Integer">
    <value>
      $85
    </value>
  </const>
  <const name="wdDialogTableSplitCells" type="Integer">
    <value>
      $89
    </value>
  </const>
  <const name="wdDialogTableFormula" type="Integer">
    <value>
      $15C
    </value>
  </const>
  <const name="wdDialogTableAutoFormat" type="Integer">
    <value>
      $233
    </value>
  </const>
  <const name="wdDialogTableFormatCell" type="Integer">
    <value>
      $264
    </value>
  </const>
  <const name="wdDialogViewZoom" type="Integer">
    <value>
      $241
    </value>
  </const>
  <const name="wdDialogNewToolbar" type="Integer">
    <value>
      $24A
    </value>
  </const>
  <const name="wdDialogInsertBreak" type="Integer">
    <value>
      $9F
    </value>
  </const>
  <const name="wdDialogInsertFootnote" type="Integer">
    <value>
      $172
    </value>
  </const>
  <const name="wdDialogInsertSymbol" type="Integer">
    <value>
      $A2
    </value>
  </const>
  <const name="wdDialogInsertPicture" type="Integer">
    <value>
      $A3
    </value>
  </const>
  <const name="wdDialogInsertFile" type="Integer">
    <value>
      $A4
    </value>
  </const>
  <const name="wdDialogInsertDateTime" type="Integer">
    <value>
      $A5
    </value>
  </const>
  <const name="wdDialogInsertField" type="Integer">
    <value>
      $A6
    </value>
  </const>
  <const name="wdDialogInsertDatabase" type="Integer">
    <value>
      $155
    </value>
  </const>
  <const name="wdDialogInsertMergeField" type="Integer">
    <value>
      $A7
    </value>
  </const>
  <const name="wdDialogInsertBookmark" type="Integer">
    <value>
      $A8
    </value>
  </const>
  <const name="wdDialogMarkIndexEntry" type="Integer">
    <value>
      $A9
    </value>
  </const>
  <const name="wdDialogMarkCitation" type="Integer">
    <value>
      $1CF
    </value>
  </const>
  <const name="wdDialogEditTOACategory" type="Integer">
    <value>
      $271
    </value>
  </const>
  <const name="wdDialogInsertIndexAndTables" type="Integer">
    <value>
      $1D9
    </value>
  </const>
  <const name="wdDialogInsertIndex" type="Integer">
    <value>
      $AA
    </value>
  </const>
  <const name="wdDialogInsertTableOfContents" type="Integer">
    <value>
      $AB
    </value>
  </const>
  <const name="wdDialogMarkTableOfContentsEntry" type="Integer">
    <value>
      $1BA
    </value>
  </const>
  <const name="wdDialogInsertTableOfFigures" type="Integer">
    <value>
      $1D8
    </value>
  </const>
  <const name="wdDialogInsertTableOfAuthorities" type="Integer">
    <value>
      $1D7
    </value>
  </const>
  <const name="wdDialogInsertObject" type="Integer">
    <value>
      $AC
    </value>
  </const>
  <const name="wdDialogFormatCallout" type="Integer">
    <value>
      $262
    </value>
  </const>
  <const name="wdDialogDrawSnapToGrid" type="Integer">
    <value>
      $279
    </value>
  </const>
  <const name="wdDialogDrawAlign" type="Integer">
    <value>
      $27A
    </value>
  </const>
  <const name="wdDialogToolsEnvelopesAndLabels" type="Integer">
    <value>
      $25F
    </value>
  </const>
  <const name="wdDialogToolsCreateEnvelope" type="Integer">
    <value>
      $AD
    </value>
  </const>
  <const name="wdDialogToolsCreateLabels" type="Integer">
    <value>
      $1E9
    </value>
  </const>
  <const name="wdDialogToolsProtectDocument" type="Integer">
    <value>
      $1F7
    </value>
  </const>
  <const name="wdDialogToolsProtectSection" type="Integer">
    <value>
      $242
    </value>
  </const>
  <const name="wdDialogToolsUnprotectDocument" type="Integer">
    <value>
      $209
    </value>
  </const>
  <const name="wdDialogFormatFont" type="Integer">
    <value>
      $AE
    </value>
  </const>
  <const name="wdDialogFormatParagraph" type="Integer">
    <value>
      $AF
    </value>
  </const>
  <const name="wdDialogFormatSectionLayout" type="Integer">
    <value>
      $B0
    </value>
  </const>
  <const name="wdDialogFormatColumns" type="Integer">
    <value>
      $B1
    </value>
  </const>
  <const name="wdDialogFileDocumentLayout" type="Integer">
    <value>
      $B2
    </value>
  </const>
  <const name="wdDialogFileMacPageSetup" type="Integer">
    <value>
      $2AD
    </value>
  </const>
  <const name="wdDialogFilePrintOneCopy" type="Integer">
    <value>
      $1BD
    </value>
  </const>
  <const name="wdDialogFileMacPageSetupGX" type="Integer">
    <value>
      $1BC
    </value>
  </const>
  <const name="wdDialogFileMacCustomPageSetupGX" type="Integer">
    <value>
      $2E1
    </value>
  </const>
  <const name="wdDialogFilePageSetup" type="Integer">
    <value>
      $B2
    </value>
  </const>
  <const name="wdDialogFormatTabs" type="Integer">
    <value>
      $B3
    </value>
  </const>
  <const name="wdDialogFormatStyle" type="Integer">
    <value>
      $B4
    </value>
  </const>
  <const name="wdDialogFormatStyleGallery" type="Integer">
    <value>
      $1F9
    </value>
  </const>
  <const name="wdDialogFormatDefineStyleFont" type="Integer">
    <value>
      $B5
    </value>
  </const>
  <const name="wdDialogFormatDefineStylePara" type="Integer">
    <value>
      $B6
    </value>
  </const>
  <const name="wdDialogFormatDefineStyleTabs" type="Integer">
    <value>
      $B7
    </value>
  </const>
  <const name="wdDialogFormatDefineStyleFrame" type="Integer">
    <value>
      $B8
    </value>
  </const>
  <const name="wdDialogFormatDefineStyleBorders" type="Integer">
    <value>
      $B9
    </value>
  </const>
  <const name="wdDialogFormatDefineStyleLang" type="Integer">
    <value>
      $BA
    </value>
  </const>
  <const name="wdDialogFormatPicture" type="Integer">
    <value>
      $BB
    </value>
  </const>
  <const name="wdDialogToolsLanguage" type="Integer">
    <value>
      $BC
    </value>
  </const>
  <const name="wdDialogFormatBordersAndShading" type="Integer">
    <value>
      $BD
    </value>
  </const>
  <const name="wdDialogFormatDrawingObject" type="Integer">
    <value>
      $3C0
    </value>
  </const>
  <const name="wdDialogFormatFrame" type="Integer">
    <value>
      $BE
    </value>
  </const>
  <const name="wdDialogFormatDropCap" type="Integer">
    <value>
      $1E8
    </value>
  </const>
  <const name="wdDialogFormatBulletsAndNumbering" type="Integer">
    <value>
      $338
    </value>
  </const>
  <const name="wdDialogToolsHyphenation" type="Integer">
    <value>
      $C3
    </value>
  </const>
  <const name="wdDialogToolsBulletsNumbers" type="Integer">
    <value>
      $C4
    </value>
  </const>
  <const name="wdDialogToolsHighlightChanges" type="Integer">
    <value>
      $C5
    </value>
  </const>
  <const name="wdDialogToolsAcceptRejectChanges" type="Integer">
    <value>
      $1FA
    </value>
  </const>
  <const name="wdDialogToolsMergeDocuments" type="Integer">
    <value>
      $1B3
    </value>
  </const>
  <const name="wdDialogToolsCompareDocuments" type="Integer">
    <value>
      $C6
    </value>
  </const>
  <const name="wdDialogTableSort" type="Integer">
    <value>
      $C7
    </value>
  </const>
  <const name="wdDialogToolsCustomizeMenuBar" type="Integer">
    <value>
      $267
    </value>
  </const>
  <const name="wdDialogToolsCustomize" type="Integer">
    <value>
      $98
    </value>
  </const>
  <const name="wdDialogToolsCustomizeKeyboard" type="Integer">
    <value>
      $1B0
    </value>
  </const>
  <const name="wdDialogToolsCustomizeMenus" type="Integer">
    <value>
      $1B1
    </value>
  </const>
  <const name="wdDialogListCommands" type="Integer">
    <value>
      $2D3
    </value>
  </const>
  <const name="wdDialogToolsOptions" type="Integer">
    <value>
      $3CE
    </value>
  </const>
  <const name="wdDialogToolsOptionsGeneral" type="Integer">
    <value>
      $CB
    </value>
  </const>
  <const name="wdDialogToolsAdvancedSettings" type="Integer">
    <value>
      $CE
    </value>
  </const>
  <const name="wdDialogToolsOptionsCompatibility" type="Integer">
    <value>
      $20D
    </value>
  </const>
  <const name="wdDialogToolsOptionsPrint" type="Integer">
    <value>
      $D0
    </value>
  </const>
  <const name="wdDialogToolsOptionsSave" type="Integer">
    <value>
      $D1
    </value>
  </const>
  <const name="wdDialogToolsOptionsSpellingAndGrammar" type="Integer">
    <value>
      $D3
    </value>
  </const>
  <const name="wdDialogToolsSpellingAndGrammar" type="Integer">
    <value>
      $33C
    </value>
  </const>
  <const name="wdDialogToolsThesaurus" type="Integer">
    <value>
      $C2
    </value>
  </const>
  <const name="wdDialogToolsOptionsUserInfo" type="Integer">
    <value>
      $D5
    </value>
  </const>
  <const name="wdDialogToolsOptionsAutoFormat" type="Integer">
    <value>
      $3BF
    </value>
  </const>
  <const name="wdDialogToolsOptionsTrackChanges" type="Integer">
    <value>
      $182
    </value>
  </const>
  <const name="wdDialogToolsOptionsEdit" type="Integer">
    <value>
      $E0
    </value>
  </const>
  <const name="wdDialogToolsMacro" type="Integer">
    <value>
      $D7
    </value>
  </const>
  <const name="wdDialogInsertPageNumbers" type="Integer">
    <value>
      $126
    </value>
  </const>
  <const name="wdDialogFormatPageNumber" type="Integer">
    <value>
      $12A
    </value>
  </const>
  <const name="wdDialogNoteOptions" type="Integer">
    <value>
      $175
    </value>
  </const>
  <const name="wdDialogCopyFile" type="Integer">
    <value>
      $12C
    </value>
  </const>
  <const name="wdDialogFormatAddrFonts" type="Integer">
    <value>
      $67
    </value>
  </const>
  <const name="wdDialogFormatRetAddrFonts" type="Integer">
    <value>
      $DD
    </value>
  </const>
  <const name="wdDialogToolsOptionsFileLocations" type="Integer">
    <value>
      $E1
    </value>
  </const>
  <const name="wdDialogToolsCreateDirectory" type="Integer">
    <value>
      $341
    </value>
  </const>
  <const name="wdDialogUpdateTOC" type="Integer">
    <value>
      $14B
    </value>
  </const>
  <const name="wdDialogInsertFormField" type="Integer">
    <value>
      $1E3
    </value>
  </const>
  <const name="wdDialogFormFieldOptions" type="Integer">
    <value>
      $161
    </value>
  </const>
  <const name="wdDialogInsertCaption" type="Integer">
    <value>
      $165
    </value>
  </const>
  <const name="wdDialogInsertAutoCaption" type="Integer">
    <value>
      $167
    </value>
  </const>
  <const name="wdDialogInsertAddCaption" type="Integer">
    <value>
      $192
    </value>
  </const>
  <const name="wdDialogInsertCaptionNumbering" type="Integer">
    <value>
      $166
    </value>
  </const>
  <const name="wdDialogInsertCrossReference" type="Integer">
    <value>
      $16F
    </value>
  </const>
  <const name="wdDialogToolsManageFields" type="Integer">
    <value>
      $277
    </value>
  </const>
  <const name="wdDialogToolsAutoManager" type="Integer">
    <value>
      $393
    </value>
  </const>
  <const name="wdDialogToolsAutoCorrect" type="Integer">
    <value>
      $17A
    </value>
  </const>
  <const name="wdDialogToolsAutoCorrectExceptions" type="Integer">
    <value>
      $2FA
    </value>
  </const>
  <const name="wdDialogConnect" type="Integer">
    <value>
      $1A4
    </value>
  </const>
  <const name="wdDialogToolsOptionsView" type="Integer">
    <value>
      $CC
    </value>
  </const>
  <const name="wdDialogInsertSubdocument" type="Integer">
    <value>
      $247
    </value>
  </const>
  <const name="wdDialogFileRoutingSlip" type="Integer">
    <value>
      $270
    </value>
  </const>
  <const name="wdDialogFontSubstitution" type="Integer">
    <value>
      $245
    </value>
  </const>
  <const name="wdDialogEditCreatePublisher" type="Integer">
    <value>
      $2DC
    </value>
  </const>
  <const name="wdDialogEditSubscribeTo" type="Integer">
    <value>
      $2DD
    </value>
  </const>
  <const name="wdDialogEditPublishOptions" type="Integer">
    <value>
      $2DF
    </value>
  </const>
  <const name="wdDialogEditSubscribeOptions" type="Integer">
    <value>
      $2E0
    </value>
  </const>
  <const name="wdDialogControlRun" type="Integer">
    <value>
      $EB
    </value>
  </const>
  <const name="wdDialogFileVersions" type="Integer">
    <value>
      $3B1
    </value>
  </const>
  <const name="wdDialogToolsAutoSummarize" type="Integer">
    <value>
      $36A
    </value>
  </const>
  <const name="wdDialogFileSaveVersion" type="Integer">
    <value>
      $3EF
    </value>
  </const>
  <const name="wdDialogWindowActivate" type="Integer">
    <value>
      $DC
    </value>
  </const>
  <const name="wdDialogToolsMacroRecord" type="Integer">
    <value>
      $D6
    </value>
  </const>
  <const name="wdDialogToolsRevisions" type="Integer">
    <value>
      $C5
    </value>
  </const>
  <type name="WdWordDialogHID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdDialogToolsOptionsFuzzy" type="Integer">
    <value>
      $316
    </value>
  </const>
  <const name="wdDialogToolsOptionsTypography" type="Integer">
    <value>
      $2E3
    </value>
  </const>
  <const name="wdDialogToolsOptionsAutoFormatAsYouType" type="Integer">
    <value>
      $30A
    </value>
  </const>
  <type name="WdFieldKind" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdFieldKindNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdFieldKindHot" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdFieldKindWarm" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdFieldKindCold" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdTextFormFieldType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdRegularText" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdNumberText" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdDateText" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdCurrentDateText" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdCurrentTimeText" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdCalculationText" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="WdChevronConvertRule" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdNeverConvert" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdAlwaysConvert" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdAskToNotConvert" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdAskToConvert" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdMailMergeMainDocType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdNotAMergeDocument" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="wdFormLetters" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdMailingLabels" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdEnvelopes" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdCatalog" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdMailMergeState" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdNormalDocument" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdMainDocumentOnly" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdMainAndDataSource" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdMainAndHeader" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdMainAndSourceAndHeader" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdDataSource" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="WdMailMergeDestination" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdSendToNewDocument" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdSendToPrinter" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdSendToEmail" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdSendToFax" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdMailMergeActiveRecord" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdNoActiveRecord" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="wdNextRecord" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="wdPreviousRecord" type="Integer">
    <value>
      $FFFFFFFD
    </value>
  </const>
  <const name="wdFirstRecord" type="Integer">
    <value>
      $FFFFFFFC
    </value>
  </const>
  <const name="wdLastRecord" type="Integer">
    <value>
      $FFFFFFFB
    </value>
  </const>
  <type name="WdMailMergeDefaultRecord" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdDefaultFirstRecord" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdDefaultLastRecord" type="Integer">
    <value>
      $FFFFFFF0
    </value>
  </const>
  <type name="WdMailMergeDataSource" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdNoMergeInfo" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="wdMergeInfoFromWord" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdMergeInfoFromAccessDDE" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdMergeInfoFromExcelDDE" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdMergeInfoFromMSQueryDDE" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdMergeInfoFromODBC" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdMailMergeComparison" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdMergeIfEqual" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdMergeIfNotEqual" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdMergeIfLessThan" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdMergeIfGreaterThan" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdMergeIfLessThanOrEqual" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdMergeIfGreaterThanOrEqual" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdMergeIfIsBlank" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdMergeIfIsNotBlank" type="Integer">
    <value>
      $7
    </value>
  </const>
  <type name="WdBookmarkSortBy" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdSortByName" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdSortByLocation" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdWindowState" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdWindowStateNormal" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdWindowStateMaximize" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdWindowStateMinimize" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdPictureLinkType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdLinkNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdLinkDataInDoc" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdLinkDataOnDisk" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdLinkType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdLinkTypeOLE" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdLinkTypePicture" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdLinkTypeText" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdLinkTypeReference" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdLinkTypeInclude" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdLinkTypeImport" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdLinkTypeDDE" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdLinkTypeDDEAuto" type="Integer">
    <value>
      $7
    </value>
  </const>
  <type name="WdWindowType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdWindowDocument" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdWindowTemplate" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdViewType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdNormalView" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdOutlineView" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdPageView" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdPrintPreview" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdMasterView" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdOnlineView" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="WdSeekView" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdSeekMainDocument" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdSeekPrimaryHeader" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdSeekFirstPageHeader" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdSeekEvenPagesHeader" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdSeekPrimaryFooter" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdSeekFirstPageFooter" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdSeekEvenPagesFooter" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdSeekFootnotes" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdSeekEndnotes" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdSeekCurrentPageHeader" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdSeekCurrentPageFooter" type="Integer">
    <value>
      $A
    </value>
  </const>
  <type name="WdSpecialPane" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdPaneNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdPanePrimaryHeader" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdPaneFirstPageHeader" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdPaneEvenPagesHeader" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdPanePrimaryFooter" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdPaneFirstPageFooter" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdPaneEvenPagesFooter" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdPaneFootnotes" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdPaneEndnotes" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdPaneFootnoteContinuationNotice" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdPaneFootnoteContinuationSeparator" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdPaneFootnoteSeparator" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdPaneEndnoteContinuationNotice" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="wdPaneEndnoteContinuationSeparator" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="wdPaneEndnoteSeparator" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="wdPaneComments" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="wdPaneCurrentPageHeader" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="wdPaneCurrentPageFooter" type="Integer">
    <value>
      $11
    </value>
  </const>
  <type name="WdPageFit" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdPageFitNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdPageFitFullPage" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdPageFitBestFit" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdBrowseTarget" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdBrowsePage" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdBrowseSection" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdBrowseComment" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdBrowseFootnote" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdBrowseEndnote" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdBrowseField" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdBrowseTable" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdBrowseGraphic" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdBrowseHeading" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdBrowseEdit" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdBrowseFind" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdBrowseGoTo" type="Integer">
    <value>
      $C
    </value>
  </const>
  <type name="WdPaperTray" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdPrinterDefaultBin" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdPrinterUpperBin" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdPrinterOnlyBin" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdPrinterLowerBin" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdPrinterMiddleBin" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdPrinterManualFeed" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdPrinterEnvelopeFeed" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdPrinterManualEnvelopeFeed" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdPrinterAutomaticSheetFeed" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdPrinterTractorFeed" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdPrinterSmallFormatBin" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdPrinterLargeFormatBin" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdPrinterLargeCapacityBin" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdPrinterPaperCassette" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="wdPrinterFormSource" type="Integer">
    <value>
      $F
    </value>
  </const>
  <type name="WdOrientation" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdOrientPortrait" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdOrientLandscape" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdSelectionType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdNoSelection" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdSelectionIP" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdSelectionNormal" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdSelectionFrame" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdSelectionColumn" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdSelectionRow" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdSelectionBlock" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdSelectionInlineShape" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdSelectionShape" type="Integer">
    <value>
      $8
    </value>
  </const>
  <type name="WdCaptionLabelID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdCaptionFigure" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="wdCaptionTable" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="wdCaptionEquation" type="Integer">
    <value>
      $FFFFFFFD
    </value>
  </const>
  <type name="WdReferenceType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdRefTypeNumberedItem" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdRefTypeHeading" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdRefTypeBookmark" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdRefTypeFootnote" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdRefTypeEndnote" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdReferenceKind" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdContentText" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="wdNumberRelativeContext" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="wdNumberNoContext" type="Integer">
    <value>
      $FFFFFFFD
    </value>
  </const>
  <const name="wdNumberFullContext" type="Integer">
    <value>
      $FFFFFFFC
    </value>
  </const>
  <const name="wdEntireCaption" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdOnlyLabelAndNumber" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdOnlyCaptionText" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdFootnoteNumber" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdEndnoteNumber" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdPageNumber" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdPosition" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="wdFootnoteNumberFormatted" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="wdEndnoteNumberFormatted" type="Integer">
    <value>
      $11
    </value>
  </const>
  <type name="WdIndexFormat" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdIndexTemplate" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdIndexClassic" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdIndexFancy" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdIndexModern" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdIndexBulleted" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdIndexFormal" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdIndexSimple" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="WdIndexType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdIndexIndent" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdIndexRunin" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdRevisionsWrap" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdWrapNever" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdWrapAlways" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdWrapAsk" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdRevisionType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdNoRevision" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdRevisionInsert" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdRevisionDelete" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdRevisionProperty" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdRevisionParagraphNumber" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdRevisionDisplayField" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdRevisionReconcile" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdRevisionConflict" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdRevisionStyle" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdRevisionReplace" type="Integer">
    <value>
      $9
    </value>
  </const>
  <type name="WdRoutingSlipDelivery" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdOneAfterAnother" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdAllAtOnce" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdRoutingSlipStatus" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdNotYetRouted" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdRouteInProgress" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdRouteComplete" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdSectionStart" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdSectionContinuous" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdSectionNewColumn" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdSectionNewPage" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdSectionEvenPage" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdSectionOddPage" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdSaveOptions" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdDoNotSaveChanges" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdSaveChanges" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="wdPromptToSaveChanges" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <type name="WdDocumentKind" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdDocumentNotSpecified" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdDocumentLetter" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdDocumentEmail" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdDocumentType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdTypeDocument" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdTypeTemplate" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdOriginalFormat" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdWordDocument" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdOriginalDocumentFormat" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdPromptUser" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdRelocate" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdRelocateUp" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdRelocateDown" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdInsertedTextMark" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdInsertedTextMarkNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdInsertedTextMarkBold" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdInsertedTextMarkItalic" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdInsertedTextMarkUnderline" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdInsertedTextMarkDoubleUnderline" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdRevisedLinesMark" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdRevisedLinesMarkNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdRevisedLinesMarkLeftBorder" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdRevisedLinesMarkRightBorder" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdRevisedLinesMarkOutsideBorder" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdDeletedTextMark" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdDeletedTextMarkHidden" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdDeletedTextMarkStrikeThrough" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdDeletedTextMarkCaret" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdDeletedTextMarkPound" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdRevisedPropertiesMark" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdRevisedPropertiesMarkNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdRevisedPropertiesMarkBold" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdRevisedPropertiesMarkItalic" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdRevisedPropertiesMarkUnderline" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdRevisedPropertiesMarkDoubleUnderline" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdFieldShading" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdFieldShadingNever" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdFieldShadingAlways" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdFieldShadingWhenSelected" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdDefaultFilePath" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdDocumentsPath" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdPicturesPath" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdUserTemplatesPath" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdWorkgroupTemplatesPath" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdUserOptionsPath" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdAutoRecoverPath" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdToolsPath" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdTutorialPath" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdStartupPath" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdProgramPath" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdGraphicsFiltersPath" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdTextConvertersPath" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdProofingToolsPath" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="wdTempFilePath" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="wdCurrentFolderPath" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="wdStyleGalleryPath" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="wdBorderArtPath" type="Integer">
    <value>
      $13
    </value>
  </const>
  <type name="WdCompatibility" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdNoTabHangIndent" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdNoSpaceRaiseLower" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdPrintColBlack" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdWrapTrailSpaces" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdNoColumnBalance" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdConvMailMergeEsc" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdSuppressSpBfAfterPgBrk" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdSuppressTopSpacing" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdOrigWordTableRules" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdTransparentMetafiles" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdShowBreaksInFrames" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdSwapBordersFacingPages" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="wdLeaveBackslashAlone" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="wdExpandShiftReturn" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="wdDontULTrailSpace" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="wdDontBalanceSingleByteDoubleByteWidth" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="wdSuppressTopSpacingMac5" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="wdSpacingInWholePoints" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="wdPrintBodyTextBeforeHeader" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="wdNoLeading" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="wdNoSpaceForUL" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="wdMWSmallCaps" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="wdNoExtraLineSpacing" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="wdTruncateFontHeight" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="wdSubFontBySize" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="wdUsePrinterMetrics" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="wdWW6BorderRules" type="Integer">
    <value>
      $1B
    </value>
  </const>
  <const name="wdExactOnTop" type="Integer">
    <value>
      $1C
    </value>
  </const>
  <const name="wdSuppressBottomSpacing" type="Integer">
    <value>
      $1D
    </value>
  </const>
  <const name="wdWPSpaceWidth" type="Integer">
    <value>
      $1E
    </value>
  </const>
  <const name="wdWPJustification" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="wdLineWrapLikeWord6" type="Integer">
    <value>
      $20
    </value>
  </const>
  <type name="WdPaperSize" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdPaper10x14" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdPaper11x17" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdPaperLetter" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdPaperLetterSmall" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdPaperLegal" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdPaperExecutive" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdPaperA3" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdPaperA4" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdPaperA4Small" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdPaperA5" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdPaperB4" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdPaperB5" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdPaperCSheet" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="wdPaperDSheet" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="wdPaperESheet" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="wdPaperFanfoldLegalGerman" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="wdPaperFanfoldStdGerman" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="wdPaperFanfoldUS" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="wdPaperFolio" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="wdPaperLedger" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="wdPaperNote" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="wdPaperQuarto" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="wdPaperStatement" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="wdPaperTabloid" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="wdPaperEnvelope9" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="wdPaperEnvelope10" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="wdPaperEnvelope11" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="wdPaperEnvelope12" type="Integer">
    <value>
      $1B
    </value>
  </const>
  <const name="wdPaperEnvelope14" type="Integer">
    <value>
      $1C
    </value>
  </const>
  <const name="wdPaperEnvelopeB4" type="Integer">
    <value>
      $1D
    </value>
  </const>
  <const name="wdPaperEnvelopeB5" type="Integer">
    <value>
      $1E
    </value>
  </const>
  <const name="wdPaperEnvelopeB6" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="wdPaperEnvelopeC3" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="wdPaperEnvelopeC4" type="Integer">
    <value>
      $21
    </value>
  </const>
  <const name="wdPaperEnvelopeC5" type="Integer">
    <value>
      $22
    </value>
  </const>
  <const name="wdPaperEnvelopeC6" type="Integer">
    <value>
      $23
    </value>
  </const>
  <const name="wdPaperEnvelopeC65" type="Integer">
    <value>
      $24
    </value>
  </const>
  <const name="wdPaperEnvelopeDL" type="Integer">
    <value>
      $25
    </value>
  </const>
  <const name="wdPaperEnvelopeItaly" type="Integer">
    <value>
      $26
    </value>
  </const>
  <const name="wdPaperEnvelopeMonarch" type="Integer">
    <value>
      $27
    </value>
  </const>
  <const name="wdPaperEnvelopePersonal" type="Integer">
    <value>
      $28
    </value>
  </const>
  <const name="wdPaperCustom" type="Integer">
    <value>
      $29
    </value>
  </const>
  <type name="WdCustomLabelPageSize" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdCustomLabelLetter" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdCustomLabelLetterLS" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdCustomLabelA4" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdCustomLabelA4LS" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdCustomLabelA5" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdCustomLabelA5LS" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdCustomLabelB5" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdCustomLabelMini" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdCustomLabelFanfold" type="Integer">
    <value>
      $8
    </value>
  </const>
  <type name="WdProtectionType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdNoProtection" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="wdAllowOnlyRevisions" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdAllowOnlyComments" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdAllowOnlyFormFields" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdPartOfSpeech" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdAdjective" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdNoun" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdAdverb" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdVerb" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdSubscriberFormats" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdSubscriberBestFormat" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdSubscriberRTF" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdSubscriberText" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdSubscriberPict" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdEditionType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdPublisher" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdSubscriber" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdEditionOption" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdCancelPublisher" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdSendPublisher" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdSelectPublisher" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdAutomaticUpdate" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdManualUpdate" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdChangeAttributes" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdUpdateSubscriber" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdOpenSource" type="Integer">
    <value>
      $7
    </value>
  </const>
  <type name="WdRelativeHorizontalPosition" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdRelativeHorizontalPositionMargin" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdRelativeHorizontalPositionPage" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdRelativeHorizontalPositionColumn" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdRelativeVerticalPosition" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdRelativeVerticalPositionMargin" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdRelativeVerticalPositionPage" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdRelativeVerticalPositionParagraph" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdHelpType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdHelp" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdHelpAbout" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdHelpActiveWindow" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdHelpContents" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdHelpExamplesAndDemos" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdHelpIndex" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdHelpKeyboard" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdHelpPSSHelp" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdHelpQuickPreview" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdHelpSearch" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdHelpUsingHelp" type="Integer">
    <value>
      $A
    </value>
  </const>
  <type name="WdHelpTypeHID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdHelpIchitaro" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdHelpPE2" type="Integer">
    <value>
      $C
    </value>
  </const>
  <type name="WdKeyCategory" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdKeyCategoryNil" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="wdKeyCategoryDisable" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdKeyCategoryCommand" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdKeyCategoryMacro" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdKeyCategoryFont" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdKeyCategoryAutoText" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdKeyCategoryStyle" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdKeyCategorySymbol" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdKeyCategoryPrefix" type="Integer">
    <value>
      $7
    </value>
  </const>
  <type name="WdKey" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdNoKey" type="Integer">
    <value>
      $FF
    </value>
  </const>
  <const name="wdKeyShift" type="Integer">
    <value>
      $100
    </value>
  </const>
  <const name="wdKeyControl" type="Integer">
    <value>
      $200
    </value>
  </const>
  <const name="wdKeyCommand" type="Integer">
    <value>
      $200
    </value>
  </const>
  <const name="wdKeyAlt" type="Integer">
    <value>
      $400
    </value>
  </const>
  <const name="wdKeyOption" type="Integer">
    <value>
      $400
    </value>
  </const>
  <const name="wdKeyA" type="Integer">
    <value>
      $41
    </value>
  </const>
  <const name="wdKeyB" type="Integer">
    <value>
      $42
    </value>
  </const>
  <const name="wdKeyC" type="Integer">
    <value>
      $43
    </value>
  </const>
  <const name="wdKeyD" type="Integer">
    <value>
      $44
    </value>
  </const>
  <const name="wdKeyE" type="Integer">
    <value>
      $45
    </value>
  </const>
  <const name="wdKeyF" type="Integer">
    <value>
      $46
    </value>
  </const>
  <const name="wdKeyG" type="Integer">
    <value>
      $47
    </value>
  </const>
  <const name="wdKeyH" type="Integer">
    <value>
      $48
    </value>
  </const>
  <const name="wdKeyI" type="Integer">
    <value>
      $49
    </value>
  </const>
  <const name="wdKeyJ" type="Integer">
    <value>
      $4A
    </value>
  </const>
  <const name="wdKeyK" type="Integer">
    <value>
      $4B
    </value>
  </const>
  <const name="wdKeyL" type="Integer">
    <value>
      $4C
    </value>
  </const>
  <const name="wdKeyM" type="Integer">
    <value>
      $4D
    </value>
  </const>
  <const name="wdKeyN" type="Integer">
    <value>
      $4E
    </value>
  </const>
  <const name="wdKeyO" type="Integer">
    <value>
      $4F
    </value>
  </const>
  <const name="wdKeyP" type="Integer">
    <value>
      $50
    </value>
  </const>
  <const name="wdKeyQ" type="Integer">
    <value>
      $51
    </value>
  </const>
  <const name="wdKeyR" type="Integer">
    <value>
      $52
    </value>
  </const>
  <const name="wdKeyS" type="Integer">
    <value>
      $53
    </value>
  </const>
  <const name="wdKeyT" type="Integer">
    <value>
      $54
    </value>
  </const>
  <const name="wdKeyU" type="Integer">
    <value>
      $55
    </value>
  </const>
  <const name="wdKeyV" type="Integer">
    <value>
      $56
    </value>
  </const>
  <const name="wdKeyW" type="Integer">
    <value>
      $57
    </value>
  </const>
  <const name="wdKeyX" type="Integer">
    <value>
      $58
    </value>
  </const>
  <const name="wdKeyY" type="Integer">
    <value>
      $59
    </value>
  </const>
  <const name="wdKeyZ" type="Integer">
    <value>
      $5A
    </value>
  </const>
  <const name="wdKey0" type="Integer">
    <value>
      $30
    </value>
  </const>
  <const name="wdKey1" type="Integer">
    <value>
      $31
    </value>
  </const>
  <const name="wdKey2" type="Integer">
    <value>
      $32
    </value>
  </const>
  <const name="wdKey3" type="Integer">
    <value>
      $33
    </value>
  </const>
  <const name="wdKey4" type="Integer">
    <value>
      $34
    </value>
  </const>
  <const name="wdKey5" type="Integer">
    <value>
      $35
    </value>
  </const>
  <const name="wdKey6" type="Integer">
    <value>
      $36
    </value>
  </const>
  <const name="wdKey7" type="Integer">
    <value>
      $37
    </value>
  </const>
  <const name="wdKey8" type="Integer">
    <value>
      $38
    </value>
  </const>
  <const name="wdKey9" type="Integer">
    <value>
      $39
    </value>
  </const>
  <const name="wdKeyBackspace" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdKeyTab" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdKeyNumeric5Special" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="wdKeyReturn" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="wdKeyPause" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="wdKeyEsc" type="Integer">
    <value>
      $1B
    </value>
  </const>
  <const name="wdKeySpacebar" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="wdKeyPageUp" type="Integer">
    <value>
      $21
    </value>
  </const>
  <const name="wdKeyPageDown" type="Integer">
    <value>
      $22
    </value>
  </const>
  <const name="wdKeyEnd" type="Integer">
    <value>
      $23
    </value>
  </const>
  <const name="wdKeyHome" type="Integer">
    <value>
      $24
    </value>
  </const>
  <const name="wdKeyInsert" type="Integer">
    <value>
      $2D
    </value>
  </const>
  <const name="wdKeyDelete" type="Integer">
    <value>
      $2E
    </value>
  </const>
  <const name="wdKeyNumeric0" type="Integer">
    <value>
      $60
    </value>
  </const>
  <const name="wdKeyNumeric1" type="Integer">
    <value>
      $61
    </value>
  </const>
  <const name="wdKeyNumeric2" type="Integer">
    <value>
      $62
    </value>
  </const>
  <const name="wdKeyNumeric3" type="Integer">
    <value>
      $63
    </value>
  </const>
  <const name="wdKeyNumeric4" type="Integer">
    <value>
      $64
    </value>
  </const>
  <const name="wdKeyNumeric5" type="Integer">
    <value>
      $65
    </value>
  </const>
  <const name="wdKeyNumeric6" type="Integer">
    <value>
      $66
    </value>
  </const>
  <const name="wdKeyNumeric7" type="Integer">
    <value>
      $67
    </value>
  </const>
  <const name="wdKeyNumeric8" type="Integer">
    <value>
      $68
    </value>
  </const>
  <const name="wdKeyNumeric9" type="Integer">
    <value>
      $69
    </value>
  </const>
  <const name="wdKeyNumericMultiply" type="Integer">
    <value>
      $6A
    </value>
  </const>
  <const name="wdKeyNumericAdd" type="Integer">
    <value>
      $6B
    </value>
  </const>
  <const name="wdKeyNumericSubtract" type="Integer">
    <value>
      $6D
    </value>
  </const>
  <const name="wdKeyNumericDecimal" type="Integer">
    <value>
      $6E
    </value>
  </const>
  <const name="wdKeyNumericDivide" type="Integer">
    <value>
      $6F
    </value>
  </const>
  <const name="wdKeyF1" type="Integer">
    <value>
      $70
    </value>
  </const>
  <const name="wdKeyF2" type="Integer">
    <value>
      $71
    </value>
  </const>
  <const name="wdKeyF3" type="Integer">
    <value>
      $72
    </value>
  </const>
  <const name="wdKeyF4" type="Integer">
    <value>
      $73
    </value>
  </const>
  <const name="wdKeyF5" type="Integer">
    <value>
      $74
    </value>
  </const>
  <const name="wdKeyF6" type="Integer">
    <value>
      $75
    </value>
  </const>
  <const name="wdKeyF7" type="Integer">
    <value>
      $76
    </value>
  </const>
  <const name="wdKeyF8" type="Integer">
    <value>
      $77
    </value>
  </const>
  <const name="wdKeyF9" type="Integer">
    <value>
      $78
    </value>
  </const>
  <const name="wdKeyF10" type="Integer">
    <value>
      $79
    </value>
  </const>
  <const name="wdKeyF11" type="Integer">
    <value>
      $7A
    </value>
  </const>
  <const name="wdKeyF12" type="Integer">
    <value>
      $7B
    </value>
  </const>
  <const name="wdKeyF13" type="Integer">
    <value>
      $7C
    </value>
  </const>
  <const name="wdKeyF14" type="Integer">
    <value>
      $7D
    </value>
  </const>
  <const name="wdKeyF15" type="Integer">
    <value>
      $7E
    </value>
  </const>
  <const name="wdKeyF16" type="Integer">
    <value>
      $7F
    </value>
  </const>
  <const name="wdKeyScrollLock" type="Integer">
    <value>
      $91
    </value>
  </const>
  <const name="wdKeySemiColon" type="Integer">
    <value>
      $BA
    </value>
  </const>
  <const name="wdKeyEquals" type="Integer">
    <value>
      $BB
    </value>
  </const>
  <const name="wdKeyComma" type="Integer">
    <value>
      $BC
    </value>
  </const>
  <const name="wdKeyHyphen" type="Integer">
    <value>
      $BD
    </value>
  </const>
  <const name="wdKeyPeriod" type="Integer">
    <value>
      $BE
    </value>
  </const>
  <const name="wdKeySlash" type="Integer">
    <value>
      $BF
    </value>
  </const>
  <const name="wdKeyBackSingleQuote" type="Integer">
    <value>
      $C0
    </value>
  </const>
  <const name="wdKeyOpenSquareBrace" type="Integer">
    <value>
      $DB
    </value>
  </const>
  <const name="wdKeyBackSlash" type="Integer">
    <value>
      $DC
    </value>
  </const>
  <const name="wdKeyCloseSquareBrace" type="Integer">
    <value>
      $DD
    </value>
  </const>
  <const name="wdKeySingleQuote" type="Integer">
    <value>
      $DE
    </value>
  </const>
  <type name="WdOLEType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdOLELink" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdOLEEmbed" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdOLEControl" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdOLEVerb" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdOLEVerbPrimary" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdOLEVerbShow" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="wdOLEVerbOpen" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="wdOLEVerbHide" type="Integer">
    <value>
      $FFFFFFFD
    </value>
  </const>
  <const name="wdOLEVerbUIActivate" type="Integer">
    <value>
      $FFFFFFFC
    </value>
  </const>
  <const name="wdOLEVerbInPlaceActivate" type="Integer">
    <value>
      $FFFFFFFB
    </value>
  </const>
  <const name="wdOLEVerbDiscardUndoState" type="Integer">
    <value>
      $FFFFFFFA
    </value>
  </const>
  <type name="WdOLEPlacement" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdInLine" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdFloatOverText" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdEnvelopeOrientation" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdLeftPortrait" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdCenterPortrait" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdRightPortrait" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdLeftLandscape" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdCenterLandscape" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdRightLandscape" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdLeftClockwise" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdCenterClockwise" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdRightClockwise" type="Integer">
    <value>
      $8
    </value>
  </const>
  <type name="WdLetterStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdFullBlock" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdModifiedBlock" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdSemiBlock" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdLetterheadLocation" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdLetterTop" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdLetterBottom" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdLetterLeft" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdLetterRight" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdSalutationType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdSalutationInformal" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdSalutationFormal" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdSalutationBusiness" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdSalutationOther" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdSalutationGender" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdGenderFemale" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdGenderMale" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdGenderNeutral" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdGenderUnknown" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdMovementType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdMove" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdExtend" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdConstants" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdUndefined" type="Integer">
    <value>
      $98967F
    </value>
  </const>
  <const name="wdToggle" type="Integer">
    <value>
      $98967E
    </value>
  </const>
  <const name="wdForward" type="Integer">
    <value>
      $3FFFFFFF
    </value>
  </const>
  <const name="wdBackward" type="Integer">
    <value>
      $C0000001
    </value>
  </const>
  <const name="wdAutoPosition" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdFirst" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdCreatorCode" type="Integer">
    <value>
      $4D535744
    </value>
  </const>
  <type name="WdPasteDataType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdPasteOLEObject" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdPasteRTF" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdPasteText" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdPasteMetafilePicture" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdPasteBitmap" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdPasteDeviceIndependentBitmap" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdPasteHyperlink" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdPasteShape" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdPasteEnhancedMetafile" type="Integer">
    <value>
      $9
    </value>
  </const>
  <type name="WdPrintOutItem" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdPrintDocumentContent" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdPrintProperties" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdPrintComments" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdPrintStyles" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdPrintAutoTextEntries" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdPrintKeyAssignments" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdPrintEnvelope" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="WdPrintOutPages" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdPrintAllPages" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdPrintOddPagesOnly" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdPrintEvenPagesOnly" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdPrintOutRange" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdPrintAllDocument" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdPrintSelection" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdPrintCurrentPage" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdPrintFromTo" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdPrintRangeOfPages" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdDictionaryType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdSpelling" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdGrammar" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdThesaurus" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdHyphenation" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdSpellingComplete" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdSpellingCustom" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdSpellingLegal" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdSpellingMedical" type="Integer">
    <value>
      $7
    </value>
  </const>
  <type name="WdDictionaryTypeHID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdHangulHanjaConversion" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdHangulHanjaConversionCustom" type="Integer">
    <value>
      $9
    </value>
  </const>
  <type name="WdSpellingWordType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdSpellword" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdWildcard" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdAnagram" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdSpellingErrorType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdSpellingCorrect" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdSpellingNotInDictionary" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdSpellingCapitalization" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdProofreadingErrorType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdSpellingError" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdGrammaticalError" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdInlineShapeType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdInlineShapeEmbeddedOLEObject" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdInlineShapeLinkedOLEObject" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdInlineShapePicture" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdInlineShapeLinkedPicture" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdInlineShapeOLEControlObject" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="WdArrangeStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdTiled" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdIcons" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdSelectionFlags" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdSelStartActive" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdSelAtEOL" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdSelOvertype" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdSelActive" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdSelReplace" type="Integer">
    <value>
      $10
    </value>
  </const>
  <type name="WdAutoVersions" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdAutoVersionOff" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdAutoVersionOnClose" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdOrganizerObject" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdOrganizerObjectStyles" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdOrganizerObjectAutoText" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdOrganizerObjectCommandBars" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdOrganizerObjectProjectItems" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdFindMatch" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdMatchParagraphMark" type="Integer">
    <value>
      $1000F
    </value>
  </const>
  <const name="wdMatchTabCharacter" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdMatchCommentMark" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdMatchAnyCharacter" type="Integer">
    <value>
      $1003F
    </value>
  </const>
  <const name="wdMatchAnyDigit" type="Integer">
    <value>
      $1001F
    </value>
  </const>
  <const name="wdMatchAnyLetter" type="Integer">
    <value>
      $1002F
    </value>
  </const>
  <const name="wdMatchCaretCharacter" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdMatchColumnBreak" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="wdMatchEmDash" type="Integer">
    <value>
      $2014
    </value>
  </const>
  <const name="wdMatchEnDash" type="Integer">
    <value>
      $2013
    </value>
  </const>
  <const name="wdMatchEndnoteMark" type="Integer">
    <value>
      $10013
    </value>
  </const>
  <const name="wdMatchField" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="wdMatchFootnoteMark" type="Integer">
    <value>
      $10012
    </value>
  </const>
  <const name="wdMatchGraphic" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdMatchManualLineBreak" type="Integer">
    <value>
      $1000F
    </value>
  </const>
  <const name="wdMatchManualPageBreak" type="Integer">
    <value>
      $1001C
    </value>
  </const>
  <const name="wdMatchNonbreakingHyphen" type="Integer">
    <value>
      $1E
    </value>
  </const>
  <const name="wdMatchNonbreakingSpace" type="Integer">
    <value>
      $A0
    </value>
  </const>
  <const name="wdMatchOptionalHyphen" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="wdMatchSectionBreak" type="Integer">
    <value>
      $1002C
    </value>
  </const>
  <const name="wdMatchWhiteSpace" type="Integer">
    <value>
      $10077
    </value>
  </const>
  <type name="WdFindWrap" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdFindStop" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdFindContinue" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdFindAsk" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdInformation" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdActiveEndAdjustedPageNumber" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdActiveEndSectionNumber" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdActiveEndPageNumber" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdNumberOfPagesInDocument" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdHorizontalPositionRelativeToPage" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdVerticalPositionRelativeToPage" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdHorizontalPositionRelativeToTextBoundary" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdVerticalPositionRelativeToTextBoundary" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdFirstCharacterColumnNumber" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdFirstCharacterLineNumber" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdFrameIsSelected" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdWithInTable" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="wdStartOfRangeRowNumber" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="wdEndOfRangeRowNumber" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="wdMaximumNumberOfRows" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="wdStartOfRangeColumnNumber" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="wdEndOfRangeColumnNumber" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="wdMaximumNumberOfColumns" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="wdZoomPercentage" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="wdSelectionMode" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="wdCapsLock" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="wdNumLock" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="wdOverType" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="wdRevisionMarking" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="wdInFootnoteEndnotePane" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="wdInCommentPane" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="wdInHeaderFooter" type="Integer">
    <value>
      $1C
    </value>
  </const>
  <const name="wdAtEndOfRowMarker" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="wdReferenceOfType" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="wdHeaderFooterType" type="Integer">
    <value>
      $21
    </value>
  </const>
  <const name="wdInMasterDocument" type="Integer">
    <value>
      $22
    </value>
  </const>
  <const name="wdInFootnote" type="Integer">
    <value>
      $23
    </value>
  </const>
  <const name="wdInEndnote" type="Integer">
    <value>
      $24
    </value>
  </const>
  <const name="wdInWordMail" type="Integer">
    <value>
      $25
    </value>
  </const>
  <const name="wdInClipboard" type="Integer">
    <value>
      $26
    </value>
  </const>
  <type name="WdWrapType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdWrapSquare" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdWrapTight" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdWrapThrough" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdWrapNone" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdWrapTopBottom" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdWrapSideType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdWrapBoth" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdWrapLeft" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdWrapRight" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdWrapLargest" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdOutlineLevel" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdOutlineLevel1" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdOutlineLevel2" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdOutlineLevel3" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdOutlineLevel4" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdOutlineLevel5" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdOutlineLevel6" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdOutlineLevel7" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdOutlineLevel8" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdOutlineLevel9" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdOutlineLevelBodyText" type="Integer">
    <value>
      $A
    </value>
  </const>
  <type name="WdTextOrientation" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdTextOrientationHorizontal" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdTextOrientationUpward" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdTextOrientationDownward" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="WdTextOrientationHID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdTextOrientationVerticalFarEast" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdTextOrientationHorizontalRotatedFarEast" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="WdPageBorderArt" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdArtApples" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdArtMapleMuffins" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="wdArtCakeSlice" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="wdArtCandyCorn" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="wdArtIceCreamCones" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="wdArtChampagneBottle" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="wdArtPartyGlass" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="wdArtChristmasTree" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="wdArtTrees" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="wdArtPalmsColor" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="wdArtBalloons3Colors" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="wdArtBalloonsHotAir" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="wdArtPartyFavor" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="wdArtConfettiStreamers" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="wdArtHearts" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="wdArtHeartBalloon" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="wdArtStars3D" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="wdArtStarsShadowed" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="wdArtStars" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="wdArtSun" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="wdArtEarth2" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="wdArtEarth1" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="wdArtPeopleHats" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="wdArtSombrero" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="wdArtPencils" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="wdArtPackages" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="wdArtClocks" type="Integer">
    <value>
      $1B
    </value>
  </const>
  <const name="wdArtFirecrackers" type="Integer">
    <value>
      $1C
    </value>
  </const>
  <const name="wdArtRings" type="Integer">
    <value>
      $1D
    </value>
  </const>
  <const name="wdArtMapPins" type="Integer">
    <value>
      $1E
    </value>
  </const>
  <const name="wdArtConfetti" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="wdArtCreaturesButterfly" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="wdArtCreaturesLadyBug" type="Integer">
    <value>
      $21
    </value>
  </const>
  <const name="wdArtCreaturesFish" type="Integer">
    <value>
      $22
    </value>
  </const>
  <const name="wdArtBirdsFlight" type="Integer">
    <value>
      $23
    </value>
  </const>
  <const name="wdArtScaredCat" type="Integer">
    <value>
      $24
    </value>
  </const>
  <const name="wdArtBats" type="Integer">
    <value>
      $25
    </value>
  </const>
  <const name="wdArtFlowersRoses" type="Integer">
    <value>
      $26
    </value>
  </const>
  <const name="wdArtFlowersRedRose" type="Integer">
    <value>
      $27
    </value>
  </const>
  <const name="wdArtPoinsettias" type="Integer">
    <value>
      $28
    </value>
  </const>
  <const name="wdArtHolly" type="Integer">
    <value>
      $29
    </value>
  </const>
  <const name="wdArtFlowersTiny" type="Integer">
    <value>
      $2A
    </value>
  </const>
  <const name="wdArtFlowersPansy" type="Integer">
    <value>
      $2B
    </value>
  </const>
  <const name="wdArtFlowersModern2" type="Integer">
    <value>
      $2C
    </value>
  </const>
  <const name="wdArtFlowersModern1" type="Integer">
    <value>
      $2D
    </value>
  </const>
  <const name="wdArtWhiteFlowers" type="Integer">
    <value>
      $2E
    </value>
  </const>
  <const name="wdArtVine" type="Integer">
    <value>
      $2F
    </value>
  </const>
  <const name="wdArtFlowersDaisies" type="Integer">
    <value>
      $30
    </value>
  </const>
  <const name="wdArtFlowersBlockPrint" type="Integer">
    <value>
      $31
    </value>
  </const>
  <const name="wdArtDecoArchColor" type="Integer">
    <value>
      $32
    </value>
  </const>
  <const name="wdArtFans" type="Integer">
    <value>
      $33
    </value>
  </const>
  <const name="wdArtFilm" type="Integer">
    <value>
      $34
    </value>
  </const>
  <const name="wdArtLightning1" type="Integer">
    <value>
      $35
    </value>
  </const>
  <const name="wdArtCompass" type="Integer">
    <value>
      $36
    </value>
  </const>
  <const name="wdArtDoubleD" type="Integer">
    <value>
      $37
    </value>
  </const>
  <const name="wdArtClassicalWave" type="Integer">
    <value>
      $38
    </value>
  </const>
  <const name="wdArtShadowedSquares" type="Integer">
    <value>
      $39
    </value>
  </const>
  <const name="wdArtTwistedLines1" type="Integer">
    <value>
      $3A
    </value>
  </const>
  <const name="wdArtWaveline" type="Integer">
    <value>
      $3B
    </value>
  </const>
  <const name="wdArtQuadrants" type="Integer">
    <value>
      $3C
    </value>
  </const>
  <const name="wdArtCheckedBarColor" type="Integer">
    <value>
      $3D
    </value>
  </const>
  <const name="wdArtSwirligig" type="Integer">
    <value>
      $3E
    </value>
  </const>
  <const name="wdArtPushPinNote1" type="Integer">
    <value>
      $3F
    </value>
  </const>
  <const name="wdArtPushPinNote2" type="Integer">
    <value>
      $40
    </value>
  </const>
  <const name="wdArtPumpkin1" type="Integer">
    <value>
      $41
    </value>
  </const>
  <const name="wdArtEggsBlack" type="Integer">
    <value>
      $42
    </value>
  </const>
  <const name="wdArtCup" type="Integer">
    <value>
      $43
    </value>
  </const>
  <const name="wdArtHeartGray" type="Integer">
    <value>
      $44
    </value>
  </const>
  <const name="wdArtGingerbreadMan" type="Integer">
    <value>
      $45
    </value>
  </const>
  <const name="wdArtBabyPacifier" type="Integer">
    <value>
      $46
    </value>
  </const>
  <const name="wdArtBabyRattle" type="Integer">
    <value>
      $47
    </value>
  </const>
  <const name="wdArtCabins" type="Integer">
    <value>
      $48
    </value>
  </const>
  <const name="wdArtHouseFunky" type="Integer">
    <value>
      $49
    </value>
  </const>
  <const name="wdArtStarsBlack" type="Integer">
    <value>
      $4A
    </value>
  </const>
  <const name="wdArtSnowflakes" type="Integer">
    <value>
      $4B
    </value>
  </const>
  <const name="wdArtSnowflakeFancy" type="Integer">
    <value>
      $4C
    </value>
  </const>
  <const name="wdArtSkyrocket" type="Integer">
    <value>
      $4D
    </value>
  </const>
  <const name="wdArtSeattle" type="Integer">
    <value>
      $4E
    </value>
  </const>
  <const name="wdArtMusicNotes" type="Integer">
    <value>
      $4F
    </value>
  </const>
  <const name="wdArtPalmsBlack" type="Integer">
    <value>
      $50
    </value>
  </const>
  <const name="wdArtMapleLeaf" type="Integer">
    <value>
      $51
    </value>
  </const>
  <const name="wdArtPaperClips" type="Integer">
    <value>
      $52
    </value>
  </const>
  <const name="wdArtShorebirdTracks" type="Integer">
    <value>
      $53
    </value>
  </const>
  <const name="wdArtPeople" type="Integer">
    <value>
      $54
    </value>
  </const>
  <const name="wdArtPeopleWaving" type="Integer">
    <value>
      $55
    </value>
  </const>
  <const name="wdArtEclipsingSquares2" type="Integer">
    <value>
      $56
    </value>
  </const>
  <const name="wdArtHypnotic" type="Integer">
    <value>
      $57
    </value>
  </const>
  <const name="wdArtDiamondsGray" type="Integer">
    <value>
      $58
    </value>
  </const>
  <const name="wdArtDecoArch" type="Integer">
    <value>
      $59
    </value>
  </const>
  <const name="wdArtDecoBlocks" type="Integer">
    <value>
      $5A
    </value>
  </const>
  <const name="wdArtCirclesLines" type="Integer">
    <value>
      $5B
    </value>
  </const>
  <const name="wdArtPapyrus" type="Integer">
    <value>
      $5C
    </value>
  </const>
  <const name="wdArtWoodwork" type="Integer">
    <value>
      $5D
    </value>
  </const>
  <const name="wdArtWeavingBraid" type="Integer">
    <value>
      $5E
    </value>
  </const>
  <const name="wdArtWeavingRibbon" type="Integer">
    <value>
      $5F
    </value>
  </const>
  <const name="wdArtWeavingAngles" type="Integer">
    <value>
      $60
    </value>
  </const>
  <const name="wdArtArchedScallops" type="Integer">
    <value>
      $61
    </value>
  </const>
  <const name="wdArtSafari" type="Integer">
    <value>
      $62
    </value>
  </const>
  <const name="wdArtCelticKnotwork" type="Integer">
    <value>
      $63
    </value>
  </const>
  <const name="wdArtCrazyMaze" type="Integer">
    <value>
      $64
    </value>
  </const>
  <const name="wdArtEclipsingSquares1" type="Integer">
    <value>
      $65
    </value>
  </const>
  <const name="wdArtBirds" type="Integer">
    <value>
      $66
    </value>
  </const>
  <const name="wdArtFlowersTeacup" type="Integer">
    <value>
      $67
    </value>
  </const>
  <const name="wdArtNorthwest" type="Integer">
    <value>
      $68
    </value>
  </const>
  <const name="wdArtSouthwest" type="Integer">
    <value>
      $69
    </value>
  </const>
  <const name="wdArtTribal6" type="Integer">
    <value>
      $6A
    </value>
  </const>
  <const name="wdArtTribal4" type="Integer">
    <value>
      $6B
    </value>
  </const>
  <const name="wdArtTribal3" type="Integer">
    <value>
      $6C
    </value>
  </const>
  <const name="wdArtTribal2" type="Integer">
    <value>
      $6D
    </value>
  </const>
  <const name="wdArtTribal5" type="Integer">
    <value>
      $6E
    </value>
  </const>
  <const name="wdArtXIllusions" type="Integer">
    <value>
      $6F
    </value>
  </const>
  <const name="wdArtZanyTriangles" type="Integer">
    <value>
      $70
    </value>
  </const>
  <const name="wdArtPyramids" type="Integer">
    <value>
      $71
    </value>
  </const>
  <const name="wdArtPyramidsAbove" type="Integer">
    <value>
      $72
    </value>
  </const>
  <const name="wdArtConfettiGrays" type="Integer">
    <value>
      $73
    </value>
  </const>
  <const name="wdArtConfettiOutline" type="Integer">
    <value>
      $74
    </value>
  </const>
  <const name="wdArtConfettiWhite" type="Integer">
    <value>
      $75
    </value>
  </const>
  <const name="wdArtMosaic" type="Integer">
    <value>
      $76
    </value>
  </const>
  <const name="wdArtLightning2" type="Integer">
    <value>
      $77
    </value>
  </const>
  <const name="wdArtHeebieJeebies" type="Integer">
    <value>
      $78
    </value>
  </const>
  <const name="wdArtLightBulb" type="Integer">
    <value>
      $79
    </value>
  </const>
  <const name="wdArtGradient" type="Integer">
    <value>
      $7A
    </value>
  </const>
  <const name="wdArtTriangleParty" type="Integer">
    <value>
      $7B
    </value>
  </const>
  <const name="wdArtTwistedLines2" type="Integer">
    <value>
      $7C
    </value>
  </const>
  <const name="wdArtMoons" type="Integer">
    <value>
      $7D
    </value>
  </const>
  <const name="wdArtOvals" type="Integer">
    <value>
      $7E
    </value>
  </const>
  <const name="wdArtDoubleDiamonds" type="Integer">
    <value>
      $7F
    </value>
  </const>
  <const name="wdArtChainLink" type="Integer">
    <value>
      $80
    </value>
  </const>
  <const name="wdArtTriangles" type="Integer">
    <value>
      $81
    </value>
  </const>
  <const name="wdArtTribal1" type="Integer">
    <value>
      $82
    </value>
  </const>
  <const name="wdArtMarqueeToothed" type="Integer">
    <value>
      $83
    </value>
  </const>
  <const name="wdArtSharksTeeth" type="Integer">
    <value>
      $84
    </value>
  </const>
  <const name="wdArtSawtooth" type="Integer">
    <value>
      $85
    </value>
  </const>
  <const name="wdArtSawtoothGray" type="Integer">
    <value>
      $86
    </value>
  </const>
  <const name="wdArtPostageStamp" type="Integer">
    <value>
      $87
    </value>
  </const>
  <const name="wdArtWeavingStrips" type="Integer">
    <value>
      $88
    </value>
  </const>
  <const name="wdArtZigZag" type="Integer">
    <value>
      $89
    </value>
  </const>
  <const name="wdArtCrossStitch" type="Integer">
    <value>
      $8A
    </value>
  </const>
  <const name="wdArtGems" type="Integer">
    <value>
      $8B
    </value>
  </const>
  <const name="wdArtCirclesRectangles" type="Integer">
    <value>
      $8C
    </value>
  </const>
  <const name="wdArtCornerTriangles" type="Integer">
    <value>
      $8D
    </value>
  </const>
  <const name="wdArtCreaturesInsects" type="Integer">
    <value>
      $8E
    </value>
  </const>
  <const name="wdArtZigZagStitch" type="Integer">
    <value>
      $8F
    </value>
  </const>
  <const name="wdArtCheckered" type="Integer">
    <value>
      $90
    </value>
  </const>
  <const name="wdArtCheckedBarBlack" type="Integer">
    <value>
      $91
    </value>
  </const>
  <const name="wdArtMarquee" type="Integer">
    <value>
      $92
    </value>
  </const>
  <const name="wdArtBasicWhiteDots" type="Integer">
    <value>
      $93
    </value>
  </const>
  <const name="wdArtBasicWideMidline" type="Integer">
    <value>
      $94
    </value>
  </const>
  <const name="wdArtBasicWideOutline" type="Integer">
    <value>
      $95
    </value>
  </const>
  <const name="wdArtBasicWideInline" type="Integer">
    <value>
      $96
    </value>
  </const>
  <const name="wdArtBasicThinLines" type="Integer">
    <value>
      $97
    </value>
  </const>
  <const name="wdArtBasicWhiteDashes" type="Integer">
    <value>
      $98
    </value>
  </const>
  <const name="wdArtBasicWhiteSquares" type="Integer">
    <value>
      $99
    </value>
  </const>
  <const name="wdArtBasicBlackSquares" type="Integer">
    <value>
      $9A
    </value>
  </const>
  <const name="wdArtBasicBlackDashes" type="Integer">
    <value>
      $9B
    </value>
  </const>
  <const name="wdArtBasicBlackDots" type="Integer">
    <value>
      $9C
    </value>
  </const>
  <const name="wdArtStarsTop" type="Integer">
    <value>
      $9D
    </value>
  </const>
  <const name="wdArtCertificateBanner" type="Integer">
    <value>
      $9E
    </value>
  </const>
  <const name="wdArtHandmade1" type="Integer">
    <value>
      $9F
    </value>
  </const>
  <const name="wdArtHandmade2" type="Integer">
    <value>
      $A0
    </value>
  </const>
  <const name="wdArtTornPaper" type="Integer">
    <value>
      $A1
    </value>
  </const>
  <const name="wdArtTornPaperBlack" type="Integer">
    <value>
      $A2
    </value>
  </const>
  <const name="wdArtCouponCutoutDashes" type="Integer">
    <value>
      $A3
    </value>
  </const>
  <const name="wdArtCouponCutoutDots" type="Integer">
    <value>
      $A4
    </value>
  </const>
  <type name="WdBorderDistanceFrom" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdBorderDistanceFromText" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdBorderDistanceFromPageEdge" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="WdReplace" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdReplaceNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdReplaceOne" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="wdReplaceAll" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="WdFontBias" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="wdFontBiasDontCare" type="Integer">
    <value>
      $FF
    </value>
  </const>
  <const name="wdFontBiasDefault" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="wdFontBiasFareast" type="Integer">
    <value>
      $1
    </value>
  </const>
  <interface name="WordGlobal" alias="Word97._Global" GUID="{000209B9-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Documents" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Documents" />
      </parameters>
    </function>
    <function name="Get_Windows" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Windows" />
      </parameters>
    </function>
    <function name="Get_ActiveDocument" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Document" />
      </parameters>
    </function>
    <function name="Get_ActiveWindow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Window" />
      </parameters>
    </function>
    <function name="Get_Selection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordSelection" />
      </parameters>
    </function>
    <function name="Get_WordBasic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_PrintPreview" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintPreview" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_RecentFiles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="RecentFiles" />
      </parameters>
    </function>
    <function name="Get_NormalTemplate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Template" />
      </parameters>
    </function>
    <function name="Get_System_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="System" />
      </parameters>
    </function>
    <function name="Get_AutoCorrect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="AutoCorrect" />
      </parameters>
    </function>
    <function name="Get_FontNames" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FontNames" />
      </parameters>
    </function>
    <function name="Get_LandscapeFontNames" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FontNames" />
      </parameters>
    </function>
    <function name="Get_PortraitFontNames" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FontNames" />
      </parameters>
    </function>
    <function name="Get_Languages" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Languages" />
      </parameters>
    </function>
    <function name="Get_Assistant" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Assistant" />
      </parameters>
    </function>
    <function name="Get_FileConverters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FileConverters" />
      </parameters>
    </function>
    <function name="Get_Dialogs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Dialogs" />
      </parameters>
    </function>
    <function name="Get_CaptionLabels" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CaptionLabels" />
      </parameters>
    </function>
    <function name="Get_AutoCaptions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="AutoCaptions" />
      </parameters>
    </function>
    <function name="Get_AddIns" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="AddIns" />
      </parameters>
    </function>
    <function name="Get_Tasks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Tasks" />
      </parameters>
    </function>
    <function name="Get_MacroContainer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_CommandBars" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBars" />
      </parameters>
    </function>
    <function name="Get_SynonymInfo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Word" type="WideString" paramflags="const" />
        <parameter name="LanguageID" type="OleVariant" paramflags="var" />
        <retval type="SynonymInfo" />
      </parameters>
    </function>
    <function name="Get_VBE" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="VBE" />
      </parameters>
    </function>
    <function name="Get_ListGalleries" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ListGalleries" />
      </parameters>
    </function>
    <function name="Get_ActivePrinter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ActivePrinter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Templates" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Templates" />
      </parameters>
    </function>
    <function name="Get_CustomizationContext" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Set_CustomizationContext" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="IDispatch" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_KeyBindings" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="KeyBindings" />
      </parameters>
    </function>
    <function name="Get_KeysBoundTo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="KeyCategory" type="TOleEnum" />
        <parameter name="Command" type="WideString" paramflags="const" />
        <parameter name="CommandParameter" type="OleVariant" paramflags="var" />
        <retval type="KeysBoundTo" />
      </parameters>
    </function>
    <function name="Get_FindKey" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="KeyCode" type="Integer" />
        <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
        <retval type="KeyBinding" />
      </parameters>
    </function>
    <function name="Get_Options" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Options" />
      </parameters>
    </function>
    <function name="Get_CustomDictionaries" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Dictionaries" />
      </parameters>
    </function>
    <procedure name="Set_StatusBar" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Param1" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ShowVisualBasicEditor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowVisualBasicEditor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_IsObjectValid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Object_" type="IDispatch" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_HangulHanjaDictionaries" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="HangulHanjaConversionDictionaries" />
      </parameters>
    </function>
    <function name="Repeat_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Times" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="DDEExecute" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Channel" type="Integer" />
        <parameter name="Command" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="DDEInitiate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="App" type="WideString" paramflags="const" />
        <parameter name="Topic" type="WideString" paramflags="const" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="DDEPoke" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Channel" type="Integer" />
        <parameter name="Item" type="WideString" paramflags="const" />
        <parameter name="Data" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="DDERequest" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Channel" type="Integer" />
        <parameter name="Item" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="DDETerminate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Channel" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="DDETerminateAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="BuildKeyCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Arg1" type="TOleEnum" />
        <parameter name="Arg2" type="OleVariant" paramflags="var" />
        <parameter name="Arg3" type="OleVariant" paramflags="var" />
        <parameter name="Arg4" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="KeyString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="KeyCode" type="Integer" />
        <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="CheckSpelling" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Word" type="WideString" paramflags="const" />
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="GetSpellingSuggestions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Word" type="WideString" paramflags="const" />
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
        <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
        <retval type="SpellingSuggestions" />
      </parameters>
    </function>
    <procedure name="Help" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="HelpType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="NewWindow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Window" />
      </parameters>
    </function>
    <function name="CleanString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="String_" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="ChangeFileOpenDirectory" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Path" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="InchesToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Inches" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="CentimetersToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Centimeters" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="MillimetersToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Millimeters" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PicasToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Picas" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="LinesToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Lines" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToInches" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToCentimeters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToMillimeters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToPicas" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Documents" visibility="public" read="Get_Documents" type="Documents" />
    <property name="Windows" visibility="public" read="Get_Windows" type="Windows" />
    <property name="ActiveDocument" visibility="public" read="Get_ActiveDocument" type="_Document" />
    <property name="ActiveWindow" visibility="public" read="Get_ActiveWindow" type="Window" />
    <property name="Selection" visibility="public" read="Get_Selection" type="WordSelection" />
    <property name="WordBasic" visibility="public" read="Get_WordBasic" type="IDispatch" />
    <property name="PrintPreview" visibility="public" read="Get_PrintPreview" write="Set_PrintPreview" type="WordBool" />
    <property name="RecentFiles" visibility="public" read="Get_RecentFiles" type="RecentFiles" />
    <property name="NormalTemplate" visibility="public" read="Get_NormalTemplate" type="Template" />
    <property name="System_" visibility="public" read="Get_System_" type="System" />
    <property name="AutoCorrect" visibility="public" read="Get_AutoCorrect" type="AutoCorrect" />
    <property name="FontNames" visibility="public" read="Get_FontNames" type="FontNames" />
    <property name="LandscapeFontNames" visibility="public" read="Get_LandscapeFontNames" type="FontNames" />
    <property name="PortraitFontNames" visibility="public" read="Get_PortraitFontNames" type="FontNames" />
    <property name="Languages" visibility="public" read="Get_Languages" type="Languages" />
    <property name="Assistant" visibility="public" read="Get_Assistant" type="Assistant" />
    <property name="FileConverters" visibility="public" read="Get_FileConverters" type="FileConverters" />
    <property name="Dialogs" visibility="public" read="Get_Dialogs" type="Dialogs" />
    <property name="CaptionLabels" visibility="public" read="Get_CaptionLabels" type="CaptionLabels" />
    <property name="AutoCaptions" visibility="public" read="Get_AutoCaptions" type="AutoCaptions" />
    <property name="AddIns" visibility="public" read="Get_AddIns" type="AddIns" />
    <property name="Tasks" visibility="public" read="Get_Tasks" type="Tasks" />
    <property name="MacroContainer" visibility="public" read="Get_MacroContainer" type="IDispatch" />
    <property name="CommandBars" visibility="public" read="Get_CommandBars" type="CommandBars" />
    <property name="SynonymInfo[const Word][LanguageID]" visibility="public" read="Get_SynonymInfo" type="SynonymInfo" />
    <property name="VBE" visibility="public" read="Get_VBE" type="VBE" />
    <property name="ListGalleries" visibility="public" read="Get_ListGalleries" type="ListGalleries" />
    <property name="ActivePrinter" visibility="public" read="Get_ActivePrinter" write="Set_ActivePrinter" type="WideString" default="0" />
    <property name="Templates" visibility="public" read="Get_Templates" type="Templates" />
    <property name="CustomizationContext" visibility="public" read="Get_CustomizationContext" write="Set_CustomizationContext" type="IDispatch" />
    <property name="KeyBindings" visibility="public" read="Get_KeyBindings" type="KeyBindings" />
    <property name="KeysBoundTo[KeyCategory][const Command][CommandParameter]" visibility="public" read="Get_KeysBoundTo" type="KeysBoundTo" />
    <property name="FindKey[KeyCode][KeyCode2]" visibility="public" read="Get_FindKey" type="KeyBinding" />
    <property name="Options" visibility="public" read="Get_Options" type="Options" />
    <property name="CustomDictionaries" visibility="public" read="Get_CustomDictionaries" type="Dictionaries" />
    <property name="StatusBar" visibility="public" write="Set_StatusBar" type="WideString" default="0" />
    <property name="ShowVisualBasicEditor" visibility="public" read="Get_ShowVisualBasicEditor" write="Set_ShowVisualBasicEditor" type="WordBool" />
    <property name="IsObjectValid[const Object_]" visibility="public" read="Get_IsObjectValid" type="WordBool" />
    <property name="HangulHanjaDictionaries" visibility="public" read="Get_HangulHanjaDictionaries" type="HangulHanjaConversionDictionaries" />
  </interface>
  <interface name="WordApplication" alias="Word97._Application" GUID="{00020970-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Documents" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Documents" />
      </parameters>
    </function>
    <function name="Get_Windows" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Windows" />
      </parameters>
    </function>
    <function name="Get_ActiveDocument" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Document" />
      </parameters>
    </function>
    <function name="Get_ActiveWindow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Window" />
      </parameters>
    </function>
    <function name="Get_Selection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordSelection" />
      </parameters>
    </function>
    <function name="Get_WordBasic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_RecentFiles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="RecentFiles" />
      </parameters>
    </function>
    <function name="Get_NormalTemplate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Template" />
      </parameters>
    </function>
    <function name="Get_System_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="System" />
      </parameters>
    </function>
    <function name="Get_AutoCorrect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="AutoCorrect" />
      </parameters>
    </function>
    <function name="Get_FontNames" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FontNames" />
      </parameters>
    </function>
    <function name="Get_LandscapeFontNames" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FontNames" />
      </parameters>
    </function>
    <function name="Get_PortraitFontNames" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FontNames" />
      </parameters>
    </function>
    <function name="Get_Languages" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Languages" />
      </parameters>
    </function>
    <function name="Get_Assistant" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Assistant" />
      </parameters>
    </function>
    <function name="Get_Browser" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Browser" />
      </parameters>
    </function>
    <function name="Get_FileConverters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FileConverters" />
      </parameters>
    </function>
    <function name="Get_MailingLabel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="MailingLabel" />
      </parameters>
    </function>
    <function name="Get_Dialogs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Dialogs" />
      </parameters>
    </function>
    <function name="Get_CaptionLabels" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CaptionLabels" />
      </parameters>
    </function>
    <function name="Get_AutoCaptions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="AutoCaptions" />
      </parameters>
    </function>
    <function name="Get_AddIns" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="AddIns" />
      </parameters>
    </function>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Version" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_ScreenUpdating" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ScreenUpdating" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PrintPreview" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintPreview" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Tasks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Tasks" />
      </parameters>
    </function>
    <function name="Get_DisplayStatusBar" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayStatusBar" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SpecialMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_UsableWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_UsableHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_MathCoprocessorAvailable" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_MouseAvailable" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_International" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="TOleEnum" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_Build" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_CapsLock" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_NumLock" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_UserName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_UserName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_UserInitials" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_UserInitials" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_UserAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_UserAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_MacroContainer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_DisplayRecentFiles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayRecentFiles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_CommandBars" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBars" />
      </parameters>
    </function>
    <function name="Get_SynonymInfo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Word" type="WideString" paramflags="const" />
        <parameter name="LanguageID" type="OleVariant" paramflags="var" />
        <retval type="SynonymInfo" />
      </parameters>
    </function>
    <function name="Get_VBE" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="VBE" />
      </parameters>
    </function>
    <function name="Get_DefaultSaveFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_DefaultSaveFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ListGalleries" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ListGalleries" />
      </parameters>
    </function>
    <function name="Get_ActivePrinter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ActivePrinter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Templates" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Templates" />
      </parameters>
    </function>
    <function name="Get_CustomizationContext" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Set_CustomizationContext" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="IDispatch" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_KeyBindings" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="KeyBindings" />
      </parameters>
    </function>
    <function name="Get_KeysBoundTo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="KeyCategory" type="TOleEnum" />
        <parameter name="Command" type="WideString" paramflags="const" />
        <parameter name="CommandParameter" type="OleVariant" paramflags="var" />
        <retval type="KeysBoundTo" />
      </parameters>
    </function>
    <function name="Get_FindKey" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="KeyCode" type="Integer" />
        <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
        <retval type="KeyBinding" />
      </parameters>
    </function>
    <function name="Get_Caption" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Caption" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Path" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_DisplayScrollBars" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayScrollBars" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_StartupPath" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_StartupPath" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_BackgroundSavingStatus" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_BackgroundPrintingStatus" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_WindowState" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_WindowState" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_DisplayAutoCompleteTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayAutoCompleteTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Options" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Options" />
      </parameters>
    </function>
    <function name="Get_DisplayAlerts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_DisplayAlerts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_CustomDictionaries" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Dictionaries" />
      </parameters>
    </function>
    <function name="Get_PathSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_StatusBar" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Param1" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_MAPIAvailable" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_DisplayScreenTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayScreenTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_EnableCancelKey" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_EnableCancelKey" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_UserControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_FileSearch" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FileSearch" />
      </parameters>
    </function>
    <function name="Get_MailSystem" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_DefaultTableSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_DefaultTableSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ShowVisualBasicEditor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowVisualBasicEditor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_BrowseExtraFileTypes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_BrowseExtraFileTypes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_IsObjectValid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Object_" type="IDispatch" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_HangulHanjaDictionaries" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="HangulHanjaConversionDictionaries" />
      </parameters>
    </function>
    <function name="Get_MailMessage" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="MailMessage" />
      </parameters>
    </function>
    <function name="Get_FocusInMailHeader" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Quit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SaveChanges" type="OleVariant" paramflags="var" />
        <parameter name="OriginalFormat" type="OleVariant" paramflags="var" />
        <parameter name="RouteDocument" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="ScreenRefresh" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="PrintOut" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Background" type="OleVariant" paramflags="var" />
        <parameter name="Append" type="OleVariant" paramflags="var" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
        <parameter name="From" type="OleVariant" paramflags="var" />
        <parameter name="To_" type="OleVariant" paramflags="var" />
        <parameter name="Item" type="OleVariant" paramflags="var" />
        <parameter name="Copies" type="OleVariant" paramflags="var" />
        <parameter name="Pages" type="OleVariant" paramflags="var" />
        <parameter name="PageType" type="OleVariant" paramflags="var" />
        <parameter name="PrintToFile" type="OleVariant" paramflags="var" />
        <parameter name="Collate" type="OleVariant" paramflags="var" />
        <parameter name="FileName" type="OleVariant" paramflags="var" />
        <parameter name="ActivePrinterMacGX" type="OleVariant" paramflags="var" />
        <parameter name="ManualDuplexPrint" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="LookupNameProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="SubstituteFont" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="UnavailableFont" type="WideString" paramflags="const" />
        <parameter name="SubstituteFont" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Repeat_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Times" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="DDEExecute" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Channel" type="Integer" />
        <parameter name="Command" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="DDEInitiate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="App" type="WideString" paramflags="const" />
        <parameter name="Topic" type="WideString" paramflags="const" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="DDEPoke" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Channel" type="Integer" />
        <parameter name="Item" type="WideString" paramflags="const" />
        <parameter name="Data" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="DDERequest" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Channel" type="Integer" />
        <parameter name="Item" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="DDETerminate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Channel" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="DDETerminateAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="BuildKeyCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Arg1" type="TOleEnum" />
        <parameter name="Arg2" type="OleVariant" paramflags="var" />
        <parameter name="Arg3" type="OleVariant" paramflags="var" />
        <parameter name="Arg4" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="KeyString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="KeyCode" type="Integer" />
        <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="OrganizerCopy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Source" type="WideString" paramflags="const" />
        <parameter name="Destination" type="WideString" paramflags="const" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Object_" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="OrganizerDelete" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Source" type="WideString" paramflags="const" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Object_" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="OrganizerRename" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Source" type="WideString" paramflags="const" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="NewName" type="WideString" paramflags="const" />
        <parameter name="Object_" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="AddAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="TagID" type="PSafeArray" paramflags="var" />
        <parameter name="Value" type="PSafeArray" paramflags="var" />
      </parameters>
    </procedure>
    <function name="GetAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <parameter name="AddressProperties" type="OleVariant" paramflags="var" />
        <parameter name="UseAutoText" type="OleVariant" paramflags="var" />
        <parameter name="DisplaySelectDialog" type="OleVariant" paramflags="var" />
        <parameter name="SelectDialog" type="OleVariant" paramflags="var" />
        <parameter name="CheckNamesDialog" type="OleVariant" paramflags="var" />
        <parameter name="RecentAddressesChoice" type="OleVariant" paramflags="var" />
        <parameter name="UpdateRecentAddresses" type="OleVariant" paramflags="var" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="CheckGrammar" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="String_" type="WideString" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="CheckSpelling" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Word" type="WideString" paramflags="const" />
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="ResetIgnoreAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="GetSpellingSuggestions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Word" type="WideString" paramflags="const" />
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
        <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
        <retval type="SpellingSuggestions" />
      </parameters>
    </function>
    <procedure name="GoBack" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Help" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="HelpType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="AutomaticChange" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ShowMe" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="HelpTool" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="NewWindow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Window" />
      </parameters>
    </function>
    <procedure name="ListCommands" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ListAllCommands" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="ShowClipboard" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="OnTime" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="When" type="OleVariant" paramflags="var" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Tolerance" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="NextLetter" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="MountVolume" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Zone" type="WideString" paramflags="const" />
        <parameter name="Server" type="WideString" paramflags="const" />
        <parameter name="Volume" type="WideString" paramflags="const" />
        <parameter name="User" type="OleVariant" paramflags="var" />
        <parameter name="UserPassword" type="OleVariant" paramflags="var" />
        <parameter name="VolumePassword" type="OleVariant" paramflags="var" />
        <retval type="SmallInt" />
      </parameters>
    </function>
    <function name="CleanString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="String_" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SendFax" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ChangeFileOpenDirectory" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Path" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Run" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="MacroName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="GoForward" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Move" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Left" type="Integer" />
        <parameter name="Top" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Resize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Width" type="Integer" />
        <parameter name="Height" type="Integer" />
      </parameters>
    </procedure>
    <function name="InchesToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Inches" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="CentimetersToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Centimeters" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="MillimetersToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Millimeters" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PicasToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Picas" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="LinesToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Lines" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToInches" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToCentimeters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToMillimeters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToPicas" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Activate" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Documents" visibility="public" read="Get_Documents" type="Documents" />
    <property name="Windows" visibility="public" read="Get_Windows" type="Windows" />
    <property name="ActiveDocument" visibility="public" read="Get_ActiveDocument" type="_Document" />
    <property name="ActiveWindow" visibility="public" read="Get_ActiveWindow" type="Window" />
    <property name="Selection" visibility="public" read="Get_Selection" type="WordSelection" />
    <property name="WordBasic" visibility="public" read="Get_WordBasic" type="IDispatch" />
    <property name="RecentFiles" visibility="public" read="Get_RecentFiles" type="RecentFiles" />
    <property name="NormalTemplate" visibility="public" read="Get_NormalTemplate" type="Template" />
    <property name="System_" visibility="public" read="Get_System_" type="System" />
    <property name="AutoCorrect" visibility="public" read="Get_AutoCorrect" type="AutoCorrect" />
    <property name="FontNames" visibility="public" read="Get_FontNames" type="FontNames" />
    <property name="LandscapeFontNames" visibility="public" read="Get_LandscapeFontNames" type="FontNames" />
    <property name="PortraitFontNames" visibility="public" read="Get_PortraitFontNames" type="FontNames" />
    <property name="Languages" visibility="public" read="Get_Languages" type="Languages" />
    <property name="Assistant" visibility="public" read="Get_Assistant" type="Assistant" />
    <property name="Browser" visibility="public" read="Get_Browser" type="Browser" />
    <property name="FileConverters" visibility="public" read="Get_FileConverters" type="FileConverters" />
    <property name="MailingLabel" visibility="public" read="Get_MailingLabel" type="MailingLabel" />
    <property name="Dialogs" visibility="public" read="Get_Dialogs" type="Dialogs" />
    <property name="CaptionLabels" visibility="public" read="Get_CaptionLabels" type="CaptionLabels" />
    <property name="AutoCaptions" visibility="public" read="Get_AutoCaptions" type="AutoCaptions" />
    <property name="AddIns" visibility="public" read="Get_AddIns" type="AddIns" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="WordBool" />
    <property name="Version" visibility="public" read="Get_Version" type="WideString" default="0" />
    <property name="ScreenUpdating" visibility="public" read="Get_ScreenUpdating" write="Set_ScreenUpdating" type="WordBool" />
    <property name="PrintPreview" visibility="public" read="Get_PrintPreview" write="Set_PrintPreview" type="WordBool" />
    <property name="Tasks" visibility="public" read="Get_Tasks" type="Tasks" />
    <property name="DisplayStatusBar" visibility="public" read="Get_DisplayStatusBar" write="Set_DisplayStatusBar" type="WordBool" />
    <property name="SpecialMode" visibility="public" read="Get_SpecialMode" type="WordBool" />
    <property name="UsableWidth" visibility="public" read="Get_UsableWidth" type="Integer" />
    <property name="UsableHeight" visibility="public" read="Get_UsableHeight" type="Integer" />
    <property name="MathCoprocessorAvailable" visibility="public" read="Get_MathCoprocessorAvailable" type="WordBool" />
    <property name="MouseAvailable" visibility="public" read="Get_MouseAvailable" type="WordBool" />
    <property name="International[Index]" visibility="public" read="Get_International" type="OleVariant" />
    <property name="Build" visibility="public" read="Get_Build" type="WideString" default="0" />
    <property name="CapsLock" visibility="public" read="Get_CapsLock" type="WordBool" />
    <property name="NumLock" visibility="public" read="Get_NumLock" type="WordBool" />
    <property name="UserName" visibility="public" read="Get_UserName" write="Set_UserName" type="WideString" default="0" />
    <property name="UserInitials" visibility="public" read="Get_UserInitials" write="Set_UserInitials" type="WideString" default="0" />
    <property name="UserAddress" visibility="public" read="Get_UserAddress" write="Set_UserAddress" type="WideString" default="0" />
    <property name="MacroContainer" visibility="public" read="Get_MacroContainer" type="IDispatch" />
    <property name="DisplayRecentFiles" visibility="public" read="Get_DisplayRecentFiles" write="Set_DisplayRecentFiles" type="WordBool" />
    <property name="CommandBars" visibility="public" read="Get_CommandBars" type="CommandBars" />
    <property name="SynonymInfo[const Word][LanguageID]" visibility="public" read="Get_SynonymInfo" type="SynonymInfo" />
    <property name="VBE" visibility="public" read="Get_VBE" type="VBE" />
    <property name="DefaultSaveFormat" visibility="public" read="Get_DefaultSaveFormat" write="Set_DefaultSaveFormat" type="WideString" default="0" />
    <property name="ListGalleries" visibility="public" read="Get_ListGalleries" type="ListGalleries" />
    <property name="ActivePrinter" visibility="public" read="Get_ActivePrinter" write="Set_ActivePrinter" type="WideString" default="0" />
    <property name="Templates" visibility="public" read="Get_Templates" type="Templates" />
    <property name="CustomizationContext" visibility="public" read="Get_CustomizationContext" write="Set_CustomizationContext" type="IDispatch" />
    <property name="KeyBindings" visibility="public" read="Get_KeyBindings" type="KeyBindings" />
    <property name="KeysBoundTo[KeyCategory][const Command][CommandParameter]" visibility="public" read="Get_KeysBoundTo" type="KeysBoundTo" />
    <property name="FindKey[KeyCode][KeyCode2]" visibility="public" read="Get_FindKey" type="KeyBinding" />
    <property name="Caption" visibility="public" read="Get_Caption" write="Set_Caption" type="WideString" default="0" />
    <property name="Path" visibility="public" read="Get_Path" type="WideString" default="0" />
    <property name="DisplayScrollBars" visibility="public" read="Get_DisplayScrollBars" write="Set_DisplayScrollBars" type="WordBool" />
    <property name="StartupPath" visibility="public" read="Get_StartupPath" write="Set_StartupPath" type="WideString" default="0" />
    <property name="BackgroundSavingStatus" visibility="public" read="Get_BackgroundSavingStatus" type="Integer" />
    <property name="BackgroundPrintingStatus" visibility="public" read="Get_BackgroundPrintingStatus" type="Integer" />
    <property name="Left" visibility="public" read="Get_Left" write="Set_Left" type="Integer" />
    <property name="Top" visibility="public" read="Get_Top" write="Set_Top" type="Integer" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Integer" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Integer" />
    <property name="WindowState" visibility="public" read="Get_WindowState" write="Set_WindowState" type="TOleEnum" />
    <property name="DisplayAutoCompleteTips" visibility="public" read="Get_DisplayAutoCompleteTips" write="Set_DisplayAutoCompleteTips" type="WordBool" />
    <property name="Options" visibility="public" read="Get_Options" type="Options" />
    <property name="DisplayAlerts" visibility="public" read="Get_DisplayAlerts" write="Set_DisplayAlerts" type="TOleEnum" />
    <property name="CustomDictionaries" visibility="public" read="Get_CustomDictionaries" type="Dictionaries" />
    <property name="PathSeparator" visibility="public" read="Get_PathSeparator" type="WideString" default="0" />
    <property name="StatusBar" visibility="public" write="Set_StatusBar" type="WideString" default="0" />
    <property name="MAPIAvailable" visibility="public" read="Get_MAPIAvailable" type="WordBool" />
    <property name="DisplayScreenTips" visibility="public" read="Get_DisplayScreenTips" write="Set_DisplayScreenTips" type="WordBool" />
    <property name="EnableCancelKey" visibility="public" read="Get_EnableCancelKey" write="Set_EnableCancelKey" type="TOleEnum" />
    <property name="UserControl" visibility="public" read="Get_UserControl" type="WordBool" />
    <property name="FileSearch" visibility="public" read="Get_FileSearch" type="FileSearch" />
    <property name="MailSystem" visibility="public" read="Get_MailSystem" type="TOleEnum" />
    <property name="DefaultTableSeparator" visibility="public" read="Get_DefaultTableSeparator" write="Set_DefaultTableSeparator" type="WideString" default="0" />
    <property name="ShowVisualBasicEditor" visibility="public" read="Get_ShowVisualBasicEditor" write="Set_ShowVisualBasicEditor" type="WordBool" />
    <property name="BrowseExtraFileTypes" visibility="public" read="Get_BrowseExtraFileTypes" write="Set_BrowseExtraFileTypes" type="WideString" default="0" />
    <property name="IsObjectValid[const Object_]" visibility="public" read="Get_IsObjectValid" type="WordBool" />
    <property name="HangulHanjaDictionaries" visibility="public" read="Get_HangulHanjaDictionaries" type="HangulHanjaConversionDictionaries" />
    <property name="MailMessage" visibility="public" read="Get_MailMessage" type="MailMessage" />
    <property name="FocusInMailHeader" visibility="public" read="Get_FocusInMailHeader" type="WordBool" />
  </interface>
  <interface name="WordDocument" alias="Word97._Document" GUID="{0002096B-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_BuiltInDocumentProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_CustomDocumentProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Path" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Bookmarks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Bookmarks" />
      </parameters>
    </function>
    <function name="Get_Tables" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Tables" />
      </parameters>
    </function>
    <function name="Get_Footnotes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Footnotes" />
      </parameters>
    </function>
    <function name="Get_Endnotes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Endnotes" />
      </parameters>
    </function>
    <function name="Get_Comments" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Comments" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_AutoHyphenation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoHyphenation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_HyphenateCaps" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_HyphenateCaps" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_HyphenationZone" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_HyphenationZone" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_ConsecutiveHyphensLimit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_ConsecutiveHyphensLimit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Sections" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Sections" />
      </parameters>
    </function>
    <function name="Get_Paragraphs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Paragraphs" />
      </parameters>
    </function>
    <function name="Get_Words" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Words" />
      </parameters>
    </function>
    <function name="Get_Sentences" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Sentences" />
      </parameters>
    </function>
    <function name="Get_Characters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Characters" />
      </parameters>
    </function>
    <function name="Get_Fields" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Fields" />
      </parameters>
    </function>
    <function name="Get_FormFields" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FormFields" />
      </parameters>
    </function>
    <function name="Get_Styles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Styles" />
      </parameters>
    </function>
    <function name="Get_Frames" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Frames" />
      </parameters>
    </function>
    <function name="Get_TablesOfFigures" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TablesOfFigures" />
      </parameters>
    </function>
    <function name="Get_Variables" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Variables" />
      </parameters>
    </function>
    <function name="Get_MailMerge" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="MailMerge" />
      </parameters>
    </function>
    <function name="Get_Envelope" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Envelope" />
      </parameters>
    </function>
    <function name="Get_FullName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Revisions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Revisions" />
      </parameters>
    </function>
    <function name="Get_TablesOfContents" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TablesOfContents" />
      </parameters>
    </function>
    <function name="Get_TablesOfAuthorities" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TablesOfAuthorities" />
      </parameters>
    </function>
    <function name="Get_PageSetup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="PageSetup" />
      </parameters>
    </function>
    <procedure name="Set_PageSetup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="PageSetup" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Windows" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Windows" />
      </parameters>
    </function>
    <function name="Get_HasRoutingSlip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_HasRoutingSlip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_RoutingSlip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="RoutingSlip" />
      </parameters>
    </function>
    <function name="Get_Routed" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_TablesOfAuthoritiesCategories" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TablesOfAuthoritiesCategories" />
      </parameters>
    </function>
    <function name="Get_Indexes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Indexes" />
      </parameters>
    </function>
    <function name="Get_Saved" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Saved" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Content" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_ActiveWindow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Window" />
      </parameters>
    </function>
    <function name="Get_Kind" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Kind" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_ReadOnly" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Subdocuments" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Subdocuments" />
      </parameters>
    </function>
    <function name="Get_IsMasterDocument" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_DefaultTabStop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_DefaultTabStop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_EmbedTrueTypeFonts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_EmbedTrueTypeFonts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SaveFormsData" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SaveFormsData" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ReadOnlyRecommended" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ReadOnlyRecommended" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SaveSubsetFonts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SaveSubsetFonts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Compatibility" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Compatibility" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_StoryRanges" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="StoryRanges" />
      </parameters>
    </function>
    <function name="Get_CommandBars" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBars" />
      </parameters>
    </function>
    <function name="Get_IsSubdocument" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_SaveFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_ProtectionType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Hyperlinks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Hyperlinks" />
      </parameters>
    </function>
    <function name="Get_Shapes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shapes" />
      </parameters>
    </function>
    <function name="Get_ListTemplates" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ListTemplates" />
      </parameters>
    </function>
    <function name="Get_Lists" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Lists" />
      </parameters>
    </function>
    <function name="Get_UpdateStylesOnOpen" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_UpdateStylesOnOpen" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AttachedTemplate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="Set_AttachedTemplate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="Get_InlineShapes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="InlineShapes" />
      </parameters>
    </function>
    <function name="Get_Background" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="Set_Background" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Shape" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_GrammarChecked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_GrammarChecked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SpellingChecked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SpellingChecked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowGrammaticalErrors" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowGrammaticalErrors" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowSpellingErrors" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowSpellingErrors" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Versions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Versions" />
      </parameters>
    </function>
    <function name="Get_ShowSummary" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowSummary" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SummaryViewMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_SummaryViewMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_SummaryLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_SummaryLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_PrintFractionalWidths" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintFractionalWidths" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PrintPostScriptOverText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintPostScriptOverText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Container" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_PrintFormsData" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintFormsData" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ListParagraphs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ListParagraphs" />
      </parameters>
    </function>
    <procedure name="Set_Password" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Param1" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_WritePassword" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Param1" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_HasPassword" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_WriteReserved" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_ActiveWritingStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="LanguageID" type="OleVariant" paramflags="var" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ActiveWritingStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="LanguageID" type="OleVariant" paramflags="var" />
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_UserControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_UserControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_HasMailer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_HasMailer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Mailer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Mailer" />
      </parameters>
    </function>
    <function name="Get_ReadabilityStatistics" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ReadabilityStatistics" />
      </parameters>
    </function>
    <function name="Get_GrammaticalErrors" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ProofreadingErrors" />
      </parameters>
    </function>
    <function name="Get_SpellingErrors" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ProofreadingErrors" />
      </parameters>
    </function>
    <function name="Get_VBProject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_VBProject" />
      </parameters>
    </function>
    <function name="Get_FormsDesign" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get__CodeName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set__CodeName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_CodeName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_SnapToGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SnapToGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SnapToShapes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SnapToShapes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_GridDistanceHorizontal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_GridDistanceHorizontal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_GridDistanceVertical" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_GridDistanceVertical" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_GridOriginHorizontal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_GridOriginHorizontal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_GridOriginVertical" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_GridOriginVertical" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_GridSpaceBetweenHorizontalLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_GridSpaceBetweenHorizontalLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_GridSpaceBetweenVerticalLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_GridSpaceBetweenVerticalLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_GridOriginFromMargin" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_GridOriginFromMargin" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_KerningByAlgorithm" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_KerningByAlgorithm" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_JustificationMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_JustificationMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_FarEastLineBreakLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_FarEastLineBreakLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_NoLineBreakBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_NoLineBreakBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_NoLineBreakAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_NoLineBreakAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_TrackRevisions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_TrackRevisions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PrintRevisions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintRevisions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowRevisions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowRevisions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Close" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SaveChanges" type="OleVariant" paramflags="var" />
        <parameter name="OriginalFormat" type="OleVariant" paramflags="var" />
        <parameter name="RouteDocument" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SaveAs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="OleVariant" paramflags="var" />
        <parameter name="FileFormat" type="OleVariant" paramflags="var" />
        <parameter name="LockComments" type="OleVariant" paramflags="var" />
        <parameter name="Password" type="OleVariant" paramflags="var" />
        <parameter name="AddToRecentFiles" type="OleVariant" paramflags="var" />
        <parameter name="WritePassword" type="OleVariant" paramflags="var" />
        <parameter name="ReadOnlyRecommended" type="OleVariant" paramflags="var" />
        <parameter name="EmbedTrueTypeFonts" type="OleVariant" paramflags="var" />
        <parameter name="SaveNativePictureFormat" type="OleVariant" paramflags="var" />
        <parameter name="SaveFormsData" type="OleVariant" paramflags="var" />
        <parameter name="SaveAsAOCELetter" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Repaginate" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="FitToPages" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ManualHyphenation" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="DataForm" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Route" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Save" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="PrintOut" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Background" type="OleVariant" paramflags="var" />
        <parameter name="Append" type="OleVariant" paramflags="var" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
        <parameter name="From" type="OleVariant" paramflags="var" />
        <parameter name="To_" type="OleVariant" paramflags="var" />
        <parameter name="Item" type="OleVariant" paramflags="var" />
        <parameter name="Copies" type="OleVariant" paramflags="var" />
        <parameter name="Pages" type="OleVariant" paramflags="var" />
        <parameter name="PageType" type="OleVariant" paramflags="var" />
        <parameter name="PrintToFile" type="OleVariant" paramflags="var" />
        <parameter name="Collate" type="OleVariant" paramflags="var" />
        <parameter name="ActivePrinterMacGX" type="OleVariant" paramflags="var" />
        <parameter name="ManualDuplexPrint" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SendMail" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Start" type="OleVariant" paramflags="var" />
        <parameter name="End_" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <procedure name="RunAutoMacro" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Which" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Activate" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="PrintPreview" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="GoTo_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="What" type="OleVariant" paramflags="var" />
        <parameter name="Which" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Undo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Times" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Redo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Times" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="ComputeStatistics" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Statistic" type="TOleEnum" />
        <parameter name="IncludeFootnotesAndEndnotes" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="MakeCompatibilityDefault" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Protect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="NoReset" type="OleVariant" paramflags="var" />
        <parameter name="Password" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Unprotect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Password" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="EditionOptions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Option" type="TOleEnum" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Format" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="RunLetterWizard" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="LetterContent" type="OleVariant" paramflags="var" />
        <parameter name="WizardMode" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="GetLetterContent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_LetterContent" />
      </parameters>
    </function>
    <procedure name="SetLetterContent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="LetterContent" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="CopyStylesFromTemplate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Template" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="UpdateStyles" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="CheckGrammar" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="CheckSpelling" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        <parameter name="AlwaysSuggest" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="FollowHyperlink" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Address" type="OleVariant" paramflags="var" />
        <parameter name="SubAddress" type="OleVariant" paramflags="var" />
        <parameter name="NewWindow" type="OleVariant" paramflags="var" />
        <parameter name="AddHistory" type="OleVariant" paramflags="var" />
        <parameter name="ExtraInfo" type="OleVariant" paramflags="var" />
        <parameter name="Method" type="OleVariant" paramflags="var" />
        <parameter name="HeaderInfo" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="AddToFavorites" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reload" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="AutoSummarize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Length" type="OleVariant" paramflags="var" />
        <parameter name="Mode" type="OleVariant" paramflags="var" />
        <parameter name="UpdateProperties" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <procedure name="RemoveNumbers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="ConvertNumbersToText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="CountNumberedItems" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
        <parameter name="Level" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Post" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ToggleFormsDesign" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Compare" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="UpdateSummaryProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="GetCrossReferenceItems" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ReferenceType" type="OleVariant" paramflags="var" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="AutoFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ViewCode" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ViewPropertyBrowser" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ForwardMailer" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reply" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ReplyAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SendMailer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileFormat" type="OleVariant" paramflags="var" />
        <parameter name="Priority" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="UndoClear" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="PresentIt" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SendFax" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Address" type="WideString" paramflags="const" />
        <parameter name="Subject" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Merge" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="ClosePrintPreview" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="CheckConsistency" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="CreateLetterContent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="DateFormat" type="WideString" paramflags="const" />
        <parameter name="IncludeHeaderFooter" type="WordBool" />
        <parameter name="PageDesign" type="WideString" paramflags="const" />
        <parameter name="LetterStyle" type="TOleEnum" />
        <parameter name="Letterhead" type="WordBool" />
        <parameter name="LetterheadLocation" type="TOleEnum" />
        <parameter name="LetterheadSize" type="Single" />
        <parameter name="RecipientName" type="WideString" paramflags="const" />
        <parameter name="RecipientAddress" type="WideString" paramflags="const" />
        <parameter name="Salutation" type="WideString" paramflags="const" />
        <parameter name="SalutationType" type="TOleEnum" />
        <parameter name="RecipientReference" type="WideString" paramflags="const" />
        <parameter name="MailingInstructions" type="WideString" paramflags="const" />
        <parameter name="AttentionLine" type="WideString" paramflags="const" />
        <parameter name="Subject" type="WideString" paramflags="const" />
        <parameter name="CCList" type="WideString" paramflags="const" />
        <parameter name="ReturnAddress" type="WideString" paramflags="const" />
        <parameter name="SenderName" type="WideString" paramflags="const" />
        <parameter name="Closing" type="WideString" paramflags="const" />
        <parameter name="SenderCompany" type="WideString" paramflags="const" />
        <parameter name="SenderJobTitle" type="WideString" paramflags="const" />
        <parameter name="SenderInitials" type="WideString" paramflags="const" />
        <parameter name="EnclosureNumber" type="Integer" />
        <parameter name="InfoBlock" type="OleVariant" paramflags="var" />
        <parameter name="RecipientCode" type="OleVariant" paramflags="var" />
        <parameter name="RecipientGender" type="OleVariant" paramflags="var" />
        <parameter name="ReturnAddressShortForm" type="OleVariant" paramflags="var" />
        <parameter name="SenderCity" type="OleVariant" paramflags="var" />
        <parameter name="SenderCode" type="OleVariant" paramflags="var" />
        <parameter name="SenderGender" type="OleVariant" paramflags="var" />
        <parameter name="SenderReference" type="OleVariant" paramflags="var" />
        <retval type="_LetterContent" />
      </parameters>
    </function>
    <procedure name="AcceptAllRevisions" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="RejectAllRevisions" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="BuiltInDocumentProperties" visibility="public" read="Get_BuiltInDocumentProperties" type="IDispatch" />
    <property name="CustomDocumentProperties" visibility="public" read="Get_CustomDocumentProperties" type="IDispatch" />
    <property name="Path" visibility="public" read="Get_Path" type="WideString" default="0" />
    <property name="Bookmarks" visibility="public" read="Get_Bookmarks" type="Bookmarks" />
    <property name="Tables" visibility="public" read="Get_Tables" type="Tables" />
    <property name="Footnotes" visibility="public" read="Get_Footnotes" type="Footnotes" />
    <property name="Endnotes" visibility="public" read="Get_Endnotes" type="Endnotes" />
    <property name="Comments" visibility="public" read="Get_Comments" type="Comments" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="AutoHyphenation" visibility="public" read="Get_AutoHyphenation" write="Set_AutoHyphenation" type="WordBool" />
    <property name="HyphenateCaps" visibility="public" read="Get_HyphenateCaps" write="Set_HyphenateCaps" type="WordBool" />
    <property name="HyphenationZone" visibility="public" read="Get_HyphenationZone" write="Set_HyphenationZone" type="Integer" />
    <property name="ConsecutiveHyphensLimit" visibility="public" read="Get_ConsecutiveHyphensLimit" write="Set_ConsecutiveHyphensLimit" type="Integer" />
    <property name="Sections" visibility="public" read="Get_Sections" type="Sections" />
    <property name="Paragraphs" visibility="public" read="Get_Paragraphs" type="Paragraphs" />
    <property name="Words" visibility="public" read="Get_Words" type="Words" />
    <property name="Sentences" visibility="public" read="Get_Sentences" type="Sentences" />
    <property name="Characters" visibility="public" read="Get_Characters" type="Characters" />
    <property name="Fields" visibility="public" read="Get_Fields" type="Fields" />
    <property name="FormFields" visibility="public" read="Get_FormFields" type="FormFields" />
    <property name="Styles" visibility="public" read="Get_Styles" type="Styles" />
    <property name="Frames" visibility="public" read="Get_Frames" type="Frames" />
    <property name="TablesOfFigures" visibility="public" read="Get_TablesOfFigures" type="TablesOfFigures" />
    <property name="Variables" visibility="public" read="Get_Variables" type="Variables" />
    <property name="MailMerge" visibility="public" read="Get_MailMerge" type="MailMerge" />
    <property name="Envelope" visibility="public" read="Get_Envelope" type="Envelope" />
    <property name="FullName" visibility="public" read="Get_FullName" type="WideString" default="0" />
    <property name="Revisions" visibility="public" read="Get_Revisions" type="Revisions" />
    <property name="TablesOfContents" visibility="public" read="Get_TablesOfContents" type="TablesOfContents" />
    <property name="TablesOfAuthorities" visibility="public" read="Get_TablesOfAuthorities" type="TablesOfAuthorities" />
    <property name="PageSetup" visibility="public" read="Get_PageSetup" write="Set_PageSetup" type="PageSetup" />
    <property name="Windows" visibility="public" read="Get_Windows" type="Windows" />
    <property name="HasRoutingSlip" visibility="public" read="Get_HasRoutingSlip" write="Set_HasRoutingSlip" type="WordBool" />
    <property name="RoutingSlip" visibility="public" read="Get_RoutingSlip" type="RoutingSlip" />
    <property name="Routed" visibility="public" read="Get_Routed" type="WordBool" />
    <property name="TablesOfAuthoritiesCategories" visibility="public" read="Get_TablesOfAuthoritiesCategories" type="TablesOfAuthoritiesCategories" />
    <property name="Indexes" visibility="public" read="Get_Indexes" type="Indexes" />
    <property name="Saved" visibility="public" read="Get_Saved" write="Set_Saved" type="WordBool" />
    <property name="Content" visibility="public" read="Get_Content" type="Range" />
    <property name="ActiveWindow" visibility="public" read="Get_ActiveWindow" type="Window" />
    <property name="Kind" visibility="public" read="Get_Kind" write="Set_Kind" type="TOleEnum" />
    <property name="ReadOnly" visibility="public" read="Get_ReadOnly" type="WordBool" />
    <property name="Subdocuments" visibility="public" read="Get_Subdocuments" type="Subdocuments" />
    <property name="IsMasterDocument" visibility="public" read="Get_IsMasterDocument" type="WordBool" />
    <property name="DefaultTabStop" visibility="public" read="Get_DefaultTabStop" write="Set_DefaultTabStop" type="Single" default="0" />
    <property name="EmbedTrueTypeFonts" visibility="public" read="Get_EmbedTrueTypeFonts" write="Set_EmbedTrueTypeFonts" type="WordBool" />
    <property name="SaveFormsData" visibility="public" read="Get_SaveFormsData" write="Set_SaveFormsData" type="WordBool" />
    <property name="ReadOnlyRecommended" visibility="public" read="Get_ReadOnlyRecommended" write="Set_ReadOnlyRecommended" type="WordBool" />
    <property name="SaveSubsetFonts" visibility="public" read="Get_SaveSubsetFonts" write="Set_SaveSubsetFonts" type="WordBool" />
    <property name="Compatibility[Type_]" visibility="public" read="Get_Compatibility" write="Set_Compatibility" type="WordBool" />
    <property name="StoryRanges" visibility="public" read="Get_StoryRanges" type="StoryRanges" />
    <property name="CommandBars" visibility="public" read="Get_CommandBars" type="CommandBars" />
    <property name="IsSubdocument" visibility="public" read="Get_IsSubdocument" type="WordBool" />
    <property name="SaveFormat" visibility="public" read="Get_SaveFormat" type="Integer" />
    <property name="ProtectionType" visibility="public" read="Get_ProtectionType" type="TOleEnum" />
    <property name="Hyperlinks" visibility="public" read="Get_Hyperlinks" type="Hyperlinks" />
    <property name="Shapes" visibility="public" read="Get_Shapes" type="Shapes" />
    <property name="ListTemplates" visibility="public" read="Get_ListTemplates" type="ListTemplates" />
    <property name="Lists" visibility="public" read="Get_Lists" type="Lists" />
    <property name="UpdateStylesOnOpen" visibility="public" read="Get_UpdateStylesOnOpen" write="Set_UpdateStylesOnOpen" type="WordBool" />
    <property name="InlineShapes" visibility="public" read="Get_InlineShapes" type="InlineShapes" />
    <property name="Background" visibility="public" read="Get_Background" write="Set_Background" type="Shape" />
    <property name="GrammarChecked" visibility="public" read="Get_GrammarChecked" write="Set_GrammarChecked" type="WordBool" />
    <property name="SpellingChecked" visibility="public" read="Get_SpellingChecked" write="Set_SpellingChecked" type="WordBool" />
    <property name="ShowGrammaticalErrors" visibility="public" read="Get_ShowGrammaticalErrors" write="Set_ShowGrammaticalErrors" type="WordBool" />
    <property name="ShowSpellingErrors" visibility="public" read="Get_ShowSpellingErrors" write="Set_ShowSpellingErrors" type="WordBool" />
    <property name="Versions" visibility="public" read="Get_Versions" type="Versions" />
    <property name="ShowSummary" visibility="public" read="Get_ShowSummary" write="Set_ShowSummary" type="WordBool" />
    <property name="SummaryViewMode" visibility="public" read="Get_SummaryViewMode" write="Set_SummaryViewMode" type="TOleEnum" />
    <property name="SummaryLength" visibility="public" read="Get_SummaryLength" write="Set_SummaryLength" type="Integer" />
    <property name="PrintFractionalWidths" visibility="public" read="Get_PrintFractionalWidths" write="Set_PrintFractionalWidths" type="WordBool" />
    <property name="PrintPostScriptOverText" visibility="public" read="Get_PrintPostScriptOverText" write="Set_PrintPostScriptOverText" type="WordBool" />
    <property name="Container" visibility="public" read="Get_Container" type="IDispatch" />
    <property name="PrintFormsData" visibility="public" read="Get_PrintFormsData" write="Set_PrintFormsData" type="WordBool" />
    <property name="ListParagraphs" visibility="public" read="Get_ListParagraphs" type="ListParagraphs" />
    <property name="Password" visibility="public" write="Set_Password" type="WideString" default="0" />
    <property name="WritePassword" visibility="public" write="Set_WritePassword" type="WideString" default="0" />
    <property name="HasPassword" visibility="public" read="Get_HasPassword" type="WordBool" />
    <property name="WriteReserved" visibility="public" read="Get_WriteReserved" type="WordBool" />
    <property name="ActiveWritingStyle[LanguageID]" visibility="public" read="Get_ActiveWritingStyle" write="Set_ActiveWritingStyle" type="WideString" />
    <property name="UserControl" visibility="public" read="Get_UserControl" write="Set_UserControl" type="WordBool" />
    <property name="HasMailer" visibility="public" read="Get_HasMailer" write="Set_HasMailer" type="WordBool" />
    <property name="Mailer" visibility="public" read="Get_Mailer" type="Mailer" />
    <property name="ReadabilityStatistics" visibility="public" read="Get_ReadabilityStatistics" type="ReadabilityStatistics" />
    <property name="GrammaticalErrors" visibility="public" read="Get_GrammaticalErrors" type="ProofreadingErrors" />
    <property name="SpellingErrors" visibility="public" read="Get_SpellingErrors" type="ProofreadingErrors" />
    <property name="VBProject" visibility="public" read="Get_VBProject" type="_VBProject" />
    <property name="FormsDesign" visibility="public" read="Get_FormsDesign" type="WordBool" />
    <property name="_CodeName" visibility="public" read="Get__CodeName" write="Set__CodeName" type="WideString" default="0" />
    <property name="CodeName" visibility="public" read="Get_CodeName" type="WideString" default="0" />
    <property name="SnapToGrid" visibility="public" read="Get_SnapToGrid" write="Set_SnapToGrid" type="WordBool" />
    <property name="SnapToShapes" visibility="public" read="Get_SnapToShapes" write="Set_SnapToShapes" type="WordBool" />
    <property name="GridDistanceHorizontal" visibility="public" read="Get_GridDistanceHorizontal" write="Set_GridDistanceHorizontal" type="Single" default="0" />
    <property name="GridDistanceVertical" visibility="public" read="Get_GridDistanceVertical" write="Set_GridDistanceVertical" type="Single" default="0" />
    <property name="GridOriginHorizontal" visibility="public" read="Get_GridOriginHorizontal" write="Set_GridOriginHorizontal" type="Single" default="0" />
    <property name="GridOriginVertical" visibility="public" read="Get_GridOriginVertical" write="Set_GridOriginVertical" type="Single" default="0" />
    <property name="GridSpaceBetweenHorizontalLines" visibility="public" read="Get_GridSpaceBetweenHorizontalLines" write="Set_GridSpaceBetweenHorizontalLines" type="Integer" />
    <property name="GridSpaceBetweenVerticalLines" visibility="public" read="Get_GridSpaceBetweenVerticalLines" write="Set_GridSpaceBetweenVerticalLines" type="Integer" />
    <property name="GridOriginFromMargin" visibility="public" read="Get_GridOriginFromMargin" write="Set_GridOriginFromMargin" type="WordBool" />
    <property name="KerningByAlgorithm" visibility="public" read="Get_KerningByAlgorithm" write="Set_KerningByAlgorithm" type="WordBool" />
    <property name="JustificationMode" visibility="public" read="Get_JustificationMode" write="Set_JustificationMode" type="TOleEnum" />
    <property name="FarEastLineBreakLevel" visibility="public" read="Get_FarEastLineBreakLevel" write="Set_FarEastLineBreakLevel" type="TOleEnum" />
    <property name="NoLineBreakBefore" visibility="public" read="Get_NoLineBreakBefore" write="Set_NoLineBreakBefore" type="WideString" default="0" />
    <property name="NoLineBreakAfter" visibility="public" read="Get_NoLineBreakAfter" write="Set_NoLineBreakAfter" type="WideString" default="0" />
    <property name="TrackRevisions" visibility="public" read="Get_TrackRevisions" write="Set_TrackRevisions" type="WordBool" />
    <property name="PrintRevisions" visibility="public" read="Get_PrintRevisions" write="Set_PrintRevisions" type="WordBool" />
    <property name="ShowRevisions" visibility="public" read="Get_ShowRevisions" write="Set_ShowRevisions" type="WordBool" />
  </interface>
  <interface name="WordFont" alias="Word97._Font" GUID="{00020952-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Duplicate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Font" />
      </parameters>
    </function>
    <function name="Get_Bold" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Bold" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Italic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Italic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Hidden" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Hidden" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_SmallCaps" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_SmallCaps" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_AllCaps" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_AllCaps" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_StrikeThrough" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_StrikeThrough" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_DoubleStrikeThrough" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_DoubleStrikeThrough" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_ColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_ColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Subscript" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Subscript" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Superscript" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Superscript" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Underline" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Underline" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Size" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Size" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Position" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Position" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Spacing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Spacing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Scaling" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Scaling" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Shadow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Shadow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Outline" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Outline" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Emboss" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Emboss" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Kerning" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Kerning" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Engrave" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Engrave" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Animation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Animation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Borders" />
      </parameters>
    </function>
    <procedure name="Set_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Borders" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Shading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shading" />
      </parameters>
    </function>
    <function name="Get_EmphasisMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_EmphasisMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_DisableCharacterSpaceGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisableCharacterSpaceGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_NameFarEast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_NameFarEast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_NameAscii" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_NameAscii" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_NameOther" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_NameOther" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Grow" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Shrink" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reset" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SetAsTemplateDefault" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Duplicate" visibility="public" read="Get_Duplicate" type="_Font" />
    <property name="Bold" visibility="public" read="Get_Bold" write="Set_Bold" type="Integer" />
    <property name="Italic" visibility="public" read="Get_Italic" write="Set_Italic" type="Integer" />
    <property name="Hidden" visibility="public" read="Get_Hidden" write="Set_Hidden" type="Integer" />
    <property name="SmallCaps" visibility="public" read="Get_SmallCaps" write="Set_SmallCaps" type="Integer" />
    <property name="AllCaps" visibility="public" read="Get_AllCaps" write="Set_AllCaps" type="Integer" />
    <property name="StrikeThrough" visibility="public" read="Get_StrikeThrough" write="Set_StrikeThrough" type="Integer" />
    <property name="DoubleStrikeThrough" visibility="public" read="Get_DoubleStrikeThrough" write="Set_DoubleStrikeThrough" type="Integer" />
    <property name="ColorIndex" visibility="public" read="Get_ColorIndex" write="Set_ColorIndex" type="TOleEnum" />
    <property name="Subscript" visibility="public" read="Get_Subscript" write="Set_Subscript" type="Integer" />
    <property name="Superscript" visibility="public" read="Get_Superscript" write="Set_Superscript" type="Integer" />
    <property name="Underline" visibility="public" read="Get_Underline" write="Set_Underline" type="TOleEnum" />
    <property name="Size" visibility="public" read="Get_Size" write="Set_Size" type="Single" default="0" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
    <property name="Position" visibility="public" read="Get_Position" write="Set_Position" type="Integer" />
    <property name="Spacing" visibility="public" read="Get_Spacing" write="Set_Spacing" type="Single" default="0" />
    <property name="Scaling" visibility="public" read="Get_Scaling" write="Set_Scaling" type="Integer" />
    <property name="Shadow" visibility="public" read="Get_Shadow" write="Set_Shadow" type="Integer" />
    <property name="Outline" visibility="public" read="Get_Outline" write="Set_Outline" type="Integer" />
    <property name="Emboss" visibility="public" read="Get_Emboss" write="Set_Emboss" type="Integer" />
    <property name="Kerning" visibility="public" read="Get_Kerning" write="Set_Kerning" type="Single" default="0" />
    <property name="Engrave" visibility="public" read="Get_Engrave" write="Set_Engrave" type="Integer" />
    <property name="Animation" visibility="public" read="Get_Animation" write="Set_Animation" type="TOleEnum" />
    <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
    <property name="Shading" visibility="public" read="Get_Shading" type="Shading" />
    <property name="EmphasisMark" visibility="public" read="Get_EmphasisMark" write="Set_EmphasisMark" type="TOleEnum" />
    <property name="DisableCharacterSpaceGrid" visibility="public" read="Get_DisableCharacterSpaceGrid" write="Set_DisableCharacterSpaceGrid" type="WordBool" />
    <property name="NameFarEast" visibility="public" read="Get_NameFarEast" write="Set_NameFarEast" type="WideString" default="0" />
    <property name="NameAscii" visibility="public" read="Get_NameAscii" write="Set_NameAscii" type="WideString" default="0" />
    <property name="NameOther" visibility="public" read="Get_NameOther" write="Set_NameOther" type="WideString" default="0" />
  </interface>
  <interface name="WordParagraphFormat" alias="Word97._ParagraphFormat" GUID="{00020953-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Duplicate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_ParagraphFormat" />
      </parameters>
    </function>
    <function name="Get_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="Set_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="Get_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_KeepTogether" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_KeepTogether" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_KeepWithNext" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_KeepWithNext" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_PageBreakBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_PageBreakBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_NoLineNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_NoLineNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_RightIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_RightIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_LeftIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_LeftIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_FirstLineIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_FirstLineIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_LineSpacing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_LineSpacing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_LineSpacingRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LineSpacingRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_SpaceBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_SpaceBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_SpaceAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_SpaceAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Hyphenation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Hyphenation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_WidowControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_WidowControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_FarEastLineBreakControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_FarEastLineBreakControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_WordWrap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_WordWrap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_HangingPunctuation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_HangingPunctuation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_HalfWidthPunctuationOnTopOfLine" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_HalfWidthPunctuationOnTopOfLine" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_AddSpaceBetweenFarEastAndAlpha" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_AddSpaceBetweenFarEastAndAlpha" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_AddSpaceBetweenFarEastAndDigit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_AddSpaceBetweenFarEastAndDigit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_BaseLineAlignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_BaseLineAlignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_AutoAdjustRightIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_AutoAdjustRightIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_DisableLineHeightGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_DisableLineHeightGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_TabStops" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TabStops" />
      </parameters>
    </function>
    <procedure name="Set_TabStops" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TabStops" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Borders" />
      </parameters>
    </function>
    <procedure name="Set_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Borders" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Shading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shading" />
      </parameters>
    </function>
    <function name="Get_OutlineLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_OutlineLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="CloseUp" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="OpenUp" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="OpenOrCloseUp" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="TabHangingIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="TabIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="Reset" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Space1" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Space15" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Space2" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="IndentCharWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="IndentFirstLineCharWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Duplicate" visibility="public" read="Get_Duplicate" type="_ParagraphFormat" />
    <property name="Alignment" visibility="public" read="Get_Alignment" write="Set_Alignment" type="TOleEnum" />
    <property name="KeepTogether" visibility="public" read="Get_KeepTogether" write="Set_KeepTogether" type="Integer" />
    <property name="KeepWithNext" visibility="public" read="Get_KeepWithNext" write="Set_KeepWithNext" type="Integer" />
    <property name="PageBreakBefore" visibility="public" read="Get_PageBreakBefore" write="Set_PageBreakBefore" type="Integer" />
    <property name="NoLineNumber" visibility="public" read="Get_NoLineNumber" write="Set_NoLineNumber" type="Integer" />
    <property name="RightIndent" visibility="public" read="Get_RightIndent" write="Set_RightIndent" type="Single" default="0" />
    <property name="LeftIndent" visibility="public" read="Get_LeftIndent" write="Set_LeftIndent" type="Single" default="0" />
    <property name="FirstLineIndent" visibility="public" read="Get_FirstLineIndent" write="Set_FirstLineIndent" type="Single" default="0" />
    <property name="LineSpacing" visibility="public" read="Get_LineSpacing" write="Set_LineSpacing" type="Single" default="0" />
    <property name="LineSpacingRule" visibility="public" read="Get_LineSpacingRule" write="Set_LineSpacingRule" type="TOleEnum" />
    <property name="SpaceBefore" visibility="public" read="Get_SpaceBefore" write="Set_SpaceBefore" type="Single" default="0" />
    <property name="SpaceAfter" visibility="public" read="Get_SpaceAfter" write="Set_SpaceAfter" type="Single" default="0" />
    <property name="Hyphenation" visibility="public" read="Get_Hyphenation" write="Set_Hyphenation" type="Integer" />
    <property name="WidowControl" visibility="public" read="Get_WidowControl" write="Set_WidowControl" type="Integer" />
    <property name="FarEastLineBreakControl" visibility="public" read="Get_FarEastLineBreakControl" write="Set_FarEastLineBreakControl" type="Integer" />
    <property name="WordWrap" visibility="public" read="Get_WordWrap" write="Set_WordWrap" type="Integer" />
    <property name="HangingPunctuation" visibility="public" read="Get_HangingPunctuation" write="Set_HangingPunctuation" type="Integer" />
    <property name="HalfWidthPunctuationOnTopOfLine" visibility="public" read="Get_HalfWidthPunctuationOnTopOfLine" write="Set_HalfWidthPunctuationOnTopOfLine" type="Integer" />
    <property name="AddSpaceBetweenFarEastAndAlpha" visibility="public" read="Get_AddSpaceBetweenFarEastAndAlpha" write="Set_AddSpaceBetweenFarEastAndAlpha" type="Integer" />
    <property name="AddSpaceBetweenFarEastAndDigit" visibility="public" read="Get_AddSpaceBetweenFarEastAndDigit" write="Set_AddSpaceBetweenFarEastAndDigit" type="Integer" />
    <property name="BaseLineAlignment" visibility="public" read="Get_BaseLineAlignment" write="Set_BaseLineAlignment" type="TOleEnum" />
    <property name="AutoAdjustRightIndent" visibility="public" read="Get_AutoAdjustRightIndent" write="Set_AutoAdjustRightIndent" type="Integer" />
    <property name="DisableLineHeightGrid" visibility="public" read="Get_DisableLineHeightGrid" write="Set_DisableLineHeightGrid" type="Integer" />
    <property name="TabStops" visibility="public" read="Get_TabStops" write="Set_TabStops" type="TabStops" />
    <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
    <property name="Shading" visibility="public" read="Get_Shading" type="Shading" />
    <property name="OutlineLevel" visibility="public" read="Get_OutlineLevel" write="Set_OutlineLevel" type="TOleEnum" />
  </interface>
  <interface name="WordOLEControl" alias="Word97._OLEControl" GUID="{000209A4-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Automation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Copy" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Cut" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Activate" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Left" visibility="public" read="Get_Left" write="Set_Left" type="Single" default="0" />
    <property name="Top" visibility="public" read="Get_Top" write="Set_Top" type="Single" default="0" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Single" default="0" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Single" default="0" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
    <property name="Automation" visibility="public" read="Get_Automation" type="IDispatch" />
  </interface>
  <interface name="WordLetterContent" alias="Word97._LetterContent" GUID="{000209A1-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Duplicate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_LetterContent" />
      </parameters>
    </function>
    <function name="Get_DateFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_DateFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_IncludeHeaderFooter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_IncludeHeaderFooter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PageDesign" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_PageDesign" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_LetterStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LetterStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Letterhead" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Letterhead" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_LetterheadLocation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LetterheadLocation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_LetterheadSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_LetterheadSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_RecipientName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_RecipientName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_RecipientAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_RecipientAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Salutation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Salutation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_SalutationType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_SalutationType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_RecipientReference" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_RecipientReference" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_MailingInstructions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_MailingInstructions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_AttentionLine" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_AttentionLine" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Subject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Subject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_EnclosureNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_EnclosureNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_CCList" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_CCList" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ReturnAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ReturnAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_SenderName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_SenderName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Closing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Closing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_SenderCompany" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_SenderCompany" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_SenderJobTitle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_SenderJobTitle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_SenderInitials" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_SenderInitials" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_InfoBlock" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_InfoBlock" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_RecipientCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_RecipientCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_RecipientGender" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_RecipientGender" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_ReturnAddressShortForm" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ReturnAddressShortForm" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_SenderCity" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_SenderCity" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_SenderCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_SenderCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_SenderGender" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_SenderGender" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_SenderReference" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_SenderReference" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Duplicate" visibility="public" read="Get_Duplicate" type="_LetterContent" />
    <property name="DateFormat" visibility="public" read="Get_DateFormat" write="Set_DateFormat" type="WideString" default="0" />
    <property name="IncludeHeaderFooter" visibility="public" read="Get_IncludeHeaderFooter" write="Set_IncludeHeaderFooter" type="WordBool" />
    <property name="PageDesign" visibility="public" read="Get_PageDesign" write="Set_PageDesign" type="WideString" default="0" />
    <property name="LetterStyle" visibility="public" read="Get_LetterStyle" write="Set_LetterStyle" type="TOleEnum" />
    <property name="Letterhead" visibility="public" read="Get_Letterhead" write="Set_Letterhead" type="WordBool" />
    <property name="LetterheadLocation" visibility="public" read="Get_LetterheadLocation" write="Set_LetterheadLocation" type="TOleEnum" />
    <property name="LetterheadSize" visibility="public" read="Get_LetterheadSize" write="Set_LetterheadSize" type="Single" default="0" />
    <property name="RecipientName" visibility="public" read="Get_RecipientName" write="Set_RecipientName" type="WideString" default="0" />
    <property name="RecipientAddress" visibility="public" read="Get_RecipientAddress" write="Set_RecipientAddress" type="WideString" default="0" />
    <property name="Salutation" visibility="public" read="Get_Salutation" write="Set_Salutation" type="WideString" default="0" />
    <property name="SalutationType" visibility="public" read="Get_SalutationType" write="Set_SalutationType" type="TOleEnum" />
    <property name="RecipientReference" visibility="public" read="Get_RecipientReference" write="Set_RecipientReference" type="WideString" default="0" />
    <property name="MailingInstructions" visibility="public" read="Get_MailingInstructions" write="Set_MailingInstructions" type="WideString" default="0" />
    <property name="AttentionLine" visibility="public" read="Get_AttentionLine" write="Set_AttentionLine" type="WideString" default="0" />
    <property name="Subject" visibility="public" read="Get_Subject" write="Set_Subject" type="WideString" default="0" />
    <property name="EnclosureNumber" visibility="public" read="Get_EnclosureNumber" write="Set_EnclosureNumber" type="Integer" />
    <property name="CCList" visibility="public" read="Get_CCList" write="Set_CCList" type="WideString" default="0" />
    <property name="ReturnAddress" visibility="public" read="Get_ReturnAddress" write="Set_ReturnAddress" type="WideString" default="0" />
    <property name="SenderName" visibility="public" read="Get_SenderName" write="Set_SenderName" type="WideString" default="0" />
    <property name="Closing" visibility="public" read="Get_Closing" write="Set_Closing" type="WideString" default="0" />
    <property name="SenderCompany" visibility="public" read="Get_SenderCompany" write="Set_SenderCompany" type="WideString" default="0" />
    <property name="SenderJobTitle" visibility="public" read="Get_SenderJobTitle" write="Set_SenderJobTitle" type="WideString" default="0" />
    <property name="SenderInitials" visibility="public" read="Get_SenderInitials" write="Set_SenderInitials" type="WideString" default="0" />
    <property name="InfoBlock" visibility="public" read="Get_InfoBlock" write="Set_InfoBlock" type="WordBool" />
    <property name="RecipientCode" visibility="public" read="Get_RecipientCode" write="Set_RecipientCode" type="WideString" default="0" />
    <property name="RecipientGender" visibility="public" read="Get_RecipientGender" write="Set_RecipientGender" type="TOleEnum" />
    <property name="ReturnAddressShortForm" visibility="public" read="Get_ReturnAddressShortForm" write="Set_ReturnAddressShortForm" type="WideString" default="0" />
    <property name="SenderCity" visibility="public" read="Get_SenderCity" write="Set_SenderCity" type="WideString" default="0" />
    <property name="SenderCode" visibility="public" read="Get_SenderCode" write="Set_SenderCode" type="WideString" default="0" />
    <property name="SenderGender" visibility="public" read="Get_SenderGender" write="Set_SenderGender" type="TOleEnum" />
    <property name="SenderReference" visibility="public" read="Get_SenderReference" write="Set_SenderReference" type="WideString" default="0" />
  </interface>
  <pointer name="POleVariant1" type="OleVariant" indircnt="1" />
  <pointer name="PPSafeArray1" type="PSafeArray" indircnt="1" />
  <pointer name="PPUserType1" type="Shape" indircnt="1" />
  <interface name="_Application" GUID="{00020970-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Documents" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Documents" />
      </parameters>
    </function>
    <function name="Get_Windows" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Windows" />
      </parameters>
    </function>
    <function name="Get_ActiveDocument" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Document" />
      </parameters>
    </function>
    <function name="Get_ActiveWindow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Window" />
      </parameters>
    </function>
    <function name="Get_Selection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordSelection" />
      </parameters>
    </function>
    <function name="Get_WordBasic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_RecentFiles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="RecentFiles" />
      </parameters>
    </function>
    <function name="Get_NormalTemplate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Template" />
      </parameters>
    </function>
    <function name="Get_System_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="System" />
      </parameters>
    </function>
    <function name="Get_AutoCorrect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="AutoCorrect" />
      </parameters>
    </function>
    <function name="Get_FontNames" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FontNames" />
      </parameters>
    </function>
    <function name="Get_LandscapeFontNames" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FontNames" />
      </parameters>
    </function>
    <function name="Get_PortraitFontNames" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FontNames" />
      </parameters>
    </function>
    <function name="Get_Languages" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Languages" />
      </parameters>
    </function>
    <function name="Get_Assistant" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Assistant" />
      </parameters>
    </function>
    <function name="Get_Browser" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Browser" />
      </parameters>
    </function>
    <function name="Get_FileConverters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FileConverters" />
      </parameters>
    </function>
    <function name="Get_MailingLabel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="MailingLabel" />
      </parameters>
    </function>
    <function name="Get_Dialogs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Dialogs" />
      </parameters>
    </function>
    <function name="Get_CaptionLabels" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CaptionLabels" />
      </parameters>
    </function>
    <function name="Get_AutoCaptions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="AutoCaptions" />
      </parameters>
    </function>
    <function name="Get_AddIns" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="AddIns" />
      </parameters>
    </function>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Version" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_ScreenUpdating" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ScreenUpdating" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PrintPreview" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintPreview" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Tasks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Tasks" />
      </parameters>
    </function>
    <function name="Get_DisplayStatusBar" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayStatusBar" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SpecialMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_UsableWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_UsableHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_MathCoprocessorAvailable" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_MouseAvailable" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_International" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="TOleEnum" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_Build" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_CapsLock" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_NumLock" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_UserName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_UserName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_UserInitials" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_UserInitials" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_UserAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_UserAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_MacroContainer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_DisplayRecentFiles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayRecentFiles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_CommandBars" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBars" />
      </parameters>
    </function>
    <function name="Get_SynonymInfo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Word" type="WideString" paramflags="const" />
        <parameter name="LanguageID" type="OleVariant" paramflags="var" />
        <retval type="SynonymInfo" />
      </parameters>
    </function>
    <function name="Get_VBE" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="VBE" />
      </parameters>
    </function>
    <function name="Get_DefaultSaveFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_DefaultSaveFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ListGalleries" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ListGalleries" />
      </parameters>
    </function>
    <function name="Get_ActivePrinter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ActivePrinter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Templates" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Templates" />
      </parameters>
    </function>
    <function name="Get_CustomizationContext" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Set_CustomizationContext" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="IDispatch" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_KeyBindings" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="KeyBindings" />
      </parameters>
    </function>
    <function name="Get_KeysBoundTo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="KeyCategory" type="TOleEnum" />
        <parameter name="Command" type="WideString" paramflags="const" />
        <parameter name="CommandParameter" type="OleVariant" paramflags="var" />
        <retval type="KeysBoundTo" />
      </parameters>
    </function>
    <function name="Get_FindKey" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="KeyCode" type="Integer" />
        <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
        <retval type="KeyBinding" />
      </parameters>
    </function>
    <function name="Get_Caption" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Caption" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Path" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_DisplayScrollBars" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayScrollBars" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_StartupPath" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_StartupPath" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_BackgroundSavingStatus" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_BackgroundPrintingStatus" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_WindowState" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_WindowState" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_DisplayAutoCompleteTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayAutoCompleteTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Options" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Options" />
      </parameters>
    </function>
    <function name="Get_DisplayAlerts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_DisplayAlerts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_CustomDictionaries" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Dictionaries" />
      </parameters>
    </function>
    <function name="Get_PathSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_StatusBar" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Param1" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_MAPIAvailable" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_DisplayScreenTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayScreenTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_EnableCancelKey" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_EnableCancelKey" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_UserControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_FileSearch" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FileSearch" />
      </parameters>
    </function>
    <function name="Get_MailSystem" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_DefaultTableSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_DefaultTableSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ShowVisualBasicEditor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowVisualBasicEditor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_BrowseExtraFileTypes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_BrowseExtraFileTypes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_IsObjectValid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Object_" type="IDispatch" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_HangulHanjaDictionaries" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="HangulHanjaConversionDictionaries" />
      </parameters>
    </function>
    <function name="Get_MailMessage" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="MailMessage" />
      </parameters>
    </function>
    <function name="Get_FocusInMailHeader" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Quit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SaveChanges" type="OleVariant" paramflags="var" />
        <parameter name="OriginalFormat" type="OleVariant" paramflags="var" />
        <parameter name="RouteDocument" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="ScreenRefresh" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="PrintOut" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Background" type="OleVariant" paramflags="var" />
        <parameter name="Append" type="OleVariant" paramflags="var" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
        <parameter name="From" type="OleVariant" paramflags="var" />
        <parameter name="To_" type="OleVariant" paramflags="var" />
        <parameter name="Item" type="OleVariant" paramflags="var" />
        <parameter name="Copies" type="OleVariant" paramflags="var" />
        <parameter name="Pages" type="OleVariant" paramflags="var" />
        <parameter name="PageType" type="OleVariant" paramflags="var" />
        <parameter name="PrintToFile" type="OleVariant" paramflags="var" />
        <parameter name="Collate" type="OleVariant" paramflags="var" />
        <parameter name="FileName" type="OleVariant" paramflags="var" />
        <parameter name="ActivePrinterMacGX" type="OleVariant" paramflags="var" />
        <parameter name="ManualDuplexPrint" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="LookupNameProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="SubstituteFont" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="UnavailableFont" type="WideString" paramflags="const" />
        <parameter name="SubstituteFont" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Repeat_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Times" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="DDEExecute" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Channel" type="Integer" />
        <parameter name="Command" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="DDEInitiate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="App" type="WideString" paramflags="const" />
        <parameter name="Topic" type="WideString" paramflags="const" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="DDEPoke" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Channel" type="Integer" />
        <parameter name="Item" type="WideString" paramflags="const" />
        <parameter name="Data" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="DDERequest" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Channel" type="Integer" />
        <parameter name="Item" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="DDETerminate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Channel" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="DDETerminateAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="BuildKeyCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Arg1" type="TOleEnum" />
        <parameter name="Arg2" type="OleVariant" paramflags="var" />
        <parameter name="Arg3" type="OleVariant" paramflags="var" />
        <parameter name="Arg4" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="KeyString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="KeyCode" type="Integer" />
        <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="OrganizerCopy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Source" type="WideString" paramflags="const" />
        <parameter name="Destination" type="WideString" paramflags="const" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Object_" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="OrganizerDelete" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Source" type="WideString" paramflags="const" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Object_" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="OrganizerRename" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Source" type="WideString" paramflags="const" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="NewName" type="WideString" paramflags="const" />
        <parameter name="Object_" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="AddAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="TagID" type="PSafeArray" paramflags="var" />
        <parameter name="Value" type="PSafeArray" paramflags="var" />
      </parameters>
    </procedure>
    <function name="GetAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <parameter name="AddressProperties" type="OleVariant" paramflags="var" />
        <parameter name="UseAutoText" type="OleVariant" paramflags="var" />
        <parameter name="DisplaySelectDialog" type="OleVariant" paramflags="var" />
        <parameter name="SelectDialog" type="OleVariant" paramflags="var" />
        <parameter name="CheckNamesDialog" type="OleVariant" paramflags="var" />
        <parameter name="RecentAddressesChoice" type="OleVariant" paramflags="var" />
        <parameter name="UpdateRecentAddresses" type="OleVariant" paramflags="var" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="CheckGrammar" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="String_" type="WideString" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="CheckSpelling" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Word" type="WideString" paramflags="const" />
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="ResetIgnoreAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="GetSpellingSuggestions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Word" type="WideString" paramflags="const" />
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
        <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
        <retval type="SpellingSuggestions" />
      </parameters>
    </function>
    <procedure name="GoBack" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Help" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="HelpType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="AutomaticChange" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ShowMe" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="HelpTool" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="NewWindow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Window" />
      </parameters>
    </function>
    <procedure name="ListCommands" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ListAllCommands" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="ShowClipboard" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="OnTime" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="When" type="OleVariant" paramflags="var" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Tolerance" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="NextLetter" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="MountVolume" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Zone" type="WideString" paramflags="const" />
        <parameter name="Server" type="WideString" paramflags="const" />
        <parameter name="Volume" type="WideString" paramflags="const" />
        <parameter name="User" type="OleVariant" paramflags="var" />
        <parameter name="UserPassword" type="OleVariant" paramflags="var" />
        <parameter name="VolumePassword" type="OleVariant" paramflags="var" />
        <retval type="SmallInt" />
      </parameters>
    </function>
    <function name="CleanString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="String_" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SendFax" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ChangeFileOpenDirectory" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Path" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Run" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="MacroName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="GoForward" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Move" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Left" type="Integer" />
        <parameter name="Top" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Resize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Width" type="Integer" />
        <parameter name="Height" type="Integer" />
      </parameters>
    </procedure>
    <function name="InchesToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Inches" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="CentimetersToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Centimeters" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="MillimetersToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Millimeters" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PicasToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Picas" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="LinesToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Lines" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToInches" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToCentimeters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToMillimeters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToPicas" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Activate" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Documents" visibility="public" read="Get_Documents" type="Documents" />
    <property name="Windows" visibility="public" read="Get_Windows" type="Windows" />
    <property name="ActiveDocument" visibility="public" read="Get_ActiveDocument" type="_Document" />
    <property name="ActiveWindow" visibility="public" read="Get_ActiveWindow" type="Window" />
    <property name="Selection" visibility="public" read="Get_Selection" type="WordSelection" />
    <property name="WordBasic" visibility="public" read="Get_WordBasic" type="IDispatch" />
    <property name="RecentFiles" visibility="public" read="Get_RecentFiles" type="RecentFiles" />
    <property name="NormalTemplate" visibility="public" read="Get_NormalTemplate" type="Template" />
    <property name="System_" visibility="public" read="Get_System_" type="System" />
    <property name="AutoCorrect" visibility="public" read="Get_AutoCorrect" type="AutoCorrect" />
    <property name="FontNames" visibility="public" read="Get_FontNames" type="FontNames" />
    <property name="LandscapeFontNames" visibility="public" read="Get_LandscapeFontNames" type="FontNames" />
    <property name="PortraitFontNames" visibility="public" read="Get_PortraitFontNames" type="FontNames" />
    <property name="Languages" visibility="public" read="Get_Languages" type="Languages" />
    <property name="Assistant" visibility="public" read="Get_Assistant" type="Assistant" />
    <property name="Browser" visibility="public" read="Get_Browser" type="Browser" />
    <property name="FileConverters" visibility="public" read="Get_FileConverters" type="FileConverters" />
    <property name="MailingLabel" visibility="public" read="Get_MailingLabel" type="MailingLabel" />
    <property name="Dialogs" visibility="public" read="Get_Dialogs" type="Dialogs" />
    <property name="CaptionLabels" visibility="public" read="Get_CaptionLabels" type="CaptionLabels" />
    <property name="AutoCaptions" visibility="public" read="Get_AutoCaptions" type="AutoCaptions" />
    <property name="AddIns" visibility="public" read="Get_AddIns" type="AddIns" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="WordBool" />
    <property name="Version" visibility="public" read="Get_Version" type="WideString" default="0" />
    <property name="ScreenUpdating" visibility="public" read="Get_ScreenUpdating" write="Set_ScreenUpdating" type="WordBool" />
    <property name="PrintPreview" visibility="public" read="Get_PrintPreview" write="Set_PrintPreview" type="WordBool" />
    <property name="Tasks" visibility="public" read="Get_Tasks" type="Tasks" />
    <property name="DisplayStatusBar" visibility="public" read="Get_DisplayStatusBar" write="Set_DisplayStatusBar" type="WordBool" />
    <property name="SpecialMode" visibility="public" read="Get_SpecialMode" type="WordBool" />
    <property name="UsableWidth" visibility="public" read="Get_UsableWidth" type="Integer" />
    <property name="UsableHeight" visibility="public" read="Get_UsableHeight" type="Integer" />
    <property name="MathCoprocessorAvailable" visibility="public" read="Get_MathCoprocessorAvailable" type="WordBool" />
    <property name="MouseAvailable" visibility="public" read="Get_MouseAvailable" type="WordBool" />
    <property name="International[Index]" visibility="public" read="Get_International" type="OleVariant" />
    <property name="Build" visibility="public" read="Get_Build" type="WideString" default="0" />
    <property name="CapsLock" visibility="public" read="Get_CapsLock" type="WordBool" />
    <property name="NumLock" visibility="public" read="Get_NumLock" type="WordBool" />
    <property name="UserName" visibility="public" read="Get_UserName" write="Set_UserName" type="WideString" default="0" />
    <property name="UserInitials" visibility="public" read="Get_UserInitials" write="Set_UserInitials" type="WideString" default="0" />
    <property name="UserAddress" visibility="public" read="Get_UserAddress" write="Set_UserAddress" type="WideString" default="0" />
    <property name="MacroContainer" visibility="public" read="Get_MacroContainer" type="IDispatch" />
    <property name="DisplayRecentFiles" visibility="public" read="Get_DisplayRecentFiles" write="Set_DisplayRecentFiles" type="WordBool" />
    <property name="CommandBars" visibility="public" read="Get_CommandBars" type="CommandBars" />
    <property name="SynonymInfo[const Word][LanguageID]" visibility="public" read="Get_SynonymInfo" type="SynonymInfo" />
    <property name="VBE" visibility="public" read="Get_VBE" type="VBE" />
    <property name="DefaultSaveFormat" visibility="public" read="Get_DefaultSaveFormat" write="Set_DefaultSaveFormat" type="WideString" default="0" />
    <property name="ListGalleries" visibility="public" read="Get_ListGalleries" type="ListGalleries" />
    <property name="ActivePrinter" visibility="public" read="Get_ActivePrinter" write="Set_ActivePrinter" type="WideString" default="0" />
    <property name="Templates" visibility="public" read="Get_Templates" type="Templates" />
    <property name="CustomizationContext" visibility="public" read="Get_CustomizationContext" write="Set_CustomizationContext" type="IDispatch" />
    <property name="KeyBindings" visibility="public" read="Get_KeyBindings" type="KeyBindings" />
    <property name="KeysBoundTo[KeyCategory][const Command][CommandParameter]" visibility="public" read="Get_KeysBoundTo" type="KeysBoundTo" />
    <property name="FindKey[KeyCode][KeyCode2]" visibility="public" read="Get_FindKey" type="KeyBinding" />
    <property name="Caption" visibility="public" read="Get_Caption" write="Set_Caption" type="WideString" default="0" />
    <property name="Path" visibility="public" read="Get_Path" type="WideString" default="0" />
    <property name="DisplayScrollBars" visibility="public" read="Get_DisplayScrollBars" write="Set_DisplayScrollBars" type="WordBool" />
    <property name="StartupPath" visibility="public" read="Get_StartupPath" write="Set_StartupPath" type="WideString" default="0" />
    <property name="BackgroundSavingStatus" visibility="public" read="Get_BackgroundSavingStatus" type="Integer" />
    <property name="BackgroundPrintingStatus" visibility="public" read="Get_BackgroundPrintingStatus" type="Integer" />
    <property name="Left" visibility="public" read="Get_Left" write="Set_Left" type="Integer" />
    <property name="Top" visibility="public" read="Get_Top" write="Set_Top" type="Integer" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Integer" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Integer" />
    <property name="WindowState" visibility="public" read="Get_WindowState" write="Set_WindowState" type="TOleEnum" />
    <property name="DisplayAutoCompleteTips" visibility="public" read="Get_DisplayAutoCompleteTips" write="Set_DisplayAutoCompleteTips" type="WordBool" />
    <property name="Options" visibility="public" read="Get_Options" type="Options" />
    <property name="DisplayAlerts" visibility="public" read="Get_DisplayAlerts" write="Set_DisplayAlerts" type="TOleEnum" />
    <property name="CustomDictionaries" visibility="public" read="Get_CustomDictionaries" type="Dictionaries" />
    <property name="PathSeparator" visibility="public" read="Get_PathSeparator" type="WideString" default="0" />
    <property name="StatusBar" visibility="public" write="Set_StatusBar" type="WideString" default="0" />
    <property name="MAPIAvailable" visibility="public" read="Get_MAPIAvailable" type="WordBool" />
    <property name="DisplayScreenTips" visibility="public" read="Get_DisplayScreenTips" write="Set_DisplayScreenTips" type="WordBool" />
    <property name="EnableCancelKey" visibility="public" read="Get_EnableCancelKey" write="Set_EnableCancelKey" type="TOleEnum" />
    <property name="UserControl" visibility="public" read="Get_UserControl" type="WordBool" />
    <property name="FileSearch" visibility="public" read="Get_FileSearch" type="FileSearch" />
    <property name="MailSystem" visibility="public" read="Get_MailSystem" type="TOleEnum" />
    <property name="DefaultTableSeparator" visibility="public" read="Get_DefaultTableSeparator" write="Set_DefaultTableSeparator" type="WideString" default="0" />
    <property name="ShowVisualBasicEditor" visibility="public" read="Get_ShowVisualBasicEditor" write="Set_ShowVisualBasicEditor" type="WordBool" />
    <property name="BrowseExtraFileTypes" visibility="public" read="Get_BrowseExtraFileTypes" write="Set_BrowseExtraFileTypes" type="WideString" default="0" />
    <property name="IsObjectValid[const Object_]" visibility="public" read="Get_IsObjectValid" type="WordBool" />
    <property name="HangulHanjaDictionaries" visibility="public" read="Get_HangulHanjaDictionaries" type="HangulHanjaConversionDictionaries" />
    <property name="MailMessage" visibility="public" read="Get_MailMessage" type="MailMessage" />
    <property name="FocusInMailHeader" visibility="public" read="Get_FocusInMailHeader" type="WordBool" />
  </interface>
  <interface name="_ApplicationDisp" GUID="{00020970-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Documents" visibility="automated" type="Documents" />
    <property name="Windows" visibility="automated" type="Windows" />
    <property name="ActiveDocument" visibility="automated" type="_Document" />
    <property name="ActiveWindow" visibility="automated" type="Window" />
    <property name="Selection" visibility="automated" type="WordSelection" />
    <property name="WordBasic" visibility="automated" type="IDispatch" />
    <property name="RecentFiles" visibility="automated" type="RecentFiles" />
    <property name="NormalTemplate" visibility="automated" type="Template" />
    <property name="System_" visibility="automated" type="System" />
    <property name="AutoCorrect" visibility="automated" type="AutoCorrect" />
    <property name="FontNames" visibility="automated" type="FontNames" />
    <property name="LandscapeFontNames" visibility="automated" type="FontNames" />
    <property name="PortraitFontNames" visibility="automated" type="FontNames" />
    <property name="Languages" visibility="automated" type="Languages" />
    <property name="Assistant" visibility="automated" type="Assistant" />
    <property name="Browser" visibility="automated" type="Browser" />
    <property name="FileConverters" visibility="automated" type="FileConverters" />
    <property name="MailingLabel" visibility="automated" type="MailingLabel" />
    <property name="Dialogs" visibility="automated" type="Dialogs" />
    <property name="CaptionLabels" visibility="automated" type="CaptionLabels" />
    <property name="AutoCaptions" visibility="automated" type="AutoCaptions" />
    <property name="AddIns" visibility="automated" type="AddIns" />
    <property name="Visible" visibility="automated" type="WordBool" />
    <property name="Version" visibility="automated" type="WideString" />
    <property name="ScreenUpdating" visibility="automated" type="WordBool" />
    <property name="PrintPreview" visibility="automated" type="WordBool" />
    <property name="Tasks" visibility="automated" type="Tasks" />
    <property name="DisplayStatusBar" visibility="automated" type="WordBool" />
    <property name="SpecialMode" visibility="automated" type="WordBool" />
    <property name="UsableWidth" visibility="automated" type="Integer" />
    <property name="UsableHeight" visibility="automated" type="Integer" />
    <property name="MathCoprocessorAvailable" visibility="automated" type="WordBool" />
    <property name="MouseAvailable" visibility="automated" type="WordBool" />
    <property name="International[Index]" visibility="automated" type="OleVariant" />
    <property name="Build" visibility="automated" type="WideString" />
    <property name="CapsLock" visibility="automated" type="WordBool" />
    <property name="NumLock" visibility="automated" type="WordBool" />
    <property name="UserName" visibility="automated" type="WideString" />
    <property name="UserInitials" visibility="automated" type="WideString" />
    <property name="UserAddress" visibility="automated" type="WideString" />
    <property name="MacroContainer" visibility="automated" type="IDispatch" />
    <property name="DisplayRecentFiles" visibility="automated" type="WordBool" />
    <property name="CommandBars" visibility="automated" type="CommandBars" />
    <property name="SynonymInfo[const Word][LanguageID]" visibility="automated" type="SynonymInfo" />
    <property name="VBE" visibility="automated" type="VBE" />
    <property name="DefaultSaveFormat" visibility="automated" type="WideString" />
    <property name="ListGalleries" visibility="automated" type="ListGalleries" />
    <property name="ActivePrinter" visibility="automated" type="WideString" />
    <property name="Templates" visibility="automated" type="Templates" />
    <property name="CustomizationContext" visibility="automated" type="IDispatch" />
    <property name="KeyBindings" visibility="automated" type="KeyBindings" />
    <property name="KeysBoundTo[KeyCategory][const Command][CommandParameter]" visibility="automated" type="KeysBoundTo" />
    <property name="FindKey[KeyCode][KeyCode2]" visibility="automated" type="KeyBinding" />
    <property name="Caption" visibility="automated" type="WideString" />
    <property name="Path" visibility="automated" type="WideString" />
    <property name="DisplayScrollBars" visibility="automated" type="WordBool" />
    <property name="StartupPath" visibility="automated" type="WideString" />
    <property name="BackgroundSavingStatus" visibility="automated" type="Integer" />
    <property name="BackgroundPrintingStatus" visibility="automated" type="Integer" />
    <property name="Left" visibility="automated" type="Integer" />
    <property name="Top" visibility="automated" type="Integer" />
    <property name="Width" visibility="automated" type="Integer" />
    <property name="Height" visibility="automated" type="Integer" />
    <property name="WindowState" visibility="automated" type="TOleEnum" />
    <property name="DisplayAutoCompleteTips" visibility="automated" type="WordBool" />
    <property name="Options" visibility="automated" type="Options" />
    <property name="DisplayAlerts" visibility="automated" type="TOleEnum" />
    <property name="CustomDictionaries" visibility="automated" type="Dictionaries" />
    <property name="PathSeparator" visibility="automated" type="WideString" />
    <property name="StatusBar" visibility="automated" type="WideString" />
    <property name="MAPIAvailable" visibility="automated" type="WordBool" />
    <property name="DisplayScreenTips" visibility="automated" type="WordBool" />
    <property name="EnableCancelKey" visibility="automated" type="TOleEnum" />
    <property name="UserControl" visibility="automated" type="WordBool" />
    <property name="FileSearch" visibility="automated" type="FileSearch" />
    <property name="MailSystem" visibility="automated" type="TOleEnum" />
    <property name="DefaultTableSeparator" visibility="automated" type="WideString" />
    <property name="ShowVisualBasicEditor" visibility="automated" type="WordBool" />
    <property name="BrowseExtraFileTypes" visibility="automated" type="WideString" />
    <property name="IsObjectValid[const Object_]" visibility="automated" type="WordBool" />
    <property name="HangulHanjaDictionaries" visibility="automated" type="HangulHanjaConversionDictionaries" />
    <property name="MailMessage" visibility="automated" type="MailMessage" />
    <property name="FocusInMailHeader" visibility="automated" type="WordBool" />
    <procedure name="Quit" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="SaveChanges" type="OleVariant" paramflags="var" />
        <parameter name="OriginalFormat" type="OleVariant" paramflags="var" />
        <parameter name="RouteDocument" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="ScreenRefresh" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="PrintOut" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Background" type="OleVariant" paramflags="var" />
        <parameter name="Append" type="OleVariant" paramflags="var" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
        <parameter name="From" type="OleVariant" paramflags="var" />
        <parameter name="To_" type="OleVariant" paramflags="var" />
        <parameter name="Item" type="OleVariant" paramflags="var" />
        <parameter name="Copies" type="OleVariant" paramflags="var" />
        <parameter name="Pages" type="OleVariant" paramflags="var" />
        <parameter name="PageType" type="OleVariant" paramflags="var" />
        <parameter name="PrintToFile" type="OleVariant" paramflags="var" />
        <parameter name="Collate" type="OleVariant" paramflags="var" />
        <parameter name="FileName" type="OleVariant" paramflags="var" />
        <parameter name="ActivePrinterMacGX" type="OleVariant" paramflags="var" />
        <parameter name="ManualDuplexPrint" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="LookupNameProperties" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="SubstituteFont" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="UnavailableFont" type="WideString" paramflags="const" />
        <parameter name="SubstituteFont" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Repeat_" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Times" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="DDEExecute" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Channel" type="Integer" />
        <parameter name="Command" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="DDEInitiate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="App" type="WideString" paramflags="const" />
        <parameter name="Topic" type="WideString" paramflags="const" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="DDEPoke" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Channel" type="Integer" />
        <parameter name="Item" type="WideString" paramflags="const" />
        <parameter name="Data" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="DDERequest" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Channel" type="Integer" />
        <parameter name="Item" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="DDETerminate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Channel" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="DDETerminateAll" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="BuildKeyCode" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Arg1" type="TOleEnum" />
        <parameter name="Arg2" type="OleVariant" paramflags="var" />
        <parameter name="Arg3" type="OleVariant" paramflags="var" />
        <parameter name="Arg4" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="KeyString" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="KeyCode" type="Integer" />
        <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="OrganizerCopy" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Source" type="WideString" paramflags="const" />
        <parameter name="Destination" type="WideString" paramflags="const" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Object_" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="OrganizerDelete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Source" type="WideString" paramflags="const" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Object_" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="OrganizerRename" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Source" type="WideString" paramflags="const" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="NewName" type="WideString" paramflags="const" />
        <parameter name="Object_" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="AddAddress" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="TagID" type="OleVariant" paramflags="var" />
        <parameter name="Value" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="GetAddress" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <parameter name="AddressProperties" type="OleVariant" paramflags="var" />
        <parameter name="UseAutoText" type="OleVariant" paramflags="var" />
        <parameter name="DisplaySelectDialog" type="OleVariant" paramflags="var" />
        <parameter name="SelectDialog" type="OleVariant" paramflags="var" />
        <parameter name="CheckNamesDialog" type="OleVariant" paramflags="var" />
        <parameter name="RecentAddressesChoice" type="OleVariant" paramflags="var" />
        <parameter name="UpdateRecentAddresses" type="OleVariant" paramflags="var" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="CheckGrammar" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="String_" type="WideString" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="CheckSpelling" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Word" type="WideString" paramflags="const" />
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="ResetIgnoreAll" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="GetSpellingSuggestions" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Word" type="WideString" paramflags="const" />
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
        <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
        <retval type="SpellingSuggestions" />
      </parameters>
    </function>
    <procedure name="GoBack" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Help" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="HelpType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="AutomaticChange" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ShowMe" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="HelpTool" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="NewWindow" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Window" />
      </parameters>
    </function>
    <procedure name="ListCommands" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ListAllCommands" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="ShowClipboard" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="OnTime" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="When" type="OleVariant" paramflags="var" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Tolerance" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="NextLetter" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="MountVolume" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Zone" type="WideString" paramflags="const" />
        <parameter name="Server" type="WideString" paramflags="const" />
        <parameter name="Volume" type="WideString" paramflags="const" />
        <parameter name="User" type="OleVariant" paramflags="var" />
        <parameter name="UserPassword" type="OleVariant" paramflags="var" />
        <parameter name="VolumePassword" type="OleVariant" paramflags="var" />
        <retval type="SmallInt" />
      </parameters>
    </function>
    <function name="CleanString" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="String_" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SendFax" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ChangeFileOpenDirectory" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Path" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Run" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="MacroName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="GoForward" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Move" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Left" type="Integer" />
        <parameter name="Top" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Resize" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Width" type="Integer" />
        <parameter name="Height" type="Integer" />
      </parameters>
    </procedure>
    <function name="InchesToPoints" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Inches" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="CentimetersToPoints" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Centimeters" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="MillimetersToPoints" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Millimeters" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PicasToPoints" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Picas" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="LinesToPoints" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Lines" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToInches" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToCentimeters" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToMillimeters" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToPicas" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToLines" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Activate" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="_Global" GUID="{000209B9-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Documents" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Documents" />
      </parameters>
    </function>
    <function name="Get_Windows" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Windows" />
      </parameters>
    </function>
    <function name="Get_ActiveDocument" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Document" />
      </parameters>
    </function>
    <function name="Get_ActiveWindow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Window" />
      </parameters>
    </function>
    <function name="Get_Selection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordSelection" />
      </parameters>
    </function>
    <function name="Get_WordBasic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_PrintPreview" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintPreview" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_RecentFiles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="RecentFiles" />
      </parameters>
    </function>
    <function name="Get_NormalTemplate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Template" />
      </parameters>
    </function>
    <function name="Get_System_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="System" />
      </parameters>
    </function>
    <function name="Get_AutoCorrect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="AutoCorrect" />
      </parameters>
    </function>
    <function name="Get_FontNames" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FontNames" />
      </parameters>
    </function>
    <function name="Get_LandscapeFontNames" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FontNames" />
      </parameters>
    </function>
    <function name="Get_PortraitFontNames" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FontNames" />
      </parameters>
    </function>
    <function name="Get_Languages" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Languages" />
      </parameters>
    </function>
    <function name="Get_Assistant" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Assistant" />
      </parameters>
    </function>
    <function name="Get_FileConverters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FileConverters" />
      </parameters>
    </function>
    <function name="Get_Dialogs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Dialogs" />
      </parameters>
    </function>
    <function name="Get_CaptionLabels" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CaptionLabels" />
      </parameters>
    </function>
    <function name="Get_AutoCaptions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="AutoCaptions" />
      </parameters>
    </function>
    <function name="Get_AddIns" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="AddIns" />
      </parameters>
    </function>
    <function name="Get_Tasks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Tasks" />
      </parameters>
    </function>
    <function name="Get_MacroContainer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_CommandBars" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBars" />
      </parameters>
    </function>
    <function name="Get_SynonymInfo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Word" type="WideString" paramflags="const" />
        <parameter name="LanguageID" type="OleVariant" paramflags="var" />
        <retval type="SynonymInfo" />
      </parameters>
    </function>
    <function name="Get_VBE" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="VBE" />
      </parameters>
    </function>
    <function name="Get_ListGalleries" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ListGalleries" />
      </parameters>
    </function>
    <function name="Get_ActivePrinter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ActivePrinter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Templates" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Templates" />
      </parameters>
    </function>
    <function name="Get_CustomizationContext" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Set_CustomizationContext" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="IDispatch" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_KeyBindings" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="KeyBindings" />
      </parameters>
    </function>
    <function name="Get_KeysBoundTo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="KeyCategory" type="TOleEnum" />
        <parameter name="Command" type="WideString" paramflags="const" />
        <parameter name="CommandParameter" type="OleVariant" paramflags="var" />
        <retval type="KeysBoundTo" />
      </parameters>
    </function>
    <function name="Get_FindKey" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="KeyCode" type="Integer" />
        <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
        <retval type="KeyBinding" />
      </parameters>
    </function>
    <function name="Get_Options" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Options" />
      </parameters>
    </function>
    <function name="Get_CustomDictionaries" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Dictionaries" />
      </parameters>
    </function>
    <procedure name="Set_StatusBar" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Param1" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ShowVisualBasicEditor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowVisualBasicEditor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_IsObjectValid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Object_" type="IDispatch" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_HangulHanjaDictionaries" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="HangulHanjaConversionDictionaries" />
      </parameters>
    </function>
    <function name="Repeat_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Times" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="DDEExecute" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Channel" type="Integer" />
        <parameter name="Command" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="DDEInitiate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="App" type="WideString" paramflags="const" />
        <parameter name="Topic" type="WideString" paramflags="const" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="DDEPoke" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Channel" type="Integer" />
        <parameter name="Item" type="WideString" paramflags="const" />
        <parameter name="Data" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="DDERequest" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Channel" type="Integer" />
        <parameter name="Item" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="DDETerminate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Channel" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="DDETerminateAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="BuildKeyCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Arg1" type="TOleEnum" />
        <parameter name="Arg2" type="OleVariant" paramflags="var" />
        <parameter name="Arg3" type="OleVariant" paramflags="var" />
        <parameter name="Arg4" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="KeyString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="KeyCode" type="Integer" />
        <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="CheckSpelling" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Word" type="WideString" paramflags="const" />
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="GetSpellingSuggestions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Word" type="WideString" paramflags="const" />
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
        <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
        <retval type="SpellingSuggestions" />
      </parameters>
    </function>
    <procedure name="Help" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="HelpType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="NewWindow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Window" />
      </parameters>
    </function>
    <function name="CleanString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="String_" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="ChangeFileOpenDirectory" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Path" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="InchesToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Inches" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="CentimetersToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Centimeters" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="MillimetersToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Millimeters" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PicasToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Picas" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="LinesToPoints" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Lines" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToInches" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToCentimeters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToMillimeters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToPicas" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Documents" visibility="public" read="Get_Documents" type="Documents" />
    <property name="Windows" visibility="public" read="Get_Windows" type="Windows" />
    <property name="ActiveDocument" visibility="public" read="Get_ActiveDocument" type="_Document" />
    <property name="ActiveWindow" visibility="public" read="Get_ActiveWindow" type="Window" />
    <property name="Selection" visibility="public" read="Get_Selection" type="WordSelection" />
    <property name="WordBasic" visibility="public" read="Get_WordBasic" type="IDispatch" />
    <property name="PrintPreview" visibility="public" read="Get_PrintPreview" write="Set_PrintPreview" type="WordBool" />
    <property name="RecentFiles" visibility="public" read="Get_RecentFiles" type="RecentFiles" />
    <property name="NormalTemplate" visibility="public" read="Get_NormalTemplate" type="Template" />
    <property name="System_" visibility="public" read="Get_System_" type="System" />
    <property name="AutoCorrect" visibility="public" read="Get_AutoCorrect" type="AutoCorrect" />
    <property name="FontNames" visibility="public" read="Get_FontNames" type="FontNames" />
    <property name="LandscapeFontNames" visibility="public" read="Get_LandscapeFontNames" type="FontNames" />
    <property name="PortraitFontNames" visibility="public" read="Get_PortraitFontNames" type="FontNames" />
    <property name="Languages" visibility="public" read="Get_Languages" type="Languages" />
    <property name="Assistant" visibility="public" read="Get_Assistant" type="Assistant" />
    <property name="FileConverters" visibility="public" read="Get_FileConverters" type="FileConverters" />
    <property name="Dialogs" visibility="public" read="Get_Dialogs" type="Dialogs" />
    <property name="CaptionLabels" visibility="public" read="Get_CaptionLabels" type="CaptionLabels" />
    <property name="AutoCaptions" visibility="public" read="Get_AutoCaptions" type="AutoCaptions" />
    <property name="AddIns" visibility="public" read="Get_AddIns" type="AddIns" />
    <property name="Tasks" visibility="public" read="Get_Tasks" type="Tasks" />
    <property name="MacroContainer" visibility="public" read="Get_MacroContainer" type="IDispatch" />
    <property name="CommandBars" visibility="public" read="Get_CommandBars" type="CommandBars" />
    <property name="SynonymInfo[const Word][LanguageID]" visibility="public" read="Get_SynonymInfo" type="SynonymInfo" />
    <property name="VBE" visibility="public" read="Get_VBE" type="VBE" />
    <property name="ListGalleries" visibility="public" read="Get_ListGalleries" type="ListGalleries" />
    <property name="ActivePrinter" visibility="public" read="Get_ActivePrinter" write="Set_ActivePrinter" type="WideString" default="0" />
    <property name="Templates" visibility="public" read="Get_Templates" type="Templates" />
    <property name="CustomizationContext" visibility="public" read="Get_CustomizationContext" write="Set_CustomizationContext" type="IDispatch" />
    <property name="KeyBindings" visibility="public" read="Get_KeyBindings" type="KeyBindings" />
    <property name="KeysBoundTo[KeyCategory][const Command][CommandParameter]" visibility="public" read="Get_KeysBoundTo" type="KeysBoundTo" />
    <property name="FindKey[KeyCode][KeyCode2]" visibility="public" read="Get_FindKey" type="KeyBinding" />
    <property name="Options" visibility="public" read="Get_Options" type="Options" />
    <property name="CustomDictionaries" visibility="public" read="Get_CustomDictionaries" type="Dictionaries" />
    <property name="StatusBar" visibility="public" write="Set_StatusBar" type="WideString" default="0" />
    <property name="ShowVisualBasicEditor" visibility="public" read="Get_ShowVisualBasicEditor" write="Set_ShowVisualBasicEditor" type="WordBool" />
    <property name="IsObjectValid[const Object_]" visibility="public" read="Get_IsObjectValid" type="WordBool" />
    <property name="HangulHanjaDictionaries" visibility="public" read="Get_HangulHanjaDictionaries" type="HangulHanjaConversionDictionaries" />
  </interface>
  <interface name="_GlobalDisp" GUID="{000209B9-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Documents" visibility="automated" type="Documents" />
    <property name="Windows" visibility="automated" type="Windows" />
    <property name="ActiveDocument" visibility="automated" type="_Document" />
    <property name="ActiveWindow" visibility="automated" type="Window" />
    <property name="Selection" visibility="automated" type="WordSelection" />
    <property name="WordBasic" visibility="automated" type="IDispatch" />
    <property name="PrintPreview" visibility="automated" type="WordBool" />
    <property name="RecentFiles" visibility="automated" type="RecentFiles" />
    <property name="NormalTemplate" visibility="automated" type="Template" />
    <property name="System_" visibility="automated" type="System" />
    <property name="AutoCorrect" visibility="automated" type="AutoCorrect" />
    <property name="FontNames" visibility="automated" type="FontNames" />
    <property name="LandscapeFontNames" visibility="automated" type="FontNames" />
    <property name="PortraitFontNames" visibility="automated" type="FontNames" />
    <property name="Languages" visibility="automated" type="Languages" />
    <property name="Assistant" visibility="automated" type="Assistant" />
    <property name="FileConverters" visibility="automated" type="FileConverters" />
    <property name="Dialogs" visibility="automated" type="Dialogs" />
    <property name="CaptionLabels" visibility="automated" type="CaptionLabels" />
    <property name="AutoCaptions" visibility="automated" type="AutoCaptions" />
    <property name="AddIns" visibility="automated" type="AddIns" />
    <property name="Tasks" visibility="automated" type="Tasks" />
    <property name="MacroContainer" visibility="automated" type="IDispatch" />
    <property name="CommandBars" visibility="automated" type="CommandBars" />
    <property name="SynonymInfo[const Word][LanguageID]" visibility="automated" type="SynonymInfo" />
    <property name="VBE" visibility="automated" type="VBE" />
    <property name="ListGalleries" visibility="automated" type="ListGalleries" />
    <property name="ActivePrinter" visibility="automated" type="WideString" />
    <property name="Templates" visibility="automated" type="Templates" />
    <property name="CustomizationContext" visibility="automated" type="IDispatch" />
    <property name="KeyBindings" visibility="automated" type="KeyBindings" />
    <property name="KeysBoundTo[KeyCategory][const Command][CommandParameter]" visibility="automated" type="KeysBoundTo" />
    <property name="FindKey[KeyCode][KeyCode2]" visibility="automated" type="KeyBinding" />
    <property name="Options" visibility="automated" type="Options" />
    <property name="CustomDictionaries" visibility="automated" type="Dictionaries" />
    <property name="StatusBar" visibility="automated" type="WideString" />
    <property name="ShowVisualBasicEditor" visibility="automated" type="WordBool" />
    <property name="IsObjectValid[const Object_]" visibility="automated" type="WordBool" />
    <property name="HangulHanjaDictionaries" visibility="automated" type="HangulHanjaConversionDictionaries" />
    <function name="Repeat_" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Times" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="DDEExecute" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Channel" type="Integer" />
        <parameter name="Command" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="DDEInitiate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="App" type="WideString" paramflags="const" />
        <parameter name="Topic" type="WideString" paramflags="const" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="DDEPoke" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Channel" type="Integer" />
        <parameter name="Item" type="WideString" paramflags="const" />
        <parameter name="Data" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="DDERequest" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Channel" type="Integer" />
        <parameter name="Item" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="DDETerminate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Channel" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="DDETerminateAll" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="BuildKeyCode" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Arg1" type="TOleEnum" />
        <parameter name="Arg2" type="OleVariant" paramflags="var" />
        <parameter name="Arg3" type="OleVariant" paramflags="var" />
        <parameter name="Arg4" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="KeyString" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="KeyCode" type="Integer" />
        <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="CheckSpelling" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Word" type="WideString" paramflags="const" />
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="GetSpellingSuggestions" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Word" type="WideString" paramflags="const" />
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
        <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
        <retval type="SpellingSuggestions" />
      </parameters>
    </function>
    <procedure name="Help" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="HelpType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="NewWindow" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Window" />
      </parameters>
    </function>
    <function name="CleanString" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="String_" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="ChangeFileOpenDirectory" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Path" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="InchesToPoints" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Inches" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="CentimetersToPoints" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Centimeters" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="MillimetersToPoints" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Millimeters" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PicasToPoints" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Picas" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="LinesToPoints" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Lines" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToInches" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToCentimeters" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToMillimeters" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToPicas" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
    <function name="PointsToLines" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Points" type="Single" />
        <retval type="Single" />
      </parameters>
    </function>
  </interface>
  <interface name="FontNames" GUID="{0002096F-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="WideString" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="FontNamesDisp" GUID="{0002096F-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="WideString" />
      </parameters>
    </function>
  </interface>
  <interface name="Languages" GUID="{0002096E-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Language" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="LanguagesDisp" GUID="{0002096E-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Language" />
      </parameters>
    </function>
  </interface>
  <interface name="Language" GUID="{0002096D-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_ID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_NameLocal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_ActiveGrammarDictionary" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Dictionary" />
      </parameters>
    </function>
    <function name="Get_ActiveHyphenationDictionary" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Dictionary" />
      </parameters>
    </function>
    <function name="Get_ActiveSpellingDictionary" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Dictionary" />
      </parameters>
    </function>
    <function name="Get_ActiveThesaurusDictionary" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Dictionary" />
      </parameters>
    </function>
    <function name="Get_DefaultWritingStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_DefaultWritingStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_WritingStyleList" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_SpellingDictionaryType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_SpellingDictionaryType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="ID" visibility="public" read="Get_ID" type="TOleEnum" />
    <property name="NameLocal" visibility="public" read="Get_NameLocal" type="WideString" default="0" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="ActiveGrammarDictionary" visibility="public" read="Get_ActiveGrammarDictionary" type="Dictionary" />
    <property name="ActiveHyphenationDictionary" visibility="public" read="Get_ActiveHyphenationDictionary" type="Dictionary" />
    <property name="ActiveSpellingDictionary" visibility="public" read="Get_ActiveSpellingDictionary" type="Dictionary" />
    <property name="ActiveThesaurusDictionary" visibility="public" read="Get_ActiveThesaurusDictionary" type="Dictionary" />
    <property name="DefaultWritingStyle" visibility="public" read="Get_DefaultWritingStyle" write="Set_DefaultWritingStyle" type="WideString" default="0" />
    <property name="WritingStyleList" visibility="public" read="Get_WritingStyleList" type="OleVariant" default="0" />
    <property name="SpellingDictionaryType" visibility="public" read="Get_SpellingDictionaryType" write="Set_SpellingDictionaryType" type="TOleEnum" />
  </interface>
  <interface name="LanguageDisp" GUID="{0002096D-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="ID" visibility="automated" type="TOleEnum" />
    <property name="NameLocal" visibility="automated" type="WideString" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="ActiveGrammarDictionary" visibility="automated" type="Dictionary" />
    <property name="ActiveHyphenationDictionary" visibility="automated" type="Dictionary" />
    <property name="ActiveSpellingDictionary" visibility="automated" type="Dictionary" />
    <property name="ActiveThesaurusDictionary" visibility="automated" type="Dictionary" />
    <property name="DefaultWritingStyle" visibility="automated" type="WideString" />
    <property name="WritingStyleList" visibility="automated" type="OleVariant" />
    <property name="SpellingDictionaryType" visibility="automated" type="TOleEnum" />
  </interface>
  <interface name="Documents" GUID="{0002096C-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="_Document" />
      </parameters>
    </function>
    <procedure name="Close" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SaveChanges" type="OleVariant" paramflags="var" />
        <parameter name="OriginalFormat" type="OleVariant" paramflags="var" />
        <parameter name="RouteDocument" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Template" type="OleVariant" paramflags="var" />
        <parameter name="NewTemplate" type="OleVariant" paramflags="var" />
        <retval type="_Document" />
      </parameters>
    </function>
    <function name="Open" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="OleVariant" paramflags="var" />
        <parameter name="ConfirmConversions" type="OleVariant" paramflags="var" />
        <parameter name="ReadOnly" type="OleVariant" paramflags="var" />
        <parameter name="AddToRecentFiles" type="OleVariant" paramflags="var" />
        <parameter name="PasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="PasswordTemplate" type="OleVariant" paramflags="var" />
        <parameter name="Revert" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordTemplate" type="OleVariant" paramflags="var" />
        <parameter name="Format" type="OleVariant" paramflags="var" />
        <retval type="_Document" />
      </parameters>
    </function>
    <procedure name="Save" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NoPrompt" type="OleVariant" paramflags="var" />
        <parameter name="OriginalFormat" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="DocumentsDisp" GUID="{0002096C-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="_Document" />
      </parameters>
    </function>
    <procedure name="Close" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="SaveChanges" type="OleVariant" paramflags="var" />
        <parameter name="OriginalFormat" type="OleVariant" paramflags="var" />
        <parameter name="RouteDocument" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Template" type="OleVariant" paramflags="var" />
        <parameter name="NewTemplate" type="OleVariant" paramflags="var" />
        <retval type="_Document" />
      </parameters>
    </function>
    <function name="Open" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileName" type="OleVariant" paramflags="var" />
        <parameter name="ConfirmConversions" type="OleVariant" paramflags="var" />
        <parameter name="ReadOnly" type="OleVariant" paramflags="var" />
        <parameter name="AddToRecentFiles" type="OleVariant" paramflags="var" />
        <parameter name="PasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="PasswordTemplate" type="OleVariant" paramflags="var" />
        <parameter name="Revert" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordTemplate" type="OleVariant" paramflags="var" />
        <parameter name="Format" type="OleVariant" paramflags="var" />
        <retval type="_Document" />
      </parameters>
    </function>
    <procedure name="Save" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="NoPrompt" type="OleVariant" paramflags="var" />
        <parameter name="OriginalFormat" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
  </interface>
  <interface name="_Document" GUID="{0002096B-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_BuiltInDocumentProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_CustomDocumentProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Path" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Bookmarks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Bookmarks" />
      </parameters>
    </function>
    <function name="Get_Tables" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Tables" />
      </parameters>
    </function>
    <function name="Get_Footnotes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Footnotes" />
      </parameters>
    </function>
    <function name="Get_Endnotes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Endnotes" />
      </parameters>
    </function>
    <function name="Get_Comments" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Comments" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_AutoHyphenation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoHyphenation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_HyphenateCaps" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_HyphenateCaps" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_HyphenationZone" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_HyphenationZone" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_ConsecutiveHyphensLimit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_ConsecutiveHyphensLimit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Sections" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Sections" />
      </parameters>
    </function>
    <function name="Get_Paragraphs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Paragraphs" />
      </parameters>
    </function>
    <function name="Get_Words" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Words" />
      </parameters>
    </function>
    <function name="Get_Sentences" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Sentences" />
      </parameters>
    </function>
    <function name="Get_Characters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Characters" />
      </parameters>
    </function>
    <function name="Get_Fields" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Fields" />
      </parameters>
    </function>
    <function name="Get_FormFields" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FormFields" />
      </parameters>
    </function>
    <function name="Get_Styles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Styles" />
      </parameters>
    </function>
    <function name="Get_Frames" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Frames" />
      </parameters>
    </function>
    <function name="Get_TablesOfFigures" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TablesOfFigures" />
      </parameters>
    </function>
    <function name="Get_Variables" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Variables" />
      </parameters>
    </function>
    <function name="Get_MailMerge" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="MailMerge" />
      </parameters>
    </function>
    <function name="Get_Envelope" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Envelope" />
      </parameters>
    </function>
    <function name="Get_FullName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Revisions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Revisions" />
      </parameters>
    </function>
    <function name="Get_TablesOfContents" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TablesOfContents" />
      </parameters>
    </function>
    <function name="Get_TablesOfAuthorities" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TablesOfAuthorities" />
      </parameters>
    </function>
    <function name="Get_PageSetup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="PageSetup" />
      </parameters>
    </function>
    <procedure name="Set_PageSetup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="PageSetup" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Windows" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Windows" />
      </parameters>
    </function>
    <function name="Get_HasRoutingSlip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_HasRoutingSlip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_RoutingSlip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="RoutingSlip" />
      </parameters>
    </function>
    <function name="Get_Routed" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_TablesOfAuthoritiesCategories" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TablesOfAuthoritiesCategories" />
      </parameters>
    </function>
    <function name="Get_Indexes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Indexes" />
      </parameters>
    </function>
    <function name="Get_Saved" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Saved" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Content" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_ActiveWindow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Window" />
      </parameters>
    </function>
    <function name="Get_Kind" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Kind" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_ReadOnly" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Subdocuments" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Subdocuments" />
      </parameters>
    </function>
    <function name="Get_IsMasterDocument" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_DefaultTabStop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_DefaultTabStop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_EmbedTrueTypeFonts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_EmbedTrueTypeFonts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SaveFormsData" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SaveFormsData" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ReadOnlyRecommended" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ReadOnlyRecommended" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SaveSubsetFonts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SaveSubsetFonts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Compatibility" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Compatibility" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_StoryRanges" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="StoryRanges" />
      </parameters>
    </function>
    <function name="Get_CommandBars" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBars" />
      </parameters>
    </function>
    <function name="Get_IsSubdocument" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_SaveFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_ProtectionType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Hyperlinks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Hyperlinks" />
      </parameters>
    </function>
    <function name="Get_Shapes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shapes" />
      </parameters>
    </function>
    <function name="Get_ListTemplates" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ListTemplates" />
      </parameters>
    </function>
    <function name="Get_Lists" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Lists" />
      </parameters>
    </function>
    <function name="Get_UpdateStylesOnOpen" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_UpdateStylesOnOpen" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AttachedTemplate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="Set_AttachedTemplate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="Get_InlineShapes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="InlineShapes" />
      </parameters>
    </function>
    <function name="Get_Background" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="Set_Background" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Shape" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_GrammarChecked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_GrammarChecked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SpellingChecked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SpellingChecked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowGrammaticalErrors" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowGrammaticalErrors" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowSpellingErrors" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowSpellingErrors" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Versions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Versions" />
      </parameters>
    </function>
    <function name="Get_ShowSummary" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowSummary" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SummaryViewMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_SummaryViewMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_SummaryLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_SummaryLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_PrintFractionalWidths" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintFractionalWidths" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PrintPostScriptOverText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintPostScriptOverText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Container" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_PrintFormsData" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintFormsData" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ListParagraphs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ListParagraphs" />
      </parameters>
    </function>
    <procedure name="Set_Password" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Param1" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_WritePassword" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Param1" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_HasPassword" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_WriteReserved" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_ActiveWritingStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="LanguageID" type="OleVariant" paramflags="var" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ActiveWritingStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="LanguageID" type="OleVariant" paramflags="var" />
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_UserControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_UserControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_HasMailer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_HasMailer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Mailer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Mailer" />
      </parameters>
    </function>
    <function name="Get_ReadabilityStatistics" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ReadabilityStatistics" />
      </parameters>
    </function>
    <function name="Get_GrammaticalErrors" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ProofreadingErrors" />
      </parameters>
    </function>
    <function name="Get_SpellingErrors" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ProofreadingErrors" />
      </parameters>
    </function>
    <function name="Get_VBProject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_VBProject" />
      </parameters>
    </function>
    <function name="Get_FormsDesign" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get__CodeName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set__CodeName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_CodeName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_SnapToGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SnapToGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SnapToShapes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SnapToShapes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_GridDistanceHorizontal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_GridDistanceHorizontal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_GridDistanceVertical" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_GridDistanceVertical" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_GridOriginHorizontal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_GridOriginHorizontal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_GridOriginVertical" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_GridOriginVertical" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_GridSpaceBetweenHorizontalLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_GridSpaceBetweenHorizontalLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_GridSpaceBetweenVerticalLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_GridSpaceBetweenVerticalLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_GridOriginFromMargin" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_GridOriginFromMargin" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_KerningByAlgorithm" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_KerningByAlgorithm" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_JustificationMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_JustificationMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_FarEastLineBreakLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_FarEastLineBreakLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_NoLineBreakBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_NoLineBreakBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_NoLineBreakAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_NoLineBreakAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_TrackRevisions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_TrackRevisions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PrintRevisions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintRevisions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowRevisions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowRevisions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Close" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SaveChanges" type="OleVariant" paramflags="var" />
        <parameter name="OriginalFormat" type="OleVariant" paramflags="var" />
        <parameter name="RouteDocument" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SaveAs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="OleVariant" paramflags="var" />
        <parameter name="FileFormat" type="OleVariant" paramflags="var" />
        <parameter name="LockComments" type="OleVariant" paramflags="var" />
        <parameter name="Password" type="OleVariant" paramflags="var" />
        <parameter name="AddToRecentFiles" type="OleVariant" paramflags="var" />
        <parameter name="WritePassword" type="OleVariant" paramflags="var" />
        <parameter name="ReadOnlyRecommended" type="OleVariant" paramflags="var" />
        <parameter name="EmbedTrueTypeFonts" type="OleVariant" paramflags="var" />
        <parameter name="SaveNativePictureFormat" type="OleVariant" paramflags="var" />
        <parameter name="SaveFormsData" type="OleVariant" paramflags="var" />
        <parameter name="SaveAsAOCELetter" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Repaginate" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="FitToPages" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ManualHyphenation" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="DataForm" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Route" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Save" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="PrintOut" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Background" type="OleVariant" paramflags="var" />
        <parameter name="Append" type="OleVariant" paramflags="var" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
        <parameter name="From" type="OleVariant" paramflags="var" />
        <parameter name="To_" type="OleVariant" paramflags="var" />
        <parameter name="Item" type="OleVariant" paramflags="var" />
        <parameter name="Copies" type="OleVariant" paramflags="var" />
        <parameter name="Pages" type="OleVariant" paramflags="var" />
        <parameter name="PageType" type="OleVariant" paramflags="var" />
        <parameter name="PrintToFile" type="OleVariant" paramflags="var" />
        <parameter name="Collate" type="OleVariant" paramflags="var" />
        <parameter name="ActivePrinterMacGX" type="OleVariant" paramflags="var" />
        <parameter name="ManualDuplexPrint" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SendMail" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Start" type="OleVariant" paramflags="var" />
        <parameter name="End_" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <procedure name="RunAutoMacro" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Which" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Activate" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="PrintPreview" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="GoTo_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="What" type="OleVariant" paramflags="var" />
        <parameter name="Which" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Undo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Times" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Redo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Times" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="ComputeStatistics" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Statistic" type="TOleEnum" />
        <parameter name="IncludeFootnotesAndEndnotes" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="MakeCompatibilityDefault" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Protect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="NoReset" type="OleVariant" paramflags="var" />
        <parameter name="Password" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Unprotect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Password" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="EditionOptions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Option" type="TOleEnum" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Format" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="RunLetterWizard" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="LetterContent" type="OleVariant" paramflags="var" />
        <parameter name="WizardMode" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="GetLetterContent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_LetterContent" />
      </parameters>
    </function>
    <procedure name="SetLetterContent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="LetterContent" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="CopyStylesFromTemplate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Template" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="UpdateStyles" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="CheckGrammar" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="CheckSpelling" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        <parameter name="AlwaysSuggest" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="FollowHyperlink" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Address" type="OleVariant" paramflags="var" />
        <parameter name="SubAddress" type="OleVariant" paramflags="var" />
        <parameter name="NewWindow" type="OleVariant" paramflags="var" />
        <parameter name="AddHistory" type="OleVariant" paramflags="var" />
        <parameter name="ExtraInfo" type="OleVariant" paramflags="var" />
        <parameter name="Method" type="OleVariant" paramflags="var" />
        <parameter name="HeaderInfo" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="AddToFavorites" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reload" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="AutoSummarize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Length" type="OleVariant" paramflags="var" />
        <parameter name="Mode" type="OleVariant" paramflags="var" />
        <parameter name="UpdateProperties" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <procedure name="RemoveNumbers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="ConvertNumbersToText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="CountNumberedItems" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
        <parameter name="Level" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Post" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ToggleFormsDesign" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Compare" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="UpdateSummaryProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="GetCrossReferenceItems" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ReferenceType" type="OleVariant" paramflags="var" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="AutoFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ViewCode" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ViewPropertyBrowser" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ForwardMailer" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reply" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ReplyAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SendMailer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileFormat" type="OleVariant" paramflags="var" />
        <parameter name="Priority" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="UndoClear" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="PresentIt" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SendFax" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Address" type="WideString" paramflags="const" />
        <parameter name="Subject" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Merge" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="ClosePrintPreview" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="CheckConsistency" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="CreateLetterContent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="DateFormat" type="WideString" paramflags="const" />
        <parameter name="IncludeHeaderFooter" type="WordBool" />
        <parameter name="PageDesign" type="WideString" paramflags="const" />
        <parameter name="LetterStyle" type="TOleEnum" />
        <parameter name="Letterhead" type="WordBool" />
        <parameter name="LetterheadLocation" type="TOleEnum" />
        <parameter name="LetterheadSize" type="Single" />
        <parameter name="RecipientName" type="WideString" paramflags="const" />
        <parameter name="RecipientAddress" type="WideString" paramflags="const" />
        <parameter name="Salutation" type="WideString" paramflags="const" />
        <parameter name="SalutationType" type="TOleEnum" />
        <parameter name="RecipientReference" type="WideString" paramflags="const" />
        <parameter name="MailingInstructions" type="WideString" paramflags="const" />
        <parameter name="AttentionLine" type="WideString" paramflags="const" />
        <parameter name="Subject" type="WideString" paramflags="const" />
        <parameter name="CCList" type="WideString" paramflags="const" />
        <parameter name="ReturnAddress" type="WideString" paramflags="const" />
        <parameter name="SenderName" type="WideString" paramflags="const" />
        <parameter name="Closing" type="WideString" paramflags="const" />
        <parameter name="SenderCompany" type="WideString" paramflags="const" />
        <parameter name="SenderJobTitle" type="WideString" paramflags="const" />
        <parameter name="SenderInitials" type="WideString" paramflags="const" />
        <parameter name="EnclosureNumber" type="Integer" />
        <parameter name="InfoBlock" type="OleVariant" paramflags="var" />
        <parameter name="RecipientCode" type="OleVariant" paramflags="var" />
        <parameter name="RecipientGender" type="OleVariant" paramflags="var" />
        <parameter name="ReturnAddressShortForm" type="OleVariant" paramflags="var" />
        <parameter name="SenderCity" type="OleVariant" paramflags="var" />
        <parameter name="SenderCode" type="OleVariant" paramflags="var" />
        <parameter name="SenderGender" type="OleVariant" paramflags="var" />
        <parameter name="SenderReference" type="OleVariant" paramflags="var" />
        <retval type="_LetterContent" />
      </parameters>
    </function>
    <procedure name="AcceptAllRevisions" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="RejectAllRevisions" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="BuiltInDocumentProperties" visibility="public" read="Get_BuiltInDocumentProperties" type="IDispatch" />
    <property name="CustomDocumentProperties" visibility="public" read="Get_CustomDocumentProperties" type="IDispatch" />
    <property name="Path" visibility="public" read="Get_Path" type="WideString" default="0" />
    <property name="Bookmarks" visibility="public" read="Get_Bookmarks" type="Bookmarks" />
    <property name="Tables" visibility="public" read="Get_Tables" type="Tables" />
    <property name="Footnotes" visibility="public" read="Get_Footnotes" type="Footnotes" />
    <property name="Endnotes" visibility="public" read="Get_Endnotes" type="Endnotes" />
    <property name="Comments" visibility="public" read="Get_Comments" type="Comments" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="AutoHyphenation" visibility="public" read="Get_AutoHyphenation" write="Set_AutoHyphenation" type="WordBool" />
    <property name="HyphenateCaps" visibility="public" read="Get_HyphenateCaps" write="Set_HyphenateCaps" type="WordBool" />
    <property name="HyphenationZone" visibility="public" read="Get_HyphenationZone" write="Set_HyphenationZone" type="Integer" />
    <property name="ConsecutiveHyphensLimit" visibility="public" read="Get_ConsecutiveHyphensLimit" write="Set_ConsecutiveHyphensLimit" type="Integer" />
    <property name="Sections" visibility="public" read="Get_Sections" type="Sections" />
    <property name="Paragraphs" visibility="public" read="Get_Paragraphs" type="Paragraphs" />
    <property name="Words" visibility="public" read="Get_Words" type="Words" />
    <property name="Sentences" visibility="public" read="Get_Sentences" type="Sentences" />
    <property name="Characters" visibility="public" read="Get_Characters" type="Characters" />
    <property name="Fields" visibility="public" read="Get_Fields" type="Fields" />
    <property name="FormFields" visibility="public" read="Get_FormFields" type="FormFields" />
    <property name="Styles" visibility="public" read="Get_Styles" type="Styles" />
    <property name="Frames" visibility="public" read="Get_Frames" type="Frames" />
    <property name="TablesOfFigures" visibility="public" read="Get_TablesOfFigures" type="TablesOfFigures" />
    <property name="Variables" visibility="public" read="Get_Variables" type="Variables" />
    <property name="MailMerge" visibility="public" read="Get_MailMerge" type="MailMerge" />
    <property name="Envelope" visibility="public" read="Get_Envelope" type="Envelope" />
    <property name="FullName" visibility="public" read="Get_FullName" type="WideString" default="0" />
    <property name="Revisions" visibility="public" read="Get_Revisions" type="Revisions" />
    <property name="TablesOfContents" visibility="public" read="Get_TablesOfContents" type="TablesOfContents" />
    <property name="TablesOfAuthorities" visibility="public" read="Get_TablesOfAuthorities" type="TablesOfAuthorities" />
    <property name="PageSetup" visibility="public" read="Get_PageSetup" write="Set_PageSetup" type="PageSetup" />
    <property name="Windows" visibility="public" read="Get_Windows" type="Windows" />
    <property name="HasRoutingSlip" visibility="public" read="Get_HasRoutingSlip" write="Set_HasRoutingSlip" type="WordBool" />
    <property name="RoutingSlip" visibility="public" read="Get_RoutingSlip" type="RoutingSlip" />
    <property name="Routed" visibility="public" read="Get_Routed" type="WordBool" />
    <property name="TablesOfAuthoritiesCategories" visibility="public" read="Get_TablesOfAuthoritiesCategories" type="TablesOfAuthoritiesCategories" />
    <property name="Indexes" visibility="public" read="Get_Indexes" type="Indexes" />
    <property name="Saved" visibility="public" read="Get_Saved" write="Set_Saved" type="WordBool" />
    <property name="Content" visibility="public" read="Get_Content" type="Range" />
    <property name="ActiveWindow" visibility="public" read="Get_ActiveWindow" type="Window" />
    <property name="Kind" visibility="public" read="Get_Kind" write="Set_Kind" type="TOleEnum" />
    <property name="ReadOnly" visibility="public" read="Get_ReadOnly" type="WordBool" />
    <property name="Subdocuments" visibility="public" read="Get_Subdocuments" type="Subdocuments" />
    <property name="IsMasterDocument" visibility="public" read="Get_IsMasterDocument" type="WordBool" />
    <property name="DefaultTabStop" visibility="public" read="Get_DefaultTabStop" write="Set_DefaultTabStop" type="Single" default="0" />
    <property name="EmbedTrueTypeFonts" visibility="public" read="Get_EmbedTrueTypeFonts" write="Set_EmbedTrueTypeFonts" type="WordBool" />
    <property name="SaveFormsData" visibility="public" read="Get_SaveFormsData" write="Set_SaveFormsData" type="WordBool" />
    <property name="ReadOnlyRecommended" visibility="public" read="Get_ReadOnlyRecommended" write="Set_ReadOnlyRecommended" type="WordBool" />
    <property name="SaveSubsetFonts" visibility="public" read="Get_SaveSubsetFonts" write="Set_SaveSubsetFonts" type="WordBool" />
    <property name="Compatibility[Type_]" visibility="public" read="Get_Compatibility" write="Set_Compatibility" type="WordBool" />
    <property name="StoryRanges" visibility="public" read="Get_StoryRanges" type="StoryRanges" />
    <property name="CommandBars" visibility="public" read="Get_CommandBars" type="CommandBars" />
    <property name="IsSubdocument" visibility="public" read="Get_IsSubdocument" type="WordBool" />
    <property name="SaveFormat" visibility="public" read="Get_SaveFormat" type="Integer" />
    <property name="ProtectionType" visibility="public" read="Get_ProtectionType" type="TOleEnum" />
    <property name="Hyperlinks" visibility="public" read="Get_Hyperlinks" type="Hyperlinks" />
    <property name="Shapes" visibility="public" read="Get_Shapes" type="Shapes" />
    <property name="ListTemplates" visibility="public" read="Get_ListTemplates" type="ListTemplates" />
    <property name="Lists" visibility="public" read="Get_Lists" type="Lists" />
    <property name="UpdateStylesOnOpen" visibility="public" read="Get_UpdateStylesOnOpen" write="Set_UpdateStylesOnOpen" type="WordBool" />
    <property name="InlineShapes" visibility="public" read="Get_InlineShapes" type="InlineShapes" />
    <property name="Background" visibility="public" read="Get_Background" write="Set_Background" type="Shape" />
    <property name="GrammarChecked" visibility="public" read="Get_GrammarChecked" write="Set_GrammarChecked" type="WordBool" />
    <property name="SpellingChecked" visibility="public" read="Get_SpellingChecked" write="Set_SpellingChecked" type="WordBool" />
    <property name="ShowGrammaticalErrors" visibility="public" read="Get_ShowGrammaticalErrors" write="Set_ShowGrammaticalErrors" type="WordBool" />
    <property name="ShowSpellingErrors" visibility="public" read="Get_ShowSpellingErrors" write="Set_ShowSpellingErrors" type="WordBool" />
    <property name="Versions" visibility="public" read="Get_Versions" type="Versions" />
    <property name="ShowSummary" visibility="public" read="Get_ShowSummary" write="Set_ShowSummary" type="WordBool" />
    <property name="SummaryViewMode" visibility="public" read="Get_SummaryViewMode" write="Set_SummaryViewMode" type="TOleEnum" />
    <property name="SummaryLength" visibility="public" read="Get_SummaryLength" write="Set_SummaryLength" type="Integer" />
    <property name="PrintFractionalWidths" visibility="public" read="Get_PrintFractionalWidths" write="Set_PrintFractionalWidths" type="WordBool" />
    <property name="PrintPostScriptOverText" visibility="public" read="Get_PrintPostScriptOverText" write="Set_PrintPostScriptOverText" type="WordBool" />
    <property name="Container" visibility="public" read="Get_Container" type="IDispatch" />
    <property name="PrintFormsData" visibility="public" read="Get_PrintFormsData" write="Set_PrintFormsData" type="WordBool" />
    <property name="ListParagraphs" visibility="public" read="Get_ListParagraphs" type="ListParagraphs" />
    <property name="Password" visibility="public" write="Set_Password" type="WideString" default="0" />
    <property name="WritePassword" visibility="public" write="Set_WritePassword" type="WideString" default="0" />
    <property name="HasPassword" visibility="public" read="Get_HasPassword" type="WordBool" />
    <property name="WriteReserved" visibility="public" read="Get_WriteReserved" type="WordBool" />
    <property name="ActiveWritingStyle[LanguageID]" visibility="public" read="Get_ActiveWritingStyle" write="Set_ActiveWritingStyle" type="WideString" />
    <property name="UserControl" visibility="public" read="Get_UserControl" write="Set_UserControl" type="WordBool" />
    <property name="HasMailer" visibility="public" read="Get_HasMailer" write="Set_HasMailer" type="WordBool" />
    <property name="Mailer" visibility="public" read="Get_Mailer" type="Mailer" />
    <property name="ReadabilityStatistics" visibility="public" read="Get_ReadabilityStatistics" type="ReadabilityStatistics" />
    <property name="GrammaticalErrors" visibility="public" read="Get_GrammaticalErrors" type="ProofreadingErrors" />
    <property name="SpellingErrors" visibility="public" read="Get_SpellingErrors" type="ProofreadingErrors" />
    <property name="VBProject" visibility="public" read="Get_VBProject" type="_VBProject" />
    <property name="FormsDesign" visibility="public" read="Get_FormsDesign" type="WordBool" />
    <property name="_CodeName" visibility="public" read="Get__CodeName" write="Set__CodeName" type="WideString" default="0" />
    <property name="CodeName" visibility="public" read="Get_CodeName" type="WideString" default="0" />
    <property name="SnapToGrid" visibility="public" read="Get_SnapToGrid" write="Set_SnapToGrid" type="WordBool" />
    <property name="SnapToShapes" visibility="public" read="Get_SnapToShapes" write="Set_SnapToShapes" type="WordBool" />
    <property name="GridDistanceHorizontal" visibility="public" read="Get_GridDistanceHorizontal" write="Set_GridDistanceHorizontal" type="Single" default="0" />
    <property name="GridDistanceVertical" visibility="public" read="Get_GridDistanceVertical" write="Set_GridDistanceVertical" type="Single" default="0" />
    <property name="GridOriginHorizontal" visibility="public" read="Get_GridOriginHorizontal" write="Set_GridOriginHorizontal" type="Single" default="0" />
    <property name="GridOriginVertical" visibility="public" read="Get_GridOriginVertical" write="Set_GridOriginVertical" type="Single" default="0" />
    <property name="GridSpaceBetweenHorizontalLines" visibility="public" read="Get_GridSpaceBetweenHorizontalLines" write="Set_GridSpaceBetweenHorizontalLines" type="Integer" />
    <property name="GridSpaceBetweenVerticalLines" visibility="public" read="Get_GridSpaceBetweenVerticalLines" write="Set_GridSpaceBetweenVerticalLines" type="Integer" />
    <property name="GridOriginFromMargin" visibility="public" read="Get_GridOriginFromMargin" write="Set_GridOriginFromMargin" type="WordBool" />
    <property name="KerningByAlgorithm" visibility="public" read="Get_KerningByAlgorithm" write="Set_KerningByAlgorithm" type="WordBool" />
    <property name="JustificationMode" visibility="public" read="Get_JustificationMode" write="Set_JustificationMode" type="TOleEnum" />
    <property name="FarEastLineBreakLevel" visibility="public" read="Get_FarEastLineBreakLevel" write="Set_FarEastLineBreakLevel" type="TOleEnum" />
    <property name="NoLineBreakBefore" visibility="public" read="Get_NoLineBreakBefore" write="Set_NoLineBreakBefore" type="WideString" default="0" />
    <property name="NoLineBreakAfter" visibility="public" read="Get_NoLineBreakAfter" write="Set_NoLineBreakAfter" type="WideString" default="0" />
    <property name="TrackRevisions" visibility="public" read="Get_TrackRevisions" write="Set_TrackRevisions" type="WordBool" />
    <property name="PrintRevisions" visibility="public" read="Get_PrintRevisions" write="Set_PrintRevisions" type="WordBool" />
    <property name="ShowRevisions" visibility="public" read="Get_ShowRevisions" write="Set_ShowRevisions" type="WordBool" />
  </interface>
  <interface name="_DocumentDisp" GUID="{0002096B-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="BuiltInDocumentProperties" visibility="automated" type="IDispatch" />
    <property name="CustomDocumentProperties" visibility="automated" type="IDispatch" />
    <property name="Path" visibility="automated" type="WideString" />
    <property name="Bookmarks" visibility="automated" type="Bookmarks" />
    <property name="Tables" visibility="automated" type="Tables" />
    <property name="Footnotes" visibility="automated" type="Footnotes" />
    <property name="Endnotes" visibility="automated" type="Endnotes" />
    <property name="Comments" visibility="automated" type="Comments" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="AutoHyphenation" visibility="automated" type="WordBool" />
    <property name="HyphenateCaps" visibility="automated" type="WordBool" />
    <property name="HyphenationZone" visibility="automated" type="Integer" />
    <property name="ConsecutiveHyphensLimit" visibility="automated" type="Integer" />
    <property name="Sections" visibility="automated" type="Sections" />
    <property name="Paragraphs" visibility="automated" type="Paragraphs" />
    <property name="Words" visibility="automated" type="Words" />
    <property name="Sentences" visibility="automated" type="Sentences" />
    <property name="Characters" visibility="automated" type="Characters" />
    <property name="Fields" visibility="automated" type="Fields" />
    <property name="FormFields" visibility="automated" type="FormFields" />
    <property name="Styles" visibility="automated" type="Styles" />
    <property name="Frames" visibility="automated" type="Frames" />
    <property name="TablesOfFigures" visibility="automated" type="TablesOfFigures" />
    <property name="Variables" visibility="automated" type="Variables" />
    <property name="MailMerge" visibility="automated" type="MailMerge" />
    <property name="Envelope" visibility="automated" type="Envelope" />
    <property name="FullName" visibility="automated" type="WideString" />
    <property name="Revisions" visibility="automated" type="Revisions" />
    <property name="TablesOfContents" visibility="automated" type="TablesOfContents" />
    <property name="TablesOfAuthorities" visibility="automated" type="TablesOfAuthorities" />
    <property name="PageSetup" visibility="automated" type="PageSetup" />
    <property name="Windows" visibility="automated" type="Windows" />
    <property name="HasRoutingSlip" visibility="automated" type="WordBool" />
    <property name="RoutingSlip" visibility="automated" type="RoutingSlip" />
    <property name="Routed" visibility="automated" type="WordBool" />
    <property name="TablesOfAuthoritiesCategories" visibility="automated" type="TablesOfAuthoritiesCategories" />
    <property name="Indexes" visibility="automated" type="Indexes" />
    <property name="Saved" visibility="automated" type="WordBool" />
    <property name="Content" visibility="automated" type="Range" />
    <property name="ActiveWindow" visibility="automated" type="Window" />
    <property name="Kind" visibility="automated" type="TOleEnum" />
    <property name="ReadOnly" visibility="automated" type="WordBool" />
    <property name="Subdocuments" visibility="automated" type="Subdocuments" />
    <property name="IsMasterDocument" visibility="automated" type="WordBool" />
    <property name="DefaultTabStop" visibility="automated" type="Single" />
    <property name="EmbedTrueTypeFonts" visibility="automated" type="WordBool" />
    <property name="SaveFormsData" visibility="automated" type="WordBool" />
    <property name="ReadOnlyRecommended" visibility="automated" type="WordBool" />
    <property name="SaveSubsetFonts" visibility="automated" type="WordBool" />
    <property name="Compatibility[Type_]" visibility="automated" type="WordBool" />
    <property name="StoryRanges" visibility="automated" type="StoryRanges" />
    <property name="CommandBars" visibility="automated" type="CommandBars" />
    <property name="IsSubdocument" visibility="automated" type="WordBool" />
    <property name="SaveFormat" visibility="automated" type="Integer" />
    <property name="ProtectionType" visibility="automated" type="TOleEnum" />
    <property name="Hyperlinks" visibility="automated" type="Hyperlinks" />
    <property name="Shapes" visibility="automated" type="Shapes" />
    <property name="ListTemplates" visibility="automated" type="ListTemplates" />
    <property name="Lists" visibility="automated" type="Lists" />
    <property name="UpdateStylesOnOpen" visibility="automated" type="WordBool" />
    <function name="AttachedTemplate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <property name="InlineShapes" visibility="automated" type="InlineShapes" />
    <property name="Background" visibility="automated" type="Shape" />
    <property name="GrammarChecked" visibility="automated" type="WordBool" />
    <property name="SpellingChecked" visibility="automated" type="WordBool" />
    <property name="ShowGrammaticalErrors" visibility="automated" type="WordBool" />
    <property name="ShowSpellingErrors" visibility="automated" type="WordBool" />
    <property name="Versions" visibility="automated" type="Versions" />
    <property name="ShowSummary" visibility="automated" type="WordBool" />
    <property name="SummaryViewMode" visibility="automated" type="TOleEnum" />
    <property name="SummaryLength" visibility="automated" type="Integer" />
    <property name="PrintFractionalWidths" visibility="automated" type="WordBool" />
    <property name="PrintPostScriptOverText" visibility="automated" type="WordBool" />
    <property name="Container" visibility="automated" type="IDispatch" />
    <property name="PrintFormsData" visibility="automated" type="WordBool" />
    <property name="ListParagraphs" visibility="automated" type="ListParagraphs" />
    <property name="Password" visibility="automated" type="WideString" />
    <property name="WritePassword" visibility="automated" type="WideString" />
    <property name="HasPassword" visibility="automated" type="WordBool" />
    <property name="WriteReserved" visibility="automated" type="WordBool" />
    <property name="ActiveWritingStyle[LanguageID]" visibility="automated" type="WideString" />
    <property name="UserControl" visibility="automated" type="WordBool" />
    <property name="HasMailer" visibility="automated" type="WordBool" />
    <property name="Mailer" visibility="automated" type="Mailer" />
    <property name="ReadabilityStatistics" visibility="automated" type="ReadabilityStatistics" />
    <property name="GrammaticalErrors" visibility="automated" type="ProofreadingErrors" />
    <property name="SpellingErrors" visibility="automated" type="ProofreadingErrors" />
    <property name="VBProject" visibility="automated" type="_VBProject" />
    <property name="FormsDesign" visibility="automated" type="WordBool" />
    <property name="_CodeName" visibility="automated" type="WideString" />
    <property name="CodeName" visibility="automated" type="WideString" />
    <property name="SnapToGrid" visibility="automated" type="WordBool" />
    <property name="SnapToShapes" visibility="automated" type="WordBool" />
    <property name="GridDistanceHorizontal" visibility="automated" type="Single" />
    <property name="GridDistanceVertical" visibility="automated" type="Single" />
    <property name="GridOriginHorizontal" visibility="automated" type="Single" />
    <property name="GridOriginVertical" visibility="automated" type="Single" />
    <property name="GridSpaceBetweenHorizontalLines" visibility="automated" type="Integer" />
    <property name="GridSpaceBetweenVerticalLines" visibility="automated" type="Integer" />
    <property name="GridOriginFromMargin" visibility="automated" type="WordBool" />
    <property name="KerningByAlgorithm" visibility="automated" type="WordBool" />
    <property name="JustificationMode" visibility="automated" type="TOleEnum" />
    <property name="FarEastLineBreakLevel" visibility="automated" type="TOleEnum" />
    <property name="NoLineBreakBefore" visibility="automated" type="WideString" />
    <property name="NoLineBreakAfter" visibility="automated" type="WideString" />
    <property name="TrackRevisions" visibility="automated" type="WordBool" />
    <property name="PrintRevisions" visibility="automated" type="WordBool" />
    <property name="ShowRevisions" visibility="automated" type="WordBool" />
    <procedure name="Close" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="SaveChanges" type="OleVariant" paramflags="var" />
        <parameter name="OriginalFormat" type="OleVariant" paramflags="var" />
        <parameter name="RouteDocument" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SaveAs" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileName" type="OleVariant" paramflags="var" />
        <parameter name="FileFormat" type="OleVariant" paramflags="var" />
        <parameter name="LockComments" type="OleVariant" paramflags="var" />
        <parameter name="Password" type="OleVariant" paramflags="var" />
        <parameter name="AddToRecentFiles" type="OleVariant" paramflags="var" />
        <parameter name="WritePassword" type="OleVariant" paramflags="var" />
        <parameter name="ReadOnlyRecommended" type="OleVariant" paramflags="var" />
        <parameter name="EmbedTrueTypeFonts" type="OleVariant" paramflags="var" />
        <parameter name="SaveNativePictureFormat" type="OleVariant" paramflags="var" />
        <parameter name="SaveFormsData" type="OleVariant" paramflags="var" />
        <parameter name="SaveAsAOCELetter" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Repaginate" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="FitToPages" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ManualHyphenation" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="DataForm" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Route" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Save" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="PrintOut" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Background" type="OleVariant" paramflags="var" />
        <parameter name="Append" type="OleVariant" paramflags="var" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
        <parameter name="From" type="OleVariant" paramflags="var" />
        <parameter name="To_" type="OleVariant" paramflags="var" />
        <parameter name="Item" type="OleVariant" paramflags="var" />
        <parameter name="Copies" type="OleVariant" paramflags="var" />
        <parameter name="Pages" type="OleVariant" paramflags="var" />
        <parameter name="PageType" type="OleVariant" paramflags="var" />
        <parameter name="PrintToFile" type="OleVariant" paramflags="var" />
        <parameter name="Collate" type="OleVariant" paramflags="var" />
        <parameter name="ActivePrinterMacGX" type="OleVariant" paramflags="var" />
        <parameter name="ManualDuplexPrint" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SendMail" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Range" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Start" type="OleVariant" paramflags="var" />
        <parameter name="End_" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <procedure name="RunAutoMacro" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Which" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Activate" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="PrintPreview" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="GoTo_" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="What" type="OleVariant" paramflags="var" />
        <parameter name="Which" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Undo" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Times" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Redo" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Times" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="ComputeStatistics" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Statistic" type="TOleEnum" />
        <parameter name="IncludeFootnotesAndEndnotes" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="MakeCompatibilityDefault" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Protect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="NoReset" type="OleVariant" paramflags="var" />
        <parameter name="Password" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Unprotect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Password" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="EditionOptions" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Option" type="TOleEnum" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Format" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="RunLetterWizard" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="LetterContent" type="OleVariant" paramflags="var" />
        <parameter name="WizardMode" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="GetLetterContent" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="_LetterContent" />
      </parameters>
    </function>
    <procedure name="SetLetterContent" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="LetterContent" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="CopyStylesFromTemplate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Template" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="UpdateStyles" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="CheckGrammar" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="CheckSpelling" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        <parameter name="AlwaysSuggest" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="FollowHyperlink" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Address" type="OleVariant" paramflags="var" />
        <parameter name="SubAddress" type="OleVariant" paramflags="var" />
        <parameter name="NewWindow" type="OleVariant" paramflags="var" />
        <parameter name="AddHistory" type="OleVariant" paramflags="var" />
        <parameter name="ExtraInfo" type="OleVariant" paramflags="var" />
        <parameter name="Method" type="OleVariant" paramflags="var" />
        <parameter name="HeaderInfo" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="AddToFavorites" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reload" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="AutoSummarize" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Length" type="OleVariant" paramflags="var" />
        <parameter name="Mode" type="OleVariant" paramflags="var" />
        <parameter name="UpdateProperties" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <procedure name="RemoveNumbers" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="ConvertNumbersToText" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="CountNumberedItems" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
        <parameter name="Level" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Post" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ToggleFormsDesign" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Compare" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="UpdateSummaryProperties" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="GetCrossReferenceItems" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ReferenceType" type="OleVariant" paramflags="var" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="AutoFormat" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ViewCode" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ViewPropertyBrowser" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ForwardMailer" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reply" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ReplyAll" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SendMailer" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileFormat" type="OleVariant" paramflags="var" />
        <parameter name="Priority" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="UndoClear" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="PresentIt" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SendFax" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Address" type="WideString" paramflags="const" />
        <parameter name="Subject" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Merge" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="ClosePrintPreview" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="CheckConsistency" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="CreateLetterContent" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="DateFormat" type="WideString" paramflags="const" />
        <parameter name="IncludeHeaderFooter" type="WordBool" />
        <parameter name="PageDesign" type="WideString" paramflags="const" />
        <parameter name="LetterStyle" type="TOleEnum" />
        <parameter name="Letterhead" type="WordBool" />
        <parameter name="LetterheadLocation" type="TOleEnum" />
        <parameter name="LetterheadSize" type="Single" />
        <parameter name="RecipientName" type="WideString" paramflags="const" />
        <parameter name="RecipientAddress" type="WideString" paramflags="const" />
        <parameter name="Salutation" type="WideString" paramflags="const" />
        <parameter name="SalutationType" type="TOleEnum" />
        <parameter name="RecipientReference" type="WideString" paramflags="const" />
        <parameter name="MailingInstructions" type="WideString" paramflags="const" />
        <parameter name="AttentionLine" type="WideString" paramflags="const" />
        <parameter name="Subject" type="WideString" paramflags="const" />
        <parameter name="CCList" type="WideString" paramflags="const" />
        <parameter name="ReturnAddress" type="WideString" paramflags="const" />
        <parameter name="SenderName" type="WideString" paramflags="const" />
        <parameter name="Closing" type="WideString" paramflags="const" />
        <parameter name="SenderCompany" type="WideString" paramflags="const" />
        <parameter name="SenderJobTitle" type="WideString" paramflags="const" />
        <parameter name="SenderInitials" type="WideString" paramflags="const" />
        <parameter name="EnclosureNumber" type="Integer" />
        <parameter name="InfoBlock" type="OleVariant" paramflags="var" />
        <parameter name="RecipientCode" type="OleVariant" paramflags="var" />
        <parameter name="RecipientGender" type="OleVariant" paramflags="var" />
        <parameter name="ReturnAddressShortForm" type="OleVariant" paramflags="var" />
        <parameter name="SenderCity" type="OleVariant" paramflags="var" />
        <parameter name="SenderCode" type="OleVariant" paramflags="var" />
        <parameter name="SenderGender" type="OleVariant" paramflags="var" />
        <parameter name="SenderReference" type="OleVariant" paramflags="var" />
        <retval type="_LetterContent" />
      </parameters>
    </function>
    <procedure name="AcceptAllRevisions" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="RejectAllRevisions" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Template" GUID="{0002096A-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Path" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_AutoTextEntries" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="AutoTextEntries" />
      </parameters>
    </function>
    <function name="Get_LanguageID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LanguageID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Saved" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Saved" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_FullName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_BuiltInDocumentProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_CustomDocumentProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_ListTemplates" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ListTemplates" />
      </parameters>
    </function>
    <function name="Get_LanguageIDFarEast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LanguageIDFarEast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_VBProject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_VBProject" />
      </parameters>
    </function>
    <function name="Get_KerningByAlgorithm" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_KerningByAlgorithm" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_JustificationMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_JustificationMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_FarEastLineBreakLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_FarEastLineBreakLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_NoLineBreakBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_NoLineBreakBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_NoLineBreakAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_NoLineBreakAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="OpenAsDocument" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Document" />
      </parameters>
    </function>
    <procedure name="Save" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Path" visibility="public" read="Get_Path" type="WideString" default="0" />
    <property name="AutoTextEntries" visibility="public" read="Get_AutoTextEntries" type="AutoTextEntries" />
    <property name="LanguageID" visibility="public" read="Get_LanguageID" write="Set_LanguageID" type="TOleEnum" />
    <property name="Saved" visibility="public" read="Get_Saved" write="Set_Saved" type="WordBool" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="FullName" visibility="public" read="Get_FullName" type="WideString" default="0" />
    <property name="BuiltInDocumentProperties" visibility="public" read="Get_BuiltInDocumentProperties" type="IDispatch" />
    <property name="CustomDocumentProperties" visibility="public" read="Get_CustomDocumentProperties" type="IDispatch" />
    <property name="ListTemplates" visibility="public" read="Get_ListTemplates" type="ListTemplates" />
    <property name="LanguageIDFarEast" visibility="public" read="Get_LanguageIDFarEast" write="Set_LanguageIDFarEast" type="TOleEnum" />
    <property name="VBProject" visibility="public" read="Get_VBProject" type="_VBProject" />
    <property name="KerningByAlgorithm" visibility="public" read="Get_KerningByAlgorithm" write="Set_KerningByAlgorithm" type="WordBool" />
    <property name="JustificationMode" visibility="public" read="Get_JustificationMode" write="Set_JustificationMode" type="TOleEnum" />
    <property name="FarEastLineBreakLevel" visibility="public" read="Get_FarEastLineBreakLevel" write="Set_FarEastLineBreakLevel" type="TOleEnum" />
    <property name="NoLineBreakBefore" visibility="public" read="Get_NoLineBreakBefore" write="Set_NoLineBreakBefore" type="WideString" default="0" />
    <property name="NoLineBreakAfter" visibility="public" read="Get_NoLineBreakAfter" write="Set_NoLineBreakAfter" type="WideString" default="0" />
  </interface>
  <interface name="TemplateDisp" GUID="{0002096A-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Path" visibility="automated" type="WideString" />
    <property name="AutoTextEntries" visibility="automated" type="AutoTextEntries" />
    <property name="LanguageID" visibility="automated" type="TOleEnum" />
    <property name="Saved" visibility="automated" type="WordBool" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="FullName" visibility="automated" type="WideString" />
    <property name="BuiltInDocumentProperties" visibility="automated" type="IDispatch" />
    <property name="CustomDocumentProperties" visibility="automated" type="IDispatch" />
    <property name="ListTemplates" visibility="automated" type="ListTemplates" />
    <property name="LanguageIDFarEast" visibility="automated" type="TOleEnum" />
    <property name="VBProject" visibility="automated" type="_VBProject" />
    <property name="KerningByAlgorithm" visibility="automated" type="WordBool" />
    <property name="JustificationMode" visibility="automated" type="TOleEnum" />
    <property name="FarEastLineBreakLevel" visibility="automated" type="TOleEnum" />
    <property name="NoLineBreakBefore" visibility="automated" type="WideString" />
    <property name="NoLineBreakAfter" visibility="automated" type="WideString" />
    <function name="OpenAsDocument" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="_Document" />
      </parameters>
    </function>
    <procedure name="Save" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Templates" GUID="{000209A2-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Template" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="TemplatesDisp" GUID="{000209A2-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Template" />
      </parameters>
    </function>
  </interface>
  <interface name="RoutingSlip" GUID="{00020969-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Subject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Subject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Message" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Message" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Delivery" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Delivery" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_TrackStatus" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_TrackStatus" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Protect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Protect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_ReturnWhenDone" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ReturnWhenDone" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Status" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Recipients" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="Reset" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="AddRecipient" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Recipient" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Subject" visibility="public" read="Get_Subject" write="Set_Subject" type="WideString" default="0" />
    <property name="Message" visibility="public" read="Get_Message" write="Set_Message" type="WideString" default="0" />
    <property name="Delivery" visibility="public" read="Get_Delivery" write="Set_Delivery" type="TOleEnum" />
    <property name="TrackStatus" visibility="public" read="Get_TrackStatus" write="Set_TrackStatus" type="WordBool" />
    <property name="Protect" visibility="public" read="Get_Protect" write="Set_Protect" type="TOleEnum" />
    <property name="ReturnWhenDone" visibility="public" read="Get_ReturnWhenDone" write="Set_ReturnWhenDone" type="WordBool" />
    <property name="Status" visibility="public" read="Get_Status" type="TOleEnum" />
    <property name="Recipients[Index]" visibility="public" read="Get_Recipients" type="OleVariant" />
  </interface>
  <interface name="RoutingSlipDisp" GUID="{00020969-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Subject" visibility="automated" type="WideString" />
    <property name="Message" visibility="automated" type="WideString" />
    <property name="Delivery" visibility="automated" type="TOleEnum" />
    <property name="TrackStatus" visibility="automated" type="WordBool" />
    <property name="Protect" visibility="automated" type="TOleEnum" />
    <property name="ReturnWhenDone" visibility="automated" type="WordBool" />
    <property name="Status" visibility="automated" type="TOleEnum" />
    <property name="Recipients[Index]" visibility="automated" type="OleVariant" />
    <procedure name="Reset" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="AddRecipient" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Recipient" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
  </interface>
  <interface name="Bookmark" GUID="{00020968-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Empty" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Start" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Start" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_End_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_End_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Column" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_StoryType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Copy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <retval type="Bookmark" />
      </parameters>
    </function>
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="Empty" visibility="public" read="Get_Empty" type="WordBool" />
    <property name="Start" visibility="public" read="Get_Start" write="Set_Start" type="Integer" />
    <property name="End_" visibility="public" read="Get_End_" write="Set_End_" type="Integer" />
    <property name="Column" visibility="public" read="Get_Column" type="WordBool" />
    <property name="StoryType" visibility="public" read="Get_StoryType" type="TOleEnum" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="BookmarkDisp" GUID="{00020968-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Range" visibility="automated" type="Range" />
    <property name="Empty" visibility="automated" type="WordBool" />
    <property name="Start" visibility="automated" type="Integer" />
    <property name="End_" visibility="automated" type="Integer" />
    <property name="Column" visibility="automated" type="WordBool" />
    <property name="StoryType" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Copy" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <retval type="Bookmark" />
      </parameters>
    </function>
  </interface>
  <interface name="Bookmarks" GUID="{00020967-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_DefaultSorting" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_DefaultSorting" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_ShowHidden" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowHidden" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Bookmark" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <retval type="Bookmark" />
      </parameters>
    </function>
    <function name="Exists" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="DefaultSorting" visibility="public" read="Get_DefaultSorting" write="Set_DefaultSorting" type="TOleEnum" />
    <property name="ShowHidden" visibility="public" read="Get_ShowHidden" write="Set_ShowHidden" type="WordBool" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="BookmarksDisp" GUID="{00020967-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="DefaultSorting" visibility="automated" type="TOleEnum" />
    <property name="ShowHidden" visibility="automated" type="WordBool" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Bookmark" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <retval type="Bookmark" />
      </parameters>
    </function>
    <function name="Exists" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
  </interface>
  <interface name="Variable" GUID="{00020966-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Value" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Value" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Value" visibility="public" read="Get_Value" write="Set_Value" type="WideString" default="0" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
  </interface>
  <interface name="VariableDisp" GUID="{00020966-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Value" visibility="automated" type="WideString" />
    <property name="Index" visibility="automated" type="Integer" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Variables" GUID="{00020965-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Variable" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Value" type="OleVariant" paramflags="var" />
        <retval type="Variable" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="VariablesDisp" GUID="{00020965-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Variable" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Value" type="OleVariant" paramflags="var" />
        <retval type="Variable" />
      </parameters>
    </function>
  </interface>
  <interface name="RecentFile" GUID="{00020964-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_ReadOnly" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ReadOnly" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Path" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Open" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Document" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="ReadOnly" visibility="public" read="Get_ReadOnly" write="Set_ReadOnly" type="WordBool" />
    <property name="Path" visibility="public" read="Get_Path" type="WideString" default="0" />
  </interface>
  <interface name="RecentFileDisp" GUID="{00020964-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="ReadOnly" visibility="automated" type="WordBool" />
    <property name="Path" visibility="automated" type="WideString" />
    <function name="Open" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="_Document" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="RecentFiles" GUID="{00020963-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Maximum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Maximum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="RecentFile" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Document" type="OleVariant" paramflags="var" />
        <parameter name="ReadOnly" type="OleVariant" paramflags="var" />
        <retval type="RecentFile" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Maximum" visibility="public" read="Get_Maximum" write="Set_Maximum" type="Integer" />
  </interface>
  <interface name="RecentFilesDisp" GUID="{00020963-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Maximum" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="RecentFile" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Document" type="OleVariant" paramflags="var" />
        <parameter name="ReadOnly" type="OleVariant" paramflags="var" />
        <retval type="RecentFile" />
      </parameters>
    </function>
  </interface>
  <interface name="Window" GUID="{00020962-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_ActivePane" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Pane" />
      </parameters>
    </function>
    <function name="Get_Document" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Document" />
      </parameters>
    </function>
    <function name="Get_Panes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Panes" />
      </parameters>
    </function>
    <function name="Get_Selection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordSelection" />
      </parameters>
    </function>
    <function name="Get_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Split" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Split" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SplitVertical" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_SplitVertical" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Caption" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Caption" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_WindowState" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_WindowState" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_DisplayRulers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayRulers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_DisplayVerticalRuler" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayVerticalRuler" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_View" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="View" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Next" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Window" />
      </parameters>
    </function>
    <function name="Get_Previous" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Window" />
      </parameters>
    </function>
    <function name="Get_WindowNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_DisplayVerticalScrollBar" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayVerticalScrollBar" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_DisplayHorizontalScrollBar" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayHorizontalScrollBar" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_StyleAreaWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_StyleAreaWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_DisplayScreenTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayScreenTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_HorizontalPercentScrolled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_HorizontalPercentScrolled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_VerticalPercentScrolled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_VerticalPercentScrolled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_DocumentMap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DocumentMap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Active" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_DocumentMapPercentWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_DocumentMapPercentWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_IMEMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_IMEMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Activate" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Close" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SaveChanges" type="OleVariant" paramflags="var" />
        <parameter name="RouteDocument" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="LargeScroll" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Down" type="OleVariant" paramflags="var" />
        <parameter name="Up" type="OleVariant" paramflags="var" />
        <parameter name="ToRight" type="OleVariant" paramflags="var" />
        <parameter name="ToLeft" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SmallScroll" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Down" type="OleVariant" paramflags="var" />
        <parameter name="Up" type="OleVariant" paramflags="var" />
        <parameter name="ToRight" type="OleVariant" paramflags="var" />
        <parameter name="ToLeft" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="NewWindow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Window" />
      </parameters>
    </function>
    <procedure name="PrintOut" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Background" type="OleVariant" paramflags="var" />
        <parameter name="Append" type="OleVariant" paramflags="var" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
        <parameter name="From" type="OleVariant" paramflags="var" />
        <parameter name="To_" type="OleVariant" paramflags="var" />
        <parameter name="Item" type="OleVariant" paramflags="var" />
        <parameter name="Copies" type="OleVariant" paramflags="var" />
        <parameter name="Pages" type="OleVariant" paramflags="var" />
        <parameter name="PageType" type="OleVariant" paramflags="var" />
        <parameter name="PrintToFile" type="OleVariant" paramflags="var" />
        <parameter name="Collate" type="OleVariant" paramflags="var" />
        <parameter name="ActivePrinterMacGX" type="OleVariant" paramflags="var" />
        <parameter name="ManualDuplexPrint" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="PageScroll" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Down" type="OleVariant" paramflags="var" />
        <parameter name="Up" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="ActivePane" visibility="public" read="Get_ActivePane" type="Pane" />
    <property name="Document" visibility="public" read="Get_Document" type="_Document" />
    <property name="Panes" visibility="public" read="Get_Panes" type="Panes" />
    <property name="Selection" visibility="public" read="Get_Selection" type="WordSelection" />
    <property name="Left" visibility="public" read="Get_Left" write="Set_Left" type="Integer" />
    <property name="Top" visibility="public" read="Get_Top" write="Set_Top" type="Integer" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Integer" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Integer" />
    <property name="Split" visibility="public" read="Get_Split" write="Set_Split" type="WordBool" />
    <property name="SplitVertical" visibility="public" read="Get_SplitVertical" write="Set_SplitVertical" type="Integer" />
    <property name="Caption" visibility="public" read="Get_Caption" write="Set_Caption" type="WideString" default="0" />
    <property name="WindowState" visibility="public" read="Get_WindowState" write="Set_WindowState" type="TOleEnum" />
    <property name="DisplayRulers" visibility="public" read="Get_DisplayRulers" write="Set_DisplayRulers" type="WordBool" />
    <property name="DisplayVerticalRuler" visibility="public" read="Get_DisplayVerticalRuler" write="Set_DisplayVerticalRuler" type="WordBool" />
    <property name="View" visibility="public" read="Get_View" type="View" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="Next" visibility="public" read="Get_Next" type="Window" />
    <property name="Previous" visibility="public" read="Get_Previous" type="Window" />
    <property name="WindowNumber" visibility="public" read="Get_WindowNumber" type="Integer" />
    <property name="DisplayVerticalScrollBar" visibility="public" read="Get_DisplayVerticalScrollBar" write="Set_DisplayVerticalScrollBar" type="WordBool" />
    <property name="DisplayHorizontalScrollBar" visibility="public" read="Get_DisplayHorizontalScrollBar" write="Set_DisplayHorizontalScrollBar" type="WordBool" />
    <property name="StyleAreaWidth" visibility="public" read="Get_StyleAreaWidth" write="Set_StyleAreaWidth" type="Single" default="0" />
    <property name="DisplayScreenTips" visibility="public" read="Get_DisplayScreenTips" write="Set_DisplayScreenTips" type="WordBool" />
    <property name="HorizontalPercentScrolled" visibility="public" read="Get_HorizontalPercentScrolled" write="Set_HorizontalPercentScrolled" type="Integer" />
    <property name="VerticalPercentScrolled" visibility="public" read="Get_VerticalPercentScrolled" write="Set_VerticalPercentScrolled" type="Integer" />
    <property name="DocumentMap" visibility="public" read="Get_DocumentMap" write="Set_DocumentMap" type="WordBool" />
    <property name="Active" visibility="public" read="Get_Active" type="WordBool" />
    <property name="DocumentMapPercentWidth" visibility="public" read="Get_DocumentMapPercentWidth" write="Set_DocumentMapPercentWidth" type="Integer" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="IMEMode" visibility="public" read="Get_IMEMode" write="Set_IMEMode" type="TOleEnum" />
  </interface>
  <interface name="WindowDisp" GUID="{00020962-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="ActivePane" visibility="automated" type="Pane" />
    <property name="Document" visibility="automated" type="_Document" />
    <property name="Panes" visibility="automated" type="Panes" />
    <property name="Selection" visibility="automated" type="WordSelection" />
    <property name="Left" visibility="automated" type="Integer" />
    <property name="Top" visibility="automated" type="Integer" />
    <property name="Width" visibility="automated" type="Integer" />
    <property name="Height" visibility="automated" type="Integer" />
    <property name="Split" visibility="automated" type="WordBool" />
    <property name="SplitVertical" visibility="automated" type="Integer" />
    <property name="Caption" visibility="automated" type="WideString" />
    <property name="WindowState" visibility="automated" type="TOleEnum" />
    <property name="DisplayRulers" visibility="automated" type="WordBool" />
    <property name="DisplayVerticalRuler" visibility="automated" type="WordBool" />
    <property name="View" visibility="automated" type="View" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Next" visibility="automated" type="Window" />
    <property name="Previous" visibility="automated" type="Window" />
    <property name="WindowNumber" visibility="automated" type="Integer" />
    <property name="DisplayVerticalScrollBar" visibility="automated" type="WordBool" />
    <property name="DisplayHorizontalScrollBar" visibility="automated" type="WordBool" />
    <property name="StyleAreaWidth" visibility="automated" type="Single" />
    <property name="DisplayScreenTips" visibility="automated" type="WordBool" />
    <property name="HorizontalPercentScrolled" visibility="automated" type="Integer" />
    <property name="VerticalPercentScrolled" visibility="automated" type="Integer" />
    <property name="DocumentMap" visibility="automated" type="WordBool" />
    <property name="Active" visibility="automated" type="WordBool" />
    <property name="DocumentMapPercentWidth" visibility="automated" type="Integer" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="IMEMode" visibility="automated" type="TOleEnum" />
    <procedure name="Activate" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Close" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="SaveChanges" type="OleVariant" paramflags="var" />
        <parameter name="RouteDocument" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="LargeScroll" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Down" type="OleVariant" paramflags="var" />
        <parameter name="Up" type="OleVariant" paramflags="var" />
        <parameter name="ToRight" type="OleVariant" paramflags="var" />
        <parameter name="ToLeft" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SmallScroll" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Down" type="OleVariant" paramflags="var" />
        <parameter name="Up" type="OleVariant" paramflags="var" />
        <parameter name="ToRight" type="OleVariant" paramflags="var" />
        <parameter name="ToLeft" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="NewWindow" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Window" />
      </parameters>
    </function>
    <procedure name="PrintOut" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Background" type="OleVariant" paramflags="var" />
        <parameter name="Append" type="OleVariant" paramflags="var" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
        <parameter name="From" type="OleVariant" paramflags="var" />
        <parameter name="To_" type="OleVariant" paramflags="var" />
        <parameter name="Item" type="OleVariant" paramflags="var" />
        <parameter name="Copies" type="OleVariant" paramflags="var" />
        <parameter name="Pages" type="OleVariant" paramflags="var" />
        <parameter name="PageType" type="OleVariant" paramflags="var" />
        <parameter name="PrintToFile" type="OleVariant" paramflags="var" />
        <parameter name="Collate" type="OleVariant" paramflags="var" />
        <parameter name="ActivePrinterMacGX" type="OleVariant" paramflags="var" />
        <parameter name="ManualDuplexPrint" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="PageScroll" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Down" type="OleVariant" paramflags="var" />
        <parameter name="Up" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
  </interface>
  <interface name="Windows" GUID="{00020961-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Window" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Window" type="OleVariant" paramflags="var" />
        <retval type="Window" />
      </parameters>
    </function>
    <procedure name="Arrange" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ArrangeStyle" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="WindowsDisp" GUID="{00020961-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Window" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Window" type="OleVariant" paramflags="var" />
        <retval type="Window" />
      </parameters>
    </function>
    <procedure name="Arrange" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ArrangeStyle" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
  </interface>
  <interface name="Pane" GUID="{00020960-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Document" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Document" />
      </parameters>
    </function>
    <function name="Get_Selection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordSelection" />
      </parameters>
    </function>
    <function name="Get_DisplayRulers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayRulers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_DisplayVerticalRuler" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayVerticalRuler" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Zooms" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Zooms" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_View" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="View" />
      </parameters>
    </function>
    <function name="Get_Next" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Pane" />
      </parameters>
    </function>
    <function name="Get_Previous" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Pane" />
      </parameters>
    </function>
    <function name="Get_HorizontalPercentScrolled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_HorizontalPercentScrolled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_VerticalPercentScrolled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_VerticalPercentScrolled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_MinimumFontSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_MinimumFontSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_BrowseToWindow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_BrowseToWindow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_BrowseWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Activate" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Close" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="LargeScroll" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Down" type="OleVariant" paramflags="var" />
        <parameter name="Up" type="OleVariant" paramflags="var" />
        <parameter name="ToRight" type="OleVariant" paramflags="var" />
        <parameter name="ToLeft" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SmallScroll" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Down" type="OleVariant" paramflags="var" />
        <parameter name="Up" type="OleVariant" paramflags="var" />
        <parameter name="ToRight" type="OleVariant" paramflags="var" />
        <parameter name="ToLeft" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="AutoScroll" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Velocity" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="PageScroll" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Down" type="OleVariant" paramflags="var" />
        <parameter name="Up" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Document" visibility="public" read="Get_Document" type="_Document" />
    <property name="Selection" visibility="public" read="Get_Selection" type="WordSelection" />
    <property name="DisplayRulers" visibility="public" read="Get_DisplayRulers" write="Set_DisplayRulers" type="WordBool" />
    <property name="DisplayVerticalRuler" visibility="public" read="Get_DisplayVerticalRuler" write="Set_DisplayVerticalRuler" type="WordBool" />
    <property name="Zooms" visibility="public" read="Get_Zooms" type="Zooms" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="View" visibility="public" read="Get_View" type="View" />
    <property name="Next" visibility="public" read="Get_Next" type="Pane" />
    <property name="Previous" visibility="public" read="Get_Previous" type="Pane" />
    <property name="HorizontalPercentScrolled" visibility="public" read="Get_HorizontalPercentScrolled" write="Set_HorizontalPercentScrolled" type="Integer" />
    <property name="VerticalPercentScrolled" visibility="public" read="Get_VerticalPercentScrolled" write="Set_VerticalPercentScrolled" type="Integer" />
    <property name="MinimumFontSize" visibility="public" read="Get_MinimumFontSize" write="Set_MinimumFontSize" type="Integer" />
    <property name="BrowseToWindow" visibility="public" read="Get_BrowseToWindow" write="Set_BrowseToWindow" type="WordBool" />
    <property name="BrowseWidth" visibility="public" read="Get_BrowseWidth" type="Integer" />
  </interface>
  <interface name="PaneDisp" GUID="{00020960-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Document" visibility="automated" type="_Document" />
    <property name="Selection" visibility="automated" type="WordSelection" />
    <property name="DisplayRulers" visibility="automated" type="WordBool" />
    <property name="DisplayVerticalRuler" visibility="automated" type="WordBool" />
    <property name="Zooms" visibility="automated" type="Zooms" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="View" visibility="automated" type="View" />
    <property name="Next" visibility="automated" type="Pane" />
    <property name="Previous" visibility="automated" type="Pane" />
    <property name="HorizontalPercentScrolled" visibility="automated" type="Integer" />
    <property name="VerticalPercentScrolled" visibility="automated" type="Integer" />
    <property name="MinimumFontSize" visibility="automated" type="Integer" />
    <property name="BrowseToWindow" visibility="automated" type="WordBool" />
    <property name="BrowseWidth" visibility="automated" type="Integer" />
    <procedure name="Activate" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Close" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="LargeScroll" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Down" type="OleVariant" paramflags="var" />
        <parameter name="Up" type="OleVariant" paramflags="var" />
        <parameter name="ToRight" type="OleVariant" paramflags="var" />
        <parameter name="ToLeft" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SmallScroll" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Down" type="OleVariant" paramflags="var" />
        <parameter name="Up" type="OleVariant" paramflags="var" />
        <parameter name="ToRight" type="OleVariant" paramflags="var" />
        <parameter name="ToLeft" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="AutoScroll" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Velocity" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="PageScroll" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Down" type="OleVariant" paramflags="var" />
        <parameter name="Up" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
  </interface>
  <interface name="Panes" GUID="{0002095F-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Pane" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SplitVertical" type="OleVariant" paramflags="var" />
        <retval type="Pane" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="PanesDisp" GUID="{0002095F-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Pane" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="SplitVertical" type="OleVariant" paramflags="var" />
        <retval type="Pane" />
      </parameters>
    </function>
  </interface>
  <interface name="Range" GUID="{0002095E-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_FormattedText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <procedure name="Set_FormattedText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Range" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Start" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Start" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_End_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_End_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Font" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Font" />
      </parameters>
    </function>
    <procedure name="Set_Font" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="_Font" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Duplicate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_StoryType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Tables" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Tables" />
      </parameters>
    </function>
    <function name="Get_Words" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Words" />
      </parameters>
    </function>
    <function name="Get_Sentences" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Sentences" />
      </parameters>
    </function>
    <function name="Get_Characters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Characters" />
      </parameters>
    </function>
    <function name="Get_Footnotes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Footnotes" />
      </parameters>
    </function>
    <function name="Get_Endnotes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Endnotes" />
      </parameters>
    </function>
    <function name="Get_Comments" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Comments" />
      </parameters>
    </function>
    <function name="Get_Cells" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Cells" />
      </parameters>
    </function>
    <function name="Get_Sections" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Sections" />
      </parameters>
    </function>
    <function name="Get_Paragraphs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Paragraphs" />
      </parameters>
    </function>
    <function name="Get_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Borders" />
      </parameters>
    </function>
    <procedure name="Set_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Borders" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Shading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shading" />
      </parameters>
    </function>
    <function name="Get_TextRetrievalMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TextRetrievalMode" />
      </parameters>
    </function>
    <procedure name="Set_TextRetrievalMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TextRetrievalMode" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Fields" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Fields" />
      </parameters>
    </function>
    <function name="Get_FormFields" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FormFields" />
      </parameters>
    </function>
    <function name="Get_Frames" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Frames" />
      </parameters>
    </function>
    <function name="Get_ParagraphFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_ParagraphFormat" />
      </parameters>
    </function>
    <procedure name="Set_ParagraphFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="_ParagraphFormat" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ListFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ListFormat" />
      </parameters>
    </function>
    <function name="Get_Bookmarks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Bookmarks" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Bold" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Bold" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Italic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Italic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Underline" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Underline" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_EmphasisMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_EmphasisMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_DisableCharacterSpaceGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisableCharacterSpaceGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Revisions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Revisions" />
      </parameters>
    </function>
    <function name="Get_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="Set_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="Get_StoryLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_LanguageID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LanguageID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_SynonymInfo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="SynonymInfo" />
      </parameters>
    </function>
    <function name="Get_Hyperlinks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Hyperlinks" />
      </parameters>
    </function>
    <function name="Get_ListParagraphs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ListParagraphs" />
      </parameters>
    </function>
    <function name="Get_Subdocuments" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Subdocuments" />
      </parameters>
    </function>
    <function name="Get_GrammarChecked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_GrammarChecked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SpellingChecked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SpellingChecked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_HighlightColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_HighlightColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Columns" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Columns" />
      </parameters>
    </function>
    <function name="Get_Rows" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Rows" />
      </parameters>
    </function>
    <function name="Get_CanEdit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_CanPaste" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_IsEndOfRowMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_BookmarkID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_PreviousBookmarkID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Find" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Find" />
      </parameters>
    </function>
    <function name="Get_PageSetup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="PageSetup" />
      </parameters>
    </function>
    <procedure name="Set_PageSetup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="PageSetup" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ShapeRange" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <function name="Get_Case_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Case_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Information" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_ReadabilityStatistics" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ReadabilityStatistics" />
      </parameters>
    </function>
    <function name="Get_GrammaticalErrors" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ProofreadingErrors" />
      </parameters>
    </function>
    <function name="Get_SpellingErrors" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ProofreadingErrors" />
      </parameters>
    </function>
    <function name="Get_Orientation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Orientation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_InlineShapes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="InlineShapes" />
      </parameters>
    </function>
    <function name="Get_NextStoryRange" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_LanguageIDFarEast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LanguageIDFarEast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_LanguageIDOther" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LanguageIDOther" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SetRange" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Start" type="Integer" />
        <parameter name="End_" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Collapse" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Direction" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Text" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="InsertAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Text" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Next" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Previous" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="StartOf" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="EndOf" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Move" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveStart" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveEnd" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveWhile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveStartWhile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveEndWhile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveUntil" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveStartUntil" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveEndUntil" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Cut" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Copy" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Paste" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="InsertBreak" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertFile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <parameter name="ConfirmConversions" type="OleVariant" paramflags="var" />
        <parameter name="Link" type="OleVariant" paramflags="var" />
        <parameter name="Attachment" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="InStory" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="InRange" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="WholeStory" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Expand" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="InsertParagraph" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="InsertParagraphAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="ConvertToTable" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Separator" type="OleVariant" paramflags="var" />
        <parameter name="NumRows" type="OleVariant" paramflags="var" />
        <parameter name="NumColumns" type="OleVariant" paramflags="var" />
        <parameter name="InitialColumnWidth" type="OleVariant" paramflags="var" />
        <parameter name="Format" type="OleVariant" paramflags="var" />
        <parameter name="ApplyBorders" type="OleVariant" paramflags="var" />
        <parameter name="ApplyShading" type="OleVariant" paramflags="var" />
        <parameter name="ApplyFont" type="OleVariant" paramflags="var" />
        <parameter name="ApplyColor" type="OleVariant" paramflags="var" />
        <parameter name="ApplyHeadingRows" type="OleVariant" paramflags="var" />
        <parameter name="ApplyLastRow" type="OleVariant" paramflags="var" />
        <parameter name="ApplyFirstColumn" type="OleVariant" paramflags="var" />
        <parameter name="ApplyLastColumn" type="OleVariant" paramflags="var" />
        <parameter name="AutoFit" type="OleVariant" paramflags="var" />
        <retval type="Table" />
      </parameters>
    </function>
    <procedure name="InsertDateTime" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="DateTimeFormat" type="OleVariant" paramflags="var" />
        <parameter name="InsertAsField" type="OleVariant" paramflags="var" />
        <parameter name="InsertAsFullWidth" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertSymbol" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="CharacterNumber" type="Integer" />
        <parameter name="Font" type="OleVariant" paramflags="var" />
        <parameter name="Unicode" type="OleVariant" paramflags="var" />
        <parameter name="Bias" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertCrossReference" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ReferenceType" type="OleVariant" paramflags="var" />
        <parameter name="ReferenceKind" type="TOleEnum" />
        <parameter name="ReferenceItem" type="OleVariant" paramflags="var" />
        <parameter name="InsertAsHyperlink" type="OleVariant" paramflags="var" />
        <parameter name="IncludePosition" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertCaption" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Label_" type="OleVariant" paramflags="var" />
        <parameter name="Title" type="OleVariant" paramflags="var" />
        <parameter name="TitleAutoText" type="OleVariant" paramflags="var" />
        <parameter name="Position" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="CopyAsPicture" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Sort" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ExcludeHeader" type="OleVariant" paramflags="var" />
        <parameter name="FieldNumber" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder" type="OleVariant" paramflags="var" />
        <parameter name="FieldNumber2" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType2" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder2" type="OleVariant" paramflags="var" />
        <parameter name="FieldNumber3" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType3" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder3" type="OleVariant" paramflags="var" />
        <parameter name="SortColumn" type="OleVariant" paramflags="var" />
        <parameter name="Separator" type="OleVariant" paramflags="var" />
        <parameter name="CaseSensitive" type="OleVariant" paramflags="var" />
        <parameter name="LanguageID" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SortAscending" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SortDescending" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="IsEqual" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Calculate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <function name="GoTo_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="What" type="OleVariant" paramflags="var" />
        <parameter name="Which" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="GoToNext" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="What" type="TOleEnum" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="GoToPrevious" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="What" type="TOleEnum" />
        <retval type="Range" />
      </parameters>
    </function>
    <procedure name="PasteSpecial" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="IconIndex" type="OleVariant" paramflags="var" />
        <parameter name="Link" type="OleVariant" paramflags="var" />
        <parameter name="Placement" type="OleVariant" paramflags="var" />
        <parameter name="DisplayAsIcon" type="OleVariant" paramflags="var" />
        <parameter name="DataType" type="OleVariant" paramflags="var" />
        <parameter name="IconFileName" type="OleVariant" paramflags="var" />
        <parameter name="IconLabel" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="LookupNameProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="ComputeStatistics" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Statistic" type="TOleEnum" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Relocate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Direction" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="CheckSynonyms" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SubscribeTo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Edition" type="WideString" paramflags="const" />
        <parameter name="Format" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="CreatePublisher" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Edition" type="OleVariant" paramflags="var" />
        <parameter name="ContainsPICT" type="OleVariant" paramflags="var" />
        <parameter name="ContainsRTF" type="OleVariant" paramflags="var" />
        <parameter name="ContainsText" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertAutoText" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="InsertDatabase" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Format" type="OleVariant" paramflags="var" />
        <parameter name="Style" type="OleVariant" paramflags="var" />
        <parameter name="LinkToSource" type="OleVariant" paramflags="var" />
        <parameter name="Connection" type="OleVariant" paramflags="var" />
        <parameter name="SQLStatement" type="OleVariant" paramflags="var" />
        <parameter name="SQLStatement1" type="OleVariant" paramflags="var" />
        <parameter name="PasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="PasswordTemplate" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordTemplate" type="OleVariant" paramflags="var" />
        <parameter name="DataSource" type="OleVariant" paramflags="var" />
        <parameter name="From" type="OleVariant" paramflags="var" />
        <parameter name="To_" type="OleVariant" paramflags="var" />
        <parameter name="IncludeFields" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="AutoFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="CheckGrammar" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="CheckSpelling" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        <parameter name="AlwaysSuggest" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="GetSpellingSuggestions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
        <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
        <retval type="SpellingSuggestions" />
      </parameters>
    </function>
    <procedure name="InsertParagraphBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="NextSubdocument" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="PreviousSubdocument" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ConvertHangulAndHanja" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ConversionsMode" type="OleVariant" paramflags="var" />
        <parameter name="FastConversion" type="OleVariant" paramflags="var" />
        <parameter name="CheckHangulEnding" type="OleVariant" paramflags="var" />
        <parameter name="EnableRecentOrdering" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <property name="Text" visibility="public" read="Get_Text" write="Set_Text" type="WideString" default="0" />
    <property name="FormattedText" visibility="public" read="Get_FormattedText" write="Set_FormattedText" type="Range" />
    <property name="Start" visibility="public" read="Get_Start" write="Set_Start" type="Integer" />
    <property name="End_" visibility="public" read="Get_End_" write="Set_End_" type="Integer" />
    <property name="Font" visibility="public" read="Get_Font" write="Set_Font" type="_Font" />
    <property name="Duplicate" visibility="public" read="Get_Duplicate" type="Range" />
    <property name="StoryType" visibility="public" read="Get_StoryType" type="TOleEnum" />
    <property name="Tables" visibility="public" read="Get_Tables" type="Tables" />
    <property name="Words" visibility="public" read="Get_Words" type="Words" />
    <property name="Sentences" visibility="public" read="Get_Sentences" type="Sentences" />
    <property name="Characters" visibility="public" read="Get_Characters" type="Characters" />
    <property name="Footnotes" visibility="public" read="Get_Footnotes" type="Footnotes" />
    <property name="Endnotes" visibility="public" read="Get_Endnotes" type="Endnotes" />
    <property name="Comments" visibility="public" read="Get_Comments" type="Comments" />
    <property name="Cells" visibility="public" read="Get_Cells" type="Cells" />
    <property name="Sections" visibility="public" read="Get_Sections" type="Sections" />
    <property name="Paragraphs" visibility="public" read="Get_Paragraphs" type="Paragraphs" />
    <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
    <property name="Shading" visibility="public" read="Get_Shading" type="Shading" />
    <property name="TextRetrievalMode" visibility="public" read="Get_TextRetrievalMode" write="Set_TextRetrievalMode" type="TextRetrievalMode" />
    <property name="Fields" visibility="public" read="Get_Fields" type="Fields" />
    <property name="FormFields" visibility="public" read="Get_FormFields" type="FormFields" />
    <property name="Frames" visibility="public" read="Get_Frames" type="Frames" />
    <property name="ParagraphFormat" visibility="public" read="Get_ParagraphFormat" write="Set_ParagraphFormat" type="_ParagraphFormat" />
    <property name="ListFormat" visibility="public" read="Get_ListFormat" type="ListFormat" />
    <property name="Bookmarks" visibility="public" read="Get_Bookmarks" type="Bookmarks" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Bold" visibility="public" read="Get_Bold" write="Set_Bold" type="Integer" />
    <property name="Italic" visibility="public" read="Get_Italic" write="Set_Italic" type="Integer" />
    <property name="Underline" visibility="public" read="Get_Underline" write="Set_Underline" type="TOleEnum" />
    <property name="EmphasisMark" visibility="public" read="Get_EmphasisMark" write="Set_EmphasisMark" type="TOleEnum" />
    <property name="DisableCharacterSpaceGrid" visibility="public" read="Get_DisableCharacterSpaceGrid" write="Set_DisableCharacterSpaceGrid" type="WordBool" />
    <property name="Revisions" visibility="public" read="Get_Revisions" type="Revisions" />
    <property name="StoryLength" visibility="public" read="Get_StoryLength" type="Integer" />
    <property name="LanguageID" visibility="public" read="Get_LanguageID" write="Set_LanguageID" type="TOleEnum" />
    <property name="SynonymInfo" visibility="public" read="Get_SynonymInfo" type="SynonymInfo" />
    <property name="Hyperlinks" visibility="public" read="Get_Hyperlinks" type="Hyperlinks" />
    <property name="ListParagraphs" visibility="public" read="Get_ListParagraphs" type="ListParagraphs" />
    <property name="Subdocuments" visibility="public" read="Get_Subdocuments" type="Subdocuments" />
    <property name="GrammarChecked" visibility="public" read="Get_GrammarChecked" write="Set_GrammarChecked" type="WordBool" />
    <property name="SpellingChecked" visibility="public" read="Get_SpellingChecked" write="Set_SpellingChecked" type="WordBool" />
    <property name="HighlightColorIndex" visibility="public" read="Get_HighlightColorIndex" write="Set_HighlightColorIndex" type="TOleEnum" />
    <property name="Columns" visibility="public" read="Get_Columns" type="Columns" />
    <property name="Rows" visibility="public" read="Get_Rows" type="Rows" />
    <property name="CanEdit" visibility="public" read="Get_CanEdit" type="Integer" />
    <property name="CanPaste" visibility="public" read="Get_CanPaste" type="Integer" />
    <property name="IsEndOfRowMark" visibility="public" read="Get_IsEndOfRowMark" type="WordBool" />
    <property name="BookmarkID" visibility="public" read="Get_BookmarkID" type="Integer" />
    <property name="PreviousBookmarkID" visibility="public" read="Get_PreviousBookmarkID" type="Integer" />
    <property name="Find" visibility="public" read="Get_Find" type="Find" />
    <property name="PageSetup" visibility="public" read="Get_PageSetup" write="Set_PageSetup" type="PageSetup" />
    <property name="ShapeRange" visibility="public" read="Get_ShapeRange" type="ShapeRange" />
    <property name="Case_" visibility="public" read="Get_Case_" write="Set_Case_" type="TOleEnum" />
    <property name="Information[Type_]" visibility="public" read="Get_Information" type="OleVariant" />
    <property name="ReadabilityStatistics" visibility="public" read="Get_ReadabilityStatistics" type="ReadabilityStatistics" />
    <property name="GrammaticalErrors" visibility="public" read="Get_GrammaticalErrors" type="ProofreadingErrors" />
    <property name="SpellingErrors" visibility="public" read="Get_SpellingErrors" type="ProofreadingErrors" />
    <property name="Orientation" visibility="public" read="Get_Orientation" write="Set_Orientation" type="TOleEnum" />
    <property name="InlineShapes" visibility="public" read="Get_InlineShapes" type="InlineShapes" />
    <property name="NextStoryRange" visibility="public" read="Get_NextStoryRange" type="Range" />
    <property name="LanguageIDFarEast" visibility="public" read="Get_LanguageIDFarEast" write="Set_LanguageIDFarEast" type="TOleEnum" />
    <property name="LanguageIDOther" visibility="public" read="Get_LanguageIDOther" write="Set_LanguageIDOther" type="TOleEnum" />
  </interface>
  <interface name="RangeDisp" GUID="{0002095E-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Text" visibility="automated" type="WideString" />
    <property name="FormattedText" visibility="automated" type="Range" />
    <property name="Start" visibility="automated" type="Integer" />
    <property name="End_" visibility="automated" type="Integer" />
    <property name="Font" visibility="automated" type="_Font" />
    <property name="Duplicate" visibility="automated" type="Range" />
    <property name="StoryType" visibility="automated" type="TOleEnum" />
    <property name="Tables" visibility="automated" type="Tables" />
    <property name="Words" visibility="automated" type="Words" />
    <property name="Sentences" visibility="automated" type="Sentences" />
    <property name="Characters" visibility="automated" type="Characters" />
    <property name="Footnotes" visibility="automated" type="Footnotes" />
    <property name="Endnotes" visibility="automated" type="Endnotes" />
    <property name="Comments" visibility="automated" type="Comments" />
    <property name="Cells" visibility="automated" type="Cells" />
    <property name="Sections" visibility="automated" type="Sections" />
    <property name="Paragraphs" visibility="automated" type="Paragraphs" />
    <property name="Borders" visibility="automated" type="Borders" />
    <property name="Shading" visibility="automated" type="Shading" />
    <property name="TextRetrievalMode" visibility="automated" type="TextRetrievalMode" />
    <property name="Fields" visibility="automated" type="Fields" />
    <property name="FormFields" visibility="automated" type="FormFields" />
    <property name="Frames" visibility="automated" type="Frames" />
    <property name="ParagraphFormat" visibility="automated" type="_ParagraphFormat" />
    <property name="ListFormat" visibility="automated" type="ListFormat" />
    <property name="Bookmarks" visibility="automated" type="Bookmarks" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Bold" visibility="automated" type="Integer" />
    <property name="Italic" visibility="automated" type="Integer" />
    <property name="Underline" visibility="automated" type="TOleEnum" />
    <property name="EmphasisMark" visibility="automated" type="TOleEnum" />
    <property name="DisableCharacterSpaceGrid" visibility="automated" type="WordBool" />
    <property name="Revisions" visibility="automated" type="Revisions" />
    <function name="Style" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <property name="StoryLength" visibility="automated" type="Integer" />
    <property name="LanguageID" visibility="automated" type="TOleEnum" />
    <property name="SynonymInfo" visibility="automated" type="SynonymInfo" />
    <property name="Hyperlinks" visibility="automated" type="Hyperlinks" />
    <property name="ListParagraphs" visibility="automated" type="ListParagraphs" />
    <property name="Subdocuments" visibility="automated" type="Subdocuments" />
    <property name="GrammarChecked" visibility="automated" type="WordBool" />
    <property name="SpellingChecked" visibility="automated" type="WordBool" />
    <property name="HighlightColorIndex" visibility="automated" type="TOleEnum" />
    <property name="Columns" visibility="automated" type="Columns" />
    <property name="Rows" visibility="automated" type="Rows" />
    <property name="CanEdit" visibility="automated" type="Integer" />
    <property name="CanPaste" visibility="automated" type="Integer" />
    <property name="IsEndOfRowMark" visibility="automated" type="WordBool" />
    <property name="BookmarkID" visibility="automated" type="Integer" />
    <property name="PreviousBookmarkID" visibility="automated" type="Integer" />
    <property name="Find" visibility="automated" type="Find" />
    <property name="PageSetup" visibility="automated" type="PageSetup" />
    <property name="ShapeRange" visibility="automated" type="ShapeRange" />
    <property name="Case_" visibility="automated" type="TOleEnum" />
    <property name="Information[Type_]" visibility="automated" type="OleVariant" />
    <property name="ReadabilityStatistics" visibility="automated" type="ReadabilityStatistics" />
    <property name="GrammaticalErrors" visibility="automated" type="ProofreadingErrors" />
    <property name="SpellingErrors" visibility="automated" type="ProofreadingErrors" />
    <property name="Orientation" visibility="automated" type="TOleEnum" />
    <property name="InlineShapes" visibility="automated" type="InlineShapes" />
    <property name="NextStoryRange" visibility="automated" type="Range" />
    <property name="LanguageIDFarEast" visibility="automated" type="TOleEnum" />
    <property name="LanguageIDOther" visibility="automated" type="TOleEnum" />
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetRange" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Start" type="Integer" />
        <parameter name="End_" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Collapse" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Direction" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertBefore" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Text" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="InsertAfter" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Text" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Next" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Previous" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="StartOf" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="EndOf" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Move" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveStart" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveEnd" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveWhile" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveStartWhile" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveEndWhile" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveUntil" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveStartUntil" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveEndUntil" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Cut" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Copy" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Paste" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="InsertBreak" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertFile" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <parameter name="ConfirmConversions" type="OleVariant" paramflags="var" />
        <parameter name="Link" type="OleVariant" paramflags="var" />
        <parameter name="Attachment" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="InStory" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="InRange" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="WholeStory" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Expand" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="InsertParagraph" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="InsertParagraphAfter" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="ConvertToTable" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Separator" type="OleVariant" paramflags="var" />
        <parameter name="NumRows" type="OleVariant" paramflags="var" />
        <parameter name="NumColumns" type="OleVariant" paramflags="var" />
        <parameter name="InitialColumnWidth" type="OleVariant" paramflags="var" />
        <parameter name="Format" type="OleVariant" paramflags="var" />
        <parameter name="ApplyBorders" type="OleVariant" paramflags="var" />
        <parameter name="ApplyShading" type="OleVariant" paramflags="var" />
        <parameter name="ApplyFont" type="OleVariant" paramflags="var" />
        <parameter name="ApplyColor" type="OleVariant" paramflags="var" />
        <parameter name="ApplyHeadingRows" type="OleVariant" paramflags="var" />
        <parameter name="ApplyLastRow" type="OleVariant" paramflags="var" />
        <parameter name="ApplyFirstColumn" type="OleVariant" paramflags="var" />
        <parameter name="ApplyLastColumn" type="OleVariant" paramflags="var" />
        <parameter name="AutoFit" type="OleVariant" paramflags="var" />
        <retval type="Table" />
      </parameters>
    </function>
    <procedure name="InsertDateTime" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="DateTimeFormat" type="OleVariant" paramflags="var" />
        <parameter name="InsertAsField" type="OleVariant" paramflags="var" />
        <parameter name="InsertAsFullWidth" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertSymbol" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="CharacterNumber" type="Integer" />
        <parameter name="Font" type="OleVariant" paramflags="var" />
        <parameter name="Unicode" type="OleVariant" paramflags="var" />
        <parameter name="Bias" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertCrossReference" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ReferenceType" type="OleVariant" paramflags="var" />
        <parameter name="ReferenceKind" type="TOleEnum" />
        <parameter name="ReferenceItem" type="OleVariant" paramflags="var" />
        <parameter name="InsertAsHyperlink" type="OleVariant" paramflags="var" />
        <parameter name="IncludePosition" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertCaption" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Label_" type="OleVariant" paramflags="var" />
        <parameter name="Title" type="OleVariant" paramflags="var" />
        <parameter name="TitleAutoText" type="OleVariant" paramflags="var" />
        <parameter name="Position" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="CopyAsPicture" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Sort" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ExcludeHeader" type="OleVariant" paramflags="var" />
        <parameter name="FieldNumber" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder" type="OleVariant" paramflags="var" />
        <parameter name="FieldNumber2" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType2" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder2" type="OleVariant" paramflags="var" />
        <parameter name="FieldNumber3" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType3" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder3" type="OleVariant" paramflags="var" />
        <parameter name="SortColumn" type="OleVariant" paramflags="var" />
        <parameter name="Separator" type="OleVariant" paramflags="var" />
        <parameter name="CaseSensitive" type="OleVariant" paramflags="var" />
        <parameter name="LanguageID" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SortAscending" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SortDescending" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="IsEqual" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Calculate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <function name="GoTo_" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="What" type="OleVariant" paramflags="var" />
        <parameter name="Which" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="GoToNext" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="What" type="TOleEnum" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="GoToPrevious" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="What" type="TOleEnum" />
        <retval type="Range" />
      </parameters>
    </function>
    <procedure name="PasteSpecial" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="IconIndex" type="OleVariant" paramflags="var" />
        <parameter name="Link" type="OleVariant" paramflags="var" />
        <parameter name="Placement" type="OleVariant" paramflags="var" />
        <parameter name="DisplayAsIcon" type="OleVariant" paramflags="var" />
        <parameter name="DataType" type="OleVariant" paramflags="var" />
        <parameter name="IconFileName" type="OleVariant" paramflags="var" />
        <parameter name="IconLabel" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="LookupNameProperties" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="ComputeStatistics" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Statistic" type="TOleEnum" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Relocate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Direction" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="CheckSynonyms" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SubscribeTo" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Edition" type="WideString" paramflags="const" />
        <parameter name="Format" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="CreatePublisher" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Edition" type="OleVariant" paramflags="var" />
        <parameter name="ContainsPICT" type="OleVariant" paramflags="var" />
        <parameter name="ContainsRTF" type="OleVariant" paramflags="var" />
        <parameter name="ContainsText" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertAutoText" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="InsertDatabase" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Format" type="OleVariant" paramflags="var" />
        <parameter name="Style" type="OleVariant" paramflags="var" />
        <parameter name="LinkToSource" type="OleVariant" paramflags="var" />
        <parameter name="Connection" type="OleVariant" paramflags="var" />
        <parameter name="SQLStatement" type="OleVariant" paramflags="var" />
        <parameter name="SQLStatement1" type="OleVariant" paramflags="var" />
        <parameter name="PasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="PasswordTemplate" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordTemplate" type="OleVariant" paramflags="var" />
        <parameter name="DataSource" type="OleVariant" paramflags="var" />
        <parameter name="From" type="OleVariant" paramflags="var" />
        <parameter name="To_" type="OleVariant" paramflags="var" />
        <parameter name="IncludeFields" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="AutoFormat" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="CheckGrammar" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="CheckSpelling" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        <parameter name="AlwaysSuggest" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="GetSpellingSuggestions" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
        <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
        <retval type="SpellingSuggestions" />
      </parameters>
    </function>
    <procedure name="InsertParagraphBefore" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="NextSubdocument" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="PreviousSubdocument" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ConvertHangulAndHanja" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ConversionsMode" type="OleVariant" paramflags="var" />
        <parameter name="FastConversion" type="OleVariant" paramflags="var" />
        <parameter name="CheckHangulEnding" type="OleVariant" paramflags="var" />
        <parameter name="EnableRecentOrdering" type="OleVariant" paramflags="var" />
        <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
  </interface>
  <interface name="ListFormat" GUID="{000209C0-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_ListLevelNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_ListLevelNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_List" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="List" />
      </parameters>
    </function>
    <function name="Get_ListTemplate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ListTemplate" />
      </parameters>
    </function>
    <function name="Get_ListValue" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_SingleList" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_SingleListTemplate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_ListType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_ListString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="CanContinuePreviousList" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ListTemplate" type="ListTemplate" paramflags="const" />
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="RemoveNumbers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="ConvertNumbersToText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="CountNumberedItems" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
        <parameter name="Level" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="ApplyBulletDefault" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ApplyNumberDefault" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ApplyOutlineNumberDefault" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ApplyListTemplate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ListTemplate" type="ListTemplate" paramflags="const" />
        <parameter name="ContinuePreviousList" type="OleVariant" paramflags="var" />
        <parameter name="ApplyTo" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="ListOutdent" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ListIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="ListLevelNumber" visibility="public" read="Get_ListLevelNumber" write="Set_ListLevelNumber" type="Integer" />
    <property name="List" visibility="public" read="Get_List" type="List" />
    <property name="ListTemplate" visibility="public" read="Get_ListTemplate" type="ListTemplate" />
    <property name="ListValue" visibility="public" read="Get_ListValue" type="Integer" />
    <property name="SingleList" visibility="public" read="Get_SingleList" type="WordBool" />
    <property name="SingleListTemplate" visibility="public" read="Get_SingleListTemplate" type="WordBool" />
    <property name="ListType" visibility="public" read="Get_ListType" type="TOleEnum" />
    <property name="ListString" visibility="public" read="Get_ListString" type="WideString" default="0" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="ListFormatDisp" GUID="{000209C0-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="ListLevelNumber" visibility="automated" type="Integer" />
    <property name="List" visibility="automated" type="List" />
    <property name="ListTemplate" visibility="automated" type="ListTemplate" />
    <property name="ListValue" visibility="automated" type="Integer" />
    <property name="SingleList" visibility="automated" type="WordBool" />
    <property name="SingleListTemplate" visibility="automated" type="WordBool" />
    <property name="ListType" visibility="automated" type="TOleEnum" />
    <property name="ListString" visibility="automated" type="WideString" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="CanContinuePreviousList" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ListTemplate" type="ListTemplate" paramflags="const" />
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="RemoveNumbers" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="ConvertNumbersToText" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="CountNumberedItems" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
        <parameter name="Level" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="ApplyBulletDefault" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ApplyNumberDefault" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ApplyOutlineNumberDefault" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ApplyListTemplate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ListTemplate" type="ListTemplate" paramflags="const" />
        <parameter name="ContinuePreviousList" type="OleVariant" paramflags="var" />
        <parameter name="ApplyTo" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="ListOutdent" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ListIndent" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Find" GUID="{000209B0-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Forward" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Forward" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Font" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Font" />
      </parameters>
    </function>
    <procedure name="Set_Font" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="_Font" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Found" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_MatchAllWordForms" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchAllWordForms" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchCase" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchCase" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchWildcards" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchWildcards" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchSoundsLike" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchSoundsLike" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchWholeWord" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchWholeWord" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchFuzzy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchFuzzy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchByte" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchByte" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ParagraphFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_ParagraphFormat" />
      </parameters>
    </function>
    <procedure name="Set_ParagraphFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="_ParagraphFormat" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="Set_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="Get_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_LanguageID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LanguageID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Highlight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Highlight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Replacement" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Replacement" />
      </parameters>
    </function>
    <function name="Get_Frame" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Frame" />
      </parameters>
    </function>
    <function name="Get_Wrap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Wrap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Format" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Format" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_LanguageIDFarEast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LanguageIDFarEast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_LanguageIDOther" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LanguageIDOther" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_CorrectHangulEndings" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_CorrectHangulEndings" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Execute" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FindText" type="OleVariant" paramflags="var" />
        <parameter name="MatchCase" type="OleVariant" paramflags="var" />
        <parameter name="MatchWholeWord" type="OleVariant" paramflags="var" />
        <parameter name="MatchWildcards" type="OleVariant" paramflags="var" />
        <parameter name="MatchSoundsLike" type="OleVariant" paramflags="var" />
        <parameter name="MatchAllWordForms" type="OleVariant" paramflags="var" />
        <parameter name="Forward" type="OleVariant" paramflags="var" />
        <parameter name="Wrap" type="OleVariant" paramflags="var" />
        <parameter name="Format" type="OleVariant" paramflags="var" />
        <parameter name="ReplaceWith" type="OleVariant" paramflags="var" />
        <parameter name="Replace" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="ClearFormatting" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SetAllFuzzyOptions" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ClearAllFuzzyOptions" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Forward" visibility="public" read="Get_Forward" write="Set_Forward" type="WordBool" />
    <property name="Font" visibility="public" read="Get_Font" write="Set_Font" type="_Font" />
    <property name="Found" visibility="public" read="Get_Found" type="WordBool" />
    <property name="MatchAllWordForms" visibility="public" read="Get_MatchAllWordForms" write="Set_MatchAllWordForms" type="WordBool" />
    <property name="MatchCase" visibility="public" read="Get_MatchCase" write="Set_MatchCase" type="WordBool" />
    <property name="MatchWildcards" visibility="public" read="Get_MatchWildcards" write="Set_MatchWildcards" type="WordBool" />
    <property name="MatchSoundsLike" visibility="public" read="Get_MatchSoundsLike" write="Set_MatchSoundsLike" type="WordBool" />
    <property name="MatchWholeWord" visibility="public" read="Get_MatchWholeWord" write="Set_MatchWholeWord" type="WordBool" />
    <property name="MatchFuzzy" visibility="public" read="Get_MatchFuzzy" write="Set_MatchFuzzy" type="WordBool" />
    <property name="MatchByte" visibility="public" read="Get_MatchByte" write="Set_MatchByte" type="WordBool" />
    <property name="ParagraphFormat" visibility="public" read="Get_ParagraphFormat" write="Set_ParagraphFormat" type="_ParagraphFormat" />
    <property name="Text" visibility="public" read="Get_Text" write="Set_Text" type="WideString" default="0" />
    <property name="LanguageID" visibility="public" read="Get_LanguageID" write="Set_LanguageID" type="TOleEnum" />
    <property name="Highlight" visibility="public" read="Get_Highlight" write="Set_Highlight" type="Integer" />
    <property name="Replacement" visibility="public" read="Get_Replacement" type="Replacement" />
    <property name="Frame" visibility="public" read="Get_Frame" type="Frame" />
    <property name="Wrap" visibility="public" read="Get_Wrap" write="Set_Wrap" type="TOleEnum" />
    <property name="Format" visibility="public" read="Get_Format" write="Set_Format" type="WordBool" />
    <property name="LanguageIDFarEast" visibility="public" read="Get_LanguageIDFarEast" write="Set_LanguageIDFarEast" type="TOleEnum" />
    <property name="LanguageIDOther" visibility="public" read="Get_LanguageIDOther" write="Set_LanguageIDOther" type="TOleEnum" />
    <property name="CorrectHangulEndings" visibility="public" read="Get_CorrectHangulEndings" write="Set_CorrectHangulEndings" type="WordBool" />
  </interface>
  <interface name="FindDisp" GUID="{000209B0-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Forward" visibility="automated" type="WordBool" />
    <property name="Font" visibility="automated" type="_Font" />
    <property name="Found" visibility="automated" type="WordBool" />
    <property name="MatchAllWordForms" visibility="automated" type="WordBool" />
    <property name="MatchCase" visibility="automated" type="WordBool" />
    <property name="MatchWildcards" visibility="automated" type="WordBool" />
    <property name="MatchSoundsLike" visibility="automated" type="WordBool" />
    <property name="MatchWholeWord" visibility="automated" type="WordBool" />
    <property name="MatchFuzzy" visibility="automated" type="WordBool" />
    <property name="MatchByte" visibility="automated" type="WordBool" />
    <property name="ParagraphFormat" visibility="automated" type="_ParagraphFormat" />
    <function name="Style" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <property name="Text" visibility="automated" type="WideString" />
    <property name="LanguageID" visibility="automated" type="TOleEnum" />
    <property name="Highlight" visibility="automated" type="Integer" />
    <property name="Replacement" visibility="automated" type="Replacement" />
    <property name="Frame" visibility="automated" type="Frame" />
    <property name="Wrap" visibility="automated" type="TOleEnum" />
    <property name="Format" visibility="automated" type="WordBool" />
    <property name="LanguageIDFarEast" visibility="automated" type="TOleEnum" />
    <property name="LanguageIDOther" visibility="automated" type="TOleEnum" />
    <property name="CorrectHangulEndings" visibility="automated" type="WordBool" />
    <function name="Execute" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FindText" type="OleVariant" paramflags="var" />
        <parameter name="MatchCase" type="OleVariant" paramflags="var" />
        <parameter name="MatchWholeWord" type="OleVariant" paramflags="var" />
        <parameter name="MatchWildcards" type="OleVariant" paramflags="var" />
        <parameter name="MatchSoundsLike" type="OleVariant" paramflags="var" />
        <parameter name="MatchAllWordForms" type="OleVariant" paramflags="var" />
        <parameter name="Forward" type="OleVariant" paramflags="var" />
        <parameter name="Wrap" type="OleVariant" paramflags="var" />
        <parameter name="Format" type="OleVariant" paramflags="var" />
        <parameter name="ReplaceWith" type="OleVariant" paramflags="var" />
        <parameter name="Replace" type="OleVariant" paramflags="var" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="ClearFormatting" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetAllFuzzyOptions" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ClearAllFuzzyOptions" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Replacement" GUID="{000209B1-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Font" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Font" />
      </parameters>
    </function>
    <procedure name="Set_Font" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="_Font" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ParagraphFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_ParagraphFormat" />
      </parameters>
    </function>
    <procedure name="Set_ParagraphFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="_ParagraphFormat" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="Set_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="Get_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_LanguageID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LanguageID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Highlight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Highlight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Frame" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Frame" />
      </parameters>
    </function>
    <function name="Get_LanguageIDFarEast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LanguageIDFarEast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="ClearFormatting" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Font" visibility="public" read="Get_Font" write="Set_Font" type="_Font" />
    <property name="ParagraphFormat" visibility="public" read="Get_ParagraphFormat" write="Set_ParagraphFormat" type="_ParagraphFormat" />
    <property name="Text" visibility="public" read="Get_Text" write="Set_Text" type="WideString" default="0" />
    <property name="LanguageID" visibility="public" read="Get_LanguageID" write="Set_LanguageID" type="TOleEnum" />
    <property name="Highlight" visibility="public" read="Get_Highlight" write="Set_Highlight" type="Integer" />
    <property name="Frame" visibility="public" read="Get_Frame" type="Frame" />
    <property name="LanguageIDFarEast" visibility="public" read="Get_LanguageIDFarEast" write="Set_LanguageIDFarEast" type="TOleEnum" />
  </interface>
  <interface name="ReplacementDisp" GUID="{000209B1-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Font" visibility="automated" type="_Font" />
    <property name="ParagraphFormat" visibility="automated" type="_ParagraphFormat" />
    <function name="Style" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <property name="Text" visibility="automated" type="WideString" />
    <property name="LanguageID" visibility="automated" type="TOleEnum" />
    <property name="Highlight" visibility="automated" type="Integer" />
    <property name="Frame" visibility="automated" type="Frame" />
    <property name="LanguageIDFarEast" visibility="automated" type="TOleEnum" />
    <procedure name="ClearFormatting" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Characters" GUID="{0002095D-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_First" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Last" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Range" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="First" visibility="public" read="Get_First" type="Range" />
    <property name="Last" visibility="public" read="Get_Last" type="Range" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="CharactersDisp" GUID="{0002095D-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="First" visibility="automated" type="Range" />
    <property name="Last" visibility="automated" type="Range" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Range" />
      </parameters>
    </function>
  </interface>
  <interface name="Words" GUID="{0002095C-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_First" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Last" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Range" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="First" visibility="public" read="Get_First" type="Range" />
    <property name="Last" visibility="public" read="Get_Last" type="Range" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="WordsDisp" GUID="{0002095C-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="First" visibility="automated" type="Range" />
    <property name="Last" visibility="automated" type="Range" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Range" />
      </parameters>
    </function>
  </interface>
  <interface name="Sentences" GUID="{0002095B-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_First" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Last" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Range" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="First" visibility="public" read="Get_First" type="Range" />
    <property name="Last" visibility="public" read="Get_Last" type="Range" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="SentencesDisp" GUID="{0002095B-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="First" visibility="automated" type="Range" />
    <property name="Last" visibility="automated" type="Range" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Range" />
      </parameters>
    </function>
  </interface>
  <interface name="Sections" GUID="{0002095A-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_First" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Section" />
      </parameters>
    </function>
    <function name="Get_Last" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Section" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_PageSetup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="PageSetup" />
      </parameters>
    </function>
    <procedure name="Set_PageSetup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="PageSetup" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Section" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <parameter name="Start" type="OleVariant" paramflags="var" />
        <retval type="Section" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="First" visibility="public" read="Get_First" type="Section" />
    <property name="Last" visibility="public" read="Get_Last" type="Section" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="PageSetup" visibility="public" read="Get_PageSetup" write="Set_PageSetup" type="PageSetup" />
  </interface>
  <interface name="SectionsDisp" GUID="{0002095A-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="First" visibility="automated" type="Section" />
    <property name="Last" visibility="automated" type="Section" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="PageSetup" visibility="automated" type="PageSetup" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Section" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <parameter name="Start" type="OleVariant" paramflags="var" />
        <retval type="Section" />
      </parameters>
    </function>
  </interface>
  <interface name="Section" GUID="{00020959-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_PageSetup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="PageSetup" />
      </parameters>
    </function>
    <procedure name="Set_PageSetup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="PageSetup" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Headers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="HeadersFooters" />
      </parameters>
    </function>
    <function name="Get_Footers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="HeadersFooters" />
      </parameters>
    </function>
    <function name="Get_ProtectedForForms" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ProtectedForForms" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Borders" />
      </parameters>
    </function>
    <procedure name="Set_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Borders" paramflags="const" />
      </parameters>
    </procedure>
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="PageSetup" visibility="public" read="Get_PageSetup" write="Set_PageSetup" type="PageSetup" />
    <property name="Headers" visibility="public" read="Get_Headers" type="HeadersFooters" />
    <property name="Footers" visibility="public" read="Get_Footers" type="HeadersFooters" />
    <property name="ProtectedForForms" visibility="public" read="Get_ProtectedForForms" write="Set_ProtectedForForms" type="WordBool" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
  </interface>
  <interface name="SectionDisp" GUID="{00020959-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Range" visibility="automated" type="Range" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="PageSetup" visibility="automated" type="PageSetup" />
    <property name="Headers" visibility="automated" type="HeadersFooters" />
    <property name="Footers" visibility="automated" type="HeadersFooters" />
    <property name="ProtectedForForms" visibility="automated" type="WordBool" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="Borders" visibility="automated" type="Borders" />
  </interface>
  <interface name="Paragraphs" GUID="{00020958-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_First" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Paragraph" />
      </parameters>
    </function>
    <function name="Get_Last" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Paragraph" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Format" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_ParagraphFormat" />
      </parameters>
    </function>
    <procedure name="Set_Format" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="_ParagraphFormat" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_TabStops" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TabStops" />
      </parameters>
    </function>
    <procedure name="Set_TabStops" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TabStops" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Borders" />
      </parameters>
    </function>
    <procedure name="Set_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Borders" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="Set_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="Get_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_KeepTogether" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_KeepTogether" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_KeepWithNext" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_KeepWithNext" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_PageBreakBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_PageBreakBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_NoLineNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_NoLineNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_RightIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_RightIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_LeftIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_LeftIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_FirstLineIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_FirstLineIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_LineSpacing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_LineSpacing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_LineSpacingRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LineSpacingRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_SpaceBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_SpaceBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_SpaceAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_SpaceAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Hyphenation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Hyphenation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_WidowControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_WidowControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Shading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shading" />
      </parameters>
    </function>
    <function name="Get_FarEastLineBreakControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_FarEastLineBreakControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_WordWrap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_WordWrap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_HangingPunctuation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_HangingPunctuation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_HalfWidthPunctuationOnTopOfLine" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_HalfWidthPunctuationOnTopOfLine" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_AddSpaceBetweenFarEastAndAlpha" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_AddSpaceBetweenFarEastAndAlpha" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_AddSpaceBetweenFarEastAndDigit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_AddSpaceBetweenFarEastAndDigit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_BaseLineAlignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_BaseLineAlignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_AutoAdjustRightIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_AutoAdjustRightIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_DisableLineHeightGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_DisableLineHeightGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_OutlineLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_OutlineLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Paragraph" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <retval type="Paragraph" />
      </parameters>
    </function>
    <procedure name="CloseUp" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="OpenUp" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="OpenOrCloseUp" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="TabHangingIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="TabIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="Reset" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Space1" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Space15" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Space2" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="IndentCharWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="IndentFirstLineCharWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="OutlinePromote" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="OutlineDemote" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="OutlineDemoteToBody" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Indent" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Outdent" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="First" visibility="public" read="Get_First" type="Paragraph" />
    <property name="Last" visibility="public" read="Get_Last" type="Paragraph" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Format" visibility="public" read="Get_Format" write="Set_Format" type="_ParagraphFormat" />
    <property name="TabStops" visibility="public" read="Get_TabStops" write="Set_TabStops" type="TabStops" />
    <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
    <property name="Alignment" visibility="public" read="Get_Alignment" write="Set_Alignment" type="TOleEnum" />
    <property name="KeepTogether" visibility="public" read="Get_KeepTogether" write="Set_KeepTogether" type="Integer" />
    <property name="KeepWithNext" visibility="public" read="Get_KeepWithNext" write="Set_KeepWithNext" type="Integer" />
    <property name="PageBreakBefore" visibility="public" read="Get_PageBreakBefore" write="Set_PageBreakBefore" type="Integer" />
    <property name="NoLineNumber" visibility="public" read="Get_NoLineNumber" write="Set_NoLineNumber" type="Integer" />
    <property name="RightIndent" visibility="public" read="Get_RightIndent" write="Set_RightIndent" type="Single" default="0" />
    <property name="LeftIndent" visibility="public" read="Get_LeftIndent" write="Set_LeftIndent" type="Single" default="0" />
    <property name="FirstLineIndent" visibility="public" read="Get_FirstLineIndent" write="Set_FirstLineIndent" type="Single" default="0" />
    <property name="LineSpacing" visibility="public" read="Get_LineSpacing" write="Set_LineSpacing" type="Single" default="0" />
    <property name="LineSpacingRule" visibility="public" read="Get_LineSpacingRule" write="Set_LineSpacingRule" type="TOleEnum" />
    <property name="SpaceBefore" visibility="public" read="Get_SpaceBefore" write="Set_SpaceBefore" type="Single" default="0" />
    <property name="SpaceAfter" visibility="public" read="Get_SpaceAfter" write="Set_SpaceAfter" type="Single" default="0" />
    <property name="Hyphenation" visibility="public" read="Get_Hyphenation" write="Set_Hyphenation" type="Integer" />
    <property name="WidowControl" visibility="public" read="Get_WidowControl" write="Set_WidowControl" type="Integer" />
    <property name="Shading" visibility="public" read="Get_Shading" type="Shading" />
    <property name="FarEastLineBreakControl" visibility="public" read="Get_FarEastLineBreakControl" write="Set_FarEastLineBreakControl" type="Integer" />
    <property name="WordWrap" visibility="public" read="Get_WordWrap" write="Set_WordWrap" type="Integer" />
    <property name="HangingPunctuation" visibility="public" read="Get_HangingPunctuation" write="Set_HangingPunctuation" type="Integer" />
    <property name="HalfWidthPunctuationOnTopOfLine" visibility="public" read="Get_HalfWidthPunctuationOnTopOfLine" write="Set_HalfWidthPunctuationOnTopOfLine" type="Integer" />
    <property name="AddSpaceBetweenFarEastAndAlpha" visibility="public" read="Get_AddSpaceBetweenFarEastAndAlpha" write="Set_AddSpaceBetweenFarEastAndAlpha" type="Integer" />
    <property name="AddSpaceBetweenFarEastAndDigit" visibility="public" read="Get_AddSpaceBetweenFarEastAndDigit" write="Set_AddSpaceBetweenFarEastAndDigit" type="Integer" />
    <property name="BaseLineAlignment" visibility="public" read="Get_BaseLineAlignment" write="Set_BaseLineAlignment" type="TOleEnum" />
    <property name="AutoAdjustRightIndent" visibility="public" read="Get_AutoAdjustRightIndent" write="Set_AutoAdjustRightIndent" type="Integer" />
    <property name="DisableLineHeightGrid" visibility="public" read="Get_DisableLineHeightGrid" write="Set_DisableLineHeightGrid" type="Integer" />
    <property name="OutlineLevel" visibility="public" read="Get_OutlineLevel" write="Set_OutlineLevel" type="TOleEnum" />
  </interface>
  <interface name="ParagraphsDisp" GUID="{00020958-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="First" visibility="automated" type="Paragraph" />
    <property name="Last" visibility="automated" type="Paragraph" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Format" visibility="automated" type="_ParagraphFormat" />
    <property name="TabStops" visibility="automated" type="TabStops" />
    <property name="Borders" visibility="automated" type="Borders" />
    <function name="Style" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <property name="Alignment" visibility="automated" type="TOleEnum" />
    <property name="KeepTogether" visibility="automated" type="Integer" />
    <property name="KeepWithNext" visibility="automated" type="Integer" />
    <property name="PageBreakBefore" visibility="automated" type="Integer" />
    <property name="NoLineNumber" visibility="automated" type="Integer" />
    <property name="RightIndent" visibility="automated" type="Single" />
    <property name="LeftIndent" visibility="automated" type="Single" />
    <property name="FirstLineIndent" visibility="automated" type="Single" />
    <property name="LineSpacing" visibility="automated" type="Single" />
    <property name="LineSpacingRule" visibility="automated" type="TOleEnum" />
    <property name="SpaceBefore" visibility="automated" type="Single" />
    <property name="SpaceAfter" visibility="automated" type="Single" />
    <property name="Hyphenation" visibility="automated" type="Integer" />
    <property name="WidowControl" visibility="automated" type="Integer" />
    <property name="Shading" visibility="automated" type="Shading" />
    <property name="FarEastLineBreakControl" visibility="automated" type="Integer" />
    <property name="WordWrap" visibility="automated" type="Integer" />
    <property name="HangingPunctuation" visibility="automated" type="Integer" />
    <property name="HalfWidthPunctuationOnTopOfLine" visibility="automated" type="Integer" />
    <property name="AddSpaceBetweenFarEastAndAlpha" visibility="automated" type="Integer" />
    <property name="AddSpaceBetweenFarEastAndDigit" visibility="automated" type="Integer" />
    <property name="BaseLineAlignment" visibility="automated" type="TOleEnum" />
    <property name="AutoAdjustRightIndent" visibility="automated" type="Integer" />
    <property name="DisableLineHeightGrid" visibility="automated" type="Integer" />
    <property name="OutlineLevel" visibility="automated" type="TOleEnum" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Paragraph" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <retval type="Paragraph" />
      </parameters>
    </function>
    <procedure name="CloseUp" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="OpenUp" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="OpenOrCloseUp" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="TabHangingIndent" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="TabIndent" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="Reset" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Space1" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Space15" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Space2" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="IndentCharWidth" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="IndentFirstLineCharWidth" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="OutlinePromote" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="OutlineDemote" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="OutlineDemoteToBody" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Indent" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Outdent" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Paragraph" GUID="{00020957-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Format" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_ParagraphFormat" />
      </parameters>
    </function>
    <procedure name="Set_Format" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="_ParagraphFormat" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_TabStops" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TabStops" />
      </parameters>
    </function>
    <procedure name="Set_TabStops" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TabStops" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Borders" />
      </parameters>
    </function>
    <procedure name="Set_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Borders" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_DropCap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="DropCap" />
      </parameters>
    </function>
    <function name="Get_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="Set_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="Get_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_KeepTogether" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_KeepTogether" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_KeepWithNext" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_KeepWithNext" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_PageBreakBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_PageBreakBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_NoLineNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_NoLineNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_RightIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_RightIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_LeftIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_LeftIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_FirstLineIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_FirstLineIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_LineSpacing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_LineSpacing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_LineSpacingRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LineSpacingRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_SpaceBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_SpaceBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_SpaceAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_SpaceAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Hyphenation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Hyphenation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_WidowControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_WidowControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Shading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shading" />
      </parameters>
    </function>
    <function name="Get_FarEastLineBreakControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_FarEastLineBreakControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_WordWrap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_WordWrap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_HangingPunctuation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_HangingPunctuation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_HalfWidthPunctuationOnTopOfLine" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_HalfWidthPunctuationOnTopOfLine" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_AddSpaceBetweenFarEastAndAlpha" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_AddSpaceBetweenFarEastAndAlpha" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_AddSpaceBetweenFarEastAndDigit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_AddSpaceBetweenFarEastAndDigit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_BaseLineAlignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_BaseLineAlignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_AutoAdjustRightIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_AutoAdjustRightIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_DisableLineHeightGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_DisableLineHeightGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_OutlineLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_OutlineLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="CloseUp" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="OpenUp" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="OpenOrCloseUp" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="TabHangingIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="TabIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="Reset" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Space1" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Space15" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Space2" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="IndentCharWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="IndentFirstLineCharWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <function name="Next" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Paragraph" />
      </parameters>
    </function>
    <function name="Previous" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Paragraph" />
      </parameters>
    </function>
    <procedure name="OutlinePromote" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="OutlineDemote" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="OutlineDemoteToBody" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Indent" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Outdent" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Format" visibility="public" read="Get_Format" write="Set_Format" type="_ParagraphFormat" />
    <property name="TabStops" visibility="public" read="Get_TabStops" write="Set_TabStops" type="TabStops" />
    <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
    <property name="DropCap" visibility="public" read="Get_DropCap" type="DropCap" />
    <property name="Alignment" visibility="public" read="Get_Alignment" write="Set_Alignment" type="TOleEnum" />
    <property name="KeepTogether" visibility="public" read="Get_KeepTogether" write="Set_KeepTogether" type="Integer" />
    <property name="KeepWithNext" visibility="public" read="Get_KeepWithNext" write="Set_KeepWithNext" type="Integer" />
    <property name="PageBreakBefore" visibility="public" read="Get_PageBreakBefore" write="Set_PageBreakBefore" type="Integer" />
    <property name="NoLineNumber" visibility="public" read="Get_NoLineNumber" write="Set_NoLineNumber" type="Integer" />
    <property name="RightIndent" visibility="public" read="Get_RightIndent" write="Set_RightIndent" type="Single" default="0" />
    <property name="LeftIndent" visibility="public" read="Get_LeftIndent" write="Set_LeftIndent" type="Single" default="0" />
    <property name="FirstLineIndent" visibility="public" read="Get_FirstLineIndent" write="Set_FirstLineIndent" type="Single" default="0" />
    <property name="LineSpacing" visibility="public" read="Get_LineSpacing" write="Set_LineSpacing" type="Single" default="0" />
    <property name="LineSpacingRule" visibility="public" read="Get_LineSpacingRule" write="Set_LineSpacingRule" type="TOleEnum" />
    <property name="SpaceBefore" visibility="public" read="Get_SpaceBefore" write="Set_SpaceBefore" type="Single" default="0" />
    <property name="SpaceAfter" visibility="public" read="Get_SpaceAfter" write="Set_SpaceAfter" type="Single" default="0" />
    <property name="Hyphenation" visibility="public" read="Get_Hyphenation" write="Set_Hyphenation" type="Integer" />
    <property name="WidowControl" visibility="public" read="Get_WidowControl" write="Set_WidowControl" type="Integer" />
    <property name="Shading" visibility="public" read="Get_Shading" type="Shading" />
    <property name="FarEastLineBreakControl" visibility="public" read="Get_FarEastLineBreakControl" write="Set_FarEastLineBreakControl" type="Integer" />
    <property name="WordWrap" visibility="public" read="Get_WordWrap" write="Set_WordWrap" type="Integer" />
    <property name="HangingPunctuation" visibility="public" read="Get_HangingPunctuation" write="Set_HangingPunctuation" type="Integer" />
    <property name="HalfWidthPunctuationOnTopOfLine" visibility="public" read="Get_HalfWidthPunctuationOnTopOfLine" write="Set_HalfWidthPunctuationOnTopOfLine" type="Integer" />
    <property name="AddSpaceBetweenFarEastAndAlpha" visibility="public" read="Get_AddSpaceBetweenFarEastAndAlpha" write="Set_AddSpaceBetweenFarEastAndAlpha" type="Integer" />
    <property name="AddSpaceBetweenFarEastAndDigit" visibility="public" read="Get_AddSpaceBetweenFarEastAndDigit" write="Set_AddSpaceBetweenFarEastAndDigit" type="Integer" />
    <property name="BaseLineAlignment" visibility="public" read="Get_BaseLineAlignment" write="Set_BaseLineAlignment" type="TOleEnum" />
    <property name="AutoAdjustRightIndent" visibility="public" read="Get_AutoAdjustRightIndent" write="Set_AutoAdjustRightIndent" type="Integer" />
    <property name="DisableLineHeightGrid" visibility="public" read="Get_DisableLineHeightGrid" write="Set_DisableLineHeightGrid" type="Integer" />
    <property name="OutlineLevel" visibility="public" read="Get_OutlineLevel" write="Set_OutlineLevel" type="TOleEnum" />
  </interface>
  <interface name="ParagraphDisp" GUID="{00020957-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Range" visibility="automated" type="Range" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Format" visibility="automated" type="_ParagraphFormat" />
    <property name="TabStops" visibility="automated" type="TabStops" />
    <property name="Borders" visibility="automated" type="Borders" />
    <property name="DropCap" visibility="automated" type="DropCap" />
    <function name="Style" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <property name="Alignment" visibility="automated" type="TOleEnum" />
    <property name="KeepTogether" visibility="automated" type="Integer" />
    <property name="KeepWithNext" visibility="automated" type="Integer" />
    <property name="PageBreakBefore" visibility="automated" type="Integer" />
    <property name="NoLineNumber" visibility="automated" type="Integer" />
    <property name="RightIndent" visibility="automated" type="Single" />
    <property name="LeftIndent" visibility="automated" type="Single" />
    <property name="FirstLineIndent" visibility="automated" type="Single" />
    <property name="LineSpacing" visibility="automated" type="Single" />
    <property name="LineSpacingRule" visibility="automated" type="TOleEnum" />
    <property name="SpaceBefore" visibility="automated" type="Single" />
    <property name="SpaceAfter" visibility="automated" type="Single" />
    <property name="Hyphenation" visibility="automated" type="Integer" />
    <property name="WidowControl" visibility="automated" type="Integer" />
    <property name="Shading" visibility="automated" type="Shading" />
    <property name="FarEastLineBreakControl" visibility="automated" type="Integer" />
    <property name="WordWrap" visibility="automated" type="Integer" />
    <property name="HangingPunctuation" visibility="automated" type="Integer" />
    <property name="HalfWidthPunctuationOnTopOfLine" visibility="automated" type="Integer" />
    <property name="AddSpaceBetweenFarEastAndAlpha" visibility="automated" type="Integer" />
    <property name="AddSpaceBetweenFarEastAndDigit" visibility="automated" type="Integer" />
    <property name="BaseLineAlignment" visibility="automated" type="TOleEnum" />
    <property name="AutoAdjustRightIndent" visibility="automated" type="Integer" />
    <property name="DisableLineHeightGrid" visibility="automated" type="Integer" />
    <property name="OutlineLevel" visibility="automated" type="TOleEnum" />
    <procedure name="CloseUp" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="OpenUp" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="OpenOrCloseUp" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="TabHangingIndent" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="TabIndent" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="Reset" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Space1" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Space15" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Space2" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="IndentCharWidth" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="IndentFirstLineCharWidth" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <function name="Next" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Paragraph" />
      </parameters>
    </function>
    <function name="Previous" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Paragraph" />
      </parameters>
    </function>
    <procedure name="OutlinePromote" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="OutlineDemote" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="OutlineDemoteToBody" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Indent" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Outdent" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="DropCap" GUID="{00020956-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Position" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Position" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_FontName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_FontName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_LinesToDrop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_LinesToDrop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_DistanceFromText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_DistanceFromText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <procedure name="Clear" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Enable" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Position" visibility="public" read="Get_Position" write="Set_Position" type="TOleEnum" />
    <property name="FontName" visibility="public" read="Get_FontName" write="Set_FontName" type="WideString" default="0" />
    <property name="LinesToDrop" visibility="public" read="Get_LinesToDrop" write="Set_LinesToDrop" type="Integer" />
    <property name="DistanceFromText" visibility="public" read="Get_DistanceFromText" write="Set_DistanceFromText" type="Single" default="0" />
  </interface>
  <interface name="DropCapDisp" GUID="{00020956-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Position" visibility="automated" type="TOleEnum" />
    <property name="FontName" visibility="automated" type="WideString" />
    <property name="LinesToDrop" visibility="automated" type="Integer" />
    <property name="DistanceFromText" visibility="automated" type="Single" />
    <procedure name="Clear" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Enable" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="TabStops" GUID="{00020955-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="TabStop" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Position" type="Single" />
        <parameter name="Alignment" type="OleVariant" paramflags="var" />
        <parameter name="Leader" type="OleVariant" paramflags="var" />
        <retval type="TabStop" />
      </parameters>
    </function>
    <procedure name="ClearAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Before" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Position" type="Single" />
        <retval type="TabStop" />
      </parameters>
    </function>
    <function name="After" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Position" type="Single" />
        <retval type="TabStop" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="TabStopsDisp" GUID="{00020955-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="TabStop" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Position" type="Single" />
        <parameter name="Alignment" type="OleVariant" paramflags="var" />
        <parameter name="Leader" type="OleVariant" paramflags="var" />
        <retval type="TabStop" />
      </parameters>
    </function>
    <procedure name="ClearAll" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Before" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Position" type="Single" />
        <retval type="TabStop" />
      </parameters>
    </function>
    <function name="After" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Position" type="Single" />
        <retval type="TabStop" />
      </parameters>
    </function>
  </interface>
  <interface name="TabStop" GUID="{00020954-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Leader" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Leader" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Position" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Position" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_CustomTab" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Next" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TabStop" />
      </parameters>
    </function>
    <function name="Get_Previous" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TabStop" />
      </parameters>
    </function>
    <procedure name="Clear" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Alignment" visibility="public" read="Get_Alignment" write="Set_Alignment" type="TOleEnum" />
    <property name="Leader" visibility="public" read="Get_Leader" write="Set_Leader" type="TOleEnum" />
    <property name="Position" visibility="public" read="Get_Position" write="Set_Position" type="Single" default="0" />
    <property name="CustomTab" visibility="public" read="Get_CustomTab" type="WordBool" />
    <property name="Next" visibility="public" read="Get_Next" type="TabStop" />
    <property name="Previous" visibility="public" read="Get_Previous" type="TabStop" />
  </interface>
  <interface name="TabStopDisp" GUID="{00020954-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Alignment" visibility="automated" type="TOleEnum" />
    <property name="Leader" visibility="automated" type="TOleEnum" />
    <property name="Position" visibility="automated" type="Single" />
    <property name="CustomTab" visibility="automated" type="WordBool" />
    <property name="Next" visibility="automated" type="TabStop" />
    <property name="Previous" visibility="automated" type="TabStop" />
    <procedure name="Clear" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="_ParagraphFormat" GUID="{00020953-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Duplicate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_ParagraphFormat" />
      </parameters>
    </function>
    <function name="Get_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="Set_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="Get_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_KeepTogether" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_KeepTogether" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_KeepWithNext" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_KeepWithNext" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_PageBreakBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_PageBreakBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_NoLineNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_NoLineNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_RightIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_RightIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_LeftIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_LeftIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_FirstLineIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_FirstLineIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_LineSpacing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_LineSpacing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_LineSpacingRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LineSpacingRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_SpaceBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_SpaceBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_SpaceAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_SpaceAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Hyphenation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Hyphenation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_WidowControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_WidowControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_FarEastLineBreakControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_FarEastLineBreakControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_WordWrap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_WordWrap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_HangingPunctuation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_HangingPunctuation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_HalfWidthPunctuationOnTopOfLine" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_HalfWidthPunctuationOnTopOfLine" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_AddSpaceBetweenFarEastAndAlpha" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_AddSpaceBetweenFarEastAndAlpha" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_AddSpaceBetweenFarEastAndDigit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_AddSpaceBetweenFarEastAndDigit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_BaseLineAlignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_BaseLineAlignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_AutoAdjustRightIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_AutoAdjustRightIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_DisableLineHeightGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_DisableLineHeightGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_TabStops" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TabStops" />
      </parameters>
    </function>
    <procedure name="Set_TabStops" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TabStops" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Borders" />
      </parameters>
    </function>
    <procedure name="Set_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Borders" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Shading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shading" />
      </parameters>
    </function>
    <function name="Get_OutlineLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_OutlineLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="CloseUp" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="OpenUp" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="OpenOrCloseUp" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="TabHangingIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="TabIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="Reset" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Space1" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Space15" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Space2" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="IndentCharWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="IndentFirstLineCharWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Duplicate" visibility="public" read="Get_Duplicate" type="_ParagraphFormat" />
    <property name="Alignment" visibility="public" read="Get_Alignment" write="Set_Alignment" type="TOleEnum" />
    <property name="KeepTogether" visibility="public" read="Get_KeepTogether" write="Set_KeepTogether" type="Integer" />
    <property name="KeepWithNext" visibility="public" read="Get_KeepWithNext" write="Set_KeepWithNext" type="Integer" />
    <property name="PageBreakBefore" visibility="public" read="Get_PageBreakBefore" write="Set_PageBreakBefore" type="Integer" />
    <property name="NoLineNumber" visibility="public" read="Get_NoLineNumber" write="Set_NoLineNumber" type="Integer" />
    <property name="RightIndent" visibility="public" read="Get_RightIndent" write="Set_RightIndent" type="Single" default="0" />
    <property name="LeftIndent" visibility="public" read="Get_LeftIndent" write="Set_LeftIndent" type="Single" default="0" />
    <property name="FirstLineIndent" visibility="public" read="Get_FirstLineIndent" write="Set_FirstLineIndent" type="Single" default="0" />
    <property name="LineSpacing" visibility="public" read="Get_LineSpacing" write="Set_LineSpacing" type="Single" default="0" />
    <property name="LineSpacingRule" visibility="public" read="Get_LineSpacingRule" write="Set_LineSpacingRule" type="TOleEnum" />
    <property name="SpaceBefore" visibility="public" read="Get_SpaceBefore" write="Set_SpaceBefore" type="Single" default="0" />
    <property name="SpaceAfter" visibility="public" read="Get_SpaceAfter" write="Set_SpaceAfter" type="Single" default="0" />
    <property name="Hyphenation" visibility="public" read="Get_Hyphenation" write="Set_Hyphenation" type="Integer" />
    <property name="WidowControl" visibility="public" read="Get_WidowControl" write="Set_WidowControl" type="Integer" />
    <property name="FarEastLineBreakControl" visibility="public" read="Get_FarEastLineBreakControl" write="Set_FarEastLineBreakControl" type="Integer" />
    <property name="WordWrap" visibility="public" read="Get_WordWrap" write="Set_WordWrap" type="Integer" />
    <property name="HangingPunctuation" visibility="public" read="Get_HangingPunctuation" write="Set_HangingPunctuation" type="Integer" />
    <property name="HalfWidthPunctuationOnTopOfLine" visibility="public" read="Get_HalfWidthPunctuationOnTopOfLine" write="Set_HalfWidthPunctuationOnTopOfLine" type="Integer" />
    <property name="AddSpaceBetweenFarEastAndAlpha" visibility="public" read="Get_AddSpaceBetweenFarEastAndAlpha" write="Set_AddSpaceBetweenFarEastAndAlpha" type="Integer" />
    <property name="AddSpaceBetweenFarEastAndDigit" visibility="public" read="Get_AddSpaceBetweenFarEastAndDigit" write="Set_AddSpaceBetweenFarEastAndDigit" type="Integer" />
    <property name="BaseLineAlignment" visibility="public" read="Get_BaseLineAlignment" write="Set_BaseLineAlignment" type="TOleEnum" />
    <property name="AutoAdjustRightIndent" visibility="public" read="Get_AutoAdjustRightIndent" write="Set_AutoAdjustRightIndent" type="Integer" />
    <property name="DisableLineHeightGrid" visibility="public" read="Get_DisableLineHeightGrid" write="Set_DisableLineHeightGrid" type="Integer" />
    <property name="TabStops" visibility="public" read="Get_TabStops" write="Set_TabStops" type="TabStops" />
    <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
    <property name="Shading" visibility="public" read="Get_Shading" type="Shading" />
    <property name="OutlineLevel" visibility="public" read="Get_OutlineLevel" write="Set_OutlineLevel" type="TOleEnum" />
  </interface>
  <interface name="_ParagraphFormatDisp" GUID="{00020953-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Duplicate" visibility="automated" type="_ParagraphFormat" />
    <function name="Style" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <property name="Alignment" visibility="automated" type="TOleEnum" />
    <property name="KeepTogether" visibility="automated" type="Integer" />
    <property name="KeepWithNext" visibility="automated" type="Integer" />
    <property name="PageBreakBefore" visibility="automated" type="Integer" />
    <property name="NoLineNumber" visibility="automated" type="Integer" />
    <property name="RightIndent" visibility="automated" type="Single" />
    <property name="LeftIndent" visibility="automated" type="Single" />
    <property name="FirstLineIndent" visibility="automated" type="Single" />
    <property name="LineSpacing" visibility="automated" type="Single" />
    <property name="LineSpacingRule" visibility="automated" type="TOleEnum" />
    <property name="SpaceBefore" visibility="automated" type="Single" />
    <property name="SpaceAfter" visibility="automated" type="Single" />
    <property name="Hyphenation" visibility="automated" type="Integer" />
    <property name="WidowControl" visibility="automated" type="Integer" />
    <property name="FarEastLineBreakControl" visibility="automated" type="Integer" />
    <property name="WordWrap" visibility="automated" type="Integer" />
    <property name="HangingPunctuation" visibility="automated" type="Integer" />
    <property name="HalfWidthPunctuationOnTopOfLine" visibility="automated" type="Integer" />
    <property name="AddSpaceBetweenFarEastAndAlpha" visibility="automated" type="Integer" />
    <property name="AddSpaceBetweenFarEastAndDigit" visibility="automated" type="Integer" />
    <property name="BaseLineAlignment" visibility="automated" type="TOleEnum" />
    <property name="AutoAdjustRightIndent" visibility="automated" type="Integer" />
    <property name="DisableLineHeightGrid" visibility="automated" type="Integer" />
    <property name="TabStops" visibility="automated" type="TabStops" />
    <property name="Borders" visibility="automated" type="Borders" />
    <property name="Shading" visibility="automated" type="Shading" />
    <property name="OutlineLevel" visibility="automated" type="TOleEnum" />
    <procedure name="CloseUp" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="OpenUp" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="OpenOrCloseUp" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="TabHangingIndent" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="TabIndent" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="Reset" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Space1" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Space15" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Space2" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="IndentCharWidth" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="IndentFirstLineCharWidth" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Count" type="SmallInt" />
      </parameters>
    </procedure>
  </interface>
  <interface name="_Font" GUID="{00020952-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Duplicate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Font" />
      </parameters>
    </function>
    <function name="Get_Bold" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Bold" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Italic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Italic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Hidden" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Hidden" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_SmallCaps" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_SmallCaps" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_AllCaps" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_AllCaps" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_StrikeThrough" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_StrikeThrough" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_DoubleStrikeThrough" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_DoubleStrikeThrough" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_ColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_ColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Subscript" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Subscript" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Superscript" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Superscript" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Underline" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Underline" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Size" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Size" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Position" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Position" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Spacing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Spacing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Scaling" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Scaling" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Shadow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Shadow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Outline" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Outline" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Emboss" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Emboss" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Kerning" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Kerning" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Engrave" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Engrave" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Animation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Animation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Borders" />
      </parameters>
    </function>
    <procedure name="Set_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Borders" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Shading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shading" />
      </parameters>
    </function>
    <function name="Get_EmphasisMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_EmphasisMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_DisableCharacterSpaceGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisableCharacterSpaceGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_NameFarEast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_NameFarEast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_NameAscii" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_NameAscii" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_NameOther" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_NameOther" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Grow" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Shrink" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reset" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SetAsTemplateDefault" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Duplicate" visibility="public" read="Get_Duplicate" type="_Font" />
    <property name="Bold" visibility="public" read="Get_Bold" write="Set_Bold" type="Integer" />
    <property name="Italic" visibility="public" read="Get_Italic" write="Set_Italic" type="Integer" />
    <property name="Hidden" visibility="public" read="Get_Hidden" write="Set_Hidden" type="Integer" />
    <property name="SmallCaps" visibility="public" read="Get_SmallCaps" write="Set_SmallCaps" type="Integer" />
    <property name="AllCaps" visibility="public" read="Get_AllCaps" write="Set_AllCaps" type="Integer" />
    <property name="StrikeThrough" visibility="public" read="Get_StrikeThrough" write="Set_StrikeThrough" type="Integer" />
    <property name="DoubleStrikeThrough" visibility="public" read="Get_DoubleStrikeThrough" write="Set_DoubleStrikeThrough" type="Integer" />
    <property name="ColorIndex" visibility="public" read="Get_ColorIndex" write="Set_ColorIndex" type="TOleEnum" />
    <property name="Subscript" visibility="public" read="Get_Subscript" write="Set_Subscript" type="Integer" />
    <property name="Superscript" visibility="public" read="Get_Superscript" write="Set_Superscript" type="Integer" />
    <property name="Underline" visibility="public" read="Get_Underline" write="Set_Underline" type="TOleEnum" />
    <property name="Size" visibility="public" read="Get_Size" write="Set_Size" type="Single" default="0" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
    <property name="Position" visibility="public" read="Get_Position" write="Set_Position" type="Integer" />
    <property name="Spacing" visibility="public" read="Get_Spacing" write="Set_Spacing" type="Single" default="0" />
    <property name="Scaling" visibility="public" read="Get_Scaling" write="Set_Scaling" type="Integer" />
    <property name="Shadow" visibility="public" read="Get_Shadow" write="Set_Shadow" type="Integer" />
    <property name="Outline" visibility="public" read="Get_Outline" write="Set_Outline" type="Integer" />
    <property name="Emboss" visibility="public" read="Get_Emboss" write="Set_Emboss" type="Integer" />
    <property name="Kerning" visibility="public" read="Get_Kerning" write="Set_Kerning" type="Single" default="0" />
    <property name="Engrave" visibility="public" read="Get_Engrave" write="Set_Engrave" type="Integer" />
    <property name="Animation" visibility="public" read="Get_Animation" write="Set_Animation" type="TOleEnum" />
    <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
    <property name="Shading" visibility="public" read="Get_Shading" type="Shading" />
    <property name="EmphasisMark" visibility="public" read="Get_EmphasisMark" write="Set_EmphasisMark" type="TOleEnum" />
    <property name="DisableCharacterSpaceGrid" visibility="public" read="Get_DisableCharacterSpaceGrid" write="Set_DisableCharacterSpaceGrid" type="WordBool" />
    <property name="NameFarEast" visibility="public" read="Get_NameFarEast" write="Set_NameFarEast" type="WideString" default="0" />
    <property name="NameAscii" visibility="public" read="Get_NameAscii" write="Set_NameAscii" type="WideString" default="0" />
    <property name="NameOther" visibility="public" read="Get_NameOther" write="Set_NameOther" type="WideString" default="0" />
  </interface>
  <interface name="_FontDisp" GUID="{00020952-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Duplicate" visibility="automated" type="_Font" />
    <property name="Bold" visibility="automated" type="Integer" />
    <property name="Italic" visibility="automated" type="Integer" />
    <property name="Hidden" visibility="automated" type="Integer" />
    <property name="SmallCaps" visibility="automated" type="Integer" />
    <property name="AllCaps" visibility="automated" type="Integer" />
    <property name="StrikeThrough" visibility="automated" type="Integer" />
    <property name="DoubleStrikeThrough" visibility="automated" type="Integer" />
    <property name="ColorIndex" visibility="automated" type="TOleEnum" />
    <property name="Subscript" visibility="automated" type="Integer" />
    <property name="Superscript" visibility="automated" type="Integer" />
    <property name="Underline" visibility="automated" type="TOleEnum" />
    <property name="Size" visibility="automated" type="Single" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Position" visibility="automated" type="Integer" />
    <property name="Spacing" visibility="automated" type="Single" />
    <property name="Scaling" visibility="automated" type="Integer" />
    <property name="Shadow" visibility="automated" type="Integer" />
    <property name="Outline" visibility="automated" type="Integer" />
    <property name="Emboss" visibility="automated" type="Integer" />
    <property name="Kerning" visibility="automated" type="Single" />
    <property name="Engrave" visibility="automated" type="Integer" />
    <property name="Animation" visibility="automated" type="TOleEnum" />
    <property name="Borders" visibility="automated" type="Borders" />
    <property name="Shading" visibility="automated" type="Shading" />
    <property name="EmphasisMark" visibility="automated" type="TOleEnum" />
    <property name="DisableCharacterSpaceGrid" visibility="automated" type="WordBool" />
    <property name="NameFarEast" visibility="automated" type="WideString" />
    <property name="NameAscii" visibility="automated" type="WideString" />
    <property name="NameOther" visibility="automated" type="WideString" />
    <procedure name="Grow" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Shrink" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reset" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetAsTemplateDefault" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Table" GUID="{00020951-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Columns" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Columns" />
      </parameters>
    </function>
    <function name="Get_Rows" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Rows" />
      </parameters>
    </function>
    <function name="Get_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Borders" />
      </parameters>
    </function>
    <procedure name="Set_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Borders" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Shading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shading" />
      </parameters>
    </function>
    <function name="Get_Uniform" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_AutoFormatType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Sort" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ExcludeHeader" type="OleVariant" paramflags="var" />
        <parameter name="FieldNumber" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder" type="OleVariant" paramflags="var" />
        <parameter name="FieldNumber2" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType2" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder2" type="OleVariant" paramflags="var" />
        <parameter name="FieldNumber3" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType3" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder3" type="OleVariant" paramflags="var" />
        <parameter name="CaseSensitive" type="OleVariant" paramflags="var" />
        <parameter name="LanguageID" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SortAscending" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SortDescending" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="AutoFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Format" type="OleVariant" paramflags="var" />
        <parameter name="ApplyBorders" type="OleVariant" paramflags="var" />
        <parameter name="ApplyShading" type="OleVariant" paramflags="var" />
        <parameter name="ApplyFont" type="OleVariant" paramflags="var" />
        <parameter name="ApplyColor" type="OleVariant" paramflags="var" />
        <parameter name="ApplyHeadingRows" type="OleVariant" paramflags="var" />
        <parameter name="ApplyLastRow" type="OleVariant" paramflags="var" />
        <parameter name="ApplyFirstColumn" type="OleVariant" paramflags="var" />
        <parameter name="ApplyLastColumn" type="OleVariant" paramflags="var" />
        <parameter name="AutoFit" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="UpdateAutoFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="ConvertToText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Separator" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Cell" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Row" type="Integer" />
        <parameter name="Column" type="Integer" />
        <retval type="Cell" />
      </parameters>
    </function>
    <function name="Split" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BeforeRow" type="OleVariant" paramflags="var" />
        <retval type="Table" />
      </parameters>
    </function>
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Columns" visibility="public" read="Get_Columns" type="Columns" />
    <property name="Rows" visibility="public" read="Get_Rows" type="Rows" />
    <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
    <property name="Shading" visibility="public" read="Get_Shading" type="Shading" />
    <property name="Uniform" visibility="public" read="Get_Uniform" type="WordBool" />
    <property name="AutoFormatType" visibility="public" read="Get_AutoFormatType" type="Integer" />
  </interface>
  <interface name="TableDisp" GUID="{00020951-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Range" visibility="automated" type="Range" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Columns" visibility="automated" type="Columns" />
    <property name="Rows" visibility="automated" type="Rows" />
    <property name="Borders" visibility="automated" type="Borders" />
    <property name="Shading" visibility="automated" type="Shading" />
    <property name="Uniform" visibility="automated" type="WordBool" />
    <property name="AutoFormatType" visibility="automated" type="Integer" />
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Sort" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ExcludeHeader" type="OleVariant" paramflags="var" />
        <parameter name="FieldNumber" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder" type="OleVariant" paramflags="var" />
        <parameter name="FieldNumber2" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType2" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder2" type="OleVariant" paramflags="var" />
        <parameter name="FieldNumber3" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType3" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder3" type="OleVariant" paramflags="var" />
        <parameter name="CaseSensitive" type="OleVariant" paramflags="var" />
        <parameter name="LanguageID" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SortAscending" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SortDescending" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="AutoFormat" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Format" type="OleVariant" paramflags="var" />
        <parameter name="ApplyBorders" type="OleVariant" paramflags="var" />
        <parameter name="ApplyShading" type="OleVariant" paramflags="var" />
        <parameter name="ApplyFont" type="OleVariant" paramflags="var" />
        <parameter name="ApplyColor" type="OleVariant" paramflags="var" />
        <parameter name="ApplyHeadingRows" type="OleVariant" paramflags="var" />
        <parameter name="ApplyLastRow" type="OleVariant" paramflags="var" />
        <parameter name="ApplyFirstColumn" type="OleVariant" paramflags="var" />
        <parameter name="ApplyLastColumn" type="OleVariant" paramflags="var" />
        <parameter name="AutoFit" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="UpdateAutoFormat" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="ConvertToText" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Separator" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Cell" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Row" type="Integer" />
        <parameter name="Column" type="Integer" />
        <retval type="Cell" />
      </parameters>
    </function>
    <function name="Split" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="BeforeRow" type="OleVariant" paramflags="var" />
        <retval type="Table" />
      </parameters>
    </function>
  </interface>
  <interface name="Row" GUID="{00020950-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_AllowBreakAcrossPages" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_AllowBreakAcrossPages" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_HeadingFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_HeadingFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_SpaceBetweenColumns" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_SpaceBetweenColumns" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_HeightRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_HeightRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_LeftIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_LeftIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_IsLast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_IsFirst" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Cells" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Cells" />
      </parameters>
    </function>
    <function name="Get_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Borders" />
      </parameters>
    </function>
    <procedure name="Set_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Borders" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Shading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shading" />
      </parameters>
    </function>
    <function name="Get_Next" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Row" />
      </parameters>
    </function>
    <function name="Get_Previous" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Row" />
      </parameters>
    </function>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SetLeftIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="LeftIndent" type="Single" />
        <parameter name="RulerStyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RowHeight" type="Single" />
        <parameter name="HeightRule" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="ConvertToText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Separator" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="AllowBreakAcrossPages" visibility="public" read="Get_AllowBreakAcrossPages" write="Set_AllowBreakAcrossPages" type="Integer" />
    <property name="Alignment" visibility="public" read="Get_Alignment" write="Set_Alignment" type="TOleEnum" />
    <property name="HeadingFormat" visibility="public" read="Get_HeadingFormat" write="Set_HeadingFormat" type="Integer" />
    <property name="SpaceBetweenColumns" visibility="public" read="Get_SpaceBetweenColumns" write="Set_SpaceBetweenColumns" type="Single" default="0" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Single" default="0" />
    <property name="HeightRule" visibility="public" read="Get_HeightRule" write="Set_HeightRule" type="TOleEnum" />
    <property name="LeftIndent" visibility="public" read="Get_LeftIndent" write="Set_LeftIndent" type="Single" default="0" />
    <property name="IsLast" visibility="public" read="Get_IsLast" type="WordBool" />
    <property name="IsFirst" visibility="public" read="Get_IsFirst" type="WordBool" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="Cells" visibility="public" read="Get_Cells" type="Cells" />
    <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
    <property name="Shading" visibility="public" read="Get_Shading" type="Shading" />
    <property name="Next" visibility="public" read="Get_Next" type="Row" />
    <property name="Previous" visibility="public" read="Get_Previous" type="Row" />
  </interface>
  <interface name="RowDisp" GUID="{00020950-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Range" visibility="automated" type="Range" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="AllowBreakAcrossPages" visibility="automated" type="Integer" />
    <property name="Alignment" visibility="automated" type="TOleEnum" />
    <property name="HeadingFormat" visibility="automated" type="Integer" />
    <property name="SpaceBetweenColumns" visibility="automated" type="Single" />
    <property name="Height" visibility="automated" type="Single" />
    <property name="HeightRule" visibility="automated" type="TOleEnum" />
    <property name="LeftIndent" visibility="automated" type="Single" />
    <property name="IsLast" visibility="automated" type="WordBool" />
    <property name="IsFirst" visibility="automated" type="WordBool" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="Cells" visibility="automated" type="Cells" />
    <property name="Borders" visibility="automated" type="Borders" />
    <property name="Shading" visibility="automated" type="Shading" />
    <property name="Next" visibility="automated" type="Row" />
    <property name="Previous" visibility="automated" type="Row" />
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetLeftIndent" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="LeftIndent" type="Single" />
        <parameter name="RulerStyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetHeight" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="RowHeight" type="Single" />
        <parameter name="HeightRule" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="ConvertToText" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Separator" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
  </interface>
  <interface name="Column" GUID="{0002094F-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_IsFirst" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_IsLast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Cells" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Cells" />
      </parameters>
    </function>
    <function name="Get_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Borders" />
      </parameters>
    </function>
    <procedure name="Set_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Borders" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Shading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shading" />
      </parameters>
    </function>
    <function name="Get_Next" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Column" />
      </parameters>
    </function>
    <function name="Get_Previous" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Column" />
      </parameters>
    </function>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SetWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ColumnWidth" type="Single" />
        <parameter name="RulerStyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="AutoFit" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Sort" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ExcludeHeader" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder" type="OleVariant" paramflags="var" />
        <parameter name="CaseSensitive" type="OleVariant" paramflags="var" />
        <parameter name="LanguageID" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Single" default="0" />
    <property name="IsFirst" visibility="public" read="Get_IsFirst" type="WordBool" />
    <property name="IsLast" visibility="public" read="Get_IsLast" type="WordBool" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="Cells" visibility="public" read="Get_Cells" type="Cells" />
    <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
    <property name="Shading" visibility="public" read="Get_Shading" type="Shading" />
    <property name="Next" visibility="public" read="Get_Next" type="Column" />
    <property name="Previous" visibility="public" read="Get_Previous" type="Column" />
  </interface>
  <interface name="ColumnDisp" GUID="{0002094F-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Width" visibility="automated" type="Single" />
    <property name="IsFirst" visibility="automated" type="WordBool" />
    <property name="IsLast" visibility="automated" type="WordBool" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="Cells" visibility="automated" type="Cells" />
    <property name="Borders" visibility="automated" type="Borders" />
    <property name="Shading" visibility="automated" type="Shading" />
    <property name="Next" visibility="automated" type="Column" />
    <property name="Previous" visibility="automated" type="Column" />
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetWidth" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ColumnWidth" type="Single" />
        <parameter name="RulerStyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="AutoFit" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Sort" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ExcludeHeader" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder" type="OleVariant" paramflags="var" />
        <parameter name="CaseSensitive" type="OleVariant" paramflags="var" />
        <parameter name="LanguageID" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
  </interface>
  <interface name="Cell" GUID="{0002094E-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_RowIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_ColumnIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_HeightRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_HeightRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_VerticalAlignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_VerticalAlignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Column" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Column" />
      </parameters>
    </function>
    <function name="Get_Row" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Row" />
      </parameters>
    </function>
    <function name="Get_Next" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Cell" />
      </parameters>
    </function>
    <function name="Get_Previous" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Cell" />
      </parameters>
    </function>
    <function name="Get_Shading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shading" />
      </parameters>
    </function>
    <function name="Get_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Borders" />
      </parameters>
    </function>
    <procedure name="Set_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Borders" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ShiftCells" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Formula" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Formula" type="OleVariant" paramflags="var" />
        <parameter name="NumFormat" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SetWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ColumnWidth" type="Single" />
        <parameter name="RulerStyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RowHeight" type="OleVariant" paramflags="var" />
        <parameter name="HeightRule" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Merge" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="MergeTo" type="Cell" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Split" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NumRows" type="OleVariant" paramflags="var" />
        <parameter name="NumColumns" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="AutoSum" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="RowIndex" visibility="public" read="Get_RowIndex" type="Integer" />
    <property name="ColumnIndex" visibility="public" read="Get_ColumnIndex" type="Integer" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Single" default="0" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Single" default="0" />
    <property name="HeightRule" visibility="public" read="Get_HeightRule" write="Set_HeightRule" type="TOleEnum" />
    <property name="VerticalAlignment" visibility="public" read="Get_VerticalAlignment" write="Set_VerticalAlignment" type="TOleEnum" />
    <property name="Column" visibility="public" read="Get_Column" type="Column" />
    <property name="Row" visibility="public" read="Get_Row" type="Row" />
    <property name="Next" visibility="public" read="Get_Next" type="Cell" />
    <property name="Previous" visibility="public" read="Get_Previous" type="Cell" />
    <property name="Shading" visibility="public" read="Get_Shading" type="Shading" />
    <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
  </interface>
  <interface name="CellDisp" GUID="{0002094E-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Range" visibility="automated" type="Range" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="RowIndex" visibility="automated" type="Integer" />
    <property name="ColumnIndex" visibility="automated" type="Integer" />
    <property name="Width" visibility="automated" type="Single" />
    <property name="Height" visibility="automated" type="Single" />
    <property name="HeightRule" visibility="automated" type="TOleEnum" />
    <property name="VerticalAlignment" visibility="automated" type="TOleEnum" />
    <property name="Column" visibility="automated" type="Column" />
    <property name="Row" visibility="automated" type="Row" />
    <property name="Next" visibility="automated" type="Cell" />
    <property name="Previous" visibility="automated" type="Cell" />
    <property name="Shading" visibility="automated" type="Shading" />
    <property name="Borders" visibility="automated" type="Borders" />
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ShiftCells" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Formula" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Formula" type="OleVariant" paramflags="var" />
        <parameter name="NumFormat" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SetWidth" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ColumnWidth" type="Single" />
        <parameter name="RulerStyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetHeight" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="RowHeight" type="OleVariant" paramflags="var" />
        <parameter name="HeightRule" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Merge" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="MergeTo" type="Cell" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Split" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="NumRows" type="OleVariant" paramflags="var" />
        <parameter name="NumColumns" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="AutoSum" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Tables" GUID="{0002094D-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Table" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="NumRows" type="Integer" />
        <parameter name="NumColumns" type="Integer" />
        <retval type="Table" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="TablesDisp" GUID="{0002094D-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Table" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="NumRows" type="Integer" />
        <parameter name="NumColumns" type="Integer" />
        <retval type="Table" />
      </parameters>
    </function>
  </interface>
  <interface name="Rows" GUID="{0002094C-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_AllowBreakAcrossPages" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_AllowBreakAcrossPages" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_HeadingFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_HeadingFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_SpaceBetweenColumns" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_SpaceBetweenColumns" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_HeightRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_HeightRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_LeftIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_LeftIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_First" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Row" />
      </parameters>
    </function>
    <function name="Get_Last" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Row" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Borders" />
      </parameters>
    </function>
    <procedure name="Set_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Borders" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Shading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shading" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Row" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BeforeRow" type="OleVariant" paramflags="var" />
        <retval type="Row" />
      </parameters>
    </function>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SetLeftIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="LeftIndent" type="Single" />
        <parameter name="RulerStyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RowHeight" type="Single" />
        <parameter name="HeightRule" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="ConvertToText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Separator" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <procedure name="DistributeHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="AllowBreakAcrossPages" visibility="public" read="Get_AllowBreakAcrossPages" write="Set_AllowBreakAcrossPages" type="Integer" />
    <property name="Alignment" visibility="public" read="Get_Alignment" write="Set_Alignment" type="TOleEnum" />
    <property name="HeadingFormat" visibility="public" read="Get_HeadingFormat" write="Set_HeadingFormat" type="Integer" />
    <property name="SpaceBetweenColumns" visibility="public" read="Get_SpaceBetweenColumns" write="Set_SpaceBetweenColumns" type="Single" default="0" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Single" default="0" />
    <property name="HeightRule" visibility="public" read="Get_HeightRule" write="Set_HeightRule" type="TOleEnum" />
    <property name="LeftIndent" visibility="public" read="Get_LeftIndent" write="Set_LeftIndent" type="Single" default="0" />
    <property name="First" visibility="public" read="Get_First" type="Row" />
    <property name="Last" visibility="public" read="Get_Last" type="Row" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
    <property name="Shading" visibility="public" read="Get_Shading" type="Shading" />
  </interface>
  <interface name="RowsDisp" GUID="{0002094C-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="AllowBreakAcrossPages" visibility="automated" type="Integer" />
    <property name="Alignment" visibility="automated" type="TOleEnum" />
    <property name="HeadingFormat" visibility="automated" type="Integer" />
    <property name="SpaceBetweenColumns" visibility="automated" type="Single" />
    <property name="Height" visibility="automated" type="Single" />
    <property name="HeightRule" visibility="automated" type="TOleEnum" />
    <property name="LeftIndent" visibility="automated" type="Single" />
    <property name="First" visibility="automated" type="Row" />
    <property name="Last" visibility="automated" type="Row" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Borders" visibility="automated" type="Borders" />
    <property name="Shading" visibility="automated" type="Shading" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Row" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="BeforeRow" type="OleVariant" paramflags="var" />
        <retval type="Row" />
      </parameters>
    </function>
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetLeftIndent" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="LeftIndent" type="Single" />
        <parameter name="RulerStyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetHeight" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="RowHeight" type="Single" />
        <parameter name="HeightRule" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="ConvertToText" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Separator" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <procedure name="DistributeHeight" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Columns" GUID="{0002094B-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_First" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Column" />
      </parameters>
    </function>
    <function name="Get_Last" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Column" />
      </parameters>
    </function>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Borders" />
      </parameters>
    </function>
    <procedure name="Set_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Borders" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Shading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shading" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Column" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BeforeColumn" type="OleVariant" paramflags="var" />
        <retval type="Column" />
      </parameters>
    </function>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SetWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ColumnWidth" type="Single" />
        <parameter name="RulerStyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="AutoFit" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="DistributeWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="First" visibility="public" read="Get_First" type="Column" />
    <property name="Last" visibility="public" read="Get_Last" type="Column" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Single" default="0" />
    <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
    <property name="Shading" visibility="public" read="Get_Shading" type="Shading" />
  </interface>
  <interface name="ColumnsDisp" GUID="{0002094B-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="First" visibility="automated" type="Column" />
    <property name="Last" visibility="automated" type="Column" />
    <property name="Width" visibility="automated" type="Single" />
    <property name="Borders" visibility="automated" type="Borders" />
    <property name="Shading" visibility="automated" type="Shading" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Column" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="BeforeColumn" type="OleVariant" paramflags="var" />
        <retval type="Column" />
      </parameters>
    </function>
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetWidth" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ColumnWidth" type="Single" />
        <parameter name="RulerStyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="AutoFit" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="DistributeWidth" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Cells" GUID="{0002094A-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_HeightRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_HeightRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_VerticalAlignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_VerticalAlignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Borders" />
      </parameters>
    </function>
    <procedure name="Set_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Borders" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Shading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shading" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Cell" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BeforeCell" type="OleVariant" paramflags="var" />
        <retval type="Cell" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ShiftCells" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SetWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ColumnWidth" type="Single" />
        <parameter name="RulerStyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RowHeight" type="OleVariant" paramflags="var" />
        <parameter name="HeightRule" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Merge" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Split" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NumRows" type="OleVariant" paramflags="var" />
        <parameter name="NumColumns" type="OleVariant" paramflags="var" />
        <parameter name="MergeBeforeSplit" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="DistributeHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="DistributeWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="AutoFit" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Single" default="0" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Single" default="0" />
    <property name="HeightRule" visibility="public" read="Get_HeightRule" write="Set_HeightRule" type="TOleEnum" />
    <property name="VerticalAlignment" visibility="public" read="Get_VerticalAlignment" write="Set_VerticalAlignment" type="TOleEnum" />
    <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
    <property name="Shading" visibility="public" read="Get_Shading" type="Shading" />
  </interface>
  <interface name="CellsDisp" GUID="{0002094A-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Width" visibility="automated" type="Single" />
    <property name="Height" visibility="automated" type="Single" />
    <property name="HeightRule" visibility="automated" type="TOleEnum" />
    <property name="VerticalAlignment" visibility="automated" type="TOleEnum" />
    <property name="Borders" visibility="automated" type="Borders" />
    <property name="Shading" visibility="automated" type="Shading" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Cell" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="BeforeCell" type="OleVariant" paramflags="var" />
        <retval type="Cell" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ShiftCells" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SetWidth" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ColumnWidth" type="Single" />
        <parameter name="RulerStyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetHeight" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="RowHeight" type="OleVariant" paramflags="var" />
        <parameter name="HeightRule" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Merge" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Split" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="NumRows" type="OleVariant" paramflags="var" />
        <parameter name="NumColumns" type="OleVariant" paramflags="var" />
        <parameter name="MergeBeforeSplit" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="DistributeHeight" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="DistributeWidth" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="AutoFit" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="AutoCorrect" GUID="{00020949-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_CorrectDays" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_CorrectDays" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_CorrectInitialCaps" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_CorrectInitialCaps" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_CorrectSentenceCaps" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_CorrectSentenceCaps" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ReplaceText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ReplaceText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Entries" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="AutoCorrectEntries" />
      </parameters>
    </function>
    <function name="Get_FirstLetterExceptions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FirstLetterExceptions" />
      </parameters>
    </function>
    <function name="Get_FirstLetterAutoAdd" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_FirstLetterAutoAdd" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_TwoInitialCapsExceptions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TwoInitialCapsExceptions" />
      </parameters>
    </function>
    <function name="Get_TwoInitialCapsAutoAdd" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_TwoInitialCapsAutoAdd" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_CorrectCapsLock" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_CorrectCapsLock" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_CorrectHangulAndAlphabet" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_CorrectHangulAndAlphabet" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_HangulAndAlphabetExceptions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="HangulAndAlphabetExceptions" />
      </parameters>
    </function>
    <function name="Get_HangulAndAlphabetAutoAdd" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_HangulAndAlphabetAutoAdd" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="CorrectDays" visibility="public" read="Get_CorrectDays" write="Set_CorrectDays" type="WordBool" />
    <property name="CorrectInitialCaps" visibility="public" read="Get_CorrectInitialCaps" write="Set_CorrectInitialCaps" type="WordBool" />
    <property name="CorrectSentenceCaps" visibility="public" read="Get_CorrectSentenceCaps" write="Set_CorrectSentenceCaps" type="WordBool" />
    <property name="ReplaceText" visibility="public" read="Get_ReplaceText" write="Set_ReplaceText" type="WordBool" />
    <property name="Entries" visibility="public" read="Get_Entries" type="AutoCorrectEntries" />
    <property name="FirstLetterExceptions" visibility="public" read="Get_FirstLetterExceptions" type="FirstLetterExceptions" />
    <property name="FirstLetterAutoAdd" visibility="public" read="Get_FirstLetterAutoAdd" write="Set_FirstLetterAutoAdd" type="WordBool" />
    <property name="TwoInitialCapsExceptions" visibility="public" read="Get_TwoInitialCapsExceptions" type="TwoInitialCapsExceptions" />
    <property name="TwoInitialCapsAutoAdd" visibility="public" read="Get_TwoInitialCapsAutoAdd" write="Set_TwoInitialCapsAutoAdd" type="WordBool" />
    <property name="CorrectCapsLock" visibility="public" read="Get_CorrectCapsLock" write="Set_CorrectCapsLock" type="WordBool" />
    <property name="CorrectHangulAndAlphabet" visibility="public" read="Get_CorrectHangulAndAlphabet" write="Set_CorrectHangulAndAlphabet" type="WordBool" />
    <property name="HangulAndAlphabetExceptions" visibility="public" read="Get_HangulAndAlphabetExceptions" type="HangulAndAlphabetExceptions" />
    <property name="HangulAndAlphabetAutoAdd" visibility="public" read="Get_HangulAndAlphabetAutoAdd" write="Set_HangulAndAlphabetAutoAdd" type="WordBool" />
  </interface>
  <interface name="AutoCorrectDisp" GUID="{00020949-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="CorrectDays" visibility="automated" type="WordBool" />
    <property name="CorrectInitialCaps" visibility="automated" type="WordBool" />
    <property name="CorrectSentenceCaps" visibility="automated" type="WordBool" />
    <property name="ReplaceText" visibility="automated" type="WordBool" />
    <property name="Entries" visibility="automated" type="AutoCorrectEntries" />
    <property name="FirstLetterExceptions" visibility="automated" type="FirstLetterExceptions" />
    <property name="FirstLetterAutoAdd" visibility="automated" type="WordBool" />
    <property name="TwoInitialCapsExceptions" visibility="automated" type="TwoInitialCapsExceptions" />
    <property name="TwoInitialCapsAutoAdd" visibility="automated" type="WordBool" />
    <property name="CorrectCapsLock" visibility="automated" type="WordBool" />
    <property name="CorrectHangulAndAlphabet" visibility="automated" type="WordBool" />
    <property name="HangulAndAlphabetExceptions" visibility="automated" type="HangulAndAlphabetExceptions" />
    <property name="HangulAndAlphabetAutoAdd" visibility="automated" type="WordBool" />
  </interface>
  <interface name="AutoCorrectEntries" GUID="{00020948-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="AutoCorrectEntry" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Value" type="WideString" paramflags="const" />
        <retval type="AutoCorrectEntry" />
      </parameters>
    </function>
    <function name="AddRichText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="AutoCorrectEntry" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="AutoCorrectEntriesDisp" GUID="{00020948-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="AutoCorrectEntry" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Value" type="WideString" paramflags="const" />
        <retval type="AutoCorrectEntry" />
      </parameters>
    </function>
    <function name="AddRichText" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="AutoCorrectEntry" />
      </parameters>
    </function>
  </interface>
  <interface name="AutoCorrectEntry" GUID="{00020947-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Value" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Value" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_RichText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Apply" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
    <property name="Value" visibility="public" read="Get_Value" write="Set_Value" type="WideString" default="0" />
    <property name="RichText" visibility="public" read="Get_RichText" type="WordBool" />
  </interface>
  <interface name="AutoCorrectEntryDisp" GUID="{00020947-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Value" visibility="automated" type="WideString" />
    <property name="RichText" visibility="automated" type="WordBool" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Apply" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
      </parameters>
    </procedure>
  </interface>
  <interface name="FirstLetterExceptions" GUID="{00020946-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="FirstLetterException" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <retval type="FirstLetterException" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="FirstLetterExceptionsDisp" GUID="{00020946-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="FirstLetterException" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <retval type="FirstLetterException" />
      </parameters>
    </function>
  </interface>
  <interface name="FirstLetterException" GUID="{00020945-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
  </interface>
  <interface name="FirstLetterExceptionDisp" GUID="{00020945-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="Name" visibility="automated" type="WideString" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="TwoInitialCapsExceptions" GUID="{00020944-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="TwoInitialCapsException" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <retval type="TwoInitialCapsException" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="TwoInitialCapsExceptionsDisp" GUID="{00020944-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="TwoInitialCapsException" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <retval type="TwoInitialCapsException" />
      </parameters>
    </function>
  </interface>
  <interface name="TwoInitialCapsException" GUID="{00020943-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
  </interface>
  <interface name="TwoInitialCapsExceptionDisp" GUID="{00020943-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="Name" visibility="automated" type="WideString" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Footnotes" GUID="{00020942-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Location" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Location" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_NumberStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_NumberStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_StartingNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_StartingNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_NumberingRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_NumberingRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Separator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_ContinuationSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_ContinuationNotice" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Footnote" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Reference" type="OleVariant" paramflags="var" />
        <parameter name="Text" type="OleVariant" paramflags="var" />
        <retval type="Footnote" />
      </parameters>
    </function>
    <procedure name="Convert" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SwapWithEndnotes" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ResetSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ResetContinuationSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ResetContinuationNotice" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Location" visibility="public" read="Get_Location" write="Set_Location" type="TOleEnum" />
    <property name="NumberStyle" visibility="public" read="Get_NumberStyle" write="Set_NumberStyle" type="TOleEnum" />
    <property name="StartingNumber" visibility="public" read="Get_StartingNumber" write="Set_StartingNumber" type="Integer" />
    <property name="NumberingRule" visibility="public" read="Get_NumberingRule" write="Set_NumberingRule" type="TOleEnum" />
    <property name="Separator" visibility="public" read="Get_Separator" type="Range" />
    <property name="ContinuationSeparator" visibility="public" read="Get_ContinuationSeparator" type="Range" />
    <property name="ContinuationNotice" visibility="public" read="Get_ContinuationNotice" type="Range" />
  </interface>
  <interface name="FootnotesDisp" GUID="{00020942-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Location" visibility="automated" type="TOleEnum" />
    <property name="NumberStyle" visibility="automated" type="TOleEnum" />
    <property name="StartingNumber" visibility="automated" type="Integer" />
    <property name="NumberingRule" visibility="automated" type="TOleEnum" />
    <property name="Separator" visibility="automated" type="Range" />
    <property name="ContinuationSeparator" visibility="automated" type="Range" />
    <property name="ContinuationNotice" visibility="automated" type="Range" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Footnote" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Reference" type="OleVariant" paramflags="var" />
        <parameter name="Text" type="OleVariant" paramflags="var" />
        <retval type="Footnote" />
      </parameters>
    </function>
    <procedure name="Convert" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SwapWithEndnotes" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ResetSeparator" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ResetContinuationSeparator" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ResetContinuationNotice" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Endnotes" GUID="{00020941-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Location" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Location" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_NumberStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_NumberStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_StartingNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_StartingNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_NumberingRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_NumberingRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Separator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_ContinuationSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_ContinuationNotice" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Endnote" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Reference" type="OleVariant" paramflags="var" />
        <parameter name="Text" type="OleVariant" paramflags="var" />
        <retval type="Endnote" />
      </parameters>
    </function>
    <procedure name="Convert" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SwapWithFootnotes" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ResetSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ResetContinuationSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ResetContinuationNotice" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Location" visibility="public" read="Get_Location" write="Set_Location" type="TOleEnum" />
    <property name="NumberStyle" visibility="public" read="Get_NumberStyle" write="Set_NumberStyle" type="TOleEnum" />
    <property name="StartingNumber" visibility="public" read="Get_StartingNumber" write="Set_StartingNumber" type="Integer" />
    <property name="NumberingRule" visibility="public" read="Get_NumberingRule" write="Set_NumberingRule" type="TOleEnum" />
    <property name="Separator" visibility="public" read="Get_Separator" type="Range" />
    <property name="ContinuationSeparator" visibility="public" read="Get_ContinuationSeparator" type="Range" />
    <property name="ContinuationNotice" visibility="public" read="Get_ContinuationNotice" type="Range" />
  </interface>
  <interface name="EndnotesDisp" GUID="{00020941-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Location" visibility="automated" type="TOleEnum" />
    <property name="NumberStyle" visibility="automated" type="TOleEnum" />
    <property name="StartingNumber" visibility="automated" type="Integer" />
    <property name="NumberingRule" visibility="automated" type="TOleEnum" />
    <property name="Separator" visibility="automated" type="Range" />
    <property name="ContinuationSeparator" visibility="automated" type="Range" />
    <property name="ContinuationNotice" visibility="automated" type="Range" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Endnote" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Reference" type="OleVariant" paramflags="var" />
        <parameter name="Text" type="OleVariant" paramflags="var" />
        <retval type="Endnote" />
      </parameters>
    </function>
    <procedure name="Convert" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SwapWithFootnotes" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ResetSeparator" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ResetContinuationSeparator" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ResetContinuationNotice" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Comments" GUID="{00020940-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_ShowBy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ShowBy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Comment" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Text" type="OleVariant" paramflags="var" />
        <retval type="Comment" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="ShowBy" visibility="public" read="Get_ShowBy" write="Set_ShowBy" type="WideString" default="0" />
  </interface>
  <interface name="CommentsDisp" GUID="{00020940-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="ShowBy" visibility="automated" type="WideString" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Comment" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Text" type="OleVariant" paramflags="var" />
        <retval type="Comment" />
      </parameters>
    </function>
  </interface>
  <interface name="Footnote" GUID="{0002093F-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Reference" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="Reference" visibility="public" read="Get_Reference" type="Range" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
  </interface>
  <interface name="FootnoteDisp" GUID="{0002093F-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Range" visibility="automated" type="Range" />
    <property name="Reference" visibility="automated" type="Range" />
    <property name="Index" visibility="automated" type="Integer" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Endnote" GUID="{0002093E-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Reference" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="Reference" visibility="public" read="Get_Reference" type="Range" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
  </interface>
  <interface name="EndnoteDisp" GUID="{0002093E-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Range" visibility="automated" type="Range" />
    <property name="Reference" visibility="automated" type="Range" />
    <property name="Index" visibility="automated" type="Integer" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Comment" GUID="{0002093D-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Reference" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Scope" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Author" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Author" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Initial" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Initial" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ShowTip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowTip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="Reference" visibility="public" read="Get_Reference" type="Range" />
    <property name="Scope" visibility="public" read="Get_Scope" type="Range" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="Author" visibility="public" read="Get_Author" write="Set_Author" type="WideString" default="0" />
    <property name="Initial" visibility="public" read="Get_Initial" write="Set_Initial" type="WideString" default="0" />
    <property name="ShowTip" visibility="public" read="Get_ShowTip" write="Set_ShowTip" type="WordBool" />
  </interface>
  <interface name="CommentDisp" GUID="{0002093D-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Range" visibility="automated" type="Range" />
    <property name="Reference" visibility="automated" type="Range" />
    <property name="Scope" visibility="automated" type="Range" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="Author" visibility="automated" type="WideString" />
    <property name="Initial" visibility="automated" type="WideString" />
    <property name="ShowTip" visibility="automated" type="WordBool" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Borders" GUID="{0002093C-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Enable" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Enable" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_DistanceFromTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_DistanceFromTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Shadow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Shadow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_InsideLineStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_InsideLineStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_OutsideLineStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_OutsideLineStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_InsideLineWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_InsideLineWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_OutsideLineWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_OutsideLineWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_InsideColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_InsideColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_OutsideColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_OutsideColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_DistanceFromLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_DistanceFromLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_DistanceFromBottom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_DistanceFromBottom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_DistanceFromRight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_DistanceFromRight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_AlwaysInFront" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AlwaysInFront" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SurroundHeader" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SurroundHeader" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SurroundFooter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SurroundFooter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_JoinBorders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_JoinBorders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_HasHorizontal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_HasVertical" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_DistanceFrom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_DistanceFrom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_EnableFirstPageInSection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_EnableFirstPageInSection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_EnableOtherPagesInSection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_EnableOtherPagesInSection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="TOleEnum" />
        <retval type="Border" />
      </parameters>
    </function>
    <procedure name="ApplyPageBordersToAllSections" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Enable" visibility="public" read="Get_Enable" write="Set_Enable" type="Integer" />
    <property name="DistanceFromTop" visibility="public" read="Get_DistanceFromTop" write="Set_DistanceFromTop" type="Integer" />
    <property name="Shadow" visibility="public" read="Get_Shadow" write="Set_Shadow" type="WordBool" />
    <property name="InsideLineStyle" visibility="public" read="Get_InsideLineStyle" write="Set_InsideLineStyle" type="TOleEnum" />
    <property name="OutsideLineStyle" visibility="public" read="Get_OutsideLineStyle" write="Set_OutsideLineStyle" type="TOleEnum" />
    <property name="InsideLineWidth" visibility="public" read="Get_InsideLineWidth" write="Set_InsideLineWidth" type="TOleEnum" />
    <property name="OutsideLineWidth" visibility="public" read="Get_OutsideLineWidth" write="Set_OutsideLineWidth" type="TOleEnum" />
    <property name="InsideColorIndex" visibility="public" read="Get_InsideColorIndex" write="Set_InsideColorIndex" type="TOleEnum" />
    <property name="OutsideColorIndex" visibility="public" read="Get_OutsideColorIndex" write="Set_OutsideColorIndex" type="TOleEnum" />
    <property name="DistanceFromLeft" visibility="public" read="Get_DistanceFromLeft" write="Set_DistanceFromLeft" type="Integer" />
    <property name="DistanceFromBottom" visibility="public" read="Get_DistanceFromBottom" write="Set_DistanceFromBottom" type="Integer" />
    <property name="DistanceFromRight" visibility="public" read="Get_DistanceFromRight" write="Set_DistanceFromRight" type="Integer" />
    <property name="AlwaysInFront" visibility="public" read="Get_AlwaysInFront" write="Set_AlwaysInFront" type="WordBool" />
    <property name="SurroundHeader" visibility="public" read="Get_SurroundHeader" write="Set_SurroundHeader" type="WordBool" />
    <property name="SurroundFooter" visibility="public" read="Get_SurroundFooter" write="Set_SurroundFooter" type="WordBool" />
    <property name="JoinBorders" visibility="public" read="Get_JoinBorders" write="Set_JoinBorders" type="WordBool" />
    <property name="HasHorizontal" visibility="public" read="Get_HasHorizontal" type="WordBool" />
    <property name="HasVertical" visibility="public" read="Get_HasVertical" type="WordBool" />
    <property name="DistanceFrom" visibility="public" read="Get_DistanceFrom" write="Set_DistanceFrom" type="TOleEnum" />
    <property name="EnableFirstPageInSection" visibility="public" read="Get_EnableFirstPageInSection" write="Set_EnableFirstPageInSection" type="WordBool" />
    <property name="EnableOtherPagesInSection" visibility="public" read="Get_EnableOtherPagesInSection" write="Set_EnableOtherPagesInSection" type="WordBool" />
  </interface>
  <interface name="BordersDisp" GUID="{0002093C-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Enable" visibility="automated" type="Integer" />
    <property name="DistanceFromTop" visibility="automated" type="Integer" />
    <property name="Shadow" visibility="automated" type="WordBool" />
    <property name="InsideLineStyle" visibility="automated" type="TOleEnum" />
    <property name="OutsideLineStyle" visibility="automated" type="TOleEnum" />
    <property name="InsideLineWidth" visibility="automated" type="TOleEnum" />
    <property name="OutsideLineWidth" visibility="automated" type="TOleEnum" />
    <property name="InsideColorIndex" visibility="automated" type="TOleEnum" />
    <property name="OutsideColorIndex" visibility="automated" type="TOleEnum" />
    <property name="DistanceFromLeft" visibility="automated" type="Integer" />
    <property name="DistanceFromBottom" visibility="automated" type="Integer" />
    <property name="DistanceFromRight" visibility="automated" type="Integer" />
    <property name="AlwaysInFront" visibility="automated" type="WordBool" />
    <property name="SurroundHeader" visibility="automated" type="WordBool" />
    <property name="SurroundFooter" visibility="automated" type="WordBool" />
    <property name="JoinBorders" visibility="automated" type="WordBool" />
    <property name="HasHorizontal" visibility="automated" type="WordBool" />
    <property name="HasVertical" visibility="automated" type="WordBool" />
    <property name="DistanceFrom" visibility="automated" type="TOleEnum" />
    <property name="EnableFirstPageInSection" visibility="automated" type="WordBool" />
    <property name="EnableOtherPagesInSection" visibility="automated" type="WordBool" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="TOleEnum" />
        <retval type="Border" />
      </parameters>
    </function>
    <procedure name="ApplyPageBordersToAllSections" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Border" GUID="{0002093B-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_ColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Inside" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_LineStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LineStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_LineWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LineWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_ArtStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_ArtStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_ArtWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_ArtWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="WordBool" />
    <property name="ColorIndex" visibility="public" read="Get_ColorIndex" write="Set_ColorIndex" type="TOleEnum" />
    <property name="Inside" visibility="public" read="Get_Inside" type="WordBool" />
    <property name="LineStyle" visibility="public" read="Get_LineStyle" write="Set_LineStyle" type="TOleEnum" />
    <property name="LineWidth" visibility="public" read="Get_LineWidth" write="Set_LineWidth" type="TOleEnum" />
    <property name="ArtStyle" visibility="public" read="Get_ArtStyle" write="Set_ArtStyle" type="TOleEnum" />
    <property name="ArtWidth" visibility="public" read="Get_ArtWidth" write="Set_ArtWidth" type="Integer" />
  </interface>
  <interface name="BorderDisp" GUID="{0002093B-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Visible" visibility="automated" type="WordBool" />
    <property name="ColorIndex" visibility="automated" type="TOleEnum" />
    <property name="Inside" visibility="automated" type="WordBool" />
    <property name="LineStyle" visibility="automated" type="TOleEnum" />
    <property name="LineWidth" visibility="automated" type="TOleEnum" />
    <property name="ArtStyle" visibility="automated" type="TOleEnum" />
    <property name="ArtWidth" visibility="automated" type="Integer" />
  </interface>
  <interface name="Shading" GUID="{0002093A-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_ForegroundPatternColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_ForegroundPatternColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_BackgroundPatternColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_BackgroundPatternColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Texture" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Texture" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="ForegroundPatternColorIndex" visibility="public" read="Get_ForegroundPatternColorIndex" write="Set_ForegroundPatternColorIndex" type="TOleEnum" />
    <property name="BackgroundPatternColorIndex" visibility="public" read="Get_BackgroundPatternColorIndex" write="Set_BackgroundPatternColorIndex" type="TOleEnum" />
    <property name="Texture" visibility="public" read="Get_Texture" write="Set_Texture" type="TOleEnum" />
  </interface>
  <interface name="ShadingDisp" GUID="{0002093A-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="ForegroundPatternColorIndex" visibility="automated" type="TOleEnum" />
    <property name="BackgroundPatternColorIndex" visibility="automated" type="TOleEnum" />
    <property name="Texture" visibility="automated" type="TOleEnum" />
  </interface>
  <interface name="TextRetrievalMode" GUID="{00020939-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_ViewType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_ViewType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Duplicate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TextRetrievalMode" />
      </parameters>
    </function>
    <function name="Get_IncludeHiddenText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_IncludeHiddenText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_IncludeFieldCodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_IncludeFieldCodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="ViewType" visibility="public" read="Get_ViewType" write="Set_ViewType" type="TOleEnum" />
    <property name="Duplicate" visibility="public" read="Get_Duplicate" type="TextRetrievalMode" />
    <property name="IncludeHiddenText" visibility="public" read="Get_IncludeHiddenText" write="Set_IncludeHiddenText" type="WordBool" />
    <property name="IncludeFieldCodes" visibility="public" read="Get_IncludeFieldCodes" write="Set_IncludeFieldCodes" type="WordBool" />
  </interface>
  <interface name="TextRetrievalModeDisp" GUID="{00020939-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="ViewType" visibility="automated" type="TOleEnum" />
    <property name="Duplicate" visibility="automated" type="TextRetrievalMode" />
    <property name="IncludeHiddenText" visibility="automated" type="WordBool" />
    <property name="IncludeFieldCodes" visibility="automated" type="WordBool" />
  </interface>
  <interface name="AutoTextEntries" GUID="{00020937-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="AutoTextEntry" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="AutoTextEntry" />
      </parameters>
    </function>
    <function name="AppendToSpike" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="AutoTextEntry" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="AutoTextEntriesDisp" GUID="{00020937-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="AutoTextEntry" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="AutoTextEntry" />
      </parameters>
    </function>
    <function name="AppendToSpike" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="AutoTextEntry" />
      </parameters>
    </function>
  </interface>
  <interface name="AutoTextEntry" GUID="{00020936-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_StyleName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Value" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Value" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Insert" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Where" type="Range" paramflags="const" />
        <parameter name="RichText" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
    <property name="StyleName" visibility="public" read="Get_StyleName" type="WideString" default="0" />
    <property name="Value" visibility="public" read="Get_Value" write="Set_Value" type="WideString" default="0" />
  </interface>
  <interface name="AutoTextEntryDisp" GUID="{00020936-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="StyleName" visibility="automated" type="WideString" />
    <property name="Value" visibility="automated" type="WideString" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Insert" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Where" type="Range" paramflags="const" />
        <parameter name="RichText" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
  </interface>
  <interface name="System" GUID="{00020935-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_OperatingSystem" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_ProcessorType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Version" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_FreeDiskSpace" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Country" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_LanguageDesignation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_HorizontalResolution" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_VerticalResolution" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_ProfileString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Section" type="WideString" paramflags="const" />
        <parameter name="Key" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ProfileString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Section" type="WideString" paramflags="const" />
        <parameter name="Key" type="WideString" paramflags="const" />
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_PrivateProfileString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="Section" type="WideString" paramflags="const" />
        <parameter name="Key" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_PrivateProfileString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="Section" type="WideString" paramflags="const" />
        <parameter name="Key" type="WideString" paramflags="const" />
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_MathCoprocessorInstalled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_ComputerType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_MacintoshName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_QuickDrawInstalled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Cursor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Cursor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="MSInfo" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Connect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Path" type="WideString" paramflags="const" />
        <parameter name="Drive" type="OleVariant" paramflags="var" />
        <parameter name="Password" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="OperatingSystem" visibility="public" read="Get_OperatingSystem" type="WideString" default="0" />
    <property name="ProcessorType" visibility="public" read="Get_ProcessorType" type="WideString" default="0" />
    <property name="Version" visibility="public" read="Get_Version" type="WideString" default="0" />
    <property name="FreeDiskSpace" visibility="public" read="Get_FreeDiskSpace" type="Integer" />
    <property name="Country" visibility="public" read="Get_Country" type="TOleEnum" />
    <property name="LanguageDesignation" visibility="public" read="Get_LanguageDesignation" type="WideString" default="0" />
    <property name="HorizontalResolution" visibility="public" read="Get_HorizontalResolution" type="Integer" />
    <property name="VerticalResolution" visibility="public" read="Get_VerticalResolution" type="Integer" />
    <property name="ProfileString[const Section][const Key]" visibility="public" read="Get_ProfileString" write="Set_ProfileString" type="WideString" />
    <property name="PrivateProfileString[const FileName][const Section][const Key]" visibility="public" read="Get_PrivateProfileString" write="Set_PrivateProfileString" type="WideString" />
    <property name="MathCoprocessorInstalled" visibility="public" read="Get_MathCoprocessorInstalled" type="WordBool" />
    <property name="ComputerType" visibility="public" read="Get_ComputerType" type="WideString" default="0" />
    <property name="MacintoshName" visibility="public" read="Get_MacintoshName" type="WideString" default="0" />
    <property name="QuickDrawInstalled" visibility="public" read="Get_QuickDrawInstalled" type="WordBool" />
    <property name="Cursor" visibility="public" read="Get_Cursor" write="Set_Cursor" type="TOleEnum" />
  </interface>
  <interface name="SystemDisp" GUID="{00020935-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="OperatingSystem" visibility="automated" type="WideString" />
    <property name="ProcessorType" visibility="automated" type="WideString" />
    <property name="Version" visibility="automated" type="WideString" />
    <property name="FreeDiskSpace" visibility="automated" type="Integer" />
    <property name="Country" visibility="automated" type="TOleEnum" />
    <property name="LanguageDesignation" visibility="automated" type="WideString" />
    <property name="HorizontalResolution" visibility="automated" type="Integer" />
    <property name="VerticalResolution" visibility="automated" type="Integer" />
    <property name="ProfileString[const Section][const Key]" visibility="automated" type="WideString" />
    <property name="PrivateProfileString[const FileName][const Section][const Key]" visibility="automated" type="WideString" />
    <property name="MathCoprocessorInstalled" visibility="automated" type="WordBool" />
    <property name="ComputerType" visibility="automated" type="WideString" />
    <property name="MacintoshName" visibility="automated" type="WideString" />
    <property name="QuickDrawInstalled" visibility="automated" type="WordBool" />
    <property name="Cursor" visibility="automated" type="TOleEnum" />
    <procedure name="MSInfo" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Connect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Path" type="WideString" paramflags="const" />
        <parameter name="Drive" type="OleVariant" paramflags="var" />
        <parameter name="Password" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
  </interface>
  <interface name="OLEFormat" GUID="{00020933-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_ClassType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ClassType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_DisplayAsIcon" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayAsIcon" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_IconName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_IconName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_IconPath" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_IconIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_IconIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_IconLabel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_IconLabel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Label_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Object_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_ProgID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Activate" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Edit" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Open" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="DoVerb" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="VerbIndex" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="ConvertTo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ClassType" type="OleVariant" paramflags="var" />
        <parameter name="DisplayAsIcon" type="OleVariant" paramflags="var" />
        <parameter name="IconFileName" type="OleVariant" paramflags="var" />
        <parameter name="IconIndex" type="OleVariant" paramflags="var" />
        <parameter name="IconLabel" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="ActivateAs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ClassType" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="ClassType" visibility="public" read="Get_ClassType" write="Set_ClassType" type="WideString" default="0" />
    <property name="DisplayAsIcon" visibility="public" read="Get_DisplayAsIcon" write="Set_DisplayAsIcon" type="WordBool" />
    <property name="IconName" visibility="public" read="Get_IconName" write="Set_IconName" type="WideString" default="0" />
    <property name="IconPath" visibility="public" read="Get_IconPath" type="WideString" default="0" />
    <property name="IconIndex" visibility="public" read="Get_IconIndex" write="Set_IconIndex" type="Integer" />
    <property name="IconLabel" visibility="public" read="Get_IconLabel" write="Set_IconLabel" type="WideString" default="0" />
    <property name="Label_" visibility="public" read="Get_Label_" type="WideString" default="0" />
    <property name="Object_" visibility="public" read="Get_Object_" type="IDispatch" />
    <property name="ProgID" visibility="public" read="Get_ProgID" type="WideString" default="0" />
  </interface>
  <interface name="OLEFormatDisp" GUID="{00020933-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="ClassType" visibility="automated" type="WideString" />
    <property name="DisplayAsIcon" visibility="automated" type="WordBool" />
    <property name="IconName" visibility="automated" type="WideString" />
    <property name="IconPath" visibility="automated" type="WideString" />
    <property name="IconIndex" visibility="automated" type="Integer" />
    <property name="IconLabel" visibility="automated" type="WideString" />
    <property name="Label_" visibility="automated" type="WideString" />
    <property name="Object_" visibility="automated" type="IDispatch" />
    <property name="ProgID" visibility="automated" type="WideString" />
    <procedure name="Activate" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Edit" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Open" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="DoVerb" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="VerbIndex" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="ConvertTo" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ClassType" type="OleVariant" paramflags="var" />
        <parameter name="DisplayAsIcon" type="OleVariant" paramflags="var" />
        <parameter name="IconFileName" type="OleVariant" paramflags="var" />
        <parameter name="IconIndex" type="OleVariant" paramflags="var" />
        <parameter name="IconLabel" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="ActivateAs" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ClassType" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
  </interface>
  <interface name="LinkFormat" GUID="{00020931-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_AutoUpdate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoUpdate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SourceName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_SourcePath" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Locked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Locked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_SourceFullName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_SourceFullName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_SavePictureWithDocument" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SavePictureWithDocument" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="BreakLink" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Update" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="AutoUpdate" visibility="public" read="Get_AutoUpdate" write="Set_AutoUpdate" type="WordBool" />
    <property name="SourceName" visibility="public" read="Get_SourceName" type="WideString" default="0" />
    <property name="SourcePath" visibility="public" read="Get_SourcePath" type="WideString" default="0" />
    <property name="Locked" visibility="public" read="Get_Locked" write="Set_Locked" type="WordBool" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="SourceFullName" visibility="public" read="Get_SourceFullName" write="Set_SourceFullName" type="WideString" default="0" />
    <property name="SavePictureWithDocument" visibility="public" read="Get_SavePictureWithDocument" write="Set_SavePictureWithDocument" type="WordBool" />
  </interface>
  <interface name="LinkFormatDisp" GUID="{00020931-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="AutoUpdate" visibility="automated" type="WordBool" />
    <property name="SourceName" visibility="automated" type="WideString" />
    <property name="SourcePath" visibility="automated" type="WideString" />
    <property name="Locked" visibility="automated" type="WordBool" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="SourceFullName" visibility="automated" type="WideString" />
    <property name="SavePictureWithDocument" visibility="automated" type="WordBool" />
    <procedure name="BreakLink" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Update" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="_OLEControl" GUID="{000209A4-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Automation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Copy" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Cut" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Activate" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Left" visibility="public" read="Get_Left" write="Set_Left" type="Single" default="0" />
    <property name="Top" visibility="public" read="Get_Top" write="Set_Top" type="Single" default="0" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Single" default="0" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Single" default="0" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
    <property name="Automation" visibility="public" read="Get_Automation" type="IDispatch" />
  </interface>
  <interface name="_OLEControlDisp" GUID="{000209A4-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Left" visibility="automated" type="Single" />
    <property name="Top" visibility="automated" type="Single" />
    <property name="Height" visibility="automated" type="Single" />
    <property name="Width" visibility="automated" type="Single" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Automation" visibility="automated" type="IDispatch" />
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Copy" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Cut" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Activate" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Fields" GUID="{00020930-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Locked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Locked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Field" />
      </parameters>
    </function>
    <procedure name="ToggleShowCodes" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Update" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Unlink" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="UpdateSource" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Type_" type="OleVariant" paramflags="var" />
        <parameter name="Text" type="OleVariant" paramflags="var" />
        <parameter name="PreserveFormatting" type="OleVariant" paramflags="var" />
        <retval type="Field" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Locked" visibility="public" read="Get_Locked" write="Set_Locked" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="FieldsDisp" GUID="{00020930-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Locked" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Field" />
      </parameters>
    </function>
    <procedure name="ToggleShowCodes" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Update" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Unlink" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="UpdateSource" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Type_" type="OleVariant" paramflags="var" />
        <parameter name="Text" type="OleVariant" paramflags="var" />
        <parameter name="PreserveFormatting" type="OleVariant" paramflags="var" />
        <retval type="Field" />
      </parameters>
    </function>
  </interface>
  <interface name="Field" GUID="{0002092F-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Code" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <procedure name="Set_Code" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Range" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Locked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Locked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Kind" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Result" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <procedure name="Set_Result" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Range" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Data" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Data" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Next" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Field" />
      </parameters>
    </function>
    <function name="Get_Previous" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Field" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_ShowCodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowCodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_LinkFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="LinkFormat" />
      </parameters>
    </function>
    <function name="Get_OLEFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OLEFormat" />
      </parameters>
    </function>
    <function name="Get_InlineShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="InlineShape" />
      </parameters>
    </function>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Update" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Unlink" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="UpdateSource" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="DoClick" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Copy" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Cut" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Code" visibility="public" read="Get_Code" write="Set_Code" type="Range" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="Locked" visibility="public" read="Get_Locked" write="Set_Locked" type="WordBool" />
    <property name="Kind" visibility="public" read="Get_Kind" type="TOleEnum" />
    <property name="Result" visibility="public" read="Get_Result" write="Set_Result" type="Range" />
    <property name="Data" visibility="public" read="Get_Data" write="Set_Data" type="WideString" default="0" />
    <property name="Next" visibility="public" read="Get_Next" type="Field" />
    <property name="Previous" visibility="public" read="Get_Previous" type="Field" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="ShowCodes" visibility="public" read="Get_ShowCodes" write="Set_ShowCodes" type="WordBool" />
    <property name="LinkFormat" visibility="public" read="Get_LinkFormat" type="LinkFormat" />
    <property name="OLEFormat" visibility="public" read="Get_OLEFormat" type="OLEFormat" />
    <property name="InlineShape" visibility="public" read="Get_InlineShape" type="InlineShape" />
  </interface>
  <interface name="FieldDisp" GUID="{0002092F-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Code" visibility="automated" type="Range" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Locked" visibility="automated" type="WordBool" />
    <property name="Kind" visibility="automated" type="TOleEnum" />
    <property name="Result" visibility="automated" type="Range" />
    <property name="Data" visibility="automated" type="WideString" />
    <property name="Next" visibility="automated" type="Field" />
    <property name="Previous" visibility="automated" type="Field" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="ShowCodes" visibility="automated" type="WordBool" />
    <property name="LinkFormat" visibility="automated" type="LinkFormat" />
    <property name="OLEFormat" visibility="automated" type="OLEFormat" />
    <property name="InlineShape" visibility="automated" type="InlineShape" />
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Update" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Unlink" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="UpdateSource" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="DoClick" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Copy" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Cut" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Browser" GUID="{0002092E-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Target" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Target" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Next" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Previous" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Target" visibility="public" read="Get_Target" write="Set_Target" type="TOleEnum" />
  </interface>
  <interface name="BrowserDisp" GUID="{0002092E-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Target" visibility="automated" type="TOleEnum" />
    <procedure name="Next" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Previous" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Styles" GUID="{0002092D-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Style" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Type_" type="OleVariant" paramflags="var" />
        <retval type="Style" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="StylesDisp" GUID="{0002092D-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Style" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Type_" type="OleVariant" paramflags="var" />
        <retval type="Style" />
      </parameters>
    </function>
  </interface>
  <interface name="Style" GUID="{0002092C-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_NameLocal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_NameLocal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_BaseStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="Set_BaseStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="Get_Description" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_BuiltIn" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_NextParagraphStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="Set_NextParagraphStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="Get_InUse" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Shading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shading" />
      </parameters>
    </function>
    <function name="Get_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Borders" />
      </parameters>
    </function>
    <procedure name="Set_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Borders" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ParagraphFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_ParagraphFormat" />
      </parameters>
    </function>
    <procedure name="Set_ParagraphFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="_ParagraphFormat" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Font" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Font" />
      </parameters>
    </function>
    <procedure name="Set_Font" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="_Font" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Frame" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Frame" />
      </parameters>
    </function>
    <function name="Get_LanguageID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LanguageID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_AutomaticallyUpdate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutomaticallyUpdate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ListTemplate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ListTemplate" />
      </parameters>
    </function>
    <function name="Get_ListLevelNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_LanguageIDFarEast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LanguageIDFarEast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Hidden" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Hidden" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="LinkToListTemplate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ListTemplate" type="ListTemplate" paramflags="const" />
        <parameter name="ListLevelNumber" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="NameLocal" visibility="public" read="Get_NameLocal" write="Set_NameLocal" type="WideString" default="0" />
    <property name="Description" visibility="public" read="Get_Description" type="WideString" default="0" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="BuiltIn" visibility="public" read="Get_BuiltIn" type="WordBool" />
    <property name="InUse" visibility="public" read="Get_InUse" type="WordBool" />
    <property name="Shading" visibility="public" read="Get_Shading" type="Shading" />
    <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
    <property name="ParagraphFormat" visibility="public" read="Get_ParagraphFormat" write="Set_ParagraphFormat" type="_ParagraphFormat" />
    <property name="Font" visibility="public" read="Get_Font" write="Set_Font" type="_Font" />
    <property name="Frame" visibility="public" read="Get_Frame" type="Frame" />
    <property name="LanguageID" visibility="public" read="Get_LanguageID" write="Set_LanguageID" type="TOleEnum" />
    <property name="AutomaticallyUpdate" visibility="public" read="Get_AutomaticallyUpdate" write="Set_AutomaticallyUpdate" type="WordBool" />
    <property name="ListTemplate" visibility="public" read="Get_ListTemplate" type="ListTemplate" />
    <property name="ListLevelNumber" visibility="public" read="Get_ListLevelNumber" type="Integer" />
    <property name="LanguageIDFarEast" visibility="public" read="Get_LanguageIDFarEast" write="Set_LanguageIDFarEast" type="TOleEnum" />
    <property name="Hidden" visibility="public" read="Get_Hidden" write="Set_Hidden" type="WordBool" />
  </interface>
  <interface name="StyleDisp" GUID="{0002092C-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="NameLocal" visibility="automated" type="WideString" />
    <function name="BaseStyle" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <property name="Description" visibility="automated" type="WideString" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="BuiltIn" visibility="automated" type="WordBool" />
    <function name="NextParagraphStyle" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <property name="InUse" visibility="automated" type="WordBool" />
    <property name="Shading" visibility="automated" type="Shading" />
    <property name="Borders" visibility="automated" type="Borders" />
    <property name="ParagraphFormat" visibility="automated" type="_ParagraphFormat" />
    <property name="Font" visibility="automated" type="_Font" />
    <property name="Frame" visibility="automated" type="Frame" />
    <property name="LanguageID" visibility="automated" type="TOleEnum" />
    <property name="AutomaticallyUpdate" visibility="automated" type="WordBool" />
    <property name="ListTemplate" visibility="automated" type="ListTemplate" />
    <property name="ListLevelNumber" visibility="automated" type="Integer" />
    <property name="LanguageIDFarEast" visibility="automated" type="TOleEnum" />
    <property name="Hidden" visibility="automated" type="WordBool" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="LinkToListTemplate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ListTemplate" type="ListTemplate" paramflags="const" />
        <parameter name="ListLevelNumber" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
  </interface>
  <interface name="Frames" GUID="{0002092B-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Frame" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="Frame" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="FramesDisp" GUID="{0002092B-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Frame" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="Frame" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Frame" GUID="{0002092A-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_HeightRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_HeightRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_WidthRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_WidthRule" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_HorizontalDistanceFromText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_HorizontalDistanceFromText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_HorizontalPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_HorizontalPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_LockAnchor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_LockAnchor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_RelativeHorizontalPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_RelativeHorizontalPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_RelativeVerticalPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_RelativeVerticalPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_VerticalDistanceFromText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_VerticalDistanceFromText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_VerticalPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_VerticalPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_TextWrap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_TextWrap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Shading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shading" />
      </parameters>
    </function>
    <function name="Get_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Borders" />
      </parameters>
    </function>
    <procedure name="Set_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Borders" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Copy" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Cut" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="HeightRule" visibility="public" read="Get_HeightRule" write="Set_HeightRule" type="TOleEnum" />
    <property name="WidthRule" visibility="public" read="Get_WidthRule" write="Set_WidthRule" type="TOleEnum" />
    <property name="HorizontalDistanceFromText" visibility="public" read="Get_HorizontalDistanceFromText" write="Set_HorizontalDistanceFromText" type="Single" default="0" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Single" default="0" />
    <property name="HorizontalPosition" visibility="public" read="Get_HorizontalPosition" write="Set_HorizontalPosition" type="Single" default="0" />
    <property name="LockAnchor" visibility="public" read="Get_LockAnchor" write="Set_LockAnchor" type="WordBool" />
    <property name="RelativeHorizontalPosition" visibility="public" read="Get_RelativeHorizontalPosition" write="Set_RelativeHorizontalPosition" type="TOleEnum" />
    <property name="RelativeVerticalPosition" visibility="public" read="Get_RelativeVerticalPosition" write="Set_RelativeVerticalPosition" type="TOleEnum" />
    <property name="VerticalDistanceFromText" visibility="public" read="Get_VerticalDistanceFromText" write="Set_VerticalDistanceFromText" type="Single" default="0" />
    <property name="VerticalPosition" visibility="public" read="Get_VerticalPosition" write="Set_VerticalPosition" type="Single" default="0" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Single" default="0" />
    <property name="TextWrap" visibility="public" read="Get_TextWrap" write="Set_TextWrap" type="WordBool" />
    <property name="Shading" visibility="public" read="Get_Shading" type="Shading" />
    <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
  </interface>
  <interface name="FrameDisp" GUID="{0002092A-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="HeightRule" visibility="automated" type="TOleEnum" />
    <property name="WidthRule" visibility="automated" type="TOleEnum" />
    <property name="HorizontalDistanceFromText" visibility="automated" type="Single" />
    <property name="Height" visibility="automated" type="Single" />
    <property name="HorizontalPosition" visibility="automated" type="Single" />
    <property name="LockAnchor" visibility="automated" type="WordBool" />
    <property name="RelativeHorizontalPosition" visibility="automated" type="TOleEnum" />
    <property name="RelativeVerticalPosition" visibility="automated" type="TOleEnum" />
    <property name="VerticalDistanceFromText" visibility="automated" type="Single" />
    <property name="VerticalPosition" visibility="automated" type="Single" />
    <property name="Width" visibility="automated" type="Single" />
    <property name="TextWrap" visibility="automated" type="WordBool" />
    <property name="Shading" visibility="automated" type="Shading" />
    <property name="Borders" visibility="automated" type="Borders" />
    <property name="Range" visibility="automated" type="Range" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Copy" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Cut" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="FormFields" GUID="{00020929-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Shaded" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Shaded" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="FormField" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Type_" type="TOleEnum" />
        <retval type="FormField" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Shaded" visibility="public" read="Get_Shaded" write="Set_Shaded" type="WordBool" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="FormFieldsDisp" GUID="{00020929-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Shaded" visibility="automated" type="WordBool" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="FormField" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Type_" type="TOleEnum" />
        <retval type="FormField" />
      </parameters>
    </function>
  </interface>
  <interface name="FormField" GUID="{00020928-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_EntryMacro" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_EntryMacro" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ExitMacro" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ExitMacro" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_OwnHelp" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_OwnHelp" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_OwnStatus" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_OwnStatus" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_HelpText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_HelpText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_StatusText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_StatusText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Enabled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Enabled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Result" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Result" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_TextInput" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TextInput" />
      </parameters>
    </function>
    <function name="Get_CheckBox" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CheckBox" />
      </parameters>
    </function>
    <function name="Get_DropDown" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="DropDown" />
      </parameters>
    </function>
    <function name="Get_Next" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FormField" />
      </parameters>
    </function>
    <function name="Get_Previous" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FormField" />
      </parameters>
    </function>
    <function name="Get_CalculateOnExit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_CalculateOnExit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Copy" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Cut" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
    <property name="EntryMacro" visibility="public" read="Get_EntryMacro" write="Set_EntryMacro" type="WideString" default="0" />
    <property name="ExitMacro" visibility="public" read="Get_ExitMacro" write="Set_ExitMacro" type="WideString" default="0" />
    <property name="OwnHelp" visibility="public" read="Get_OwnHelp" write="Set_OwnHelp" type="WordBool" />
    <property name="OwnStatus" visibility="public" read="Get_OwnStatus" write="Set_OwnStatus" type="WordBool" />
    <property name="HelpText" visibility="public" read="Get_HelpText" write="Set_HelpText" type="WideString" default="0" />
    <property name="StatusText" visibility="public" read="Get_StatusText" write="Set_StatusText" type="WideString" default="0" />
    <property name="Enabled" visibility="public" read="Get_Enabled" write="Set_Enabled" type="WordBool" />
    <property name="Result" visibility="public" read="Get_Result" write="Set_Result" type="WideString" default="0" />
    <property name="TextInput" visibility="public" read="Get_TextInput" type="TextInput" />
    <property name="CheckBox" visibility="public" read="Get_CheckBox" type="CheckBox" />
    <property name="DropDown" visibility="public" read="Get_DropDown" type="DropDown" />
    <property name="Next" visibility="public" read="Get_Next" type="FormField" />
    <property name="Previous" visibility="public" read="Get_Previous" type="FormField" />
    <property name="CalculateOnExit" visibility="public" read="Get_CalculateOnExit" write="Set_CalculateOnExit" type="WordBool" />
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
  </interface>
  <interface name="FormFieldDisp" GUID="{00020928-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="EntryMacro" visibility="automated" type="WideString" />
    <property name="ExitMacro" visibility="automated" type="WideString" />
    <property name="OwnHelp" visibility="automated" type="WordBool" />
    <property name="OwnStatus" visibility="automated" type="WordBool" />
    <property name="HelpText" visibility="automated" type="WideString" />
    <property name="StatusText" visibility="automated" type="WideString" />
    <property name="Enabled" visibility="automated" type="WordBool" />
    <property name="Result" visibility="automated" type="WideString" />
    <property name="TextInput" visibility="automated" type="TextInput" />
    <property name="CheckBox" visibility="automated" type="CheckBox" />
    <property name="DropDown" visibility="automated" type="DropDown" />
    <property name="Next" visibility="automated" type="FormField" />
    <property name="Previous" visibility="automated" type="FormField" />
    <property name="CalculateOnExit" visibility="automated" type="WordBool" />
    <property name="Range" visibility="automated" type="Range" />
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Copy" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Cut" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="TextInput" GUID="{00020927-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Valid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Default" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Default" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Format" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Clear" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="EditType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Default" type="OleVariant" paramflags="var" />
        <parameter name="Format" type="OleVariant" paramflags="var" />
        <parameter name="Enabled" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Valid" visibility="public" read="Get_Valid" type="WordBool" />
    <property name="Default" visibility="public" read="Get_Default" write="Set_Default" type="WideString" default="0" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="Format" visibility="public" read="Get_Format" type="WideString" default="0" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Integer" />
  </interface>
  <interface name="TextInputDisp" GUID="{00020927-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Valid" visibility="automated" type="WordBool" />
    <property name="Default" visibility="automated" type="WideString" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Format" visibility="automated" type="WideString" />
    <property name="Width" visibility="automated" type="Integer" />
    <procedure name="Clear" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="EditType" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Default" type="OleVariant" paramflags="var" />
        <parameter name="Format" type="OleVariant" paramflags="var" />
        <parameter name="Enabled" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
  </interface>
  <interface name="CheckBox" GUID="{00020926-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Valid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_AutoSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Size" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Size" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Default" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Default" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Value" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Value" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Valid" visibility="public" read="Get_Valid" type="WordBool" />
    <property name="AutoSize" visibility="public" read="Get_AutoSize" write="Set_AutoSize" type="WordBool" />
    <property name="Size" visibility="public" read="Get_Size" write="Set_Size" type="Single" default="0" />
    <property name="Default" visibility="public" read="Get_Default" write="Set_Default" type="WordBool" />
    <property name="Value" visibility="public" read="Get_Value" write="Set_Value" type="WordBool" />
  </interface>
  <interface name="CheckBoxDisp" GUID="{00020926-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Valid" visibility="automated" type="WordBool" />
    <property name="AutoSize" visibility="automated" type="WordBool" />
    <property name="Size" visibility="automated" type="Single" />
    <property name="Default" visibility="automated" type="WordBool" />
    <property name="Value" visibility="automated" type="WordBool" />
  </interface>
  <interface name="DropDown" GUID="{00020925-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Valid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Default" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Default" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Value" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Value" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_ListEntries" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ListEntries" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Valid" visibility="public" read="Get_Valid" type="WordBool" />
    <property name="Default" visibility="public" read="Get_Default" write="Set_Default" type="Integer" />
    <property name="Value" visibility="public" read="Get_Value" write="Set_Value" type="Integer" />
    <property name="ListEntries" visibility="public" read="Get_ListEntries" type="ListEntries" />
  </interface>
  <interface name="DropDownDisp" GUID="{00020925-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Valid" visibility="automated" type="WordBool" />
    <property name="Default" visibility="automated" type="Integer" />
    <property name="Value" visibility="automated" type="Integer" />
    <property name="ListEntries" visibility="automated" type="ListEntries" />
  </interface>
  <interface name="ListEntries" GUID="{00020924-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="ListEntry" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="ListEntry" />
      </parameters>
    </function>
    <procedure name="Clear" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="ListEntriesDisp" GUID="{00020924-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="ListEntry" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="ListEntry" />
      </parameters>
    </function>
    <procedure name="Clear" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="ListEntry" GUID="{00020923-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
  </interface>
  <interface name="ListEntryDisp" GUID="{00020923-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="Name" visibility="automated" type="WideString" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="TablesOfFigures" GUID="{00020922-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Format" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Format" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="TableOfFigures" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Caption" type="OleVariant" paramflags="var" />
        <parameter name="IncludeLabel" type="OleVariant" paramflags="var" />
        <parameter name="UseHeadingStyles" type="OleVariant" paramflags="var" />
        <parameter name="UpperHeadingLevel" type="OleVariant" paramflags="var" />
        <parameter name="LowerHeadingLevel" type="OleVariant" paramflags="var" />
        <parameter name="UseFields" type="OleVariant" paramflags="var" />
        <parameter name="TableID" type="OleVariant" paramflags="var" />
        <parameter name="RightAlignPageNumbers" type="OleVariant" paramflags="var" />
        <parameter name="IncludePageNumbers" type="OleVariant" paramflags="var" />
        <parameter name="AddedStyles" type="OleVariant" paramflags="var" />
        <retval type="TableOfFigures" />
      </parameters>
    </function>
    <function name="MarkEntry" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Entry" type="OleVariant" paramflags="var" />
        <parameter name="EntryAutoText" type="OleVariant" paramflags="var" />
        <parameter name="TableID" type="OleVariant" paramflags="var" />
        <parameter name="Level" type="OleVariant" paramflags="var" />
        <retval type="Field" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Format" visibility="public" read="Get_Format" write="Set_Format" type="TOleEnum" />
  </interface>
  <interface name="TablesOfFiguresDisp" GUID="{00020922-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Format" visibility="automated" type="TOleEnum" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="TableOfFigures" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Caption" type="OleVariant" paramflags="var" />
        <parameter name="IncludeLabel" type="OleVariant" paramflags="var" />
        <parameter name="UseHeadingStyles" type="OleVariant" paramflags="var" />
        <parameter name="UpperHeadingLevel" type="OleVariant" paramflags="var" />
        <parameter name="LowerHeadingLevel" type="OleVariant" paramflags="var" />
        <parameter name="UseFields" type="OleVariant" paramflags="var" />
        <parameter name="TableID" type="OleVariant" paramflags="var" />
        <parameter name="RightAlignPageNumbers" type="OleVariant" paramflags="var" />
        <parameter name="IncludePageNumbers" type="OleVariant" paramflags="var" />
        <parameter name="AddedStyles" type="OleVariant" paramflags="var" />
        <retval type="TableOfFigures" />
      </parameters>
    </function>
    <function name="MarkEntry" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Entry" type="OleVariant" paramflags="var" />
        <parameter name="EntryAutoText" type="OleVariant" paramflags="var" />
        <parameter name="TableID" type="OleVariant" paramflags="var" />
        <parameter name="Level" type="OleVariant" paramflags="var" />
        <retval type="Field" />
      </parameters>
    </function>
  </interface>
  <interface name="TableOfFigures" GUID="{00020921-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Caption" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Caption" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_IncludeLabel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_IncludeLabel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_RightAlignPageNumbers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_RightAlignPageNumbers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_UseHeadingStyles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_UseHeadingStyles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_LowerHeadingLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_LowerHeadingLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_UpperHeadingLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_UpperHeadingLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_IncludePageNumbers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_IncludePageNumbers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_UseFields" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_UseFields" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_TableID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_TableID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_HeadingStyles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="HeadingStyles" />
      </parameters>
    </function>
    <function name="Get_TabLeader" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_TabLeader" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="UpdatePageNumbers" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Update" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Caption" visibility="public" read="Get_Caption" write="Set_Caption" type="WideString" default="0" />
    <property name="IncludeLabel" visibility="public" read="Get_IncludeLabel" write="Set_IncludeLabel" type="WordBool" />
    <property name="RightAlignPageNumbers" visibility="public" read="Get_RightAlignPageNumbers" write="Set_RightAlignPageNumbers" type="WordBool" />
    <property name="UseHeadingStyles" visibility="public" read="Get_UseHeadingStyles" write="Set_UseHeadingStyles" type="WordBool" />
    <property name="LowerHeadingLevel" visibility="public" read="Get_LowerHeadingLevel" write="Set_LowerHeadingLevel" type="Integer" />
    <property name="UpperHeadingLevel" visibility="public" read="Get_UpperHeadingLevel" write="Set_UpperHeadingLevel" type="Integer" />
    <property name="IncludePageNumbers" visibility="public" read="Get_IncludePageNumbers" write="Set_IncludePageNumbers" type="WordBool" />
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="UseFields" visibility="public" read="Get_UseFields" write="Set_UseFields" type="WordBool" />
    <property name="TableID" visibility="public" read="Get_TableID" write="Set_TableID" type="WideString" default="0" />
    <property name="HeadingStyles" visibility="public" read="Get_HeadingStyles" type="HeadingStyles" />
    <property name="TabLeader" visibility="public" read="Get_TabLeader" write="Set_TabLeader" type="TOleEnum" />
  </interface>
  <interface name="TableOfFiguresDisp" GUID="{00020921-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Caption" visibility="automated" type="WideString" />
    <property name="IncludeLabel" visibility="automated" type="WordBool" />
    <property name="RightAlignPageNumbers" visibility="automated" type="WordBool" />
    <property name="UseHeadingStyles" visibility="automated" type="WordBool" />
    <property name="LowerHeadingLevel" visibility="automated" type="Integer" />
    <property name="UpperHeadingLevel" visibility="automated" type="Integer" />
    <property name="IncludePageNumbers" visibility="automated" type="WordBool" />
    <property name="Range" visibility="automated" type="Range" />
    <property name="UseFields" visibility="automated" type="WordBool" />
    <property name="TableID" visibility="automated" type="WideString" />
    <property name="HeadingStyles" visibility="automated" type="HeadingStyles" />
    <property name="TabLeader" visibility="automated" type="TOleEnum" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="UpdatePageNumbers" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Update" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="MailMerge" GUID="{00020920-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_MainDocumentType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_MainDocumentType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_State" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Destination" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Destination" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_DataSource" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="MailMergeDataSource" />
      </parameters>
    </function>
    <function name="Get_Fields" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="MailMergeFields" />
      </parameters>
    </function>
    <function name="Get_ViewMailMergeFieldCodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_ViewMailMergeFieldCodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_SuppressBlankLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SuppressBlankLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MailAsAttachment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MailAsAttachment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MailAddressFieldName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_MailAddressFieldName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_MailSubject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_MailSubject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="CreateDataSource" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <parameter name="PasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="HeaderRecord" type="OleVariant" paramflags="var" />
        <parameter name="MSQuery" type="OleVariant" paramflags="var" />
        <parameter name="SQLStatement" type="OleVariant" paramflags="var" />
        <parameter name="SQLStatement1" type="OleVariant" paramflags="var" />
        <parameter name="Connection" type="OleVariant" paramflags="var" />
        <parameter name="LinkToSource" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="CreateHeaderSource" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="PasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="HeaderRecord" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="OpenDataSource" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Format" type="OleVariant" paramflags="var" />
        <parameter name="ConfirmConversions" type="OleVariant" paramflags="var" />
        <parameter name="ReadOnly" type="OleVariant" paramflags="var" />
        <parameter name="LinkToSource" type="OleVariant" paramflags="var" />
        <parameter name="AddToRecentFiles" type="OleVariant" paramflags="var" />
        <parameter name="PasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="PasswordTemplate" type="OleVariant" paramflags="var" />
        <parameter name="Revert" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordTemplate" type="OleVariant" paramflags="var" />
        <parameter name="Connection" type="OleVariant" paramflags="var" />
        <parameter name="SQLStatement" type="OleVariant" paramflags="var" />
        <parameter name="SQLStatement1" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="OpenHeaderSource" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Format" type="OleVariant" paramflags="var" />
        <parameter name="ConfirmConversions" type="OleVariant" paramflags="var" />
        <parameter name="ReadOnly" type="OleVariant" paramflags="var" />
        <parameter name="AddToRecentFiles" type="OleVariant" paramflags="var" />
        <parameter name="PasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="PasswordTemplate" type="OleVariant" paramflags="var" />
        <parameter name="Revert" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordTemplate" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Execute" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Pause" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Check" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="EditDataSource" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="EditHeaderSource" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="EditMainDocument" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="UseAddressBook" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="MainDocumentType" visibility="public" read="Get_MainDocumentType" write="Set_MainDocumentType" type="TOleEnum" />
    <property name="State" visibility="public" read="Get_State" type="TOleEnum" />
    <property name="Destination" visibility="public" read="Get_Destination" write="Set_Destination" type="TOleEnum" />
    <property name="DataSource" visibility="public" read="Get_DataSource" type="MailMergeDataSource" />
    <property name="Fields" visibility="public" read="Get_Fields" type="MailMergeFields" />
    <property name="ViewMailMergeFieldCodes" visibility="public" read="Get_ViewMailMergeFieldCodes" write="Set_ViewMailMergeFieldCodes" type="Integer" />
    <property name="SuppressBlankLines" visibility="public" read="Get_SuppressBlankLines" write="Set_SuppressBlankLines" type="WordBool" />
    <property name="MailAsAttachment" visibility="public" read="Get_MailAsAttachment" write="Set_MailAsAttachment" type="WordBool" />
    <property name="MailAddressFieldName" visibility="public" read="Get_MailAddressFieldName" write="Set_MailAddressFieldName" type="WideString" default="0" />
    <property name="MailSubject" visibility="public" read="Get_MailSubject" write="Set_MailSubject" type="WideString" default="0" />
  </interface>
  <interface name="MailMergeDisp" GUID="{00020920-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="MainDocumentType" visibility="automated" type="TOleEnum" />
    <property name="State" visibility="automated" type="TOleEnum" />
    <property name="Destination" visibility="automated" type="TOleEnum" />
    <property name="DataSource" visibility="automated" type="MailMergeDataSource" />
    <property name="Fields" visibility="automated" type="MailMergeFields" />
    <property name="ViewMailMergeFieldCodes" visibility="automated" type="Integer" />
    <property name="SuppressBlankLines" visibility="automated" type="WordBool" />
    <property name="MailAsAttachment" visibility="automated" type="WordBool" />
    <property name="MailAddressFieldName" visibility="automated" type="WideString" />
    <property name="MailSubject" visibility="automated" type="WideString" />
    <procedure name="CreateDataSource" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <parameter name="PasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="HeaderRecord" type="OleVariant" paramflags="var" />
        <parameter name="MSQuery" type="OleVariant" paramflags="var" />
        <parameter name="SQLStatement" type="OleVariant" paramflags="var" />
        <parameter name="SQLStatement1" type="OleVariant" paramflags="var" />
        <parameter name="Connection" type="OleVariant" paramflags="var" />
        <parameter name="LinkToSource" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="CreateHeaderSource" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="PasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="HeaderRecord" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="OpenDataSource" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Format" type="OleVariant" paramflags="var" />
        <parameter name="ConfirmConversions" type="OleVariant" paramflags="var" />
        <parameter name="ReadOnly" type="OleVariant" paramflags="var" />
        <parameter name="LinkToSource" type="OleVariant" paramflags="var" />
        <parameter name="AddToRecentFiles" type="OleVariant" paramflags="var" />
        <parameter name="PasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="PasswordTemplate" type="OleVariant" paramflags="var" />
        <parameter name="Revert" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordTemplate" type="OleVariant" paramflags="var" />
        <parameter name="Connection" type="OleVariant" paramflags="var" />
        <parameter name="SQLStatement" type="OleVariant" paramflags="var" />
        <parameter name="SQLStatement1" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="OpenHeaderSource" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Format" type="OleVariant" paramflags="var" />
        <parameter name="ConfirmConversions" type="OleVariant" paramflags="var" />
        <parameter name="ReadOnly" type="OleVariant" paramflags="var" />
        <parameter name="AddToRecentFiles" type="OleVariant" paramflags="var" />
        <parameter name="PasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="PasswordTemplate" type="OleVariant" paramflags="var" />
        <parameter name="Revert" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordTemplate" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Execute" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Pause" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Check" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="EditDataSource" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="EditHeaderSource" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="EditMainDocument" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="UseAddressBook" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
  </interface>
  <interface name="MailMergeFields" GUID="{0002091F-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="AddAsk" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Prompt" type="OleVariant" paramflags="var" />
        <parameter name="DefaultAskText" type="OleVariant" paramflags="var" />
        <parameter name="AskOnce" type="OleVariant" paramflags="var" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="AddFillIn" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Prompt" type="OleVariant" paramflags="var" />
        <parameter name="DefaultFillInText" type="OleVariant" paramflags="var" />
        <parameter name="AskOnce" type="OleVariant" paramflags="var" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="AddIf" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="MergeField" type="WideString" paramflags="const" />
        <parameter name="Comparison" type="TOleEnum" />
        <parameter name="CompareTo" type="OleVariant" paramflags="var" />
        <parameter name="TrueAutoText" type="OleVariant" paramflags="var" />
        <parameter name="TrueText" type="OleVariant" paramflags="var" />
        <parameter name="FalseAutoText" type="OleVariant" paramflags="var" />
        <parameter name="FalseText" type="OleVariant" paramflags="var" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="AddMergeRec" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="AddMergeSeq" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="AddNext" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="AddNextIf" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="MergeField" type="WideString" paramflags="const" />
        <parameter name="Comparison" type="TOleEnum" />
        <parameter name="CompareTo" type="OleVariant" paramflags="var" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="AddSet" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="ValueText" type="OleVariant" paramflags="var" />
        <parameter name="ValueAutoText" type="OleVariant" paramflags="var" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="AddSkipIf" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="MergeField" type="WideString" paramflags="const" />
        <parameter name="Comparison" type="TOleEnum" />
        <parameter name="CompareTo" type="OleVariant" paramflags="var" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="MailMergeFieldsDisp" GUID="{0002091F-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="AddAsk" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Prompt" type="OleVariant" paramflags="var" />
        <parameter name="DefaultAskText" type="OleVariant" paramflags="var" />
        <parameter name="AskOnce" type="OleVariant" paramflags="var" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="AddFillIn" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Prompt" type="OleVariant" paramflags="var" />
        <parameter name="DefaultFillInText" type="OleVariant" paramflags="var" />
        <parameter name="AskOnce" type="OleVariant" paramflags="var" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="AddIf" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="MergeField" type="WideString" paramflags="const" />
        <parameter name="Comparison" type="TOleEnum" />
        <parameter name="CompareTo" type="OleVariant" paramflags="var" />
        <parameter name="TrueAutoText" type="OleVariant" paramflags="var" />
        <parameter name="TrueText" type="OleVariant" paramflags="var" />
        <parameter name="FalseAutoText" type="OleVariant" paramflags="var" />
        <parameter name="FalseText" type="OleVariant" paramflags="var" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="AddMergeRec" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="AddMergeSeq" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="AddNext" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="AddNextIf" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="MergeField" type="WideString" paramflags="const" />
        <parameter name="Comparison" type="TOleEnum" />
        <parameter name="CompareTo" type="OleVariant" paramflags="var" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="AddSet" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="ValueText" type="OleVariant" paramflags="var" />
        <parameter name="ValueAutoText" type="OleVariant" paramflags="var" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="AddSkipIf" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="MergeField" type="WideString" paramflags="const" />
        <parameter name="Comparison" type="TOleEnum" />
        <parameter name="CompareTo" type="OleVariant" paramflags="var" />
        <retval type="MailMergeField" />
      </parameters>
    </function>
  </interface>
  <interface name="MailMergeField" GUID="{0002091E-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Locked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Locked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Code" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <procedure name="Set_Code" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Range" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Next" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <function name="Get_Previous" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="MailMergeField" />
      </parameters>
    </function>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Copy" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Cut" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="Locked" visibility="public" read="Get_Locked" write="Set_Locked" type="WordBool" />
    <property name="Code" visibility="public" read="Get_Code" write="Set_Code" type="Range" />
    <property name="Next" visibility="public" read="Get_Next" type="MailMergeField" />
    <property name="Previous" visibility="public" read="Get_Previous" type="MailMergeField" />
  </interface>
  <interface name="MailMergeFieldDisp" GUID="{0002091E-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Locked" visibility="automated" type="WordBool" />
    <property name="Code" visibility="automated" type="Range" />
    <property name="Next" visibility="automated" type="MailMergeField" />
    <property name="Previous" visibility="automated" type="MailMergeField" />
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Copy" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Cut" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="MailMergeDataSource" GUID="{0002091D-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_HeaderSourceName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_HeaderSourceType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_ConnectString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_QueryString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_QueryString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ActiveRecord" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_ActiveRecord" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_FirstRecord" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_FirstRecord" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_LastRecord" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_LastRecord" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_FieldNames" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="MailMergeFieldNames" />
      </parameters>
    </function>
    <function name="Get_DataFields" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="MailMergeDataFields" />
      </parameters>
    </function>
    <function name="FindRecord" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FindText" type="WideString" paramflags="const" />
        <parameter name="Field" type="WideString" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="HeaderSourceName" visibility="public" read="Get_HeaderSourceName" type="WideString" default="0" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="HeaderSourceType" visibility="public" read="Get_HeaderSourceType" type="TOleEnum" />
    <property name="ConnectString" visibility="public" read="Get_ConnectString" type="WideString" default="0" />
    <property name="QueryString" visibility="public" read="Get_QueryString" write="Set_QueryString" type="WideString" default="0" />
    <property name="ActiveRecord" visibility="public" read="Get_ActiveRecord" write="Set_ActiveRecord" type="TOleEnum" />
    <property name="FirstRecord" visibility="public" read="Get_FirstRecord" write="Set_FirstRecord" type="Integer" />
    <property name="LastRecord" visibility="public" read="Get_LastRecord" write="Set_LastRecord" type="Integer" />
    <property name="FieldNames" visibility="public" read="Get_FieldNames" type="MailMergeFieldNames" />
    <property name="DataFields" visibility="public" read="Get_DataFields" type="MailMergeDataFields" />
  </interface>
  <interface name="MailMergeDataSourceDisp" GUID="{0002091D-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="HeaderSourceName" visibility="automated" type="WideString" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="HeaderSourceType" visibility="automated" type="TOleEnum" />
    <property name="ConnectString" visibility="automated" type="WideString" />
    <property name="QueryString" visibility="automated" type="WideString" />
    <property name="ActiveRecord" visibility="automated" type="TOleEnum" />
    <property name="FirstRecord" visibility="automated" type="Integer" />
    <property name="LastRecord" visibility="automated" type="Integer" />
    <property name="FieldNames" visibility="automated" type="MailMergeFieldNames" />
    <property name="DataFields" visibility="automated" type="MailMergeDataFields" />
    <function name="FindRecord" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FindText" type="WideString" paramflags="const" />
        <parameter name="Field" type="WideString" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
  </interface>
  <interface name="MailMergeFieldNames" GUID="{0002091C-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="MailMergeFieldName" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="MailMergeFieldNamesDisp" GUID="{0002091C-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="MailMergeFieldName" />
      </parameters>
    </function>
  </interface>
  <interface name="MailMergeFieldName" GUID="{0002091B-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
  </interface>
  <interface name="MailMergeFieldNameDisp" GUID="{0002091B-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Index" visibility="automated" type="Integer" />
  </interface>
  <interface name="MailMergeDataFields" GUID="{0002091A-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="MailMergeDataField" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="MailMergeDataFieldsDisp" GUID="{0002091A-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="MailMergeDataField" />
      </parameters>
    </function>
  </interface>
  <interface name="MailMergeDataField" GUID="{00020919-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Value" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Value" visibility="public" read="Get_Value" type="WideString" default="0" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
  </interface>
  <interface name="MailMergeDataFieldDisp" GUID="{00020919-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Value" visibility="automated" type="WideString" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Index" visibility="automated" type="Integer" />
  </interface>
  <interface name="Envelope" GUID="{00020918-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Address" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_ReturnAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_DefaultPrintBarCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DefaultPrintBarCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_DefaultPrintFIMA" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DefaultPrintFIMA" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_DefaultHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_DefaultHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_DefaultWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_DefaultWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_DefaultSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_DefaultSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_DefaultOmitReturnAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DefaultOmitReturnAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_FeedSource" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_FeedSource" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_AddressFromLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_AddressFromLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_AddressFromTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_AddressFromTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ReturnAddressFromLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_ReturnAddressFromLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ReturnAddressFromTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_ReturnAddressFromTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_AddressStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Style" />
      </parameters>
    </function>
    <function name="Get_ReturnAddressStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Style" />
      </parameters>
    </function>
    <function name="Get_DefaultOrientation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_DefaultOrientation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_DefaultFaceUp" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DefaultFaceUp" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Insert" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ExtractAddress" type="OleVariant" paramflags="var" />
        <parameter name="Address" type="OleVariant" paramflags="var" />
        <parameter name="AutoText" type="OleVariant" paramflags="var" />
        <parameter name="OmitReturnAddress" type="OleVariant" paramflags="var" />
        <parameter name="ReturnAddress" type="OleVariant" paramflags="var" />
        <parameter name="ReturnAutoText" type="OleVariant" paramflags="var" />
        <parameter name="PrintBarCode" type="OleVariant" paramflags="var" />
        <parameter name="PrintFIMA" type="OleVariant" paramflags="var" />
        <parameter name="Size" type="OleVariant" paramflags="var" />
        <parameter name="Height" type="OleVariant" paramflags="var" />
        <parameter name="Width" type="OleVariant" paramflags="var" />
        <parameter name="FeedSource" type="OleVariant" paramflags="var" />
        <parameter name="AddressFromLeft" type="OleVariant" paramflags="var" />
        <parameter name="AddressFromTop" type="OleVariant" paramflags="var" />
        <parameter name="ReturnAddressFromLeft" type="OleVariant" paramflags="var" />
        <parameter name="ReturnAddressFromTop" type="OleVariant" paramflags="var" />
        <parameter name="DefaultFaceUp" type="OleVariant" paramflags="var" />
        <parameter name="DefaultOrientation" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="PrintOut" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ExtractAddress" type="OleVariant" paramflags="var" />
        <parameter name="Address" type="OleVariant" paramflags="var" />
        <parameter name="AutoText" type="OleVariant" paramflags="var" />
        <parameter name="OmitReturnAddress" type="OleVariant" paramflags="var" />
        <parameter name="ReturnAddress" type="OleVariant" paramflags="var" />
        <parameter name="ReturnAutoText" type="OleVariant" paramflags="var" />
        <parameter name="PrintBarCode" type="OleVariant" paramflags="var" />
        <parameter name="PrintFIMA" type="OleVariant" paramflags="var" />
        <parameter name="Size" type="OleVariant" paramflags="var" />
        <parameter name="Height" type="OleVariant" paramflags="var" />
        <parameter name="Width" type="OleVariant" paramflags="var" />
        <parameter name="FeedSource" type="OleVariant" paramflags="var" />
        <parameter name="AddressFromLeft" type="OleVariant" paramflags="var" />
        <parameter name="AddressFromTop" type="OleVariant" paramflags="var" />
        <parameter name="ReturnAddressFromLeft" type="OleVariant" paramflags="var" />
        <parameter name="ReturnAddressFromTop" type="OleVariant" paramflags="var" />
        <parameter name="DefaultFaceUp" type="OleVariant" paramflags="var" />
        <parameter name="DefaultOrientation" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="UpdateDocument" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Address" visibility="public" read="Get_Address" type="Range" />
    <property name="ReturnAddress" visibility="public" read="Get_ReturnAddress" type="Range" />
    <property name="DefaultPrintBarCode" visibility="public" read="Get_DefaultPrintBarCode" write="Set_DefaultPrintBarCode" type="WordBool" />
    <property name="DefaultPrintFIMA" visibility="public" read="Get_DefaultPrintFIMA" write="Set_DefaultPrintFIMA" type="WordBool" />
    <property name="DefaultHeight" visibility="public" read="Get_DefaultHeight" write="Set_DefaultHeight" type="Single" default="0" />
    <property name="DefaultWidth" visibility="public" read="Get_DefaultWidth" write="Set_DefaultWidth" type="Single" default="0" />
    <property name="DefaultSize" visibility="public" read="Get_DefaultSize" write="Set_DefaultSize" type="WideString" default="0" />
    <property name="DefaultOmitReturnAddress" visibility="public" read="Get_DefaultOmitReturnAddress" write="Set_DefaultOmitReturnAddress" type="WordBool" />
    <property name="FeedSource" visibility="public" read="Get_FeedSource" write="Set_FeedSource" type="TOleEnum" />
    <property name="AddressFromLeft" visibility="public" read="Get_AddressFromLeft" write="Set_AddressFromLeft" type="Single" default="0" />
    <property name="AddressFromTop" visibility="public" read="Get_AddressFromTop" write="Set_AddressFromTop" type="Single" default="0" />
    <property name="ReturnAddressFromLeft" visibility="public" read="Get_ReturnAddressFromLeft" write="Set_ReturnAddressFromLeft" type="Single" default="0" />
    <property name="ReturnAddressFromTop" visibility="public" read="Get_ReturnAddressFromTop" write="Set_ReturnAddressFromTop" type="Single" default="0" />
    <property name="AddressStyle" visibility="public" read="Get_AddressStyle" type="Style" />
    <property name="ReturnAddressStyle" visibility="public" read="Get_ReturnAddressStyle" type="Style" />
    <property name="DefaultOrientation" visibility="public" read="Get_DefaultOrientation" write="Set_DefaultOrientation" type="TOleEnum" />
    <property name="DefaultFaceUp" visibility="public" read="Get_DefaultFaceUp" write="Set_DefaultFaceUp" type="WordBool" />
  </interface>
  <interface name="EnvelopeDisp" GUID="{00020918-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Address" visibility="automated" type="Range" />
    <property name="ReturnAddress" visibility="automated" type="Range" />
    <property name="DefaultPrintBarCode" visibility="automated" type="WordBool" />
    <property name="DefaultPrintFIMA" visibility="automated" type="WordBool" />
    <property name="DefaultHeight" visibility="automated" type="Single" />
    <property name="DefaultWidth" visibility="automated" type="Single" />
    <property name="DefaultSize" visibility="automated" type="WideString" />
    <property name="DefaultOmitReturnAddress" visibility="automated" type="WordBool" />
    <property name="FeedSource" visibility="automated" type="TOleEnum" />
    <property name="AddressFromLeft" visibility="automated" type="Single" />
    <property name="AddressFromTop" visibility="automated" type="Single" />
    <property name="ReturnAddressFromLeft" visibility="automated" type="Single" />
    <property name="ReturnAddressFromTop" visibility="automated" type="Single" />
    <property name="AddressStyle" visibility="automated" type="Style" />
    <property name="ReturnAddressStyle" visibility="automated" type="Style" />
    <property name="DefaultOrientation" visibility="automated" type="TOleEnum" />
    <property name="DefaultFaceUp" visibility="automated" type="WordBool" />
    <procedure name="Insert" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ExtractAddress" type="OleVariant" paramflags="var" />
        <parameter name="Address" type="OleVariant" paramflags="var" />
        <parameter name="AutoText" type="OleVariant" paramflags="var" />
        <parameter name="OmitReturnAddress" type="OleVariant" paramflags="var" />
        <parameter name="ReturnAddress" type="OleVariant" paramflags="var" />
        <parameter name="ReturnAutoText" type="OleVariant" paramflags="var" />
        <parameter name="PrintBarCode" type="OleVariant" paramflags="var" />
        <parameter name="PrintFIMA" type="OleVariant" paramflags="var" />
        <parameter name="Size" type="OleVariant" paramflags="var" />
        <parameter name="Height" type="OleVariant" paramflags="var" />
        <parameter name="Width" type="OleVariant" paramflags="var" />
        <parameter name="FeedSource" type="OleVariant" paramflags="var" />
        <parameter name="AddressFromLeft" type="OleVariant" paramflags="var" />
        <parameter name="AddressFromTop" type="OleVariant" paramflags="var" />
        <parameter name="ReturnAddressFromLeft" type="OleVariant" paramflags="var" />
        <parameter name="ReturnAddressFromTop" type="OleVariant" paramflags="var" />
        <parameter name="DefaultFaceUp" type="OleVariant" paramflags="var" />
        <parameter name="DefaultOrientation" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="PrintOut" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ExtractAddress" type="OleVariant" paramflags="var" />
        <parameter name="Address" type="OleVariant" paramflags="var" />
        <parameter name="AutoText" type="OleVariant" paramflags="var" />
        <parameter name="OmitReturnAddress" type="OleVariant" paramflags="var" />
        <parameter name="ReturnAddress" type="OleVariant" paramflags="var" />
        <parameter name="ReturnAutoText" type="OleVariant" paramflags="var" />
        <parameter name="PrintBarCode" type="OleVariant" paramflags="var" />
        <parameter name="PrintFIMA" type="OleVariant" paramflags="var" />
        <parameter name="Size" type="OleVariant" paramflags="var" />
        <parameter name="Height" type="OleVariant" paramflags="var" />
        <parameter name="Width" type="OleVariant" paramflags="var" />
        <parameter name="FeedSource" type="OleVariant" paramflags="var" />
        <parameter name="AddressFromLeft" type="OleVariant" paramflags="var" />
        <parameter name="AddressFromTop" type="OleVariant" paramflags="var" />
        <parameter name="ReturnAddressFromLeft" type="OleVariant" paramflags="var" />
        <parameter name="ReturnAddressFromTop" type="OleVariant" paramflags="var" />
        <parameter name="DefaultFaceUp" type="OleVariant" paramflags="var" />
        <parameter name="DefaultOrientation" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="UpdateDocument" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="MailingLabel" GUID="{00020917-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_DefaultPrintBarCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DefaultPrintBarCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_DefaultLaserTray" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_DefaultLaserTray" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_CustomLabels" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CustomLabels" />
      </parameters>
    </function>
    <function name="Get_DefaultLabelName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_DefaultLabelName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="CreateNewDocument" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <parameter name="Address" type="OleVariant" paramflags="var" />
        <parameter name="AutoText" type="OleVariant" paramflags="var" />
        <parameter name="ExtractAddress" type="OleVariant" paramflags="var" />
        <parameter name="LaserTray" type="OleVariant" paramflags="var" />
        <retval type="_Document" />
      </parameters>
    </function>
    <procedure name="PrintOut" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <parameter name="Address" type="OleVariant" paramflags="var" />
        <parameter name="ExtractAddress" type="OleVariant" paramflags="var" />
        <parameter name="LaserTray" type="OleVariant" paramflags="var" />
        <parameter name="SingleLabel" type="OleVariant" paramflags="var" />
        <parameter name="Row" type="OleVariant" paramflags="var" />
        <parameter name="Column" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="DefaultPrintBarCode" visibility="public" read="Get_DefaultPrintBarCode" write="Set_DefaultPrintBarCode" type="WordBool" />
    <property name="DefaultLaserTray" visibility="public" read="Get_DefaultLaserTray" write="Set_DefaultLaserTray" type="TOleEnum" />
    <property name="CustomLabels" visibility="public" read="Get_CustomLabels" type="CustomLabels" />
    <property name="DefaultLabelName" visibility="public" read="Get_DefaultLabelName" write="Set_DefaultLabelName" type="WideString" default="0" />
  </interface>
  <interface name="MailingLabelDisp" GUID="{00020917-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="DefaultPrintBarCode" visibility="automated" type="WordBool" />
    <property name="DefaultLaserTray" visibility="automated" type="TOleEnum" />
    <property name="CustomLabels" visibility="automated" type="CustomLabels" />
    <property name="DefaultLabelName" visibility="automated" type="WideString" />
    <function name="CreateNewDocument" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <parameter name="Address" type="OleVariant" paramflags="var" />
        <parameter name="AutoText" type="OleVariant" paramflags="var" />
        <parameter name="ExtractAddress" type="OleVariant" paramflags="var" />
        <parameter name="LaserTray" type="OleVariant" paramflags="var" />
        <retval type="_Document" />
      </parameters>
    </function>
    <procedure name="PrintOut" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <parameter name="Address" type="OleVariant" paramflags="var" />
        <parameter name="ExtractAddress" type="OleVariant" paramflags="var" />
        <parameter name="LaserTray" type="OleVariant" paramflags="var" />
        <parameter name="SingleLabel" type="OleVariant" paramflags="var" />
        <parameter name="Row" type="OleVariant" paramflags="var" />
        <parameter name="Column" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
  </interface>
  <interface name="CustomLabels" GUID="{00020916-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="CustomLabel" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="DotMatrix" type="OleVariant" paramflags="var" />
        <retval type="CustomLabel" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="CustomLabelsDisp" GUID="{00020916-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="CustomLabel" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="DotMatrix" type="OleVariant" paramflags="var" />
        <retval type="CustomLabel" />
      </parameters>
    </function>
  </interface>
  <interface name="CustomLabel" GUID="{00020915-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_TopMargin" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_TopMargin" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_SideMargin" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_SideMargin" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_VerticalPitch" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_VerticalPitch" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_HorizontalPitch" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_HorizontalPitch" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_NumberAcross" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_NumberAcross" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_NumberDown" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_NumberDown" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_DotMatrix" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_PageSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_PageSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Valid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
    <property name="TopMargin" visibility="public" read="Get_TopMargin" write="Set_TopMargin" type="Single" default="0" />
    <property name="SideMargin" visibility="public" read="Get_SideMargin" write="Set_SideMargin" type="Single" default="0" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Single" default="0" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Single" default="0" />
    <property name="VerticalPitch" visibility="public" read="Get_VerticalPitch" write="Set_VerticalPitch" type="Single" default="0" />
    <property name="HorizontalPitch" visibility="public" read="Get_HorizontalPitch" write="Set_HorizontalPitch" type="Single" default="0" />
    <property name="NumberAcross" visibility="public" read="Get_NumberAcross" write="Set_NumberAcross" type="Integer" />
    <property name="NumberDown" visibility="public" read="Get_NumberDown" write="Set_NumberDown" type="Integer" />
    <property name="DotMatrix" visibility="public" read="Get_DotMatrix" type="WordBool" />
    <property name="PageSize" visibility="public" read="Get_PageSize" write="Set_PageSize" type="TOleEnum" />
    <property name="Valid" visibility="public" read="Get_Valid" type="WordBool" />
  </interface>
  <interface name="CustomLabelDisp" GUID="{00020915-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="TopMargin" visibility="automated" type="Single" />
    <property name="SideMargin" visibility="automated" type="Single" />
    <property name="Height" visibility="automated" type="Single" />
    <property name="Width" visibility="automated" type="Single" />
    <property name="VerticalPitch" visibility="automated" type="Single" />
    <property name="HorizontalPitch" visibility="automated" type="Single" />
    <property name="NumberAcross" visibility="automated" type="Integer" />
    <property name="NumberDown" visibility="automated" type="Integer" />
    <property name="DotMatrix" visibility="automated" type="WordBool" />
    <property name="PageSize" visibility="automated" type="TOleEnum" />
    <property name="Valid" visibility="automated" type="WordBool" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="TablesOfContents" GUID="{00020914-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Format" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Format" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="TableOfContents" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="UseHeadingStyles" type="OleVariant" paramflags="var" />
        <parameter name="UpperHeadingLevel" type="OleVariant" paramflags="var" />
        <parameter name="LowerHeadingLevel" type="OleVariant" paramflags="var" />
        <parameter name="UseFields" type="OleVariant" paramflags="var" />
        <parameter name="TableID" type="OleVariant" paramflags="var" />
        <parameter name="RightAlignPageNumbers" type="OleVariant" paramflags="var" />
        <parameter name="IncludePageNumbers" type="OleVariant" paramflags="var" />
        <parameter name="AddedStyles" type="OleVariant" paramflags="var" />
        <retval type="TableOfContents" />
      </parameters>
    </function>
    <function name="MarkEntry" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Entry" type="OleVariant" paramflags="var" />
        <parameter name="EntryAutoText" type="OleVariant" paramflags="var" />
        <parameter name="TableID" type="OleVariant" paramflags="var" />
        <parameter name="Level" type="OleVariant" paramflags="var" />
        <retval type="Field" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Format" visibility="public" read="Get_Format" write="Set_Format" type="TOleEnum" />
  </interface>
  <interface name="TablesOfContentsDisp" GUID="{00020914-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Format" visibility="automated" type="TOleEnum" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="TableOfContents" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="UseHeadingStyles" type="OleVariant" paramflags="var" />
        <parameter name="UpperHeadingLevel" type="OleVariant" paramflags="var" />
        <parameter name="LowerHeadingLevel" type="OleVariant" paramflags="var" />
        <parameter name="UseFields" type="OleVariant" paramflags="var" />
        <parameter name="TableID" type="OleVariant" paramflags="var" />
        <parameter name="RightAlignPageNumbers" type="OleVariant" paramflags="var" />
        <parameter name="IncludePageNumbers" type="OleVariant" paramflags="var" />
        <parameter name="AddedStyles" type="OleVariant" paramflags="var" />
        <retval type="TableOfContents" />
      </parameters>
    </function>
    <function name="MarkEntry" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Entry" type="OleVariant" paramflags="var" />
        <parameter name="EntryAutoText" type="OleVariant" paramflags="var" />
        <parameter name="TableID" type="OleVariant" paramflags="var" />
        <parameter name="Level" type="OleVariant" paramflags="var" />
        <retval type="Field" />
      </parameters>
    </function>
  </interface>
  <interface name="TableOfContents" GUID="{00020913-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_UseHeadingStyles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_UseHeadingStyles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_UseFields" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_UseFields" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_UpperHeadingLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_UpperHeadingLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_LowerHeadingLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_LowerHeadingLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_TableID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_TableID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_HeadingStyles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="HeadingStyles" />
      </parameters>
    </function>
    <function name="Get_RightAlignPageNumbers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_RightAlignPageNumbers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_IncludePageNumbers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_IncludePageNumbers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_TabLeader" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_TabLeader" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="UpdatePageNumbers" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Update" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="UseHeadingStyles" visibility="public" read="Get_UseHeadingStyles" write="Set_UseHeadingStyles" type="WordBool" />
    <property name="UseFields" visibility="public" read="Get_UseFields" write="Set_UseFields" type="WordBool" />
    <property name="UpperHeadingLevel" visibility="public" read="Get_UpperHeadingLevel" write="Set_UpperHeadingLevel" type="Integer" />
    <property name="LowerHeadingLevel" visibility="public" read="Get_LowerHeadingLevel" write="Set_LowerHeadingLevel" type="Integer" />
    <property name="TableID" visibility="public" read="Get_TableID" write="Set_TableID" type="WideString" default="0" />
    <property name="HeadingStyles" visibility="public" read="Get_HeadingStyles" type="HeadingStyles" />
    <property name="RightAlignPageNumbers" visibility="public" read="Get_RightAlignPageNumbers" write="Set_RightAlignPageNumbers" type="WordBool" />
    <property name="IncludePageNumbers" visibility="public" read="Get_IncludePageNumbers" write="Set_IncludePageNumbers" type="WordBool" />
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="TabLeader" visibility="public" read="Get_TabLeader" write="Set_TabLeader" type="TOleEnum" />
  </interface>
  <interface name="TableOfContentsDisp" GUID="{00020913-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="UseHeadingStyles" visibility="automated" type="WordBool" />
    <property name="UseFields" visibility="automated" type="WordBool" />
    <property name="UpperHeadingLevel" visibility="automated" type="Integer" />
    <property name="LowerHeadingLevel" visibility="automated" type="Integer" />
    <property name="TableID" visibility="automated" type="WideString" />
    <property name="HeadingStyles" visibility="automated" type="HeadingStyles" />
    <property name="RightAlignPageNumbers" visibility="automated" type="WordBool" />
    <property name="IncludePageNumbers" visibility="automated" type="WordBool" />
    <property name="Range" visibility="automated" type="Range" />
    <property name="TabLeader" visibility="automated" type="TOleEnum" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="UpdatePageNumbers" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Update" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="TablesOfAuthorities" GUID="{00020912-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Format" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Format" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="TableOfAuthorities" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Category" type="OleVariant" paramflags="var" />
        <parameter name="Bookmark" type="OleVariant" paramflags="var" />
        <parameter name="Passim" type="OleVariant" paramflags="var" />
        <parameter name="KeepEntryFormatting" type="OleVariant" paramflags="var" />
        <parameter name="Separator" type="OleVariant" paramflags="var" />
        <parameter name="IncludeSequenceName" type="OleVariant" paramflags="var" />
        <parameter name="EntrySeparator" type="OleVariant" paramflags="var" />
        <parameter name="PageRangeSeparator" type="OleVariant" paramflags="var" />
        <parameter name="IncludeCategoryHeader" type="OleVariant" paramflags="var" />
        <parameter name="PageNumberSeparator" type="OleVariant" paramflags="var" />
        <retval type="TableOfAuthorities" />
      </parameters>
    </function>
    <procedure name="NextCitation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ShortCitation" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="MarkCitation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="ShortCitation" type="WideString" paramflags="const" />
        <parameter name="LongCitation" type="OleVariant" paramflags="var" />
        <parameter name="LongCitationAutoText" type="OleVariant" paramflags="var" />
        <parameter name="Category" type="OleVariant" paramflags="var" />
        <retval type="Field" />
      </parameters>
    </function>
    <procedure name="MarkAllCitations" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ShortCitation" type="WideString" paramflags="const" />
        <parameter name="LongCitation" type="OleVariant" paramflags="var" />
        <parameter name="LongCitationAutoText" type="OleVariant" paramflags="var" />
        <parameter name="Category" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Format" visibility="public" read="Get_Format" write="Set_Format" type="TOleEnum" />
  </interface>
  <interface name="TablesOfAuthoritiesDisp" GUID="{00020912-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Format" visibility="automated" type="TOleEnum" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="TableOfAuthorities" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Category" type="OleVariant" paramflags="var" />
        <parameter name="Bookmark" type="OleVariant" paramflags="var" />
        <parameter name="Passim" type="OleVariant" paramflags="var" />
        <parameter name="KeepEntryFormatting" type="OleVariant" paramflags="var" />
        <parameter name="Separator" type="OleVariant" paramflags="var" />
        <parameter name="IncludeSequenceName" type="OleVariant" paramflags="var" />
        <parameter name="EntrySeparator" type="OleVariant" paramflags="var" />
        <parameter name="PageRangeSeparator" type="OleVariant" paramflags="var" />
        <parameter name="IncludeCategoryHeader" type="OleVariant" paramflags="var" />
        <parameter name="PageNumberSeparator" type="OleVariant" paramflags="var" />
        <retval type="TableOfAuthorities" />
      </parameters>
    </function>
    <procedure name="NextCitation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ShortCitation" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="MarkCitation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="ShortCitation" type="WideString" paramflags="const" />
        <parameter name="LongCitation" type="OleVariant" paramflags="var" />
        <parameter name="LongCitationAutoText" type="OleVariant" paramflags="var" />
        <parameter name="Category" type="OleVariant" paramflags="var" />
        <retval type="Field" />
      </parameters>
    </function>
    <procedure name="MarkAllCitations" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ShortCitation" type="WideString" paramflags="const" />
        <parameter name="LongCitation" type="OleVariant" paramflags="var" />
        <parameter name="LongCitationAutoText" type="OleVariant" paramflags="var" />
        <parameter name="Category" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
  </interface>
  <interface name="TableOfAuthorities" GUID="{00020911-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Passim" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Passim" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_KeepEntryFormatting" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_KeepEntryFormatting" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Category" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Category" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Bookmark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Bookmark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Separator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Separator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_IncludeSequenceName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_IncludeSequenceName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_EntrySeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_EntrySeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_PageRangeSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_PageRangeSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_IncludeCategoryHeader" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_IncludeCategoryHeader" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PageNumberSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_PageNumberSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_TabLeader" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_TabLeader" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Update" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Passim" visibility="public" read="Get_Passim" write="Set_Passim" type="WordBool" />
    <property name="KeepEntryFormatting" visibility="public" read="Get_KeepEntryFormatting" write="Set_KeepEntryFormatting" type="WordBool" />
    <property name="Category" visibility="public" read="Get_Category" write="Set_Category" type="Integer" />
    <property name="Bookmark" visibility="public" read="Get_Bookmark" write="Set_Bookmark" type="WideString" default="0" />
    <property name="Separator" visibility="public" read="Get_Separator" write="Set_Separator" type="WideString" default="0" />
    <property name="IncludeSequenceName" visibility="public" read="Get_IncludeSequenceName" write="Set_IncludeSequenceName" type="WideString" default="0" />
    <property name="EntrySeparator" visibility="public" read="Get_EntrySeparator" write="Set_EntrySeparator" type="WideString" default="0" />
    <property name="PageRangeSeparator" visibility="public" read="Get_PageRangeSeparator" write="Set_PageRangeSeparator" type="WideString" default="0" />
    <property name="IncludeCategoryHeader" visibility="public" read="Get_IncludeCategoryHeader" write="Set_IncludeCategoryHeader" type="WordBool" />
    <property name="PageNumberSeparator" visibility="public" read="Get_PageNumberSeparator" write="Set_PageNumberSeparator" type="WideString" default="0" />
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="TabLeader" visibility="public" read="Get_TabLeader" write="Set_TabLeader" type="TOleEnum" />
  </interface>
  <interface name="TableOfAuthoritiesDisp" GUID="{00020911-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Passim" visibility="automated" type="WordBool" />
    <property name="KeepEntryFormatting" visibility="automated" type="WordBool" />
    <property name="Category" visibility="automated" type="Integer" />
    <property name="Bookmark" visibility="automated" type="WideString" />
    <property name="Separator" visibility="automated" type="WideString" />
    <property name="IncludeSequenceName" visibility="automated" type="WideString" />
    <property name="EntrySeparator" visibility="automated" type="WideString" />
    <property name="PageRangeSeparator" visibility="automated" type="WideString" />
    <property name="IncludeCategoryHeader" visibility="automated" type="WordBool" />
    <property name="PageNumberSeparator" visibility="automated" type="WideString" />
    <property name="Range" visibility="automated" type="Range" />
    <property name="TabLeader" visibility="automated" type="TOleEnum" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Update" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Dialogs" GUID="{00020910-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="TOleEnum" />
        <retval type="Dialog" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="DialogsDisp" GUID="{00020910-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="TOleEnum" />
        <retval type="Dialog" />
      </parameters>
    </function>
  </interface>
  <interface name="Dialog" GUID="{000209B8-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_DefaultTab" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_DefaultTab" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Show" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="TimeOut" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Display" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="TimeOut" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Execute" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Update" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="DefaultTab" visibility="public" read="Get_DefaultTab" write="Set_DefaultTab" type="TOleEnum" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
  </interface>
  <interface name="DialogDisp" GUID="{000209B8-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="DefaultTab" visibility="automated" type="TOleEnum" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <function name="Show" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="TimeOut" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Display" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="TimeOut" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Execute" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Update" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="PageSetup" GUID="{00020971-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_TopMargin" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_TopMargin" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_BottomMargin" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_BottomMargin" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_LeftMargin" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_LeftMargin" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_RightMargin" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_RightMargin" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Gutter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Gutter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_PageWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_PageWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_PageHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_PageHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Orientation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Orientation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_FirstPageTray" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_FirstPageTray" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_OtherPagesTray" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_OtherPagesTray" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_VerticalAlignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_VerticalAlignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_MirrorMargins" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_MirrorMargins" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_HeaderDistance" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_HeaderDistance" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_FooterDistance" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_FooterDistance" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_SectionStart" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_SectionStart" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_OddAndEvenPagesHeaderFooter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_OddAndEvenPagesHeaderFooter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_DifferentFirstPageHeaderFooter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_DifferentFirstPageHeaderFooter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_SuppressEndnotes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_SuppressEndnotes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_LineNumbering" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="LineNumbering" />
      </parameters>
    </function>
    <procedure name="Set_LineNumbering" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="LineNumbering" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_TextColumns" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TextColumns" />
      </parameters>
    </function>
    <procedure name="Set_TextColumns" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TextColumns" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_PaperSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_PaperSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_TwoPagesOnOne" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_TwoPagesOnOne" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_GutterOnTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_GutterOnTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_CharsLine" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_CharsLine" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_LinesPage" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_LinesPage" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ShowGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="TogglePortrait" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SetAsTemplateDefault" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="TopMargin" visibility="public" read="Get_TopMargin" write="Set_TopMargin" type="Single" default="0" />
    <property name="BottomMargin" visibility="public" read="Get_BottomMargin" write="Set_BottomMargin" type="Single" default="0" />
    <property name="LeftMargin" visibility="public" read="Get_LeftMargin" write="Set_LeftMargin" type="Single" default="0" />
    <property name="RightMargin" visibility="public" read="Get_RightMargin" write="Set_RightMargin" type="Single" default="0" />
    <property name="Gutter" visibility="public" read="Get_Gutter" write="Set_Gutter" type="Single" default="0" />
    <property name="PageWidth" visibility="public" read="Get_PageWidth" write="Set_PageWidth" type="Single" default="0" />
    <property name="PageHeight" visibility="public" read="Get_PageHeight" write="Set_PageHeight" type="Single" default="0" />
    <property name="Orientation" visibility="public" read="Get_Orientation" write="Set_Orientation" type="TOleEnum" />
    <property name="FirstPageTray" visibility="public" read="Get_FirstPageTray" write="Set_FirstPageTray" type="TOleEnum" />
    <property name="OtherPagesTray" visibility="public" read="Get_OtherPagesTray" write="Set_OtherPagesTray" type="TOleEnum" />
    <property name="VerticalAlignment" visibility="public" read="Get_VerticalAlignment" write="Set_VerticalAlignment" type="TOleEnum" />
    <property name="MirrorMargins" visibility="public" read="Get_MirrorMargins" write="Set_MirrorMargins" type="Integer" />
    <property name="HeaderDistance" visibility="public" read="Get_HeaderDistance" write="Set_HeaderDistance" type="Single" default="0" />
    <property name="FooterDistance" visibility="public" read="Get_FooterDistance" write="Set_FooterDistance" type="Single" default="0" />
    <property name="SectionStart" visibility="public" read="Get_SectionStart" write="Set_SectionStart" type="TOleEnum" />
    <property name="OddAndEvenPagesHeaderFooter" visibility="public" read="Get_OddAndEvenPagesHeaderFooter" write="Set_OddAndEvenPagesHeaderFooter" type="Integer" />
    <property name="DifferentFirstPageHeaderFooter" visibility="public" read="Get_DifferentFirstPageHeaderFooter" write="Set_DifferentFirstPageHeaderFooter" type="Integer" />
    <property name="SuppressEndnotes" visibility="public" read="Get_SuppressEndnotes" write="Set_SuppressEndnotes" type="Integer" />
    <property name="LineNumbering" visibility="public" read="Get_LineNumbering" write="Set_LineNumbering" type="LineNumbering" />
    <property name="TextColumns" visibility="public" read="Get_TextColumns" write="Set_TextColumns" type="TextColumns" />
    <property name="PaperSize" visibility="public" read="Get_PaperSize" write="Set_PaperSize" type="TOleEnum" />
    <property name="TwoPagesOnOne" visibility="public" read="Get_TwoPagesOnOne" write="Set_TwoPagesOnOne" type="WordBool" />
    <property name="GutterOnTop" visibility="public" read="Get_GutterOnTop" write="Set_GutterOnTop" type="WordBool" />
    <property name="CharsLine" visibility="public" read="Get_CharsLine" write="Set_CharsLine" type="Single" default="0" />
    <property name="LinesPage" visibility="public" read="Get_LinesPage" write="Set_LinesPage" type="Single" default="0" />
    <property name="ShowGrid" visibility="public" read="Get_ShowGrid" write="Set_ShowGrid" type="WordBool" />
  </interface>
  <interface name="PageSetupDisp" GUID="{00020971-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="TopMargin" visibility="automated" type="Single" />
    <property name="BottomMargin" visibility="automated" type="Single" />
    <property name="LeftMargin" visibility="automated" type="Single" />
    <property name="RightMargin" visibility="automated" type="Single" />
    <property name="Gutter" visibility="automated" type="Single" />
    <property name="PageWidth" visibility="automated" type="Single" />
    <property name="PageHeight" visibility="automated" type="Single" />
    <property name="Orientation" visibility="automated" type="TOleEnum" />
    <property name="FirstPageTray" visibility="automated" type="TOleEnum" />
    <property name="OtherPagesTray" visibility="automated" type="TOleEnum" />
    <property name="VerticalAlignment" visibility="automated" type="TOleEnum" />
    <property name="MirrorMargins" visibility="automated" type="Integer" />
    <property name="HeaderDistance" visibility="automated" type="Single" />
    <property name="FooterDistance" visibility="automated" type="Single" />
    <property name="SectionStart" visibility="automated" type="TOleEnum" />
    <property name="OddAndEvenPagesHeaderFooter" visibility="automated" type="Integer" />
    <property name="DifferentFirstPageHeaderFooter" visibility="automated" type="Integer" />
    <property name="SuppressEndnotes" visibility="automated" type="Integer" />
    <property name="LineNumbering" visibility="automated" type="LineNumbering" />
    <property name="TextColumns" visibility="automated" type="TextColumns" />
    <property name="PaperSize" visibility="automated" type="TOleEnum" />
    <property name="TwoPagesOnOne" visibility="automated" type="WordBool" />
    <property name="GutterOnTop" visibility="automated" type="WordBool" />
    <property name="CharsLine" visibility="automated" type="Single" />
    <property name="LinesPage" visibility="automated" type="Single" />
    <property name="ShowGrid" visibility="automated" type="WordBool" />
    <procedure name="TogglePortrait" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetAsTemplateDefault" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="LineNumbering" GUID="{00020972-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_RestartMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_RestartMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_StartingNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_StartingNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_DistanceFromText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_DistanceFromText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_CountBy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_CountBy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Active" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Active" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="RestartMode" visibility="public" read="Get_RestartMode" write="Set_RestartMode" type="TOleEnum" />
    <property name="StartingNumber" visibility="public" read="Get_StartingNumber" write="Set_StartingNumber" type="Integer" />
    <property name="DistanceFromText" visibility="public" read="Get_DistanceFromText" write="Set_DistanceFromText" type="Single" default="0" />
    <property name="CountBy" visibility="public" read="Get_CountBy" write="Set_CountBy" type="Integer" />
    <property name="Active" visibility="public" read="Get_Active" write="Set_Active" type="Integer" />
  </interface>
  <interface name="LineNumberingDisp" GUID="{00020972-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="RestartMode" visibility="automated" type="TOleEnum" />
    <property name="StartingNumber" visibility="automated" type="Integer" />
    <property name="DistanceFromText" visibility="automated" type="Single" />
    <property name="CountBy" visibility="automated" type="Integer" />
    <property name="Active" visibility="automated" type="Integer" />
  </interface>
  <interface name="TextColumns" GUID="{00020973-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_EvenlySpaced" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_EvenlySpaced" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_LineBetween" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_LineBetween" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Spacing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Spacing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="TextColumn" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Width" type="OleVariant" paramflags="var" />
        <parameter name="Spacing" type="OleVariant" paramflags="var" />
        <parameter name="EvenlySpaced" type="OleVariant" paramflags="var" />
        <retval type="TextColumn" />
      </parameters>
    </function>
    <procedure name="SetCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NumColumns" type="Integer" />
      </parameters>
    </procedure>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="EvenlySpaced" visibility="public" read="Get_EvenlySpaced" write="Set_EvenlySpaced" type="Integer" />
    <property name="LineBetween" visibility="public" read="Get_LineBetween" write="Set_LineBetween" type="Integer" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Single" default="0" />
    <property name="Spacing" visibility="public" read="Get_Spacing" write="Set_Spacing" type="Single" default="0" />
  </interface>
  <interface name="TextColumnsDisp" GUID="{00020973-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="EvenlySpaced" visibility="automated" type="Integer" />
    <property name="LineBetween" visibility="automated" type="Integer" />
    <property name="Width" visibility="automated" type="Single" />
    <property name="Spacing" visibility="automated" type="Single" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="TextColumn" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Width" type="OleVariant" paramflags="var" />
        <parameter name="Spacing" type="OleVariant" paramflags="var" />
        <parameter name="EvenlySpaced" type="OleVariant" paramflags="var" />
        <retval type="TextColumn" />
      </parameters>
    </function>
    <procedure name="SetCount" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="NumColumns" type="Integer" />
      </parameters>
    </procedure>
  </interface>
  <interface name="TextColumn" GUID="{00020974-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_SpaceAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_SpaceAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Single" default="0" />
    <property name="SpaceAfter" visibility="public" read="Get_SpaceAfter" write="Set_SpaceAfter" type="Single" default="0" />
  </interface>
  <interface name="TextColumnDisp" GUID="{00020974-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Width" visibility="automated" type="Single" />
    <property name="SpaceAfter" visibility="automated" type="Single" />
  </interface>
  <interface name="WordSelection" GUID="{00020975-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_FormattedText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <procedure name="Set_FormattedText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Range" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Start" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Start" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_End_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_End_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Font" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Font" />
      </parameters>
    </function>
    <procedure name="Set_Font" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="_Font" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_StoryType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="Set_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="Get_Tables" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Tables" />
      </parameters>
    </function>
    <function name="Get_Words" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Words" />
      </parameters>
    </function>
    <function name="Get_Sentences" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Sentences" />
      </parameters>
    </function>
    <function name="Get_Characters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Characters" />
      </parameters>
    </function>
    <function name="Get_Footnotes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Footnotes" />
      </parameters>
    </function>
    <function name="Get_Endnotes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Endnotes" />
      </parameters>
    </function>
    <function name="Get_Comments" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Comments" />
      </parameters>
    </function>
    <function name="Get_Cells" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Cells" />
      </parameters>
    </function>
    <function name="Get_Sections" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Sections" />
      </parameters>
    </function>
    <function name="Get_Paragraphs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Paragraphs" />
      </parameters>
    </function>
    <function name="Get_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Borders" />
      </parameters>
    </function>
    <procedure name="Set_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Borders" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Shading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shading" />
      </parameters>
    </function>
    <function name="Get_Fields" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Fields" />
      </parameters>
    </function>
    <function name="Get_FormFields" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FormFields" />
      </parameters>
    </function>
    <function name="Get_Frames" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Frames" />
      </parameters>
    </function>
    <function name="Get_ParagraphFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_ParagraphFormat" />
      </parameters>
    </function>
    <procedure name="Set_ParagraphFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="_ParagraphFormat" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_PageSetup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="PageSetup" />
      </parameters>
    </function>
    <procedure name="Set_PageSetup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="PageSetup" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Bookmarks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Bookmarks" />
      </parameters>
    </function>
    <function name="Get_StoryLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_LanguageID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LanguageID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_LanguageIDFarEast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LanguageIDFarEast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_LanguageIDOther" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LanguageIDOther" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Hyperlinks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Hyperlinks" />
      </parameters>
    </function>
    <function name="Get_Columns" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Columns" />
      </parameters>
    </function>
    <function name="Get_Rows" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Rows" />
      </parameters>
    </function>
    <function name="Get_HeaderFooter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="HeaderFooter" />
      </parameters>
    </function>
    <function name="Get_IsEndOfRowMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_BookmarkID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_PreviousBookmarkID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Find" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Find" />
      </parameters>
    </function>
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Information" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_Flags" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Flags" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Active" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_StartIsActive" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_StartIsActive" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_IPAtEndOfLine" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_ExtendMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ExtendMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ColumnSelectMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ColumnSelectMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Orientation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Orientation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_InlineShapes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="InlineShapes" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Document" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Document" />
      </parameters>
    </function>
    <function name="Get_ShapeRange" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SetRange" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Start" type="Integer" />
        <parameter name="End_" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Collapse" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Direction" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Text" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="InsertAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Text" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Next" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Previous" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="StartOf" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="EndOf" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Move" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveStart" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveEnd" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveWhile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveStartWhile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveEndWhile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveUntil" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveStartUntil" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveEndUntil" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Cut" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Copy" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Paste" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="InsertBreak" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertFile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <parameter name="ConfirmConversions" type="OleVariant" paramflags="var" />
        <parameter name="Link" type="OleVariant" paramflags="var" />
        <parameter name="Attachment" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="InStory" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="InRange" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Expand" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="InsertParagraph" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="InsertParagraphAfter" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="ConvertToTable" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Separator" type="OleVariant" paramflags="var" />
        <parameter name="NumRows" type="OleVariant" paramflags="var" />
        <parameter name="NumColumns" type="OleVariant" paramflags="var" />
        <parameter name="InitialColumnWidth" type="OleVariant" paramflags="var" />
        <parameter name="Format" type="OleVariant" paramflags="var" />
        <parameter name="ApplyBorders" type="OleVariant" paramflags="var" />
        <parameter name="ApplyShading" type="OleVariant" paramflags="var" />
        <parameter name="ApplyFont" type="OleVariant" paramflags="var" />
        <parameter name="ApplyColor" type="OleVariant" paramflags="var" />
        <parameter name="ApplyHeadingRows" type="OleVariant" paramflags="var" />
        <parameter name="ApplyLastRow" type="OleVariant" paramflags="var" />
        <parameter name="ApplyFirstColumn" type="OleVariant" paramflags="var" />
        <parameter name="ApplyLastColumn" type="OleVariant" paramflags="var" />
        <parameter name="AutoFit" type="OleVariant" paramflags="var" />
        <retval type="Table" />
      </parameters>
    </function>
    <procedure name="InsertDateTime" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="DateTimeFormat" type="OleVariant" paramflags="var" />
        <parameter name="InsertAsField" type="OleVariant" paramflags="var" />
        <parameter name="InsertAsFullWidth" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertSymbol" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="CharacterNumber" type="Integer" />
        <parameter name="Font" type="OleVariant" paramflags="var" />
        <parameter name="Unicode" type="OleVariant" paramflags="var" />
        <parameter name="Bias" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertCrossReference" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ReferenceType" type="OleVariant" paramflags="var" />
        <parameter name="ReferenceKind" type="TOleEnum" />
        <parameter name="ReferenceItem" type="OleVariant" paramflags="var" />
        <parameter name="InsertAsHyperlink" type="OleVariant" paramflags="var" />
        <parameter name="IncludePosition" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertCaption" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Label_" type="OleVariant" paramflags="var" />
        <parameter name="Title" type="OleVariant" paramflags="var" />
        <parameter name="TitleAutoText" type="OleVariant" paramflags="var" />
        <parameter name="Position" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="CopyAsPicture" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Sort" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ExcludeHeader" type="OleVariant" paramflags="var" />
        <parameter name="FieldNumber" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder" type="OleVariant" paramflags="var" />
        <parameter name="FieldNumber2" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType2" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder2" type="OleVariant" paramflags="var" />
        <parameter name="FieldNumber3" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType3" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder3" type="OleVariant" paramflags="var" />
        <parameter name="SortColumn" type="OleVariant" paramflags="var" />
        <parameter name="Separator" type="OleVariant" paramflags="var" />
        <parameter name="CaseSensitive" type="OleVariant" paramflags="var" />
        <parameter name="LanguageID" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SortAscending" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SortDescending" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="IsEqual" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Calculate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <function name="GoTo_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="What" type="OleVariant" paramflags="var" />
        <parameter name="Which" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="GoToNext" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="What" type="TOleEnum" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="GoToPrevious" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="What" type="TOleEnum" />
        <retval type="Range" />
      </parameters>
    </function>
    <procedure name="PasteSpecial" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="IconIndex" type="OleVariant" paramflags="var" />
        <parameter name="Link" type="OleVariant" paramflags="var" />
        <parameter name="Placement" type="OleVariant" paramflags="var" />
        <parameter name="DisplayAsIcon" type="OleVariant" paramflags="var" />
        <parameter name="DataType" type="OleVariant" paramflags="var" />
        <parameter name="IconFileName" type="OleVariant" paramflags="var" />
        <parameter name="IconLabel" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="PreviousField" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Field" />
      </parameters>
    </function>
    <function name="NextField" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Field" />
      </parameters>
    </function>
    <procedure name="InsertParagraphBefore" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="InsertCells" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ShiftCells" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Extend" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Character" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Shrink" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="MoveLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveRight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveUp" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveDown" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="HomeKey" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="EndKey" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="EscapeKey" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="TypeText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Text" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="CopyFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="PasteFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="TypeParagraph" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="TypeBackspace" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="NextSubdocument" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="PreviousSubdocument" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SelectColumn" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SelectCurrentFont" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SelectCurrentAlignment" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SelectCurrentSpacing" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SelectCurrentIndent" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SelectCurrentTabs" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SelectCurrentColor" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="CreateTextbox" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="WholeStory" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SelectRow" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SplitTable" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="InsertRows" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NumRows" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertColumns" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="InsertFormula" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Formula" type="OleVariant" paramflags="var" />
        <parameter name="NumberFormat" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="NextRevision" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Wrap" type="OleVariant" paramflags="var" />
        <retval type="Revision" />
      </parameters>
    </function>
    <function name="PreviousRevision" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Wrap" type="OleVariant" paramflags="var" />
        <retval type="Revision" />
      </parameters>
    </function>
    <property name="Text" visibility="public" read="Get_Text" write="Set_Text" type="WideString" default="0" />
    <property name="FormattedText" visibility="public" read="Get_FormattedText" write="Set_FormattedText" type="Range" />
    <property name="Start" visibility="public" read="Get_Start" write="Set_Start" type="Integer" />
    <property name="End_" visibility="public" read="Get_End_" write="Set_End_" type="Integer" />
    <property name="Font" visibility="public" read="Get_Font" write="Set_Font" type="_Font" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="StoryType" visibility="public" read="Get_StoryType" type="TOleEnum" />
    <property name="Tables" visibility="public" read="Get_Tables" type="Tables" />
    <property name="Words" visibility="public" read="Get_Words" type="Words" />
    <property name="Sentences" visibility="public" read="Get_Sentences" type="Sentences" />
    <property name="Characters" visibility="public" read="Get_Characters" type="Characters" />
    <property name="Footnotes" visibility="public" read="Get_Footnotes" type="Footnotes" />
    <property name="Endnotes" visibility="public" read="Get_Endnotes" type="Endnotes" />
    <property name="Comments" visibility="public" read="Get_Comments" type="Comments" />
    <property name="Cells" visibility="public" read="Get_Cells" type="Cells" />
    <property name="Sections" visibility="public" read="Get_Sections" type="Sections" />
    <property name="Paragraphs" visibility="public" read="Get_Paragraphs" type="Paragraphs" />
    <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
    <property name="Shading" visibility="public" read="Get_Shading" type="Shading" />
    <property name="Fields" visibility="public" read="Get_Fields" type="Fields" />
    <property name="FormFields" visibility="public" read="Get_FormFields" type="FormFields" />
    <property name="Frames" visibility="public" read="Get_Frames" type="Frames" />
    <property name="ParagraphFormat" visibility="public" read="Get_ParagraphFormat" write="Set_ParagraphFormat" type="_ParagraphFormat" />
    <property name="PageSetup" visibility="public" read="Get_PageSetup" write="Set_PageSetup" type="PageSetup" />
    <property name="Bookmarks" visibility="public" read="Get_Bookmarks" type="Bookmarks" />
    <property name="StoryLength" visibility="public" read="Get_StoryLength" type="Integer" />
    <property name="LanguageID" visibility="public" read="Get_LanguageID" write="Set_LanguageID" type="TOleEnum" />
    <property name="LanguageIDFarEast" visibility="public" read="Get_LanguageIDFarEast" write="Set_LanguageIDFarEast" type="TOleEnum" />
    <property name="LanguageIDOther" visibility="public" read="Get_LanguageIDOther" write="Set_LanguageIDOther" type="TOleEnum" />
    <property name="Hyperlinks" visibility="public" read="Get_Hyperlinks" type="Hyperlinks" />
    <property name="Columns" visibility="public" read="Get_Columns" type="Columns" />
    <property name="Rows" visibility="public" read="Get_Rows" type="Rows" />
    <property name="HeaderFooter" visibility="public" read="Get_HeaderFooter" type="HeaderFooter" />
    <property name="IsEndOfRowMark" visibility="public" read="Get_IsEndOfRowMark" type="WordBool" />
    <property name="BookmarkID" visibility="public" read="Get_BookmarkID" type="Integer" />
    <property name="PreviousBookmarkID" visibility="public" read="Get_PreviousBookmarkID" type="Integer" />
    <property name="Find" visibility="public" read="Get_Find" type="Find" />
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="Information[Type_]" visibility="public" read="Get_Information" type="OleVariant" />
    <property name="Flags" visibility="public" read="Get_Flags" write="Set_Flags" type="TOleEnum" />
    <property name="Active" visibility="public" read="Get_Active" type="WordBool" />
    <property name="StartIsActive" visibility="public" read="Get_StartIsActive" write="Set_StartIsActive" type="WordBool" />
    <property name="IPAtEndOfLine" visibility="public" read="Get_IPAtEndOfLine" type="WordBool" />
    <property name="ExtendMode" visibility="public" read="Get_ExtendMode" write="Set_ExtendMode" type="WordBool" />
    <property name="ColumnSelectMode" visibility="public" read="Get_ColumnSelectMode" write="Set_ColumnSelectMode" type="WordBool" />
    <property name="Orientation" visibility="public" read="Get_Orientation" write="Set_Orientation" type="TOleEnum" />
    <property name="InlineShapes" visibility="public" read="Get_InlineShapes" type="InlineShapes" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Document" visibility="public" read="Get_Document" type="_Document" />
    <property name="ShapeRange" visibility="public" read="Get_ShapeRange" type="ShapeRange" />
  </interface>
  <interface name="WordSelectionDisp" GUID="{00020975-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Text" visibility="automated" type="WideString" />
    <property name="FormattedText" visibility="automated" type="Range" />
    <property name="Start" visibility="automated" type="Integer" />
    <property name="End_" visibility="automated" type="Integer" />
    <property name="Font" visibility="automated" type="_Font" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="StoryType" visibility="automated" type="TOleEnum" />
    <function name="Style" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <property name="Tables" visibility="automated" type="Tables" />
    <property name="Words" visibility="automated" type="Words" />
    <property name="Sentences" visibility="automated" type="Sentences" />
    <property name="Characters" visibility="automated" type="Characters" />
    <property name="Footnotes" visibility="automated" type="Footnotes" />
    <property name="Endnotes" visibility="automated" type="Endnotes" />
    <property name="Comments" visibility="automated" type="Comments" />
    <property name="Cells" visibility="automated" type="Cells" />
    <property name="Sections" visibility="automated" type="Sections" />
    <property name="Paragraphs" visibility="automated" type="Paragraphs" />
    <property name="Borders" visibility="automated" type="Borders" />
    <property name="Shading" visibility="automated" type="Shading" />
    <property name="Fields" visibility="automated" type="Fields" />
    <property name="FormFields" visibility="automated" type="FormFields" />
    <property name="Frames" visibility="automated" type="Frames" />
    <property name="ParagraphFormat" visibility="automated" type="_ParagraphFormat" />
    <property name="PageSetup" visibility="automated" type="PageSetup" />
    <property name="Bookmarks" visibility="automated" type="Bookmarks" />
    <property name="StoryLength" visibility="automated" type="Integer" />
    <property name="LanguageID" visibility="automated" type="TOleEnum" />
    <property name="LanguageIDFarEast" visibility="automated" type="TOleEnum" />
    <property name="LanguageIDOther" visibility="automated" type="TOleEnum" />
    <property name="Hyperlinks" visibility="automated" type="Hyperlinks" />
    <property name="Columns" visibility="automated" type="Columns" />
    <property name="Rows" visibility="automated" type="Rows" />
    <property name="HeaderFooter" visibility="automated" type="HeaderFooter" />
    <property name="IsEndOfRowMark" visibility="automated" type="WordBool" />
    <property name="BookmarkID" visibility="automated" type="Integer" />
    <property name="PreviousBookmarkID" visibility="automated" type="Integer" />
    <property name="Find" visibility="automated" type="Find" />
    <property name="Range" visibility="automated" type="Range" />
    <property name="Information[Type_]" visibility="automated" type="OleVariant" />
    <property name="Flags" visibility="automated" type="TOleEnum" />
    <property name="Active" visibility="automated" type="WordBool" />
    <property name="StartIsActive" visibility="automated" type="WordBool" />
    <property name="IPAtEndOfLine" visibility="automated" type="WordBool" />
    <property name="ExtendMode" visibility="automated" type="WordBool" />
    <property name="ColumnSelectMode" visibility="automated" type="WordBool" />
    <property name="Orientation" visibility="automated" type="TOleEnum" />
    <property name="InlineShapes" visibility="automated" type="InlineShapes" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Document" visibility="automated" type="_Document" />
    <property name="ShapeRange" visibility="automated" type="ShapeRange" />
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetRange" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Start" type="Integer" />
        <parameter name="End_" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Collapse" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Direction" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertBefore" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Text" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="InsertAfter" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Text" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Next" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Previous" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="StartOf" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="EndOf" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Move" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveStart" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveEnd" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveWhile" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveStartWhile" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveEndWhile" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveUntil" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveStartUntil" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveEndUntil" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Cset" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Cut" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Copy" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Paste" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="InsertBreak" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertFile" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <parameter name="ConfirmConversions" type="OleVariant" paramflags="var" />
        <parameter name="Link" type="OleVariant" paramflags="var" />
        <parameter name="Attachment" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="InStory" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="InRange" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Expand" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="InsertParagraph" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="InsertParagraphAfter" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="ConvertToTable" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Separator" type="OleVariant" paramflags="var" />
        <parameter name="NumRows" type="OleVariant" paramflags="var" />
        <parameter name="NumColumns" type="OleVariant" paramflags="var" />
        <parameter name="InitialColumnWidth" type="OleVariant" paramflags="var" />
        <parameter name="Format" type="OleVariant" paramflags="var" />
        <parameter name="ApplyBorders" type="OleVariant" paramflags="var" />
        <parameter name="ApplyShading" type="OleVariant" paramflags="var" />
        <parameter name="ApplyFont" type="OleVariant" paramflags="var" />
        <parameter name="ApplyColor" type="OleVariant" paramflags="var" />
        <parameter name="ApplyHeadingRows" type="OleVariant" paramflags="var" />
        <parameter name="ApplyLastRow" type="OleVariant" paramflags="var" />
        <parameter name="ApplyFirstColumn" type="OleVariant" paramflags="var" />
        <parameter name="ApplyLastColumn" type="OleVariant" paramflags="var" />
        <parameter name="AutoFit" type="OleVariant" paramflags="var" />
        <retval type="Table" />
      </parameters>
    </function>
    <procedure name="InsertDateTime" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="DateTimeFormat" type="OleVariant" paramflags="var" />
        <parameter name="InsertAsField" type="OleVariant" paramflags="var" />
        <parameter name="InsertAsFullWidth" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertSymbol" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="CharacterNumber" type="Integer" />
        <parameter name="Font" type="OleVariant" paramflags="var" />
        <parameter name="Unicode" type="OleVariant" paramflags="var" />
        <parameter name="Bias" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertCrossReference" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ReferenceType" type="OleVariant" paramflags="var" />
        <parameter name="ReferenceKind" type="TOleEnum" />
        <parameter name="ReferenceItem" type="OleVariant" paramflags="var" />
        <parameter name="InsertAsHyperlink" type="OleVariant" paramflags="var" />
        <parameter name="IncludePosition" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertCaption" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Label_" type="OleVariant" paramflags="var" />
        <parameter name="Title" type="OleVariant" paramflags="var" />
        <parameter name="TitleAutoText" type="OleVariant" paramflags="var" />
        <parameter name="Position" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="CopyAsPicture" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Sort" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ExcludeHeader" type="OleVariant" paramflags="var" />
        <parameter name="FieldNumber" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder" type="OleVariant" paramflags="var" />
        <parameter name="FieldNumber2" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType2" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder2" type="OleVariant" paramflags="var" />
        <parameter name="FieldNumber3" type="OleVariant" paramflags="var" />
        <parameter name="SortFieldType3" type="OleVariant" paramflags="var" />
        <parameter name="SortOrder3" type="OleVariant" paramflags="var" />
        <parameter name="SortColumn" type="OleVariant" paramflags="var" />
        <parameter name="Separator" type="OleVariant" paramflags="var" />
        <parameter name="CaseSensitive" type="OleVariant" paramflags="var" />
        <parameter name="LanguageID" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SortAscending" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SortDescending" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="IsEqual" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Calculate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <function name="GoTo_" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="What" type="OleVariant" paramflags="var" />
        <parameter name="Which" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="GoToNext" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="What" type="TOleEnum" />
        <retval type="Range" />
      </parameters>
    </function>
    <function name="GoToPrevious" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="What" type="TOleEnum" />
        <retval type="Range" />
      </parameters>
    </function>
    <procedure name="PasteSpecial" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="IconIndex" type="OleVariant" paramflags="var" />
        <parameter name="Link" type="OleVariant" paramflags="var" />
        <parameter name="Placement" type="OleVariant" paramflags="var" />
        <parameter name="DisplayAsIcon" type="OleVariant" paramflags="var" />
        <parameter name="DataType" type="OleVariant" paramflags="var" />
        <parameter name="IconFileName" type="OleVariant" paramflags="var" />
        <parameter name="IconLabel" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="PreviousField" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Field" />
      </parameters>
    </function>
    <function name="NextField" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Field" />
      </parameters>
    </function>
    <procedure name="InsertParagraphBefore" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="InsertCells" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ShiftCells" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Extend" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Character" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Shrink" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="MoveLeft" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveRight" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveUp" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="MoveDown" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Count" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="HomeKey" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="EndKey" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Unit_" type="OleVariant" paramflags="var" />
        <parameter name="Extend" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="EscapeKey" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="TypeText" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Text" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="CopyFormat" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="PasteFormat" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="TypeParagraph" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="TypeBackspace" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="NextSubdocument" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="PreviousSubdocument" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SelectColumn" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SelectCurrentFont" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SelectCurrentAlignment" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SelectCurrentSpacing" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SelectCurrentIndent" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SelectCurrentTabs" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SelectCurrentColor" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="CreateTextbox" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="WholeStory" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SelectRow" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SplitTable" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="InsertRows" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="NumRows" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="InsertColumns" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="InsertFormula" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Formula" type="OleVariant" paramflags="var" />
        <parameter name="NumberFormat" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="NextRevision" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Wrap" type="OleVariant" paramflags="var" />
        <retval type="Revision" />
      </parameters>
    </function>
    <function name="PreviousRevision" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Wrap" type="OleVariant" paramflags="var" />
        <retval type="Revision" />
      </parameters>
    </function>
  </interface>
  <interface name="TablesOfAuthoritiesCategories" GUID="{00020976-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="TableOfAuthoritiesCategory" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="TablesOfAuthoritiesCategoriesDisp" GUID="{00020976-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="TableOfAuthoritiesCategory" />
      </parameters>
    </function>
  </interface>
  <interface name="TableOfAuthoritiesCategory" GUID="{00020977-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
  </interface>
  <interface name="TableOfAuthoritiesCategoryDisp" GUID="{00020977-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Index" visibility="automated" type="Integer" />
  </interface>
  <interface name="CaptionLabels" GUID="{00020978-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="CaptionLabel" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <retval type="CaptionLabel" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="CaptionLabelsDisp" GUID="{00020978-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="CaptionLabel" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <retval type="CaptionLabel" />
      </parameters>
    </function>
  </interface>
  <interface name="CaptionLabel" GUID="{00020979-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_BuiltIn" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_ID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_IncludeChapterNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_IncludeChapterNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_NumberStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_NumberStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_ChapterStyleLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_ChapterStyleLevel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Separator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Separator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Position" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Position" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="BuiltIn" visibility="public" read="Get_BuiltIn" type="WordBool" />
    <property name="ID" visibility="public" read="Get_ID" type="TOleEnum" />
    <property name="IncludeChapterNumber" visibility="public" read="Get_IncludeChapterNumber" write="Set_IncludeChapterNumber" type="WordBool" />
    <property name="NumberStyle" visibility="public" read="Get_NumberStyle" write="Set_NumberStyle" type="TOleEnum" />
    <property name="ChapterStyleLevel" visibility="public" read="Get_ChapterStyleLevel" write="Set_ChapterStyleLevel" type="Integer" />
    <property name="Separator" visibility="public" read="Get_Separator" write="Set_Separator" type="TOleEnum" />
    <property name="Position" visibility="public" read="Get_Position" write="Set_Position" type="TOleEnum" />
  </interface>
  <interface name="CaptionLabelDisp" GUID="{00020979-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="BuiltIn" visibility="automated" type="WordBool" />
    <property name="ID" visibility="automated" type="TOleEnum" />
    <property name="IncludeChapterNumber" visibility="automated" type="WordBool" />
    <property name="NumberStyle" visibility="automated" type="TOleEnum" />
    <property name="ChapterStyleLevel" visibility="automated" type="Integer" />
    <property name="Separator" visibility="automated" type="TOleEnum" />
    <property name="Position" visibility="automated" type="TOleEnum" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="AutoCaptions" GUID="{0002097A-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="AutoCaption" />
      </parameters>
    </function>
    <procedure name="CancelAutoInsert" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="AutoCaptionsDisp" GUID="{0002097A-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="AutoCaption" />
      </parameters>
    </function>
    <procedure name="CancelAutoInsert" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="AutoCaption" GUID="{0002097B-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_AutoInsert" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoInsert" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_CaptionLabel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="Set_CaptionLabel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="AutoInsert" visibility="public" read="Get_AutoInsert" write="Set_AutoInsert" type="WordBool" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
  </interface>
  <interface name="AutoCaptionDisp" GUID="{0002097B-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="AutoInsert" visibility="automated" type="WordBool" />
    <property name="Index" visibility="automated" type="Integer" />
    <function name="CaptionLabel" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
  </interface>
  <interface name="Indexes" GUID="{0002097C-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Format" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Format" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Index" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="HeadingSeparator" type="OleVariant" paramflags="var" />
        <parameter name="RightAlignPageNumbers" type="OleVariant" paramflags="var" />
        <parameter name="Type_" type="OleVariant" paramflags="var" />
        <parameter name="NumberOfColumns" type="OleVariant" paramflags="var" />
        <parameter name="AccentedLetters" type="OleVariant" paramflags="var" />
        <retval type="Index" />
      </parameters>
    </function>
    <function name="MarkEntry" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Entry" type="OleVariant" paramflags="var" />
        <parameter name="EntryAutoText" type="OleVariant" paramflags="var" />
        <parameter name="CrossReference" type="OleVariant" paramflags="var" />
        <parameter name="CrossReferenceAutoText" type="OleVariant" paramflags="var" />
        <parameter name="BookmarkName" type="OleVariant" paramflags="var" />
        <parameter name="Bold" type="OleVariant" paramflags="var" />
        <parameter name="Italic" type="OleVariant" paramflags="var" />
        <parameter name="Reading" type="OleVariant" paramflags="var" />
        <retval type="Field" />
      </parameters>
    </function>
    <procedure name="MarkAllEntries" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Entry" type="OleVariant" paramflags="var" />
        <parameter name="EntryAutoText" type="OleVariant" paramflags="var" />
        <parameter name="CrossReference" type="OleVariant" paramflags="var" />
        <parameter name="CrossReferenceAutoText" type="OleVariant" paramflags="var" />
        <parameter name="BookmarkName" type="OleVariant" paramflags="var" />
        <parameter name="Bold" type="OleVariant" paramflags="var" />
        <parameter name="Italic" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="AutoMarkEntries" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ConcordanceFileName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Format" visibility="public" read="Get_Format" write="Set_Format" type="TOleEnum" />
  </interface>
  <interface name="IndexesDisp" GUID="{0002097C-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Format" visibility="automated" type="TOleEnum" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Index" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="HeadingSeparator" type="OleVariant" paramflags="var" />
        <parameter name="RightAlignPageNumbers" type="OleVariant" paramflags="var" />
        <parameter name="Type_" type="OleVariant" paramflags="var" />
        <parameter name="NumberOfColumns" type="OleVariant" paramflags="var" />
        <parameter name="AccentedLetters" type="OleVariant" paramflags="var" />
        <retval type="Index" />
      </parameters>
    </function>
    <function name="MarkEntry" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Entry" type="OleVariant" paramflags="var" />
        <parameter name="EntryAutoText" type="OleVariant" paramflags="var" />
        <parameter name="CrossReference" type="OleVariant" paramflags="var" />
        <parameter name="CrossReferenceAutoText" type="OleVariant" paramflags="var" />
        <parameter name="BookmarkName" type="OleVariant" paramflags="var" />
        <parameter name="Bold" type="OleVariant" paramflags="var" />
        <parameter name="Italic" type="OleVariant" paramflags="var" />
        <parameter name="Reading" type="OleVariant" paramflags="var" />
        <retval type="Field" />
      </parameters>
    </function>
    <procedure name="MarkAllEntries" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <parameter name="Entry" type="OleVariant" paramflags="var" />
        <parameter name="EntryAutoText" type="OleVariant" paramflags="var" />
        <parameter name="CrossReference" type="OleVariant" paramflags="var" />
        <parameter name="CrossReferenceAutoText" type="OleVariant" paramflags="var" />
        <parameter name="BookmarkName" type="OleVariant" paramflags="var" />
        <parameter name="Bold" type="OleVariant" paramflags="var" />
        <parameter name="Italic" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="AutoMarkEntries" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ConcordanceFileName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
  </interface>
  <interface name="Index" GUID="{0002097D-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_HeadingSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_HeadingSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_RightAlignPageNumbers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_RightAlignPageNumbers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_NumberOfColumns" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_NumberOfColumns" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_TabLeader" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_TabLeader" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_AccentedLetters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AccentedLetters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SortBy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_SortBy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Filter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Filter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Update" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="HeadingSeparator" visibility="public" read="Get_HeadingSeparator" write="Set_HeadingSeparator" type="TOleEnum" />
    <property name="RightAlignPageNumbers" visibility="public" read="Get_RightAlignPageNumbers" write="Set_RightAlignPageNumbers" type="WordBool" />
    <property name="type_" visibility="public" read="Get_type_" write="Set_type_" type="TOleEnum" />
    <property name="NumberOfColumns" visibility="public" read="Get_NumberOfColumns" write="Set_NumberOfColumns" type="Integer" />
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="TabLeader" visibility="public" read="Get_TabLeader" write="Set_TabLeader" type="TOleEnum" />
    <property name="AccentedLetters" visibility="public" read="Get_AccentedLetters" write="Set_AccentedLetters" type="WordBool" />
    <property name="SortBy" visibility="public" read="Get_SortBy" write="Set_SortBy" type="TOleEnum" />
    <property name="Filter" visibility="public" read="Get_Filter" write="Set_Filter" type="TOleEnum" />
  </interface>
  <interface name="IndexDisp" GUID="{0002097D-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="HeadingSeparator" visibility="automated" type="TOleEnum" />
    <property name="RightAlignPageNumbers" visibility="automated" type="WordBool" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="NumberOfColumns" visibility="automated" type="Integer" />
    <property name="Range" visibility="automated" type="Range" />
    <property name="TabLeader" visibility="automated" type="TOleEnum" />
    <property name="AccentedLetters" visibility="automated" type="WordBool" />
    <property name="SortBy" visibility="automated" type="TOleEnum" />
    <property name="Filter" visibility="automated" type="TOleEnum" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Update" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="AddIn" GUID="{0002097E-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Path" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Installed" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Installed" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Compiled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Autoload" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="Path" visibility="public" read="Get_Path" type="WideString" default="0" />
    <property name="Installed" visibility="public" read="Get_Installed" write="Set_Installed" type="WordBool" />
    <property name="Compiled" visibility="public" read="Get_Compiled" type="WordBool" />
    <property name="Autoload" visibility="public" read="Get_Autoload" type="WordBool" />
  </interface>
  <interface name="AddInDisp" GUID="{0002097E-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="Path" visibility="automated" type="WideString" />
    <property name="Installed" visibility="automated" type="WordBool" />
    <property name="Compiled" visibility="automated" type="WordBool" />
    <property name="Autoload" visibility="automated" type="WordBool" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="AddIns" GUID="{0002097F-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="AddIn" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="Install" type="OleVariant" paramflags="var" />
        <retval type="AddIn" />
      </parameters>
    </function>
    <procedure name="Unload" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RemoveFromList" type="WordBool" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="AddInsDisp" GUID="{0002097F-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="AddIn" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="Install" type="OleVariant" paramflags="var" />
        <retval type="AddIn" />
      </parameters>
    </function>
    <procedure name="Unload" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="RemoveFromList" type="WordBool" />
      </parameters>
    </procedure>
  </interface>
  <interface name="Revisions" GUID="{00020980-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Revision" />
      </parameters>
    </function>
    <procedure name="AcceptAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="RejectAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="RevisionsDisp" GUID="{00020980-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Revision" />
      </parameters>
    </function>
    <procedure name="AcceptAll" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="RejectAll" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Revision" GUID="{00020981-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Author" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Date" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TDateTime" />
      </parameters>
    </function>
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Accept" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reject" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Author" visibility="public" read="Get_Author" type="WideString" default="0" />
    <property name="Date" visibility="public" read="Get_Date" type="TDateTime" default="0" />
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
  </interface>
  <interface name="RevisionDisp" GUID="{00020981-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Author" visibility="automated" type="WideString" />
    <property name="Date" visibility="automated" type="TDateTime" />
    <property name="Range" visibility="automated" type="Range" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Index" visibility="automated" type="Integer" />
    <procedure name="Accept" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reject" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Task" GUID="{00020982-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_WindowState" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_WindowState" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Activate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Wait" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Close" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Move" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Left" type="Integer" />
        <parameter name="Top" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Resize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Width" type="Integer" />
        <parameter name="Height" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="SendWindowMessage" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Message" type="Integer" />
        <parameter name="wParam" type="Integer" />
        <parameter name="lParam" type="Integer" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Left" visibility="public" read="Get_Left" write="Set_Left" type="Integer" />
    <property name="Top" visibility="public" read="Get_Top" write="Set_Top" type="Integer" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Integer" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Integer" />
    <property name="WindowState" visibility="public" read="Get_WindowState" write="Set_WindowState" type="TOleEnum" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="WordBool" />
  </interface>
  <interface name="TaskDisp" GUID="{00020982-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Left" visibility="automated" type="Integer" />
    <property name="Top" visibility="automated" type="Integer" />
    <property name="Width" visibility="automated" type="Integer" />
    <property name="Height" visibility="automated" type="Integer" />
    <property name="WindowState" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="WordBool" />
    <procedure name="Activate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Wait" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Close" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Move" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Left" type="Integer" />
        <parameter name="Top" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Resize" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Width" type="Integer" />
        <parameter name="Height" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="SendWindowMessage" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Message" type="Integer" />
        <parameter name="wParam" type="Integer" />
        <parameter name="lParam" type="Integer" />
      </parameters>
    </procedure>
  </interface>
  <interface name="Tasks" GUID="{00020983-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Task" />
      </parameters>
    </function>
    <function name="Exists" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="ExitWindows" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="TasksDisp" GUID="{00020983-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Task" />
      </parameters>
    </function>
    <function name="Exists" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="ExitWindows" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="HeadersFooters" GUID="{00020984-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="TOleEnum" />
        <retval type="HeaderFooter" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="HeadersFootersDisp" GUID="{00020984-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="TOleEnum" />
        <retval type="HeaderFooter" />
      </parameters>
    </function>
  </interface>
  <interface name="HeaderFooter" GUID="{00020985-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_IsHeader" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Exists" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Exists" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PageNumbers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="PageNumbers" />
      </parameters>
    </function>
    <function name="Get_LinkToPrevious" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_LinkToPrevious" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Shapes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shapes" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="Index" visibility="public" read="Get_Index" type="TOleEnum" />
    <property name="IsHeader" visibility="public" read="Get_IsHeader" type="WordBool" />
    <property name="Exists" visibility="public" read="Get_Exists" write="Set_Exists" type="WordBool" />
    <property name="PageNumbers" visibility="public" read="Get_PageNumbers" type="PageNumbers" />
    <property name="LinkToPrevious" visibility="public" read="Get_LinkToPrevious" write="Set_LinkToPrevious" type="WordBool" />
    <property name="Shapes" visibility="public" read="Get_Shapes" type="Shapes" />
  </interface>
  <interface name="HeaderFooterDisp" GUID="{00020985-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Range" visibility="automated" type="Range" />
    <property name="Index" visibility="automated" type="TOleEnum" />
    <property name="IsHeader" visibility="automated" type="WordBool" />
    <property name="Exists" visibility="automated" type="WordBool" />
    <property name="PageNumbers" visibility="automated" type="PageNumbers" />
    <property name="LinkToPrevious" visibility="automated" type="WordBool" />
    <property name="Shapes" visibility="automated" type="Shapes" />
  </interface>
  <interface name="PageNumbers" GUID="{00020986-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_NumberStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_NumberStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_IncludeChapterNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_IncludeChapterNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_HeadingLevelForChapter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_HeadingLevelForChapter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_ChapterPageSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_ChapterPageSeparator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_RestartNumberingAtSection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_RestartNumberingAtSection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_StartingNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_StartingNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_ShowFirstPageNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowFirstPageNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="PageNumber" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PageNumberAlignment" type="OleVariant" paramflags="var" />
        <parameter name="FirstPage" type="OleVariant" paramflags="var" />
        <retval type="PageNumber" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="NumberStyle" visibility="public" read="Get_NumberStyle" write="Set_NumberStyle" type="TOleEnum" />
    <property name="IncludeChapterNumber" visibility="public" read="Get_IncludeChapterNumber" write="Set_IncludeChapterNumber" type="WordBool" />
    <property name="HeadingLevelForChapter" visibility="public" read="Get_HeadingLevelForChapter" write="Set_HeadingLevelForChapter" type="Integer" />
    <property name="ChapterPageSeparator" visibility="public" read="Get_ChapterPageSeparator" write="Set_ChapterPageSeparator" type="TOleEnum" />
    <property name="RestartNumberingAtSection" visibility="public" read="Get_RestartNumberingAtSection" write="Set_RestartNumberingAtSection" type="WordBool" />
    <property name="StartingNumber" visibility="public" read="Get_StartingNumber" write="Set_StartingNumber" type="Integer" />
    <property name="ShowFirstPageNumber" visibility="public" read="Get_ShowFirstPageNumber" write="Set_ShowFirstPageNumber" type="WordBool" />
  </interface>
  <interface name="PageNumbersDisp" GUID="{00020986-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="NumberStyle" visibility="automated" type="TOleEnum" />
    <property name="IncludeChapterNumber" visibility="automated" type="WordBool" />
    <property name="HeadingLevelForChapter" visibility="automated" type="Integer" />
    <property name="ChapterPageSeparator" visibility="automated" type="TOleEnum" />
    <property name="RestartNumberingAtSection" visibility="automated" type="WordBool" />
    <property name="StartingNumber" visibility="automated" type="Integer" />
    <property name="ShowFirstPageNumber" visibility="automated" type="WordBool" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="PageNumber" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="PageNumberAlignment" type="OleVariant" paramflags="var" />
        <parameter name="FirstPage" type="OleVariant" paramflags="var" />
        <retval type="PageNumber" />
      </parameters>
    </function>
  </interface>
  <interface name="PageNumber" GUID="{00020987-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Copy" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Cut" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="Alignment" visibility="public" read="Get_Alignment" write="Set_Alignment" type="TOleEnum" />
  </interface>
  <interface name="PageNumberDisp" GUID="{00020987-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="Alignment" visibility="automated" type="TOleEnum" />
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Copy" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Cut" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Subdocuments" GUID="{00020988-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Expanded" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Expanded" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Subdocument" />
      </parameters>
    </function>
    <function name="AddFromFile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <parameter name="ConfirmConversions" type="OleVariant" paramflags="var" />
        <parameter name="ReadOnly" type="OleVariant" paramflags="var" />
        <parameter name="PasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="PasswordTemplate" type="OleVariant" paramflags="var" />
        <parameter name="Revert" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordTemplate" type="OleVariant" paramflags="var" />
        <retval type="Subdocument" />
      </parameters>
    </function>
    <function name="AddFromRange" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="Subdocument" />
      </parameters>
    </function>
    <procedure name="Merge" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FirstSubdocument" type="OleVariant" paramflags="var" />
        <parameter name="LastSubdocument" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Expanded" visibility="public" read="Get_Expanded" write="Set_Expanded" type="WordBool" />
  </interface>
  <interface name="SubdocumentsDisp" GUID="{00020988-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Expanded" visibility="automated" type="WordBool" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Subdocument" />
      </parameters>
    </function>
    <function name="AddFromFile" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <parameter name="ConfirmConversions" type="OleVariant" paramflags="var" />
        <parameter name="ReadOnly" type="OleVariant" paramflags="var" />
        <parameter name="PasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="PasswordTemplate" type="OleVariant" paramflags="var" />
        <parameter name="Revert" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordDocument" type="OleVariant" paramflags="var" />
        <parameter name="WritePasswordTemplate" type="OleVariant" paramflags="var" />
        <retval type="Subdocument" />
      </parameters>
    </function>
    <function name="AddFromRange" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="Subdocument" />
      </parameters>
    </function>
    <procedure name="Merge" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FirstSubdocument" type="OleVariant" paramflags="var" />
        <parameter name="LastSubdocument" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Subdocument" GUID="{00020989-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Locked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Locked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Path" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_HasFile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Level" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Split" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Open" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Document" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Locked" visibility="public" read="Get_Locked" write="Set_Locked" type="WordBool" />
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Path" visibility="public" read="Get_Path" type="WideString" default="0" />
    <property name="HasFile" visibility="public" read="Get_HasFile" type="WordBool" />
    <property name="Level" visibility="public" read="Get_Level" type="Integer" />
  </interface>
  <interface name="SubdocumentDisp" GUID="{00020989-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Locked" visibility="automated" type="WordBool" />
    <property name="Range" visibility="automated" type="Range" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Path" visibility="automated" type="WideString" />
    <property name="HasFile" visibility="automated" type="WordBool" />
    <property name="Level" visibility="automated" type="Integer" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Split" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Open" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="_Document" />
      </parameters>
    </function>
  </interface>
  <interface name="HeadingStyles" GUID="{0002098A-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="HeadingStyle" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Style" type="OleVariant" paramflags="var" />
        <parameter name="Level" type="SmallInt" />
        <retval type="HeadingStyle" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="HeadingStylesDisp" GUID="{0002098A-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="HeadingStyle" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Style" type="OleVariant" paramflags="var" />
        <parameter name="Level" type="SmallInt" />
        <retval type="HeadingStyle" />
      </parameters>
    </function>
  </interface>
  <interface name="HeadingStyle" GUID="{0002098B-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="Set_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="Get_Level" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="SmallInt" />
      </parameters>
    </function>
    <procedure name="Set_Level" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="SmallInt" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Level" visibility="public" read="Get_Level" write="Set_Level" type="SmallInt" />
  </interface>
  <interface name="HeadingStyleDisp" GUID="{0002098B-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Style" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <property name="Level" visibility="automated" type="SmallInt" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="StoryRanges" GUID="{0002098C-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="TOleEnum" />
        <retval type="Range" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="StoryRangesDisp" GUID="{0002098C-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="TOleEnum" />
        <retval type="Range" />
      </parameters>
    </function>
  </interface>
  <interface name="ListLevel" GUID="{0002098D-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_NumberFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_NumberFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_TrailingCharacter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_TrailingCharacter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_NumberStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_NumberStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_NumberPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_NumberPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_TextPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_TextPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_TabPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_TabPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ResetOnHigher" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ResetOnHigher" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_StartAt" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_StartAt" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_LinkedStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_LinkedStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Font" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Font" />
      </parameters>
    </function>
    <procedure name="Set_Font" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="_Font" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="NumberFormat" visibility="public" read="Get_NumberFormat" write="Set_NumberFormat" type="WideString" default="0" />
    <property name="TrailingCharacter" visibility="public" read="Get_TrailingCharacter" write="Set_TrailingCharacter" type="TOleEnum" />
    <property name="NumberStyle" visibility="public" read="Get_NumberStyle" write="Set_NumberStyle" type="TOleEnum" />
    <property name="NumberPosition" visibility="public" read="Get_NumberPosition" write="Set_NumberPosition" type="Single" default="0" />
    <property name="Alignment" visibility="public" read="Get_Alignment" write="Set_Alignment" type="TOleEnum" />
    <property name="TextPosition" visibility="public" read="Get_TextPosition" write="Set_TextPosition" type="Single" default="0" />
    <property name="TabPosition" visibility="public" read="Get_TabPosition" write="Set_TabPosition" type="Single" default="0" />
    <property name="ResetOnHigher" visibility="public" read="Get_ResetOnHigher" write="Set_ResetOnHigher" type="WordBool" />
    <property name="StartAt" visibility="public" read="Get_StartAt" write="Set_StartAt" type="Integer" />
    <property name="LinkedStyle" visibility="public" read="Get_LinkedStyle" write="Set_LinkedStyle" type="WideString" default="0" />
    <property name="Font" visibility="public" read="Get_Font" write="Set_Font" type="_Font" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="ListLevelDisp" GUID="{0002098D-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Index" visibility="automated" type="Integer" />
    <property name="NumberFormat" visibility="automated" type="WideString" />
    <property name="TrailingCharacter" visibility="automated" type="TOleEnum" />
    <property name="NumberStyle" visibility="automated" type="TOleEnum" />
    <property name="NumberPosition" visibility="automated" type="Single" />
    <property name="Alignment" visibility="automated" type="TOleEnum" />
    <property name="TextPosition" visibility="automated" type="Single" />
    <property name="TabPosition" visibility="automated" type="Single" />
    <property name="ResetOnHigher" visibility="automated" type="WordBool" />
    <property name="StartAt" visibility="automated" type="Integer" />
    <property name="LinkedStyle" visibility="automated" type="WideString" />
    <property name="Font" visibility="automated" type="_Font" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
  </interface>
  <interface name="ListLevels" GUID="{0002098E-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="ListLevel" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="ListLevelsDisp" GUID="{0002098E-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="ListLevel" />
      </parameters>
    </function>
  </interface>
  <interface name="ListTemplate" GUID="{0002098F-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_OutlineNumbered" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_OutlineNumbered" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ListLevels" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ListLevels" />
      </parameters>
    </function>
    <function name="Convert" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Level" type="OleVariant" paramflags="var" />
        <retval type="ListTemplate" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="OutlineNumbered" visibility="public" read="Get_OutlineNumbered" write="Set_OutlineNumbered" type="WordBool" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
    <property name="ListLevels" visibility="public" read="Get_ListLevels" type="ListLevels" />
  </interface>
  <interface name="ListTemplateDisp" GUID="{0002098F-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="OutlineNumbered" visibility="automated" type="WordBool" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="ListLevels" visibility="automated" type="ListLevels" />
    <function name="Convert" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Level" type="OleVariant" paramflags="var" />
        <retval type="ListTemplate" />
      </parameters>
    </function>
  </interface>
  <interface name="ListTemplates" GUID="{00020990-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="ListTemplate" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="OutlineNumbered" type="OleVariant" paramflags="var" />
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <retval type="ListTemplate" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="ListTemplatesDisp" GUID="{00020990-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="ListTemplate" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="OutlineNumbered" type="OleVariant" paramflags="var" />
        <parameter name="Name" type="OleVariant" paramflags="var" />
        <retval type="ListTemplate" />
      </parameters>
    </function>
  </interface>
  <interface name="ListParagraphs" GUID="{00020991-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Paragraph" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="ListParagraphsDisp" GUID="{00020991-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Paragraph" />
      </parameters>
    </function>
  </interface>
  <interface name="List" GUID="{00020992-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_ListParagraphs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ListParagraphs" />
      </parameters>
    </function>
    <function name="Get_SingleListTemplate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="ConvertNumbersToText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="RemoveNumbers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="CountNumberedItems" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
        <parameter name="Level" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="ApplyListTemplate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ListTemplate" type="ListTemplate" paramflags="const" />
        <parameter name="ContinuePreviousList" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="CanContinuePreviousList" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ListTemplate" type="ListTemplate" paramflags="const" />
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="ListParagraphs" visibility="public" read="Get_ListParagraphs" type="ListParagraphs" />
    <property name="SingleListTemplate" visibility="public" read="Get_SingleListTemplate" type="WordBool" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="ListDisp" GUID="{00020992-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Range" visibility="automated" type="Range" />
    <property name="ListParagraphs" visibility="automated" type="ListParagraphs" />
    <property name="SingleListTemplate" visibility="automated" type="WordBool" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="ConvertNumbersToText" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="RemoveNumbers" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="CountNumberedItems" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="NumberType" type="OleVariant" paramflags="var" />
        <parameter name="Level" type="OleVariant" paramflags="var" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="ApplyListTemplate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ListTemplate" type="ListTemplate" paramflags="const" />
        <parameter name="ContinuePreviousList" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="CanContinuePreviousList" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ListTemplate" type="ListTemplate" paramflags="const" />
        <retval type="TOleEnum" />
      </parameters>
    </function>
  </interface>
  <interface name="Lists" GUID="{00020993-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="List" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="ListsDisp" GUID="{00020993-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="List" />
      </parameters>
    </function>
  </interface>
  <interface name="ListGallery" GUID="{00020994-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_ListTemplates" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ListTemplates" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Modified" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Reset" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <property name="ListTemplates" visibility="public" read="Get_ListTemplates" type="ListTemplates" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Modified[Index]" visibility="public" read="Get_Modified" type="WordBool" />
  </interface>
  <interface name="ListGalleryDisp" GUID="{00020994-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="ListTemplates" visibility="automated" type="ListTemplates" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Modified[Index]" visibility="automated" type="WordBool" />
    <procedure name="Reset" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
  </interface>
  <interface name="ListGalleries" GUID="{00020995-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="TOleEnum" />
        <retval type="ListGallery" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="ListGalleriesDisp" GUID="{00020995-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="TOleEnum" />
        <retval type="ListGallery" />
      </parameters>
    </function>
  </interface>
  <interface name="KeyBindings" GUID="{00020996-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Context" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="KeyBinding" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="KeyCategory" type="TOleEnum" />
        <parameter name="Command" type="WideString" paramflags="const" />
        <parameter name="KeyCode" type="Integer" />
        <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
        <parameter name="CommandParameter" type="OleVariant" paramflags="var" />
        <retval type="KeyBinding" />
      </parameters>
    </function>
    <procedure name="ClearAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Key" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="KeyCode" type="Integer" />
        <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
        <retval type="KeyBinding" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Context" visibility="public" read="Get_Context" type="IDispatch" />
  </interface>
  <interface name="KeyBindingsDisp" GUID="{00020996-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Context" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="KeyBinding" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="KeyCategory" type="TOleEnum" />
        <parameter name="Command" type="WideString" paramflags="const" />
        <parameter name="KeyCode" type="Integer" />
        <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
        <parameter name="CommandParameter" type="OleVariant" paramflags="var" />
        <retval type="KeyBinding" />
      </parameters>
    </function>
    <procedure name="ClearAll" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Key" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="KeyCode" type="Integer" />
        <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
        <retval type="KeyBinding" />
      </parameters>
    </function>
  </interface>
  <interface name="KeysBoundTo" GUID="{00020997-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_KeyCategory" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Command" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_CommandParameter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Context" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="KeyBinding" />
      </parameters>
    </function>
    <function name="Key" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="KeyCode" type="Integer" />
        <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
        <retval type="KeyBinding" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="KeyCategory" visibility="public" read="Get_KeyCategory" type="TOleEnum" />
    <property name="Command" visibility="public" read="Get_Command" type="WideString" default="0" />
    <property name="CommandParameter" visibility="public" read="Get_CommandParameter" type="WideString" default="0" />
    <property name="Context" visibility="public" read="Get_Context" type="IDispatch" />
  </interface>
  <interface name="KeysBoundToDisp" GUID="{00020997-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="KeyCategory" visibility="automated" type="TOleEnum" />
    <property name="Command" visibility="automated" type="WideString" />
    <property name="CommandParameter" visibility="automated" type="WideString" />
    <property name="Context" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="KeyBinding" />
      </parameters>
    </function>
    <function name="Key" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="KeyCode" type="Integer" />
        <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
        <retval type="KeyBinding" />
      </parameters>
    </function>
  </interface>
  <interface name="KeyBinding" GUID="{00020998-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Command" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_KeyString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Protected_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_KeyCategory" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_KeyCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_KeyCode2" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_CommandParameter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Context" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Clear" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Disable" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Execute" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Rebind" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="KeyCategory" type="TOleEnum" />
        <parameter name="Command" type="WideString" paramflags="const" />
        <parameter name="CommandParameter" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Command" visibility="public" read="Get_Command" type="WideString" default="0" />
    <property name="KeyString" visibility="public" read="Get_KeyString" type="WideString" default="0" />
    <property name="Protected_" visibility="public" read="Get_Protected_" type="WordBool" />
    <property name="KeyCategory" visibility="public" read="Get_KeyCategory" type="TOleEnum" />
    <property name="KeyCode" visibility="public" read="Get_KeyCode" type="Integer" />
    <property name="KeyCode2" visibility="public" read="Get_KeyCode2" type="Integer" />
    <property name="CommandParameter" visibility="public" read="Get_CommandParameter" type="WideString" default="0" />
    <property name="Context" visibility="public" read="Get_Context" type="IDispatch" />
  </interface>
  <interface name="KeyBindingDisp" GUID="{00020998-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Command" visibility="automated" type="WideString" />
    <property name="KeyString" visibility="automated" type="WideString" />
    <property name="Protected_" visibility="automated" type="WordBool" />
    <property name="KeyCategory" visibility="automated" type="TOleEnum" />
    <property name="KeyCode" visibility="automated" type="Integer" />
    <property name="KeyCode2" visibility="automated" type="Integer" />
    <property name="CommandParameter" visibility="automated" type="WideString" />
    <property name="Context" visibility="automated" type="IDispatch" />
    <procedure name="Clear" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Disable" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Execute" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Rebind" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="KeyCategory" type="TOleEnum" />
        <parameter name="Command" type="WideString" paramflags="const" />
        <parameter name="CommandParameter" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
  </interface>
  <interface name="FileConverter" GUID="{00020999-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_FormatName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_ClassName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_SaveFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_OpenFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_CanSave" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_CanOpen" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Path" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Extensions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="FormatName" visibility="public" read="Get_FormatName" type="WideString" default="0" />
    <property name="ClassName" visibility="public" read="Get_ClassName" type="WideString" default="0" />
    <property name="SaveFormat" visibility="public" read="Get_SaveFormat" type="Integer" />
    <property name="OpenFormat" visibility="public" read="Get_OpenFormat" type="Integer" />
    <property name="CanSave" visibility="public" read="Get_CanSave" type="WordBool" />
    <property name="CanOpen" visibility="public" read="Get_CanOpen" type="WordBool" />
    <property name="Path" visibility="public" read="Get_Path" type="WideString" default="0" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Extensions" visibility="public" read="Get_Extensions" type="WideString" default="0" />
  </interface>
  <interface name="FileConverterDisp" GUID="{00020999-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="FormatName" visibility="automated" type="WideString" />
    <property name="ClassName" visibility="automated" type="WideString" />
    <property name="SaveFormat" visibility="automated" type="Integer" />
    <property name="OpenFormat" visibility="automated" type="Integer" />
    <property name="CanSave" visibility="automated" type="WordBool" />
    <property name="CanOpen" visibility="automated" type="WordBool" />
    <property name="Path" visibility="automated" type="WideString" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Extensions" visibility="automated" type="WideString" />
  </interface>
  <interface name="FileConverters" GUID="{0002099A-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_ConvertMacWordChevrons" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_ConvertMacWordChevrons" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="FileConverter" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="ConvertMacWordChevrons" visibility="public" read="Get_ConvertMacWordChevrons" write="Set_ConvertMacWordChevrons" type="TOleEnum" />
  </interface>
  <interface name="FileConvertersDisp" GUID="{0002099A-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="ConvertMacWordChevrons" visibility="automated" type="TOleEnum" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="FileConverter" />
      </parameters>
    </function>
  </interface>
  <interface name="SynonymInfo" GUID="{0002099B-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Word" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Found" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_MeaningCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_MeaningList" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_PartOfSpeechList" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_SynonymList" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Meaning" type="OleVariant" paramflags="var" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_AntonymList" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_RelatedExpressionList" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_RelatedWordList" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Word" visibility="public" read="Get_Word" type="WideString" default="0" />
    <property name="Found" visibility="public" read="Get_Found" type="WordBool" />
    <property name="MeaningCount" visibility="public" read="Get_MeaningCount" type="Integer" />
    <property name="MeaningList" visibility="public" read="Get_MeaningList" type="OleVariant" default="0" />
    <property name="PartOfSpeechList" visibility="public" read="Get_PartOfSpeechList" type="OleVariant" default="0" />
    <property name="SynonymList[Meaning]" visibility="public" read="Get_SynonymList" type="OleVariant" />
    <property name="AntonymList" visibility="public" read="Get_AntonymList" type="OleVariant" default="0" />
    <property name="RelatedExpressionList" visibility="public" read="Get_RelatedExpressionList" type="OleVariant" default="0" />
    <property name="RelatedWordList" visibility="public" read="Get_RelatedWordList" type="OleVariant" default="0" />
  </interface>
  <interface name="SynonymInfoDisp" GUID="{0002099B-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Word" visibility="automated" type="WideString" />
    <property name="Found" visibility="automated" type="WordBool" />
    <property name="MeaningCount" visibility="automated" type="Integer" />
    <property name="MeaningList" visibility="automated" type="OleVariant" />
    <property name="PartOfSpeechList" visibility="automated" type="OleVariant" />
    <property name="SynonymList[Meaning]" visibility="automated" type="OleVariant" />
    <property name="AntonymList" visibility="automated" type="OleVariant" />
    <property name="RelatedExpressionList" visibility="automated" type="OleVariant" />
    <property name="RelatedWordList" visibility="automated" type="OleVariant" />
  </interface>
  <interface name="Hyperlinks" GUID="{0002099C-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Hyperlink" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Anchor" type="IDispatch" paramflags="const" />
        <parameter name="Address" type="OleVariant" paramflags="var" />
        <parameter name="SubAddress" type="OleVariant" paramflags="var" />
        <retval type="Hyperlink" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="HyperlinksDisp" GUID="{0002099C-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Hyperlink" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Anchor" type="IDispatch" paramflags="const" />
        <parameter name="Address" type="OleVariant" paramflags="var" />
        <parameter name="SubAddress" type="OleVariant" paramflags="var" />
        <retval type="Hyperlink" />
      </parameters>
    </function>
  </interface>
  <interface name="Hyperlink" GUID="{0002099D-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Address" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Shape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get_SubAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_ExtraInfoRequired" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Follow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NewWindow" type="OleVariant" paramflags="var" />
        <parameter name="AddHistory" type="OleVariant" paramflags="var" />
        <parameter name="ExtraInfo" type="OleVariant" paramflags="var" />
        <parameter name="Method" type="OleVariant" paramflags="var" />
        <parameter name="HeaderInfo" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="AddToFavorites" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Address" visibility="public" read="Get_Address" type="WideString" default="0" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="Shape" visibility="public" read="Get_Shape" type="Shape" />
    <property name="SubAddress" visibility="public" read="Get_SubAddress" type="WideString" default="0" />
    <property name="ExtraInfoRequired" visibility="public" read="Get_ExtraInfoRequired" type="WordBool" />
  </interface>
  <interface name="HyperlinkDisp" GUID="{0002099D-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Address" visibility="automated" type="WideString" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Range" visibility="automated" type="Range" />
    <property name="Shape" visibility="automated" type="Shape" />
    <property name="SubAddress" visibility="automated" type="WideString" />
    <property name="ExtraInfoRequired" visibility="automated" type="WordBool" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Follow" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="NewWindow" type="OleVariant" paramflags="var" />
        <parameter name="AddHistory" type="OleVariant" paramflags="var" />
        <parameter name="ExtraInfo" type="OleVariant" paramflags="var" />
        <parameter name="Method" type="OleVariant" paramflags="var" />
        <parameter name="HeaderInfo" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="AddToFavorites" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Shapes" GUID="{0002099F-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddCallout" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddConnector" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="BeginX" type="Single" />
        <parameter name="BeginY" type="Single" />
        <parameter name="EndX" type="Single" />
        <parameter name="EndY" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddCurve" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SafeArrayOfPoints" type="OleVariant" paramflags="var" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddLabel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Orientation" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddLine" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BeginX" type="Single" />
        <parameter name="BeginY" type="Single" />
        <parameter name="EndX" type="Single" />
        <parameter name="EndY" type="Single" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddPicture" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="LinkToFile" type="OleVariant" paramflags="var" />
        <parameter name="SaveWithDocument" type="OleVariant" paramflags="var" />
        <parameter name="Left" type="OleVariant" paramflags="var" />
        <parameter name="Top" type="OleVariant" paramflags="var" />
        <parameter name="Width" type="OleVariant" paramflags="var" />
        <parameter name="Height" type="OleVariant" paramflags="var" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddPolyline" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SafeArrayOfPoints" type="OleVariant" paramflags="var" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="Integer" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddTextEffect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetTextEffect" type="TOleEnum" />
        <parameter name="Text" type="WideString" paramflags="const" />
        <parameter name="FontName" type="WideString" paramflags="const" />
        <parameter name="FontSize" type="Single" />
        <parameter name="FontBold" type="TOleEnum" />
        <parameter name="FontItalic" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddTextbox" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Orientation" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="BuildFreeform" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <retval type="FreeformBuilder" />
      </parameters>
    </function>
    <function name="Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="SelectAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="AddOLEObject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ClassType" type="OleVariant" paramflags="var" />
        <parameter name="FileName" type="OleVariant" paramflags="var" />
        <parameter name="LinkToFile" type="OleVariant" paramflags="var" />
        <parameter name="DisplayAsIcon" type="OleVariant" paramflags="var" />
        <parameter name="IconFileName" type="OleVariant" paramflags="var" />
        <parameter name="IconIndex" type="OleVariant" paramflags="var" />
        <parameter name="IconLabel" type="OleVariant" paramflags="var" />
        <parameter name="Left" type="OleVariant" paramflags="var" />
        <parameter name="Top" type="OleVariant" paramflags="var" />
        <parameter name="Width" type="OleVariant" paramflags="var" />
        <parameter name="Height" type="OleVariant" paramflags="var" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddOLEControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ClassType" type="OleVariant" paramflags="var" />
        <parameter name="Left" type="OleVariant" paramflags="var" />
        <parameter name="Top" type="OleVariant" paramflags="var" />
        <parameter name="Width" type="OleVariant" paramflags="var" />
        <parameter name="Height" type="OleVariant" paramflags="var" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="ShapesDisp" GUID="{0002099F-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddCallout" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddConnector" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="BeginX" type="Single" />
        <parameter name="BeginY" type="Single" />
        <parameter name="EndX" type="Single" />
        <parameter name="EndY" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddCurve" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="SafeArrayOfPoints" type="OleVariant" paramflags="var" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddLabel" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Orientation" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddLine" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="BeginX" type="Single" />
        <parameter name="BeginY" type="Single" />
        <parameter name="EndX" type="Single" />
        <parameter name="EndY" type="Single" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddPicture" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="LinkToFile" type="OleVariant" paramflags="var" />
        <parameter name="SaveWithDocument" type="OleVariant" paramflags="var" />
        <parameter name="Left" type="OleVariant" paramflags="var" />
        <parameter name="Top" type="OleVariant" paramflags="var" />
        <parameter name="Width" type="OleVariant" paramflags="var" />
        <parameter name="Height" type="OleVariant" paramflags="var" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddPolyline" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="SafeArrayOfPoints" type="OleVariant" paramflags="var" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddShape" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="Integer" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddTextEffect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="PresetTextEffect" type="TOleEnum" />
        <parameter name="Text" type="WideString" paramflags="const" />
        <parameter name="FontName" type="WideString" paramflags="const" />
        <parameter name="FontSize" type="Single" />
        <parameter name="FontBold" type="TOleEnum" />
        <parameter name="FontItalic" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddTextbox" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Orientation" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="BuildFreeform" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <retval type="FreeformBuilder" />
      </parameters>
    </function>
    <function name="Range" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="SelectAll" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="AddOLEObject" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ClassType" type="OleVariant" paramflags="var" />
        <parameter name="FileName" type="OleVariant" paramflags="var" />
        <parameter name="LinkToFile" type="OleVariant" paramflags="var" />
        <parameter name="DisplayAsIcon" type="OleVariant" paramflags="var" />
        <parameter name="IconFileName" type="OleVariant" paramflags="var" />
        <parameter name="IconIndex" type="OleVariant" paramflags="var" />
        <parameter name="IconLabel" type="OleVariant" paramflags="var" />
        <parameter name="Left" type="OleVariant" paramflags="var" />
        <parameter name="Top" type="OleVariant" paramflags="var" />
        <parameter name="Width" type="OleVariant" paramflags="var" />
        <parameter name="Height" type="OleVariant" paramflags="var" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddOLEControl" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ClassType" type="OleVariant" paramflags="var" />
        <parameter name="Left" type="OleVariant" paramflags="var" />
        <parameter name="Top" type="OleVariant" paramflags="var" />
        <parameter name="Width" type="OleVariant" paramflags="var" />
        <parameter name="Height" type="OleVariant" paramflags="var" />
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
  </interface>
  <interface name="ShapeRange" GUID="{000209B5-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Adjustments" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Adjustments" />
      </parameters>
    </function>
    <function name="Get_AutoShapeType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_AutoShapeType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Callout" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CalloutFormat" />
      </parameters>
    </function>
    <function name="Get_ConnectionSiteCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Connector" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_ConnectorFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ConnectorFormat" />
      </parameters>
    </function>
    <function name="Get_Fill" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FillFormat" />
      </parameters>
    </function>
    <function name="Get_GroupItems" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="GroupShapes" />
      </parameters>
    </function>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_HorizontalFlip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Line" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="LineFormat" />
      </parameters>
    </function>
    <function name="Get_LockAspectRatio" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LockAspectRatio" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Nodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShapeNodes" />
      </parameters>
    </function>
    <function name="Get_Rotation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Rotation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_PictureFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="PictureFormat" />
      </parameters>
    </function>
    <function name="Get_Shadow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShadowFormat" />
      </parameters>
    </function>
    <function name="Get_TextEffect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TextEffectFormat" />
      </parameters>
    </function>
    <function name="Get_TextFrame" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TextFrame" />
      </parameters>
    </function>
    <function name="Get_ThreeD" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ThreeDFormat" />
      </parameters>
    </function>
    <function name="Get_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_VerticalFlip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Vertices" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ZOrderPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Hyperlink" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Hyperlink" />
      </parameters>
    </function>
    <function name="Get_RelativeHorizontalPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_RelativeHorizontalPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_RelativeVerticalPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_RelativeVerticalPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_LockAnchor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_LockAnchor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_WrapFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WrapFormat" />
      </parameters>
    </function>
    <function name="Get_Anchor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="Align" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Align" type="TOleEnum" />
        <parameter name="RelativeTo" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Apply" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Distribute" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Distribute" type="TOleEnum" />
        <parameter name="RelativeTo" type="Integer" />
      </parameters>
    </procedure>
    <function name="Duplicate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="Flip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FlipCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="IncrementLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementRotation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <function name="Group" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="PickUp" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Regroup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="RerouteConnections" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ScaleHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="Scale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="ScaleWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="Scale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Replace" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SetShapesDefaultProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Ungroup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="ZOrder" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ZOrderCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="ConvertToFrame" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Frame" />
      </parameters>
    </function>
    <function name="ConvertToInlineShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="InlineShape" />
      </parameters>
    </function>
    <procedure name="Activate" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Adjustments" visibility="public" read="Get_Adjustments" type="Adjustments" />
    <property name="AutoShapeType" visibility="public" read="Get_AutoShapeType" write="Set_AutoShapeType" type="TOleEnum" />
    <property name="Callout" visibility="public" read="Get_Callout" type="CalloutFormat" />
    <property name="ConnectionSiteCount" visibility="public" read="Get_ConnectionSiteCount" type="Integer" />
    <property name="Connector" visibility="public" read="Get_Connector" type="TOleEnum" />
    <property name="ConnectorFormat" visibility="public" read="Get_ConnectorFormat" type="ConnectorFormat" />
    <property name="Fill" visibility="public" read="Get_Fill" type="FillFormat" />
    <property name="GroupItems" visibility="public" read="Get_GroupItems" type="GroupShapes" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Single" default="0" />
    <property name="HorizontalFlip" visibility="public" read="Get_HorizontalFlip" type="TOleEnum" />
    <property name="Left" visibility="public" read="Get_Left" write="Set_Left" type="Single" default="0" />
    <property name="Line" visibility="public" read="Get_Line" type="LineFormat" />
    <property name="LockAspectRatio" visibility="public" read="Get_LockAspectRatio" write="Set_LockAspectRatio" type="TOleEnum" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
    <property name="Nodes" visibility="public" read="Get_Nodes" type="ShapeNodes" />
    <property name="Rotation" visibility="public" read="Get_Rotation" write="Set_Rotation" type="Single" default="0" />
    <property name="PictureFormat" visibility="public" read="Get_PictureFormat" type="PictureFormat" />
    <property name="Shadow" visibility="public" read="Get_Shadow" type="ShadowFormat" />
    <property name="TextEffect" visibility="public" read="Get_TextEffect" type="TextEffectFormat" />
    <property name="TextFrame" visibility="public" read="Get_TextFrame" type="TextFrame" />
    <property name="ThreeD" visibility="public" read="Get_ThreeD" type="ThreeDFormat" />
    <property name="Top" visibility="public" read="Get_Top" write="Set_Top" type="Single" default="0" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="VerticalFlip" visibility="public" read="Get_VerticalFlip" type="TOleEnum" />
    <property name="Vertices" visibility="public" read="Get_Vertices" type="OleVariant" default="0" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="TOleEnum" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Single" default="0" />
    <property name="ZOrderPosition" visibility="public" read="Get_ZOrderPosition" type="Integer" />
    <property name="Hyperlink" visibility="public" read="Get_Hyperlink" type="Hyperlink" />
    <property name="RelativeHorizontalPosition" visibility="public" read="Get_RelativeHorizontalPosition" write="Set_RelativeHorizontalPosition" type="TOleEnum" />
    <property name="RelativeVerticalPosition" visibility="public" read="Get_RelativeVerticalPosition" write="Set_RelativeVerticalPosition" type="TOleEnum" />
    <property name="LockAnchor" visibility="public" read="Get_LockAnchor" write="Set_LockAnchor" type="Integer" />
    <property name="WrapFormat" visibility="public" read="Get_WrapFormat" type="WrapFormat" />
    <property name="Anchor" visibility="public" read="Get_Anchor" type="Range" />
  </interface>
  <interface name="ShapeRangeDisp" GUID="{000209B5-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Adjustments" visibility="automated" type="Adjustments" />
    <property name="AutoShapeType" visibility="automated" type="TOleEnum" />
    <property name="Callout" visibility="automated" type="CalloutFormat" />
    <property name="ConnectionSiteCount" visibility="automated" type="Integer" />
    <property name="Connector" visibility="automated" type="TOleEnum" />
    <property name="ConnectorFormat" visibility="automated" type="ConnectorFormat" />
    <property name="Fill" visibility="automated" type="FillFormat" />
    <property name="GroupItems" visibility="automated" type="GroupShapes" />
    <property name="Height" visibility="automated" type="Single" />
    <property name="HorizontalFlip" visibility="automated" type="TOleEnum" />
    <property name="Left" visibility="automated" type="Single" />
    <property name="Line" visibility="automated" type="LineFormat" />
    <property name="LockAspectRatio" visibility="automated" type="TOleEnum" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Nodes" visibility="automated" type="ShapeNodes" />
    <property name="Rotation" visibility="automated" type="Single" />
    <property name="PictureFormat" visibility="automated" type="PictureFormat" />
    <property name="Shadow" visibility="automated" type="ShadowFormat" />
    <property name="TextEffect" visibility="automated" type="TextEffectFormat" />
    <property name="TextFrame" visibility="automated" type="TextFrame" />
    <property name="ThreeD" visibility="automated" type="ThreeDFormat" />
    <property name="Top" visibility="automated" type="Single" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="VerticalFlip" visibility="automated" type="TOleEnum" />
    <property name="Vertices" visibility="automated" type="OleVariant" />
    <property name="Visible" visibility="automated" type="TOleEnum" />
    <property name="Width" visibility="automated" type="Single" />
    <property name="ZOrderPosition" visibility="automated" type="Integer" />
    <property name="Hyperlink" visibility="automated" type="Hyperlink" />
    <property name="RelativeHorizontalPosition" visibility="automated" type="TOleEnum" />
    <property name="RelativeVerticalPosition" visibility="automated" type="TOleEnum" />
    <property name="LockAnchor" visibility="automated" type="Integer" />
    <property name="WrapFormat" visibility="automated" type="WrapFormat" />
    <property name="Anchor" visibility="automated" type="Range" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="Align" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Align" type="TOleEnum" />
        <parameter name="RelativeTo" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Apply" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Distribute" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Distribute" type="TOleEnum" />
        <parameter name="RelativeTo" type="Integer" />
      </parameters>
    </procedure>
    <function name="Duplicate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="Flip" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FlipCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="IncrementLeft" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementRotation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementTop" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <function name="Group" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="PickUp" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Regroup" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="RerouteConnections" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ScaleHeight" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="Scale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="ScaleWidth" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="Scale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Replace" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SetShapesDefaultProperties" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Ungroup" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="ZOrder" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ZOrderCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="ConvertToFrame" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Frame" />
      </parameters>
    </function>
    <function name="ConvertToInlineShape" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="InlineShape" />
      </parameters>
    </function>
    <procedure name="Activate" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="GroupShapes" GUID="{000209B6-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="GroupShapesDisp" GUID="{000209B6-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
  </interface>
  <interface name="Shape" GUID="{000209A0-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Adjustments" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Adjustments" />
      </parameters>
    </function>
    <function name="Get_AutoShapeType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_AutoShapeType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Callout" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CalloutFormat" />
      </parameters>
    </function>
    <function name="Get_ConnectionSiteCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Connector" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_ConnectorFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ConnectorFormat" />
      </parameters>
    </function>
    <function name="Get_Fill" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FillFormat" />
      </parameters>
    </function>
    <function name="Get_GroupItems" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="GroupShapes" />
      </parameters>
    </function>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_HorizontalFlip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Line" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="LineFormat" />
      </parameters>
    </function>
    <function name="Get_LockAspectRatio" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LockAspectRatio" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Nodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShapeNodes" />
      </parameters>
    </function>
    <function name="Get_Rotation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Rotation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_PictureFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="PictureFormat" />
      </parameters>
    </function>
    <function name="Get_Shadow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShadowFormat" />
      </parameters>
    </function>
    <function name="Get_TextEffect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TextEffectFormat" />
      </parameters>
    </function>
    <function name="Get_TextFrame" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TextFrame" />
      </parameters>
    </function>
    <function name="Get_ThreeD" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ThreeDFormat" />
      </parameters>
    </function>
    <function name="Get_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_VerticalFlip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Vertices" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ZOrderPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Hyperlink" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Hyperlink" />
      </parameters>
    </function>
    <function name="Get_RelativeHorizontalPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_RelativeHorizontalPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_RelativeVerticalPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_RelativeVerticalPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_LockAnchor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_LockAnchor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_WrapFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WrapFormat" />
      </parameters>
    </function>
    <function name="Get_OLEFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OLEFormat" />
      </parameters>
    </function>
    <function name="Get_Anchor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_LinkFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="LinkFormat" />
      </parameters>
    </function>
    <procedure name="Apply" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Duplicate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="Flip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FlipCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="IncrementLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementRotation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="PickUp" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="RerouteConnections" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ScaleHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="Scale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="ScaleWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="Scale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Replace" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SetShapesDefaultProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Ungroup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="ZOrder" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ZOrderCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="ConvertToInlineShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="InlineShape" />
      </parameters>
    </function>
    <function name="ConvertToFrame" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Frame" />
      </parameters>
    </function>
    <procedure name="Activate" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Adjustments" visibility="public" read="Get_Adjustments" type="Adjustments" />
    <property name="AutoShapeType" visibility="public" read="Get_AutoShapeType" write="Set_AutoShapeType" type="TOleEnum" />
    <property name="Callout" visibility="public" read="Get_Callout" type="CalloutFormat" />
    <property name="ConnectionSiteCount" visibility="public" read="Get_ConnectionSiteCount" type="Integer" />
    <property name="Connector" visibility="public" read="Get_Connector" type="TOleEnum" />
    <property name="ConnectorFormat" visibility="public" read="Get_ConnectorFormat" type="ConnectorFormat" />
    <property name="Fill" visibility="public" read="Get_Fill" type="FillFormat" />
    <property name="GroupItems" visibility="public" read="Get_GroupItems" type="GroupShapes" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Single" default="0" />
    <property name="HorizontalFlip" visibility="public" read="Get_HorizontalFlip" type="TOleEnum" />
    <property name="Left" visibility="public" read="Get_Left" write="Set_Left" type="Single" default="0" />
    <property name="Line" visibility="public" read="Get_Line" type="LineFormat" />
    <property name="LockAspectRatio" visibility="public" read="Get_LockAspectRatio" write="Set_LockAspectRatio" type="TOleEnum" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
    <property name="Nodes" visibility="public" read="Get_Nodes" type="ShapeNodes" />
    <property name="Rotation" visibility="public" read="Get_Rotation" write="Set_Rotation" type="Single" default="0" />
    <property name="PictureFormat" visibility="public" read="Get_PictureFormat" type="PictureFormat" />
    <property name="Shadow" visibility="public" read="Get_Shadow" type="ShadowFormat" />
    <property name="TextEffect" visibility="public" read="Get_TextEffect" type="TextEffectFormat" />
    <property name="TextFrame" visibility="public" read="Get_TextFrame" type="TextFrame" />
    <property name="ThreeD" visibility="public" read="Get_ThreeD" type="ThreeDFormat" />
    <property name="Top" visibility="public" read="Get_Top" write="Set_Top" type="Single" default="0" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="VerticalFlip" visibility="public" read="Get_VerticalFlip" type="TOleEnum" />
    <property name="Vertices" visibility="public" read="Get_Vertices" type="OleVariant" default="0" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="TOleEnum" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Single" default="0" />
    <property name="ZOrderPosition" visibility="public" read="Get_ZOrderPosition" type="Integer" />
    <property name="Hyperlink" visibility="public" read="Get_Hyperlink" type="Hyperlink" />
    <property name="RelativeHorizontalPosition" visibility="public" read="Get_RelativeHorizontalPosition" write="Set_RelativeHorizontalPosition" type="TOleEnum" />
    <property name="RelativeVerticalPosition" visibility="public" read="Get_RelativeVerticalPosition" write="Set_RelativeVerticalPosition" type="TOleEnum" />
    <property name="LockAnchor" visibility="public" read="Get_LockAnchor" write="Set_LockAnchor" type="Integer" />
    <property name="WrapFormat" visibility="public" read="Get_WrapFormat" type="WrapFormat" />
    <property name="OLEFormat" visibility="public" read="Get_OLEFormat" type="OLEFormat" />
    <property name="Anchor" visibility="public" read="Get_Anchor" type="Range" />
    <property name="LinkFormat" visibility="public" read="Get_LinkFormat" type="LinkFormat" />
  </interface>
  <interface name="ShapeDisp" GUID="{000209A0-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Adjustments" visibility="automated" type="Adjustments" />
    <property name="AutoShapeType" visibility="automated" type="TOleEnum" />
    <property name="Callout" visibility="automated" type="CalloutFormat" />
    <property name="ConnectionSiteCount" visibility="automated" type="Integer" />
    <property name="Connector" visibility="automated" type="TOleEnum" />
    <property name="ConnectorFormat" visibility="automated" type="ConnectorFormat" />
    <property name="Fill" visibility="automated" type="FillFormat" />
    <property name="GroupItems" visibility="automated" type="GroupShapes" />
    <property name="Height" visibility="automated" type="Single" />
    <property name="HorizontalFlip" visibility="automated" type="TOleEnum" />
    <property name="Left" visibility="automated" type="Single" />
    <property name="Line" visibility="automated" type="LineFormat" />
    <property name="LockAspectRatio" visibility="automated" type="TOleEnum" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Nodes" visibility="automated" type="ShapeNodes" />
    <property name="Rotation" visibility="automated" type="Single" />
    <property name="PictureFormat" visibility="automated" type="PictureFormat" />
    <property name="Shadow" visibility="automated" type="ShadowFormat" />
    <property name="TextEffect" visibility="automated" type="TextEffectFormat" />
    <property name="TextFrame" visibility="automated" type="TextFrame" />
    <property name="ThreeD" visibility="automated" type="ThreeDFormat" />
    <property name="Top" visibility="automated" type="Single" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="VerticalFlip" visibility="automated" type="TOleEnum" />
    <property name="Vertices" visibility="automated" type="OleVariant" />
    <property name="Visible" visibility="automated" type="TOleEnum" />
    <property name="Width" visibility="automated" type="Single" />
    <property name="ZOrderPosition" visibility="automated" type="Integer" />
    <property name="Hyperlink" visibility="automated" type="Hyperlink" />
    <property name="RelativeHorizontalPosition" visibility="automated" type="TOleEnum" />
    <property name="RelativeVerticalPosition" visibility="automated" type="TOleEnum" />
    <property name="LockAnchor" visibility="automated" type="Integer" />
    <property name="WrapFormat" visibility="automated" type="WrapFormat" />
    <property name="OLEFormat" visibility="automated" type="OLEFormat" />
    <property name="Anchor" visibility="automated" type="Range" />
    <property name="LinkFormat" visibility="automated" type="LinkFormat" />
    <procedure name="Apply" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Duplicate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="Flip" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FlipCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="IncrementLeft" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementRotation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementTop" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="PickUp" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="RerouteConnections" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ScaleHeight" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="Scale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="ScaleWidth" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="Scale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Replace" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="SetShapesDefaultProperties" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Ungroup" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="ZOrder" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ZOrderCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="ConvertToInlineShape" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="InlineShape" />
      </parameters>
    </function>
    <function name="ConvertToFrame" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Frame" />
      </parameters>
    </function>
    <procedure name="Activate" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="TextFrame" GUID="{000209B2-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get_MarginBottom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_MarginBottom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_MarginLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_MarginLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_MarginRight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_MarginRight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_MarginTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_MarginTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Orientation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Orientation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_TextRange" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_ContainingRange" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_Next" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TextFrame" />
      </parameters>
    </function>
    <procedure name="Set_Next" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TextFrame" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Previous" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TextFrame" />
      </parameters>
    </function>
    <procedure name="Set_Previous" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TextFrame" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Overflowing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_HasText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="BreakForwardLink" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="ValidLinkTarget" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="TargetTextFrame" type="TextFrame" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="Shape" />
    <property name="MarginBottom" visibility="public" read="Get_MarginBottom" write="Set_MarginBottom" type="Single" default="0" />
    <property name="MarginLeft" visibility="public" read="Get_MarginLeft" write="Set_MarginLeft" type="Single" default="0" />
    <property name="MarginRight" visibility="public" read="Get_MarginRight" write="Set_MarginRight" type="Single" default="0" />
    <property name="MarginTop" visibility="public" read="Get_MarginTop" write="Set_MarginTop" type="Single" default="0" />
    <property name="Orientation" visibility="public" read="Get_Orientation" write="Set_Orientation" type="TOleEnum" />
    <property name="TextRange" visibility="public" read="Get_TextRange" type="Range" />
    <property name="ContainingRange" visibility="public" read="Get_ContainingRange" type="Range" />
    <property name="Next" visibility="public" read="Get_Next" write="Set_Next" type="TextFrame" />
    <property name="Previous" visibility="public" read="Get_Previous" write="Set_Previous" type="TextFrame" />
    <property name="Overflowing" visibility="public" read="Get_Overflowing" type="WordBool" />
    <property name="HasText" visibility="public" read="Get_HasText" type="Integer" />
  </interface>
  <interface name="TextFrameDisp" GUID="{000209B2-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="Shape" />
    <property name="MarginBottom" visibility="automated" type="Single" />
    <property name="MarginLeft" visibility="automated" type="Single" />
    <property name="MarginRight" visibility="automated" type="Single" />
    <property name="MarginTop" visibility="automated" type="Single" />
    <property name="Orientation" visibility="automated" type="TOleEnum" />
    <property name="TextRange" visibility="automated" type="Range" />
    <property name="ContainingRange" visibility="automated" type="Range" />
    <property name="Next" visibility="automated" type="TextFrame" />
    <property name="Previous" visibility="automated" type="TextFrame" />
    <property name="Overflowing" visibility="automated" type="WordBool" />
    <property name="HasText" visibility="automated" type="Integer" />
    <procedure name="BreakForwardLink" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="ValidLinkTarget" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="TargetTextFrame" type="TextFrame" paramflags="const" />
        <retval type="WordBool" />
      </parameters>
    </function>
  </interface>
  <interface name="_LetterContent" GUID="{000209A1-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Duplicate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_LetterContent" />
      </parameters>
    </function>
    <function name="Get_DateFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_DateFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_IncludeHeaderFooter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_IncludeHeaderFooter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PageDesign" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_PageDesign" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_LetterStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LetterStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Letterhead" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Letterhead" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_LetterheadLocation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LetterheadLocation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_LetterheadSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_LetterheadSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_RecipientName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_RecipientName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_RecipientAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_RecipientAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Salutation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Salutation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_SalutationType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_SalutationType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_RecipientReference" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_RecipientReference" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_MailingInstructions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_MailingInstructions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_AttentionLine" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_AttentionLine" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Subject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Subject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_EnclosureNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_EnclosureNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_CCList" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_CCList" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ReturnAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ReturnAddress" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_SenderName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_SenderName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Closing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Closing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_SenderCompany" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_SenderCompany" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_SenderJobTitle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_SenderJobTitle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_SenderInitials" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_SenderInitials" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_InfoBlock" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_InfoBlock" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_RecipientCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_RecipientCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_RecipientGender" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_RecipientGender" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_ReturnAddressShortForm" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ReturnAddressShortForm" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_SenderCity" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_SenderCity" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_SenderCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_SenderCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_SenderGender" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_SenderGender" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_SenderReference" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_SenderReference" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Duplicate" visibility="public" read="Get_Duplicate" type="_LetterContent" />
    <property name="DateFormat" visibility="public" read="Get_DateFormat" write="Set_DateFormat" type="WideString" default="0" />
    <property name="IncludeHeaderFooter" visibility="public" read="Get_IncludeHeaderFooter" write="Set_IncludeHeaderFooter" type="WordBool" />
    <property name="PageDesign" visibility="public" read="Get_PageDesign" write="Set_PageDesign" type="WideString" default="0" />
    <property name="LetterStyle" visibility="public" read="Get_LetterStyle" write="Set_LetterStyle" type="TOleEnum" />
    <property name="Letterhead" visibility="public" read="Get_Letterhead" write="Set_Letterhead" type="WordBool" />
    <property name="LetterheadLocation" visibility="public" read="Get_LetterheadLocation" write="Set_LetterheadLocation" type="TOleEnum" />
    <property name="LetterheadSize" visibility="public" read="Get_LetterheadSize" write="Set_LetterheadSize" type="Single" default="0" />
    <property name="RecipientName" visibility="public" read="Get_RecipientName" write="Set_RecipientName" type="WideString" default="0" />
    <property name="RecipientAddress" visibility="public" read="Get_RecipientAddress" write="Set_RecipientAddress" type="WideString" default="0" />
    <property name="Salutation" visibility="public" read="Get_Salutation" write="Set_Salutation" type="WideString" default="0" />
    <property name="SalutationType" visibility="public" read="Get_SalutationType" write="Set_SalutationType" type="TOleEnum" />
    <property name="RecipientReference" visibility="public" read="Get_RecipientReference" write="Set_RecipientReference" type="WideString" default="0" />
    <property name="MailingInstructions" visibility="public" read="Get_MailingInstructions" write="Set_MailingInstructions" type="WideString" default="0" />
    <property name="AttentionLine" visibility="public" read="Get_AttentionLine" write="Set_AttentionLine" type="WideString" default="0" />
    <property name="Subject" visibility="public" read="Get_Subject" write="Set_Subject" type="WideString" default="0" />
    <property name="EnclosureNumber" visibility="public" read="Get_EnclosureNumber" write="Set_EnclosureNumber" type="Integer" />
    <property name="CCList" visibility="public" read="Get_CCList" write="Set_CCList" type="WideString" default="0" />
    <property name="ReturnAddress" visibility="public" read="Get_ReturnAddress" write="Set_ReturnAddress" type="WideString" default="0" />
    <property name="SenderName" visibility="public" read="Get_SenderName" write="Set_SenderName" type="WideString" default="0" />
    <property name="Closing" visibility="public" read="Get_Closing" write="Set_Closing" type="WideString" default="0" />
    <property name="SenderCompany" visibility="public" read="Get_SenderCompany" write="Set_SenderCompany" type="WideString" default="0" />
    <property name="SenderJobTitle" visibility="public" read="Get_SenderJobTitle" write="Set_SenderJobTitle" type="WideString" default="0" />
    <property name="SenderInitials" visibility="public" read="Get_SenderInitials" write="Set_SenderInitials" type="WideString" default="0" />
    <property name="InfoBlock" visibility="public" read="Get_InfoBlock" write="Set_InfoBlock" type="WordBool" />
    <property name="RecipientCode" visibility="public" read="Get_RecipientCode" write="Set_RecipientCode" type="WideString" default="0" />
    <property name="RecipientGender" visibility="public" read="Get_RecipientGender" write="Set_RecipientGender" type="TOleEnum" />
    <property name="ReturnAddressShortForm" visibility="public" read="Get_ReturnAddressShortForm" write="Set_ReturnAddressShortForm" type="WideString" default="0" />
    <property name="SenderCity" visibility="public" read="Get_SenderCity" write="Set_SenderCity" type="WideString" default="0" />
    <property name="SenderCode" visibility="public" read="Get_SenderCode" write="Set_SenderCode" type="WideString" default="0" />
    <property name="SenderGender" visibility="public" read="Get_SenderGender" write="Set_SenderGender" type="TOleEnum" />
    <property name="SenderReference" visibility="public" read="Get_SenderReference" write="Set_SenderReference" type="WideString" default="0" />
  </interface>
  <interface name="_LetterContentDisp" GUID="{000209A1-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Duplicate" visibility="automated" type="_LetterContent" />
    <property name="DateFormat" visibility="automated" type="WideString" />
    <property name="IncludeHeaderFooter" visibility="automated" type="WordBool" />
    <property name="PageDesign" visibility="automated" type="WideString" />
    <property name="LetterStyle" visibility="automated" type="TOleEnum" />
    <property name="Letterhead" visibility="automated" type="WordBool" />
    <property name="LetterheadLocation" visibility="automated" type="TOleEnum" />
    <property name="LetterheadSize" visibility="automated" type="Single" />
    <property name="RecipientName" visibility="automated" type="WideString" />
    <property name="RecipientAddress" visibility="automated" type="WideString" />
    <property name="Salutation" visibility="automated" type="WideString" />
    <property name="SalutationType" visibility="automated" type="TOleEnum" />
    <property name="RecipientReference" visibility="automated" type="WideString" />
    <property name="MailingInstructions" visibility="automated" type="WideString" />
    <property name="AttentionLine" visibility="automated" type="WideString" />
    <property name="Subject" visibility="automated" type="WideString" />
    <property name="EnclosureNumber" visibility="automated" type="Integer" />
    <property name="CCList" visibility="automated" type="WideString" />
    <property name="ReturnAddress" visibility="automated" type="WideString" />
    <property name="SenderName" visibility="automated" type="WideString" />
    <property name="Closing" visibility="automated" type="WideString" />
    <property name="SenderCompany" visibility="automated" type="WideString" />
    <property name="SenderJobTitle" visibility="automated" type="WideString" />
    <property name="SenderInitials" visibility="automated" type="WideString" />
    <property name="InfoBlock" visibility="automated" type="WordBool" />
    <property name="RecipientCode" visibility="automated" type="WideString" />
    <property name="RecipientGender" visibility="automated" type="TOleEnum" />
    <property name="ReturnAddressShortForm" visibility="automated" type="WideString" />
    <property name="SenderCity" visibility="automated" type="WideString" />
    <property name="SenderCode" visibility="automated" type="WideString" />
    <property name="SenderGender" visibility="automated" type="TOleEnum" />
    <property name="SenderReference" visibility="automated" type="WideString" />
  </interface>
  <interface name="View" GUID="{000209A5-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_FullScreen" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_FullScreen" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Draft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Draft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowAll" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowAll" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowFieldCodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowFieldCodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MailMergeDataView" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MailMergeDataView" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Magnifier" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Magnifier" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowFirstLineOnly" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowFirstLineOnly" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Zoom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Zoom" />
      </parameters>
    </function>
    <function name="Get_ShowObjectAnchors" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowObjectAnchors" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowTextBoundaries" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowTextBoundaries" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowHighlight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowHighlight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowDrawings" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowDrawings" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowTabs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowTabs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowSpaces" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowSpaces" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowParagraphs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowParagraphs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowHyphens" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowHyphens" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowHiddenText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowHiddenText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_WrapToWindow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_WrapToWindow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowPicturePlaceHolders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowPicturePlaceHolders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowBookmarks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowBookmarks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_FieldShading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_FieldShading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_ShowAnimation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowAnimation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_TableGridlines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_TableGridlines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_EnlargeFontsLessThan" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_EnlargeFontsLessThan" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_ShowMainTextLayer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowMainTextLayer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SeekView" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_SeekView" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_SplitSpecial" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_SplitSpecial" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_BrowseToWindow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_BrowseToWindow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_ShowOptionalBreaks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowOptionalBreaks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="CollapseOutline" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="ExpandOutline" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="ShowAllHeadings" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ShowHeading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Level" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="PreviousHeaderFooter" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="NextHeaderFooter" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="type_" visibility="public" read="Get_type_" write="Set_type_" type="TOleEnum" />
    <property name="FullScreen" visibility="public" read="Get_FullScreen" write="Set_FullScreen" type="WordBool" />
    <property name="Draft" visibility="public" read="Get_Draft" write="Set_Draft" type="WordBool" />
    <property name="ShowAll" visibility="public" read="Get_ShowAll" write="Set_ShowAll" type="WordBool" />
    <property name="ShowFieldCodes" visibility="public" read="Get_ShowFieldCodes" write="Set_ShowFieldCodes" type="WordBool" />
    <property name="MailMergeDataView" visibility="public" read="Get_MailMergeDataView" write="Set_MailMergeDataView" type="WordBool" />
    <property name="Magnifier" visibility="public" read="Get_Magnifier" write="Set_Magnifier" type="WordBool" />
    <property name="ShowFirstLineOnly" visibility="public" read="Get_ShowFirstLineOnly" write="Set_ShowFirstLineOnly" type="WordBool" />
    <property name="ShowFormat" visibility="public" read="Get_ShowFormat" write="Set_ShowFormat" type="WordBool" />
    <property name="Zoom" visibility="public" read="Get_Zoom" type="Zoom" />
    <property name="ShowObjectAnchors" visibility="public" read="Get_ShowObjectAnchors" write="Set_ShowObjectAnchors" type="WordBool" />
    <property name="ShowTextBoundaries" visibility="public" read="Get_ShowTextBoundaries" write="Set_ShowTextBoundaries" type="WordBool" />
    <property name="ShowHighlight" visibility="public" read="Get_ShowHighlight" write="Set_ShowHighlight" type="WordBool" />
    <property name="ShowDrawings" visibility="public" read="Get_ShowDrawings" write="Set_ShowDrawings" type="WordBool" />
    <property name="ShowTabs" visibility="public" read="Get_ShowTabs" write="Set_ShowTabs" type="WordBool" />
    <property name="ShowSpaces" visibility="public" read="Get_ShowSpaces" write="Set_ShowSpaces" type="WordBool" />
    <property name="ShowParagraphs" visibility="public" read="Get_ShowParagraphs" write="Set_ShowParagraphs" type="WordBool" />
    <property name="ShowHyphens" visibility="public" read="Get_ShowHyphens" write="Set_ShowHyphens" type="WordBool" />
    <property name="ShowHiddenText" visibility="public" read="Get_ShowHiddenText" write="Set_ShowHiddenText" type="WordBool" />
    <property name="WrapToWindow" visibility="public" read="Get_WrapToWindow" write="Set_WrapToWindow" type="WordBool" />
    <property name="ShowPicturePlaceHolders" visibility="public" read="Get_ShowPicturePlaceHolders" write="Set_ShowPicturePlaceHolders" type="WordBool" />
    <property name="ShowBookmarks" visibility="public" read="Get_ShowBookmarks" write="Set_ShowBookmarks" type="WordBool" />
    <property name="FieldShading" visibility="public" read="Get_FieldShading" write="Set_FieldShading" type="TOleEnum" />
    <property name="ShowAnimation" visibility="public" read="Get_ShowAnimation" write="Set_ShowAnimation" type="WordBool" />
    <property name="TableGridlines" visibility="public" read="Get_TableGridlines" write="Set_TableGridlines" type="WordBool" />
    <property name="EnlargeFontsLessThan" visibility="public" read="Get_EnlargeFontsLessThan" write="Set_EnlargeFontsLessThan" type="Integer" />
    <property name="ShowMainTextLayer" visibility="public" read="Get_ShowMainTextLayer" write="Set_ShowMainTextLayer" type="WordBool" />
    <property name="SeekView" visibility="public" read="Get_SeekView" write="Set_SeekView" type="TOleEnum" />
    <property name="SplitSpecial" visibility="public" read="Get_SplitSpecial" write="Set_SplitSpecial" type="TOleEnum" />
    <property name="BrowseToWindow" visibility="public" read="Get_BrowseToWindow" write="Set_BrowseToWindow" type="Integer" />
    <property name="ShowOptionalBreaks" visibility="public" read="Get_ShowOptionalBreaks" write="Set_ShowOptionalBreaks" type="WordBool" />
  </interface>
  <interface name="ViewDisp" GUID="{000209A5-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="FullScreen" visibility="automated" type="WordBool" />
    <property name="Draft" visibility="automated" type="WordBool" />
    <property name="ShowAll" visibility="automated" type="WordBool" />
    <property name="ShowFieldCodes" visibility="automated" type="WordBool" />
    <property name="MailMergeDataView" visibility="automated" type="WordBool" />
    <property name="Magnifier" visibility="automated" type="WordBool" />
    <property name="ShowFirstLineOnly" visibility="automated" type="WordBool" />
    <property name="ShowFormat" visibility="automated" type="WordBool" />
    <property name="Zoom" visibility="automated" type="Zoom" />
    <property name="ShowObjectAnchors" visibility="automated" type="WordBool" />
    <property name="ShowTextBoundaries" visibility="automated" type="WordBool" />
    <property name="ShowHighlight" visibility="automated" type="WordBool" />
    <property name="ShowDrawings" visibility="automated" type="WordBool" />
    <property name="ShowTabs" visibility="automated" type="WordBool" />
    <property name="ShowSpaces" visibility="automated" type="WordBool" />
    <property name="ShowParagraphs" visibility="automated" type="WordBool" />
    <property name="ShowHyphens" visibility="automated" type="WordBool" />
    <property name="ShowHiddenText" visibility="automated" type="WordBool" />
    <property name="WrapToWindow" visibility="automated" type="WordBool" />
    <property name="ShowPicturePlaceHolders" visibility="automated" type="WordBool" />
    <property name="ShowBookmarks" visibility="automated" type="WordBool" />
    <property name="FieldShading" visibility="automated" type="TOleEnum" />
    <property name="ShowAnimation" visibility="automated" type="WordBool" />
    <property name="TableGridlines" visibility="automated" type="WordBool" />
    <property name="EnlargeFontsLessThan" visibility="automated" type="Integer" />
    <property name="ShowMainTextLayer" visibility="automated" type="WordBool" />
    <property name="SeekView" visibility="automated" type="TOleEnum" />
    <property name="SplitSpecial" visibility="automated" type="TOleEnum" />
    <property name="BrowseToWindow" visibility="automated" type="Integer" />
    <property name="ShowOptionalBreaks" visibility="automated" type="WordBool" />
    <procedure name="CollapseOutline" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="ExpandOutline" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="ShowAllHeadings" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ShowHeading" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Level" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="PreviousHeaderFooter" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="NextHeaderFooter" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Zoom" GUID="{000209A6-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Percentage" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Percentage" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_PageFit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_PageFit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PageRows" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_PageRows" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_PageColumns" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_PageColumns" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Percentage" visibility="public" read="Get_Percentage" write="Set_Percentage" type="Integer" />
    <property name="PageFit" visibility="public" read="Get_PageFit" write="Set_PageFit" type="TOleEnum" />
    <property name="PageRows" visibility="public" read="Get_PageRows" write="Set_PageRows" type="Integer" />
    <property name="PageColumns" visibility="public" read="Get_PageColumns" write="Set_PageColumns" type="Integer" />
  </interface>
  <interface name="ZoomDisp" GUID="{000209A6-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Percentage" visibility="automated" type="Integer" />
    <property name="PageFit" visibility="automated" type="TOleEnum" />
    <property name="PageRows" visibility="automated" type="Integer" />
    <property name="PageColumns" visibility="automated" type="Integer" />
  </interface>
  <interface name="Zooms" GUID="{000209A7-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="TOleEnum" />
        <retval type="Zoom" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="ZoomsDisp" GUID="{000209A7-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="TOleEnum" />
        <retval type="Zoom" />
      </parameters>
    </function>
  </interface>
  <interface name="InlineShape" GUID="{000209A8-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Borders" />
      </parameters>
    </function>
    <procedure name="Set_Borders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Borders" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Range" />
      </parameters>
    </function>
    <function name="Get_LinkFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="LinkFormat" />
      </parameters>
    </function>
    <function name="Get_Field" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Field" />
      </parameters>
    </function>
    <function name="Get_OLEFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OLEFormat" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Hyperlink" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Hyperlink" />
      </parameters>
    </function>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ScaleHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_ScaleHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ScaleWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_ScaleWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_LockAspectRatio" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LockAspectRatio" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Line" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="LineFormat" />
      </parameters>
    </function>
    <function name="Get_Fill" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FillFormat" />
      </parameters>
    </function>
    <function name="Get_PictureFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="PictureFormat" />
      </parameters>
    </function>
    <procedure name="Set_PictureFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="PictureFormat" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Activate" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reset" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="ConvertToShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
    <property name="Range" visibility="public" read="Get_Range" type="Range" />
    <property name="LinkFormat" visibility="public" read="Get_LinkFormat" type="LinkFormat" />
    <property name="Field" visibility="public" read="Get_Field" type="Field" />
    <property name="OLEFormat" visibility="public" read="Get_OLEFormat" type="OLEFormat" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="Hyperlink" visibility="public" read="Get_Hyperlink" type="Hyperlink" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Single" default="0" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Single" default="0" />
    <property name="ScaleHeight" visibility="public" read="Get_ScaleHeight" write="Set_ScaleHeight" type="Single" default="0" />
    <property name="ScaleWidth" visibility="public" read="Get_ScaleWidth" write="Set_ScaleWidth" type="Single" default="0" />
    <property name="LockAspectRatio" visibility="public" read="Get_LockAspectRatio" write="Set_LockAspectRatio" type="TOleEnum" />
    <property name="Line" visibility="public" read="Get_Line" type="LineFormat" />
    <property name="Fill" visibility="public" read="Get_Fill" type="FillFormat" />
    <property name="PictureFormat" visibility="public" read="Get_PictureFormat" write="Set_PictureFormat" type="PictureFormat" />
  </interface>
  <interface name="InlineShapeDisp" GUID="{000209A8-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Borders" visibility="automated" type="Borders" />
    <property name="Range" visibility="automated" type="Range" />
    <property name="LinkFormat" visibility="automated" type="LinkFormat" />
    <property name="Field" visibility="automated" type="Field" />
    <property name="OLEFormat" visibility="automated" type="OLEFormat" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Hyperlink" visibility="automated" type="Hyperlink" />
    <property name="Height" visibility="automated" type="Single" />
    <property name="Width" visibility="automated" type="Single" />
    <property name="ScaleHeight" visibility="automated" type="Single" />
    <property name="ScaleWidth" visibility="automated" type="Single" />
    <property name="LockAspectRatio" visibility="automated" type="TOleEnum" />
    <property name="Line" visibility="automated" type="LineFormat" />
    <property name="Fill" visibility="automated" type="FillFormat" />
    <property name="PictureFormat" visibility="automated" type="PictureFormat" />
    <procedure name="Activate" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reset" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="ConvertToShape" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
  </interface>
  <interface name="InlineShapes" GUID="{000209A9-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="InlineShape" />
      </parameters>
    </function>
    <function name="AddPicture" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="LinkToFile" type="OleVariant" paramflags="var" />
        <parameter name="SaveWithDocument" type="OleVariant" paramflags="var" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <retval type="InlineShape" />
      </parameters>
    </function>
    <function name="AddOLEObject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ClassType" type="OleVariant" paramflags="var" />
        <parameter name="FileName" type="OleVariant" paramflags="var" />
        <parameter name="LinkToFile" type="OleVariant" paramflags="var" />
        <parameter name="DisplayAsIcon" type="OleVariant" paramflags="var" />
        <parameter name="IconFileName" type="OleVariant" paramflags="var" />
        <parameter name="IconIndex" type="OleVariant" paramflags="var" />
        <parameter name="IconLabel" type="OleVariant" paramflags="var" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <retval type="InlineShape" />
      </parameters>
    </function>
    <function name="AddOLEControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ClassType" type="OleVariant" paramflags="var" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <retval type="InlineShape" />
      </parameters>
    </function>
    <function name="New" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="InlineShape" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="InlineShapesDisp" GUID="{000209A9-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="InlineShape" />
      </parameters>
    </function>
    <function name="AddPicture" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="LinkToFile" type="OleVariant" paramflags="var" />
        <parameter name="SaveWithDocument" type="OleVariant" paramflags="var" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <retval type="InlineShape" />
      </parameters>
    </function>
    <function name="AddOLEObject" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ClassType" type="OleVariant" paramflags="var" />
        <parameter name="FileName" type="OleVariant" paramflags="var" />
        <parameter name="LinkToFile" type="OleVariant" paramflags="var" />
        <parameter name="DisplayAsIcon" type="OleVariant" paramflags="var" />
        <parameter name="IconFileName" type="OleVariant" paramflags="var" />
        <parameter name="IconIndex" type="OleVariant" paramflags="var" />
        <parameter name="IconLabel" type="OleVariant" paramflags="var" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <retval type="InlineShape" />
      </parameters>
    </function>
    <function name="AddOLEControl" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ClassType" type="OleVariant" paramflags="var" />
        <parameter name="Range" type="OleVariant" paramflags="var" />
        <retval type="InlineShape" />
      </parameters>
    </function>
    <function name="New" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Range" type="Range" paramflags="const" />
        <retval type="InlineShape" />
      </parameters>
    </function>
  </interface>
  <interface name="SpellingSuggestions" GUID="{000209AA-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_SpellingErrorType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="SpellingSuggestion" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="SpellingErrorType" visibility="public" read="Get_SpellingErrorType" type="TOleEnum" />
  </interface>
  <interface name="SpellingSuggestionsDisp" GUID="{000209AA-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="SpellingErrorType" visibility="automated" type="TOleEnum" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="SpellingSuggestion" />
      </parameters>
    </function>
  </interface>
  <interface name="SpellingSuggestion" GUID="{000209AB-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
  </interface>
  <interface name="SpellingSuggestionDisp" GUID="{000209AB-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Name" visibility="automated" type="WideString" />
  </interface>
  <interface name="Dictionaries" GUID="{000209AC-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Maximum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_ActiveCustomDictionary" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Dictionary" />
      </parameters>
    </function>
    <procedure name="Set_ActiveCustomDictionary" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Dictionary" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Dictionary" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <retval type="Dictionary" />
      </parameters>
    </function>
    <procedure name="ClearAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Maximum" visibility="public" read="Get_Maximum" type="Integer" />
    <property name="ActiveCustomDictionary" visibility="public" read="Get_ActiveCustomDictionary" write="Set_ActiveCustomDictionary" type="Dictionary" />
  </interface>
  <interface name="DictionariesDisp" GUID="{000209AC-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Maximum" visibility="automated" type="Integer" />
    <property name="ActiveCustomDictionary" visibility="automated" type="Dictionary" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Dictionary" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <retval type="Dictionary" />
      </parameters>
    </function>
    <procedure name="ClearAll" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="HangulHanjaConversionDictionaries" GUID="{000209E0-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Maximum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_ActiveCustomDictionary" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Dictionary" />
      </parameters>
    </function>
    <procedure name="Set_ActiveCustomDictionary" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Dictionary" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_BuiltinDictionary" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Dictionary" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Dictionary" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <retval type="Dictionary" />
      </parameters>
    </function>
    <procedure name="ClearAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Maximum" visibility="public" read="Get_Maximum" type="Integer" />
    <property name="ActiveCustomDictionary" visibility="public" read="Get_ActiveCustomDictionary" write="Set_ActiveCustomDictionary" type="Dictionary" />
    <property name="BuiltinDictionary" visibility="public" read="Get_BuiltinDictionary" type="Dictionary" />
  </interface>
  <interface name="HangulHanjaConversionDictionariesDisp" GUID="{000209E0-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Maximum" visibility="automated" type="Integer" />
    <property name="ActiveCustomDictionary" visibility="automated" type="Dictionary" />
    <property name="BuiltinDictionary" visibility="automated" type="Dictionary" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="Dictionary" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <retval type="Dictionary" />
      </parameters>
    </function>
    <procedure name="ClearAll" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Dictionary" GUID="{000209AD-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Path" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_LanguageID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LanguageID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_ReadOnly" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_LanguageSpecific" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_LanguageSpecific" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Path" visibility="public" read="Get_Path" type="WideString" default="0" />
    <property name="LanguageID" visibility="public" read="Get_LanguageID" write="Set_LanguageID" type="TOleEnum" />
    <property name="ReadOnly" visibility="public" read="Get_ReadOnly" type="WordBool" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="LanguageSpecific" visibility="public" read="Get_LanguageSpecific" write="Set_LanguageSpecific" type="WordBool" />
  </interface>
  <interface name="DictionaryDisp" GUID="{000209AD-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Path" visibility="automated" type="WideString" />
    <property name="LanguageID" visibility="automated" type="TOleEnum" />
    <property name="ReadOnly" visibility="automated" type="WordBool" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="LanguageSpecific" visibility="automated" type="WordBool" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="ReadabilityStatistics" GUID="{000209AE-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="ReadabilityStatistic" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="ReadabilityStatisticsDisp" GUID="{000209AE-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="ReadabilityStatistic" />
      </parameters>
    </function>
  </interface>
  <interface name="ReadabilityStatistic" GUID="{000209AF-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Value" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Value" visibility="public" read="Get_Value" type="Single" default="0" />
  </interface>
  <interface name="ReadabilityStatisticDisp" GUID="{000209AF-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Value" visibility="automated" type="Single" />
  </interface>
  <interface name="Versions" GUID="{000209B3-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_AutoVersion" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_AutoVersion" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Version" />
      </parameters>
    </function>
    <procedure name="Save" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Comment" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="AutoVersion" visibility="public" read="Get_AutoVersion" write="Set_AutoVersion" type="TOleEnum" />
  </interface>
  <interface name="VersionsDisp" GUID="{000209B3-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="AutoVersion" visibility="automated" type="TOleEnum" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Version" />
      </parameters>
    </function>
    <procedure name="Save" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Comment" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
  </interface>
  <interface name="Version" GUID="{000209B4-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_SavedBy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Comment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Date" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TDateTime" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Open" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="SavedBy" visibility="public" read="Get_SavedBy" type="WideString" default="0" />
    <property name="Comment" visibility="public" read="Get_Comment" type="WideString" default="0" />
    <property name="Date" visibility="public" read="Get_Date" type="TDateTime" default="0" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
  </interface>
  <interface name="VersionDisp" GUID="{000209B4-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="SavedBy" visibility="automated" type="WideString" />
    <property name="Comment" visibility="automated" type="WideString" />
    <property name="Date" visibility="automated" type="TDateTime" />
    <property name="Index" visibility="automated" type="Integer" />
    <procedure name="Open" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Options" GUID="{000209B7-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_AllowAccentedUppercase" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AllowAccentedUppercase" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_WPHelp" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_WPHelp" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_WPDocNavKeys" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_WPDocNavKeys" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Pagination" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Pagination" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_BlueScreen" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_BlueScreen" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_EnableSound" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_EnableSound" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ConfirmConversions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ConfirmConversions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_UpdateLinksAtOpen" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_UpdateLinksAtOpen" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SendMailAttach" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SendMailAttach" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MeasurementUnit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_MeasurementUnit" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_ButtonFieldClicks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_ButtonFieldClicks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_ShortMenuNames" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShortMenuNames" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_RTFInClipboard" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_RTFInClipboard" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_UpdateFieldsAtPrint" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_UpdateFieldsAtPrint" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PrintProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PrintFieldCodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintFieldCodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PrintComments" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintComments" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PrintHiddenText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintHiddenText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_EnvelopeFeederInstalled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_UpdateLinksAtPrint" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_UpdateLinksAtPrint" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PrintBackground" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintBackground" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PrintDrawingObjects" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintDrawingObjects" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_DefaultTray" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_DefaultTray" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_DefaultTrayID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_DefaultTrayID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_CreateBackup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_CreateBackup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AllowFastSave" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AllowFastSave" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SavePropertiesPrompt" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SavePropertiesPrompt" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SaveNormalPrompt" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SaveNormalPrompt" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SaveInterval" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_SaveInterval" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_BackgroundSave" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_BackgroundSave" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_InsertedTextMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_InsertedTextMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_DeletedTextMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_DeletedTextMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_RevisedLinesMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_RevisedLinesMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_InsertedTextColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_InsertedTextColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_DeletedTextColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_DeletedTextColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_RevisedLinesColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_RevisedLinesColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_DefaultFilePath" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Path" type="TOleEnum" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_DefaultFilePath" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Path" type="TOleEnum" />
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Overtype" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Overtype" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ReplaceSelection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ReplaceSelection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AllowDragAndDrop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AllowDragAndDrop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoWordSelection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoWordSelection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_INSKeyForPaste" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_INSKeyForPaste" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SmartCutPaste" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SmartCutPaste" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_TabIndentKey" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_TabIndentKey" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PictureEditor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_PictureEditor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_AnimateScreenMovements" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AnimateScreenMovements" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_VirusProtection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_VirusProtection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_RevisedPropertiesMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_RevisedPropertiesMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_RevisedPropertiesColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_RevisedPropertiesColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_SnapToGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SnapToGrid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SnapToShapes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SnapToShapes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_GridDistanceHorizontal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_GridDistanceHorizontal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_GridDistanceVertical" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_GridDistanceVertical" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_GridOriginHorizontal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_GridOriginHorizontal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_GridOriginVertical" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_GridOriginVertical" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_InlineConversion" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_InlineConversion" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_IMEAutomaticControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_IMEAutomaticControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatApplyHeadings" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatApplyHeadings" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatApplyLists" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatApplyLists" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatApplyBulletedLists" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatApplyBulletedLists" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatApplyOtherParas" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatApplyOtherParas" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatReplaceQuotes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatReplaceQuotes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatReplaceSymbols" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatReplaceSymbols" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatReplaceOrdinals" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatReplaceOrdinals" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatReplaceFractions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatReplaceFractions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatReplacePlainTextEmphasis" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatReplacePlainTextEmphasis" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatPreserveStyles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatPreserveStyles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeApplyHeadings" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeApplyHeadings" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeApplyBorders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeApplyBorders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeApplyBulletedLists" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeApplyBulletedLists" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeApplyNumberedLists" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeApplyNumberedLists" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeReplaceQuotes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeReplaceQuotes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeReplaceSymbols" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeReplaceSymbols" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeReplaceOrdinals" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeReplaceOrdinals" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeReplaceFractions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeReplaceFractions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeReplacePlainTextEmphasis" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeReplacePlainTextEmphasis" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeFormatListItemBeginning" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeFormatListItemBeginning" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeDefineStyles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeDefineStyles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatPlainTextWordMail" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatPlainTextWordMail" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeReplaceHyperlinks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeReplaceHyperlinks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatReplaceHyperlinks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatReplaceHyperlinks" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_DefaultHighlightColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_DefaultHighlightColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_DefaultBorderLineStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_DefaultBorderLineStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_CheckSpellingAsYouType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_CheckSpellingAsYouType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_CheckGrammarAsYouType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_CheckGrammarAsYouType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_IgnoreInternetAndFileAddresses" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_IgnoreInternetAndFileAddresses" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ShowReadabilityStatistics" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ShowReadabilityStatistics" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_IgnoreUppercase" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_IgnoreUppercase" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_IgnoreMixedDigits" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_IgnoreMixedDigits" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SuggestFromMainDictionaryOnly" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SuggestFromMainDictionaryOnly" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SuggestSpellingCorrections" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SuggestSpellingCorrections" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_DefaultBorderLineWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_DefaultBorderLineWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_CheckGrammarWithSpelling" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_CheckGrammarWithSpelling" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_DefaultOpenFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_DefaultOpenFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PrintDraft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintDraft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PrintReverse" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintReverse" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MapPaperSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MapPaperSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeApplyTables" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeApplyTables" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatApplyFirstIndents" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatApplyFirstIndents" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatMatchParentheses" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatMatchParentheses" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatReplaceFarEastDashes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatReplaceFarEastDashes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatDeleteAutoSpaces" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatDeleteAutoSpaces" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeApplyFirstIndents" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeApplyFirstIndents" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeApplyDates" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeApplyDates" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeApplyClosings" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeApplyClosings" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeMatchParentheses" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeMatchParentheses" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeReplaceFarEastDashes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeReplaceFarEastDashes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeDeleteAutoSpaces" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeDeleteAutoSpaces" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeInsertClosings" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeInsertClosings" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeAutoLetterWizard" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeAutoLetterWizard" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormatAsYouTypeInsertOvers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormatAsYouTypeInsertOvers" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_DisplayGridLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayGridLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchFuzzyCase" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchFuzzyCase" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchFuzzyByte" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchFuzzyByte" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchFuzzyHiragana" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchFuzzyHiragana" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchFuzzySmallKana" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchFuzzySmallKana" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchFuzzyDash" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchFuzzyDash" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchFuzzyIterationMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchFuzzyIterationMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchFuzzyKanji" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchFuzzyKanji" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchFuzzyOldKana" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchFuzzyOldKana" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchFuzzyProlongedSoundMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchFuzzyProlongedSoundMark" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchFuzzyDZ" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchFuzzyDZ" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchFuzzyBV" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchFuzzyBV" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchFuzzyTC" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchFuzzyTC" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchFuzzyHF" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchFuzzyHF" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchFuzzyZJ" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchFuzzyZJ" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchFuzzyAY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchFuzzyAY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchFuzzyKiKu" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchFuzzyKiKu" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchFuzzyPunctuation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchFuzzyPunctuation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchFuzzySpace" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchFuzzySpace" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ApplyFarEastFontsToAscii" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ApplyFarEastFontsToAscii" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_ConvertHighAnsiToFarEast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_ConvertHighAnsiToFarEast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PrintOddPagesInAscendingOrder" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintOddPagesInAscendingOrder" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_PrintEvenPagesInAscendingOrder" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_PrintEvenPagesInAscendingOrder" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_DefaultBorderColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_DefaultBorderColorIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_EnableMisusedWordsDictionary" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_EnableMisusedWordsDictionary" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AllowCombinedAuxiliaryForms" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AllowCombinedAuxiliaryForms" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_HangulHanjaFastConversion" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_HangulHanjaFastConversion" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_CheckHangulEndings" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_CheckHangulEndings" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_EnableHangulHanjaRecentOrdering" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_EnableHangulHanjaRecentOrdering" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MultipleWordConversionsMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_MultipleWordConversionsMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetWPHelpOptions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="CommandKeyHelp" type="OleVariant" paramflags="var" />
        <parameter name="DocNavigationKeys" type="OleVariant" paramflags="var" />
        <parameter name="MouseSimulation" type="OleVariant" paramflags="var" />
        <parameter name="DemoGuidance" type="OleVariant" paramflags="var" />
        <parameter name="DemoSpeed" type="OleVariant" paramflags="var" />
        <parameter name="HelpType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="AllowAccentedUppercase" visibility="public" read="Get_AllowAccentedUppercase" write="Set_AllowAccentedUppercase" type="WordBool" />
    <property name="WPHelp" visibility="public" read="Get_WPHelp" write="Set_WPHelp" type="WordBool" />
    <property name="WPDocNavKeys" visibility="public" read="Get_WPDocNavKeys" write="Set_WPDocNavKeys" type="WordBool" />
    <property name="Pagination" visibility="public" read="Get_Pagination" write="Set_Pagination" type="WordBool" />
    <property name="BlueScreen" visibility="public" read="Get_BlueScreen" write="Set_BlueScreen" type="WordBool" />
    <property name="EnableSound" visibility="public" read="Get_EnableSound" write="Set_EnableSound" type="WordBool" />
    <property name="ConfirmConversions" visibility="public" read="Get_ConfirmConversions" write="Set_ConfirmConversions" type="WordBool" />
    <property name="UpdateLinksAtOpen" visibility="public" read="Get_UpdateLinksAtOpen" write="Set_UpdateLinksAtOpen" type="WordBool" />
    <property name="SendMailAttach" visibility="public" read="Get_SendMailAttach" write="Set_SendMailAttach" type="WordBool" />
    <property name="MeasurementUnit" visibility="public" read="Get_MeasurementUnit" write="Set_MeasurementUnit" type="TOleEnum" />
    <property name="ButtonFieldClicks" visibility="public" read="Get_ButtonFieldClicks" write="Set_ButtonFieldClicks" type="Integer" />
    <property name="ShortMenuNames" visibility="public" read="Get_ShortMenuNames" write="Set_ShortMenuNames" type="WordBool" />
    <property name="RTFInClipboard" visibility="public" read="Get_RTFInClipboard" write="Set_RTFInClipboard" type="WordBool" />
    <property name="UpdateFieldsAtPrint" visibility="public" read="Get_UpdateFieldsAtPrint" write="Set_UpdateFieldsAtPrint" type="WordBool" />
    <property name="PrintProperties" visibility="public" read="Get_PrintProperties" write="Set_PrintProperties" type="WordBool" />
    <property name="PrintFieldCodes" visibility="public" read="Get_PrintFieldCodes" write="Set_PrintFieldCodes" type="WordBool" />
    <property name="PrintComments" visibility="public" read="Get_PrintComments" write="Set_PrintComments" type="WordBool" />
    <property name="PrintHiddenText" visibility="public" read="Get_PrintHiddenText" write="Set_PrintHiddenText" type="WordBool" />
    <property name="EnvelopeFeederInstalled" visibility="public" read="Get_EnvelopeFeederInstalled" type="WordBool" />
    <property name="UpdateLinksAtPrint" visibility="public" read="Get_UpdateLinksAtPrint" write="Set_UpdateLinksAtPrint" type="WordBool" />
    <property name="PrintBackground" visibility="public" read="Get_PrintBackground" write="Set_PrintBackground" type="WordBool" />
    <property name="PrintDrawingObjects" visibility="public" read="Get_PrintDrawingObjects" write="Set_PrintDrawingObjects" type="WordBool" />
    <property name="DefaultTray" visibility="public" read="Get_DefaultTray" write="Set_DefaultTray" type="WideString" default="0" />
    <property name="DefaultTrayID" visibility="public" read="Get_DefaultTrayID" write="Set_DefaultTrayID" type="Integer" />
    <property name="CreateBackup" visibility="public" read="Get_CreateBackup" write="Set_CreateBackup" type="WordBool" />
    <property name="AllowFastSave" visibility="public" read="Get_AllowFastSave" write="Set_AllowFastSave" type="WordBool" />
    <property name="SavePropertiesPrompt" visibility="public" read="Get_SavePropertiesPrompt" write="Set_SavePropertiesPrompt" type="WordBool" />
    <property name="SaveNormalPrompt" visibility="public" read="Get_SaveNormalPrompt" write="Set_SaveNormalPrompt" type="WordBool" />
    <property name="SaveInterval" visibility="public" read="Get_SaveInterval" write="Set_SaveInterval" type="Integer" />
    <property name="BackgroundSave" visibility="public" read="Get_BackgroundSave" write="Set_BackgroundSave" type="WordBool" />
    <property name="InsertedTextMark" visibility="public" read="Get_InsertedTextMark" write="Set_InsertedTextMark" type="TOleEnum" />
    <property name="DeletedTextMark" visibility="public" read="Get_DeletedTextMark" write="Set_DeletedTextMark" type="TOleEnum" />
    <property name="RevisedLinesMark" visibility="public" read="Get_RevisedLinesMark" write="Set_RevisedLinesMark" type="TOleEnum" />
    <property name="InsertedTextColor" visibility="public" read="Get_InsertedTextColor" write="Set_InsertedTextColor" type="TOleEnum" />
    <property name="DeletedTextColor" visibility="public" read="Get_DeletedTextColor" write="Set_DeletedTextColor" type="TOleEnum" />
    <property name="RevisedLinesColor" visibility="public" read="Get_RevisedLinesColor" write="Set_RevisedLinesColor" type="TOleEnum" />
    <property name="DefaultFilePath[Path]" visibility="public" read="Get_DefaultFilePath" write="Set_DefaultFilePath" type="WideString" />
    <property name="Overtype" visibility="public" read="Get_Overtype" write="Set_Overtype" type="WordBool" />
    <property name="ReplaceSelection" visibility="public" read="Get_ReplaceSelection" write="Set_ReplaceSelection" type="WordBool" />
    <property name="AllowDragAndDrop" visibility="public" read="Get_AllowDragAndDrop" write="Set_AllowDragAndDrop" type="WordBool" />
    <property name="AutoWordSelection" visibility="public" read="Get_AutoWordSelection" write="Set_AutoWordSelection" type="WordBool" />
    <property name="INSKeyForPaste" visibility="public" read="Get_INSKeyForPaste" write="Set_INSKeyForPaste" type="WordBool" />
    <property name="SmartCutPaste" visibility="public" read="Get_SmartCutPaste" write="Set_SmartCutPaste" type="WordBool" />
    <property name="TabIndentKey" visibility="public" read="Get_TabIndentKey" write="Set_TabIndentKey" type="WordBool" />
    <property name="PictureEditor" visibility="public" read="Get_PictureEditor" write="Set_PictureEditor" type="WideString" default="0" />
    <property name="AnimateScreenMovements" visibility="public" read="Get_AnimateScreenMovements" write="Set_AnimateScreenMovements" type="WordBool" />
    <property name="VirusProtection" visibility="public" read="Get_VirusProtection" write="Set_VirusProtection" type="WordBool" />
    <property name="RevisedPropertiesMark" visibility="public" read="Get_RevisedPropertiesMark" write="Set_RevisedPropertiesMark" type="TOleEnum" />
    <property name="RevisedPropertiesColor" visibility="public" read="Get_RevisedPropertiesColor" write="Set_RevisedPropertiesColor" type="TOleEnum" />
    <property name="SnapToGrid" visibility="public" read="Get_SnapToGrid" write="Set_SnapToGrid" type="WordBool" />
    <property name="SnapToShapes" visibility="public" read="Get_SnapToShapes" write="Set_SnapToShapes" type="WordBool" />
    <property name="GridDistanceHorizontal" visibility="public" read="Get_GridDistanceHorizontal" write="Set_GridDistanceHorizontal" type="Single" default="0" />
    <property name="GridDistanceVertical" visibility="public" read="Get_GridDistanceVertical" write="Set_GridDistanceVertical" type="Single" default="0" />
    <property name="GridOriginHorizontal" visibility="public" read="Get_GridOriginHorizontal" write="Set_GridOriginHorizontal" type="Single" default="0" />
    <property name="GridOriginVertical" visibility="public" read="Get_GridOriginVertical" write="Set_GridOriginVertical" type="Single" default="0" />
    <property name="InlineConversion" visibility="public" read="Get_InlineConversion" write="Set_InlineConversion" type="WordBool" />
    <property name="IMEAutomaticControl" visibility="public" read="Get_IMEAutomaticControl" write="Set_IMEAutomaticControl" type="WordBool" />
    <property name="AutoFormatApplyHeadings" visibility="public" read="Get_AutoFormatApplyHeadings" write="Set_AutoFormatApplyHeadings" type="WordBool" />
    <property name="AutoFormatApplyLists" visibility="public" read="Get_AutoFormatApplyLists" write="Set_AutoFormatApplyLists" type="WordBool" />
    <property name="AutoFormatApplyBulletedLists" visibility="public" read="Get_AutoFormatApplyBulletedLists" write="Set_AutoFormatApplyBulletedLists" type="WordBool" />
    <property name="AutoFormatApplyOtherParas" visibility="public" read="Get_AutoFormatApplyOtherParas" write="Set_AutoFormatApplyOtherParas" type="WordBool" />
    <property name="AutoFormatReplaceQuotes" visibility="public" read="Get_AutoFormatReplaceQuotes" write="Set_AutoFormatReplaceQuotes" type="WordBool" />
    <property name="AutoFormatReplaceSymbols" visibility="public" read="Get_AutoFormatReplaceSymbols" write="Set_AutoFormatReplaceSymbols" type="WordBool" />
    <property name="AutoFormatReplaceOrdinals" visibility="public" read="Get_AutoFormatReplaceOrdinals" write="Set_AutoFormatReplaceOrdinals" type="WordBool" />
    <property name="AutoFormatReplaceFractions" visibility="public" read="Get_AutoFormatReplaceFractions" write="Set_AutoFormatReplaceFractions" type="WordBool" />
    <property name="AutoFormatReplacePlainTextEmphasis" visibility="public" read="Get_AutoFormatReplacePlainTextEmphasis" write="Set_AutoFormatReplacePlainTextEmphasis" type="WordBool" />
    <property name="AutoFormatPreserveStyles" visibility="public" read="Get_AutoFormatPreserveStyles" write="Set_AutoFormatPreserveStyles" type="WordBool" />
    <property name="AutoFormatAsYouTypeApplyHeadings" visibility="public" read="Get_AutoFormatAsYouTypeApplyHeadings" write="Set_AutoFormatAsYouTypeApplyHeadings" type="WordBool" />
    <property name="AutoFormatAsYouTypeApplyBorders" visibility="public" read="Get_AutoFormatAsYouTypeApplyBorders" write="Set_AutoFormatAsYouTypeApplyBorders" type="WordBool" />
    <property name="AutoFormatAsYouTypeApplyBulletedLists" visibility="public" read="Get_AutoFormatAsYouTypeApplyBulletedLists" write="Set_AutoFormatAsYouTypeApplyBulletedLists" type="WordBool" />
    <property name="AutoFormatAsYouTypeApplyNumberedLists" visibility="public" read="Get_AutoFormatAsYouTypeApplyNumberedLists" write="Set_AutoFormatAsYouTypeApplyNumberedLists" type="WordBool" />
    <property name="AutoFormatAsYouTypeReplaceQuotes" visibility="public" read="Get_AutoFormatAsYouTypeReplaceQuotes" write="Set_AutoFormatAsYouTypeReplaceQuotes" type="WordBool" />
    <property name="AutoFormatAsYouTypeReplaceSymbols" visibility="public" read="Get_AutoFormatAsYouTypeReplaceSymbols" write="Set_AutoFormatAsYouTypeReplaceSymbols" type="WordBool" />
    <property name="AutoFormatAsYouTypeReplaceOrdinals" visibility="public" read="Get_AutoFormatAsYouTypeReplaceOrdinals" write="Set_AutoFormatAsYouTypeReplaceOrdinals" type="WordBool" />
    <property name="AutoFormatAsYouTypeReplaceFractions" visibility="public" read="Get_AutoFormatAsYouTypeReplaceFractions" write="Set_AutoFormatAsYouTypeReplaceFractions" type="WordBool" />
    <property name="AutoFormatAsYouTypeReplacePlainTextEmphasis" visibility="public" read="Get_AutoFormatAsYouTypeReplacePlainTextEmphasis" write="Set_AutoFormatAsYouTypeReplacePlainTextEmphasis" type="WordBool" />
    <property name="AutoFormatAsYouTypeFormatListItemBeginning" visibility="public" read="Get_AutoFormatAsYouTypeFormatListItemBeginning" write="Set_AutoFormatAsYouTypeFormatListItemBeginning" type="WordBool" />
    <property name="AutoFormatAsYouTypeDefineStyles" visibility="public" read="Get_AutoFormatAsYouTypeDefineStyles" write="Set_AutoFormatAsYouTypeDefineStyles" type="WordBool" />
    <property name="AutoFormatPlainTextWordMail" visibility="public" read="Get_AutoFormatPlainTextWordMail" write="Set_AutoFormatPlainTextWordMail" type="WordBool" />
    <property name="AutoFormatAsYouTypeReplaceHyperlinks" visibility="public" read="Get_AutoFormatAsYouTypeReplaceHyperlinks" write="Set_AutoFormatAsYouTypeReplaceHyperlinks" type="WordBool" />
    <property name="AutoFormatReplaceHyperlinks" visibility="public" read="Get_AutoFormatReplaceHyperlinks" write="Set_AutoFormatReplaceHyperlinks" type="WordBool" />
    <property name="DefaultHighlightColorIndex" visibility="public" read="Get_DefaultHighlightColorIndex" write="Set_DefaultHighlightColorIndex" type="TOleEnum" />
    <property name="DefaultBorderLineStyle" visibility="public" read="Get_DefaultBorderLineStyle" write="Set_DefaultBorderLineStyle" type="TOleEnum" />
    <property name="CheckSpellingAsYouType" visibility="public" read="Get_CheckSpellingAsYouType" write="Set_CheckSpellingAsYouType" type="WordBool" />
    <property name="CheckGrammarAsYouType" visibility="public" read="Get_CheckGrammarAsYouType" write="Set_CheckGrammarAsYouType" type="WordBool" />
    <property name="IgnoreInternetAndFileAddresses" visibility="public" read="Get_IgnoreInternetAndFileAddresses" write="Set_IgnoreInternetAndFileAddresses" type="WordBool" />
    <property name="ShowReadabilityStatistics" visibility="public" read="Get_ShowReadabilityStatistics" write="Set_ShowReadabilityStatistics" type="WordBool" />
    <property name="IgnoreUppercase" visibility="public" read="Get_IgnoreUppercase" write="Set_IgnoreUppercase" type="WordBool" />
    <property name="IgnoreMixedDigits" visibility="public" read="Get_IgnoreMixedDigits" write="Set_IgnoreMixedDigits" type="WordBool" />
    <property name="SuggestFromMainDictionaryOnly" visibility="public" read="Get_SuggestFromMainDictionaryOnly" write="Set_SuggestFromMainDictionaryOnly" type="WordBool" />
    <property name="SuggestSpellingCorrections" visibility="public" read="Get_SuggestSpellingCorrections" write="Set_SuggestSpellingCorrections" type="WordBool" />
    <property name="DefaultBorderLineWidth" visibility="public" read="Get_DefaultBorderLineWidth" write="Set_DefaultBorderLineWidth" type="TOleEnum" />
    <property name="CheckGrammarWithSpelling" visibility="public" read="Get_CheckGrammarWithSpelling" write="Set_CheckGrammarWithSpelling" type="WordBool" />
    <property name="DefaultOpenFormat" visibility="public" read="Get_DefaultOpenFormat" write="Set_DefaultOpenFormat" type="TOleEnum" />
    <property name="PrintDraft" visibility="public" read="Get_PrintDraft" write="Set_PrintDraft" type="WordBool" />
    <property name="PrintReverse" visibility="public" read="Get_PrintReverse" write="Set_PrintReverse" type="WordBool" />
    <property name="MapPaperSize" visibility="public" read="Get_MapPaperSize" write="Set_MapPaperSize" type="WordBool" />
    <property name="AutoFormatAsYouTypeApplyTables" visibility="public" read="Get_AutoFormatAsYouTypeApplyTables" write="Set_AutoFormatAsYouTypeApplyTables" type="WordBool" />
    <property name="AutoFormatApplyFirstIndents" visibility="public" read="Get_AutoFormatApplyFirstIndents" write="Set_AutoFormatApplyFirstIndents" type="WordBool" />
    <property name="AutoFormatMatchParentheses" visibility="public" read="Get_AutoFormatMatchParentheses" write="Set_AutoFormatMatchParentheses" type="WordBool" />
    <property name="AutoFormatReplaceFarEastDashes" visibility="public" read="Get_AutoFormatReplaceFarEastDashes" write="Set_AutoFormatReplaceFarEastDashes" type="WordBool" />
    <property name="AutoFormatDeleteAutoSpaces" visibility="public" read="Get_AutoFormatDeleteAutoSpaces" write="Set_AutoFormatDeleteAutoSpaces" type="WordBool" />
    <property name="AutoFormatAsYouTypeApplyFirstIndents" visibility="public" read="Get_AutoFormatAsYouTypeApplyFirstIndents" write="Set_AutoFormatAsYouTypeApplyFirstIndents" type="WordBool" />
    <property name="AutoFormatAsYouTypeApplyDates" visibility="public" read="Get_AutoFormatAsYouTypeApplyDates" write="Set_AutoFormatAsYouTypeApplyDates" type="WordBool" />
    <property name="AutoFormatAsYouTypeApplyClosings" visibility="public" read="Get_AutoFormatAsYouTypeApplyClosings" write="Set_AutoFormatAsYouTypeApplyClosings" type="WordBool" />
    <property name="AutoFormatAsYouTypeMatchParentheses" visibility="public" read="Get_AutoFormatAsYouTypeMatchParentheses" write="Set_AutoFormatAsYouTypeMatchParentheses" type="WordBool" />
    <property name="AutoFormatAsYouTypeReplaceFarEastDashes" visibility="public" read="Get_AutoFormatAsYouTypeReplaceFarEastDashes" write="Set_AutoFormatAsYouTypeReplaceFarEastDashes" type="WordBool" />
    <property name="AutoFormatAsYouTypeDeleteAutoSpaces" visibility="public" read="Get_AutoFormatAsYouTypeDeleteAutoSpaces" write="Set_AutoFormatAsYouTypeDeleteAutoSpaces" type="WordBool" />
    <property name="AutoFormatAsYouTypeInsertClosings" visibility="public" read="Get_AutoFormatAsYouTypeInsertClosings" write="Set_AutoFormatAsYouTypeInsertClosings" type="WordBool" />
    <property name="AutoFormatAsYouTypeAutoLetterWizard" visibility="public" read="Get_AutoFormatAsYouTypeAutoLetterWizard" write="Set_AutoFormatAsYouTypeAutoLetterWizard" type="WordBool" />
    <property name="AutoFormatAsYouTypeInsertOvers" visibility="public" read="Get_AutoFormatAsYouTypeInsertOvers" write="Set_AutoFormatAsYouTypeInsertOvers" type="WordBool" />
    <property name="DisplayGridLines" visibility="public" read="Get_DisplayGridLines" write="Set_DisplayGridLines" type="WordBool" />
    <property name="MatchFuzzyCase" visibility="public" read="Get_MatchFuzzyCase" write="Set_MatchFuzzyCase" type="WordBool" />
    <property name="MatchFuzzyByte" visibility="public" read="Get_MatchFuzzyByte" write="Set_MatchFuzzyByte" type="WordBool" />
    <property name="MatchFuzzyHiragana" visibility="public" read="Get_MatchFuzzyHiragana" write="Set_MatchFuzzyHiragana" type="WordBool" />
    <property name="MatchFuzzySmallKana" visibility="public" read="Get_MatchFuzzySmallKana" write="Set_MatchFuzzySmallKana" type="WordBool" />
    <property name="MatchFuzzyDash" visibility="public" read="Get_MatchFuzzyDash" write="Set_MatchFuzzyDash" type="WordBool" />
    <property name="MatchFuzzyIterationMark" visibility="public" read="Get_MatchFuzzyIterationMark" write="Set_MatchFuzzyIterationMark" type="WordBool" />
    <property name="MatchFuzzyKanji" visibility="public" read="Get_MatchFuzzyKanji" write="Set_MatchFuzzyKanji" type="WordBool" />
    <property name="MatchFuzzyOldKana" visibility="public" read="Get_MatchFuzzyOldKana" write="Set_MatchFuzzyOldKana" type="WordBool" />
    <property name="MatchFuzzyProlongedSoundMark" visibility="public" read="Get_MatchFuzzyProlongedSoundMark" write="Set_MatchFuzzyProlongedSoundMark" type="WordBool" />
    <property name="MatchFuzzyDZ" visibility="public" read="Get_MatchFuzzyDZ" write="Set_MatchFuzzyDZ" type="WordBool" />
    <property name="MatchFuzzyBV" visibility="public" read="Get_MatchFuzzyBV" write="Set_MatchFuzzyBV" type="WordBool" />
    <property name="MatchFuzzyTC" visibility="public" read="Get_MatchFuzzyTC" write="Set_MatchFuzzyTC" type="WordBool" />
    <property name="MatchFuzzyHF" visibility="public" read="Get_MatchFuzzyHF" write="Set_MatchFuzzyHF" type="WordBool" />
    <property name="MatchFuzzyZJ" visibility="public" read="Get_MatchFuzzyZJ" write="Set_MatchFuzzyZJ" type="WordBool" />
    <property name="MatchFuzzyAY" visibility="public" read="Get_MatchFuzzyAY" write="Set_MatchFuzzyAY" type="WordBool" />
    <property name="MatchFuzzyKiKu" visibility="public" read="Get_MatchFuzzyKiKu" write="Set_MatchFuzzyKiKu" type="WordBool" />
    <property name="MatchFuzzyPunctuation" visibility="public" read="Get_MatchFuzzyPunctuation" write="Set_MatchFuzzyPunctuation" type="WordBool" />
    <property name="MatchFuzzySpace" visibility="public" read="Get_MatchFuzzySpace" write="Set_MatchFuzzySpace" type="WordBool" />
    <property name="ApplyFarEastFontsToAscii" visibility="public" read="Get_ApplyFarEastFontsToAscii" write="Set_ApplyFarEastFontsToAscii" type="WordBool" />
    <property name="ConvertHighAnsiToFarEast" visibility="public" read="Get_ConvertHighAnsiToFarEast" write="Set_ConvertHighAnsiToFarEast" type="WordBool" />
    <property name="PrintOddPagesInAscendingOrder" visibility="public" read="Get_PrintOddPagesInAscendingOrder" write="Set_PrintOddPagesInAscendingOrder" type="WordBool" />
    <property name="PrintEvenPagesInAscendingOrder" visibility="public" read="Get_PrintEvenPagesInAscendingOrder" write="Set_PrintEvenPagesInAscendingOrder" type="WordBool" />
    <property name="DefaultBorderColorIndex" visibility="public" read="Get_DefaultBorderColorIndex" write="Set_DefaultBorderColorIndex" type="TOleEnum" />
    <property name="EnableMisusedWordsDictionary" visibility="public" read="Get_EnableMisusedWordsDictionary" write="Set_EnableMisusedWordsDictionary" type="WordBool" />
    <property name="AllowCombinedAuxiliaryForms" visibility="public" read="Get_AllowCombinedAuxiliaryForms" write="Set_AllowCombinedAuxiliaryForms" type="WordBool" />
    <property name="HangulHanjaFastConversion" visibility="public" read="Get_HangulHanjaFastConversion" write="Set_HangulHanjaFastConversion" type="WordBool" />
    <property name="CheckHangulEndings" visibility="public" read="Get_CheckHangulEndings" write="Set_CheckHangulEndings" type="WordBool" />
    <property name="EnableHangulHanjaRecentOrdering" visibility="public" read="Get_EnableHangulHanjaRecentOrdering" write="Set_EnableHangulHanjaRecentOrdering" type="WordBool" />
    <property name="MultipleWordConversionsMode" visibility="public" read="Get_MultipleWordConversionsMode" write="Set_MultipleWordConversionsMode" type="TOleEnum" />
  </interface>
  <interface name="OptionsDisp" GUID="{000209B7-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="AllowAccentedUppercase" visibility="automated" type="WordBool" />
    <property name="WPHelp" visibility="automated" type="WordBool" />
    <property name="WPDocNavKeys" visibility="automated" type="WordBool" />
    <property name="Pagination" visibility="automated" type="WordBool" />
    <property name="BlueScreen" visibility="automated" type="WordBool" />
    <property name="EnableSound" visibility="automated" type="WordBool" />
    <property name="ConfirmConversions" visibility="automated" type="WordBool" />
    <property name="UpdateLinksAtOpen" visibility="automated" type="WordBool" />
    <property name="SendMailAttach" visibility="automated" type="WordBool" />
    <property name="MeasurementUnit" visibility="automated" type="TOleEnum" />
    <property name="ButtonFieldClicks" visibility="automated" type="Integer" />
    <property name="ShortMenuNames" visibility="automated" type="WordBool" />
    <property name="RTFInClipboard" visibility="automated" type="WordBool" />
    <property name="UpdateFieldsAtPrint" visibility="automated" type="WordBool" />
    <property name="PrintProperties" visibility="automated" type="WordBool" />
    <property name="PrintFieldCodes" visibility="automated" type="WordBool" />
    <property name="PrintComments" visibility="automated" type="WordBool" />
    <property name="PrintHiddenText" visibility="automated" type="WordBool" />
    <property name="EnvelopeFeederInstalled" visibility="automated" type="WordBool" />
    <property name="UpdateLinksAtPrint" visibility="automated" type="WordBool" />
    <property name="PrintBackground" visibility="automated" type="WordBool" />
    <property name="PrintDrawingObjects" visibility="automated" type="WordBool" />
    <property name="DefaultTray" visibility="automated" type="WideString" />
    <property name="DefaultTrayID" visibility="automated" type="Integer" />
    <property name="CreateBackup" visibility="automated" type="WordBool" />
    <property name="AllowFastSave" visibility="automated" type="WordBool" />
    <property name="SavePropertiesPrompt" visibility="automated" type="WordBool" />
    <property name="SaveNormalPrompt" visibility="automated" type="WordBool" />
    <property name="SaveInterval" visibility="automated" type="Integer" />
    <property name="BackgroundSave" visibility="automated" type="WordBool" />
    <property name="InsertedTextMark" visibility="automated" type="TOleEnum" />
    <property name="DeletedTextMark" visibility="automated" type="TOleEnum" />
    <property name="RevisedLinesMark" visibility="automated" type="TOleEnum" />
    <property name="InsertedTextColor" visibility="automated" type="TOleEnum" />
    <property name="DeletedTextColor" visibility="automated" type="TOleEnum" />
    <property name="RevisedLinesColor" visibility="automated" type="TOleEnum" />
    <property name="DefaultFilePath[Path]" visibility="automated" type="WideString" />
    <property name="Overtype" visibility="automated" type="WordBool" />
    <property name="ReplaceSelection" visibility="automated" type="WordBool" />
    <property name="AllowDragAndDrop" visibility="automated" type="WordBool" />
    <property name="AutoWordSelection" visibility="automated" type="WordBool" />
    <property name="INSKeyForPaste" visibility="automated" type="WordBool" />
    <property name="SmartCutPaste" visibility="automated" type="WordBool" />
    <property name="TabIndentKey" visibility="automated" type="WordBool" />
    <property name="PictureEditor" visibility="automated" type="WideString" />
    <property name="AnimateScreenMovements" visibility="automated" type="WordBool" />
    <property name="VirusProtection" visibility="automated" type="WordBool" />
    <property name="RevisedPropertiesMark" visibility="automated" type="TOleEnum" />
    <property name="RevisedPropertiesColor" visibility="automated" type="TOleEnum" />
    <property name="SnapToGrid" visibility="automated" type="WordBool" />
    <property name="SnapToShapes" visibility="automated" type="WordBool" />
    <property name="GridDistanceHorizontal" visibility="automated" type="Single" />
    <property name="GridDistanceVertical" visibility="automated" type="Single" />
    <property name="GridOriginHorizontal" visibility="automated" type="Single" />
    <property name="GridOriginVertical" visibility="automated" type="Single" />
    <property name="InlineConversion" visibility="automated" type="WordBool" />
    <property name="IMEAutomaticControl" visibility="automated" type="WordBool" />
    <property name="AutoFormatApplyHeadings" visibility="automated" type="WordBool" />
    <property name="AutoFormatApplyLists" visibility="automated" type="WordBool" />
    <property name="AutoFormatApplyBulletedLists" visibility="automated" type="WordBool" />
    <property name="AutoFormatApplyOtherParas" visibility="automated" type="WordBool" />
    <property name="AutoFormatReplaceQuotes" visibility="automated" type="WordBool" />
    <property name="AutoFormatReplaceSymbols" visibility="automated" type="WordBool" />
    <property name="AutoFormatReplaceOrdinals" visibility="automated" type="WordBool" />
    <property name="AutoFormatReplaceFractions" visibility="automated" type="WordBool" />
    <property name="AutoFormatReplacePlainTextEmphasis" visibility="automated" type="WordBool" />
    <property name="AutoFormatPreserveStyles" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeApplyHeadings" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeApplyBorders" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeApplyBulletedLists" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeApplyNumberedLists" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeReplaceQuotes" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeReplaceSymbols" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeReplaceOrdinals" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeReplaceFractions" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeReplacePlainTextEmphasis" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeFormatListItemBeginning" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeDefineStyles" visibility="automated" type="WordBool" />
    <property name="AutoFormatPlainTextWordMail" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeReplaceHyperlinks" visibility="automated" type="WordBool" />
    <property name="AutoFormatReplaceHyperlinks" visibility="automated" type="WordBool" />
    <property name="DefaultHighlightColorIndex" visibility="automated" type="TOleEnum" />
    <property name="DefaultBorderLineStyle" visibility="automated" type="TOleEnum" />
    <property name="CheckSpellingAsYouType" visibility="automated" type="WordBool" />
    <property name="CheckGrammarAsYouType" visibility="automated" type="WordBool" />
    <property name="IgnoreInternetAndFileAddresses" visibility="automated" type="WordBool" />
    <property name="ShowReadabilityStatistics" visibility="automated" type="WordBool" />
    <property name="IgnoreUppercase" visibility="automated" type="WordBool" />
    <property name="IgnoreMixedDigits" visibility="automated" type="WordBool" />
    <property name="SuggestFromMainDictionaryOnly" visibility="automated" type="WordBool" />
    <property name="SuggestSpellingCorrections" visibility="automated" type="WordBool" />
    <property name="DefaultBorderLineWidth" visibility="automated" type="TOleEnum" />
    <property name="CheckGrammarWithSpelling" visibility="automated" type="WordBool" />
    <property name="DefaultOpenFormat" visibility="automated" type="TOleEnum" />
    <property name="PrintDraft" visibility="automated" type="WordBool" />
    <property name="PrintReverse" visibility="automated" type="WordBool" />
    <property name="MapPaperSize" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeApplyTables" visibility="automated" type="WordBool" />
    <property name="AutoFormatApplyFirstIndents" visibility="automated" type="WordBool" />
    <property name="AutoFormatMatchParentheses" visibility="automated" type="WordBool" />
    <property name="AutoFormatReplaceFarEastDashes" visibility="automated" type="WordBool" />
    <property name="AutoFormatDeleteAutoSpaces" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeApplyFirstIndents" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeApplyDates" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeApplyClosings" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeMatchParentheses" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeReplaceFarEastDashes" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeDeleteAutoSpaces" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeInsertClosings" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeAutoLetterWizard" visibility="automated" type="WordBool" />
    <property name="AutoFormatAsYouTypeInsertOvers" visibility="automated" type="WordBool" />
    <property name="DisplayGridLines" visibility="automated" type="WordBool" />
    <property name="MatchFuzzyCase" visibility="automated" type="WordBool" />
    <property name="MatchFuzzyByte" visibility="automated" type="WordBool" />
    <property name="MatchFuzzyHiragana" visibility="automated" type="WordBool" />
    <property name="MatchFuzzySmallKana" visibility="automated" type="WordBool" />
    <property name="MatchFuzzyDash" visibility="automated" type="WordBool" />
    <property name="MatchFuzzyIterationMark" visibility="automated" type="WordBool" />
    <property name="MatchFuzzyKanji" visibility="automated" type="WordBool" />
    <property name="MatchFuzzyOldKana" visibility="automated" type="WordBool" />
    <property name="MatchFuzzyProlongedSoundMark" visibility="automated" type="WordBool" />
    <property name="MatchFuzzyDZ" visibility="automated" type="WordBool" />
    <property name="MatchFuzzyBV" visibility="automated" type="WordBool" />
    <property name="MatchFuzzyTC" visibility="automated" type="WordBool" />
    <property name="MatchFuzzyHF" visibility="automated" type="WordBool" />
    <property name="MatchFuzzyZJ" visibility="automated" type="WordBool" />
    <property name="MatchFuzzyAY" visibility="automated" type="WordBool" />
    <property name="MatchFuzzyKiKu" visibility="automated" type="WordBool" />
    <property name="MatchFuzzyPunctuation" visibility="automated" type="WordBool" />
    <property name="MatchFuzzySpace" visibility="automated" type="WordBool" />
    <property name="ApplyFarEastFontsToAscii" visibility="automated" type="WordBool" />
    <property name="ConvertHighAnsiToFarEast" visibility="automated" type="WordBool" />
    <property name="PrintOddPagesInAscendingOrder" visibility="automated" type="WordBool" />
    <property name="PrintEvenPagesInAscendingOrder" visibility="automated" type="WordBool" />
    <property name="DefaultBorderColorIndex" visibility="automated" type="TOleEnum" />
    <property name="EnableMisusedWordsDictionary" visibility="automated" type="WordBool" />
    <property name="AllowCombinedAuxiliaryForms" visibility="automated" type="WordBool" />
    <property name="HangulHanjaFastConversion" visibility="automated" type="WordBool" />
    <property name="CheckHangulEndings" visibility="automated" type="WordBool" />
    <property name="EnableHangulHanjaRecentOrdering" visibility="automated" type="WordBool" />
    <property name="MultipleWordConversionsMode" visibility="automated" type="TOleEnum" />
    <procedure name="SetWPHelpOptions" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="CommandKeyHelp" type="OleVariant" paramflags="var" />
        <parameter name="DocNavigationKeys" type="OleVariant" paramflags="var" />
        <parameter name="MouseSimulation" type="OleVariant" paramflags="var" />
        <parameter name="DemoGuidance" type="OleVariant" paramflags="var" />
        <parameter name="DemoSpeed" type="OleVariant" paramflags="var" />
        <parameter name="HelpType" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
  </interface>
  <interface name="MailMessage" GUID="{000209BA-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="CheckName" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="DisplayMoveDialog" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="DisplayProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="DisplaySelectNamesDialog" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Forward" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="GoToNext" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="GoToPrevious" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reply" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ReplyAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ToggleHeader" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="MailMessageDisp" GUID="{000209BA-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="CheckName" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="DisplayMoveDialog" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="DisplayProperties" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="DisplaySelectNamesDialog" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Forward" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="GoToNext" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="GoToPrevious" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reply" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ReplyAll" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ToggleHeader" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="ProofreadingErrors" GUID="{000209BB-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Range" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
  </interface>
  <interface name="ProofreadingErrorsDisp" GUID="{000209BB-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Range" />
      </parameters>
    </function>
  </interface>
  <interface name="Mailer" GUID="{000209BD-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_BCCRecipients" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="Set_BCCRecipients" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="Get_CCRecipients" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="Set_CCRecipients" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="Get_Recipients" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="Set_Recipients" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="Get_Enclosures" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="Set_Enclosures" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <function name="Get_Sender" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_SendDateTime" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TDateTime" />
      </parameters>
    </function>
    <function name="Get_Received" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Subject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Subject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Sender" visibility="public" read="Get_Sender" type="WideString" default="0" />
    <property name="SendDateTime" visibility="public" read="Get_SendDateTime" type="TDateTime" default="0" />
    <property name="Received" visibility="public" read="Get_Received" type="WordBool" />
    <property name="Subject" visibility="public" read="Get_Subject" write="Set_Subject" type="WideString" default="0" />
  </interface>
  <interface name="MailerDisp" GUID="{000209BD-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="BCCRecipients" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="CCRecipients" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Recipients" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Enclosures" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <property name="Sender" visibility="automated" type="WideString" />
    <property name="SendDateTime" visibility="automated" type="TDateTime" />
    <property name="Received" visibility="automated" type="WordBool" />
    <property name="Subject" visibility="automated" type="WideString" />
  </interface>
  <interface name="WrapFormat" GUID="{000209C3-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Side" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Side" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_DistanceTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_DistanceTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_DistanceBottom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_DistanceBottom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_DistanceLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_DistanceLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_DistanceRight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_DistanceRight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="type_" visibility="public" read="Get_type_" write="Set_type_" type="TOleEnum" />
    <property name="Side" visibility="public" read="Get_Side" write="Set_Side" type="TOleEnum" />
    <property name="DistanceTop" visibility="public" read="Get_DistanceTop" write="Set_DistanceTop" type="Single" default="0" />
    <property name="DistanceBottom" visibility="public" read="Get_DistanceBottom" write="Set_DistanceBottom" type="Single" default="0" />
    <property name="DistanceLeft" visibility="public" read="Get_DistanceLeft" write="Set_DistanceLeft" type="Single" default="0" />
    <property name="DistanceRight" visibility="public" read="Get_DistanceRight" write="Set_DistanceRight" type="Single" default="0" />
  </interface>
  <interface name="WrapFormatDisp" GUID="{000209C3-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Side" visibility="automated" type="TOleEnum" />
    <property name="DistanceTop" visibility="automated" type="Single" />
    <property name="DistanceBottom" visibility="automated" type="Single" />
    <property name="DistanceLeft" visibility="automated" type="Single" />
    <property name="DistanceRight" visibility="automated" type="Single" />
  </interface>
  <interface name="HangulAndAlphabetExceptions" GUID="{000209D1-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="HangulAndAlphabetException" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <retval type="HangulAndAlphabetException" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="HangulAndAlphabetExceptionsDisp" GUID="{000209D1-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="HangulAndAlphabetException" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <retval type="HangulAndAlphabetException" />
      </parameters>
    </function>
  </interface>
  <interface name="HangulAndAlphabetException" GUID="{000209D2-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
  </interface>
  <interface name="HangulAndAlphabetExceptionDisp" GUID="{000209D2-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="Name" visibility="automated" type="WideString" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Adjustments" GUID="{000209C4-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Item[Index]" visibility="public" read="Get_Item" write="Set_Item" type="Single" />
  </interface>
  <interface name="AdjustmentsDisp" GUID="{000209C4-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Item[Index]" visibility="automated" type="Single" />
  </interface>
  <interface name="CalloutFormat" GUID="{000209C5-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Accent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Accent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Angle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Angle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_AutoAttach" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_AutoAttach" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_AutoLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Border" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Border" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Drop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <function name="Get_DropType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Gap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Gap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Length" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="AutomaticLength" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="CustomDrop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Drop" type="Single" />
      </parameters>
    </procedure>
    <procedure name="CustomLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Length" type="Single" />
      </parameters>
    </procedure>
    <procedure name="PresetDrop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="DropType" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Accent" visibility="public" read="Get_Accent" write="Set_Accent" type="TOleEnum" />
    <property name="Angle" visibility="public" read="Get_Angle" write="Set_Angle" type="TOleEnum" />
    <property name="AutoAttach" visibility="public" read="Get_AutoAttach" write="Set_AutoAttach" type="TOleEnum" />
    <property name="AutoLength" visibility="public" read="Get_AutoLength" type="TOleEnum" />
    <property name="Border" visibility="public" read="Get_Border" write="Set_Border" type="TOleEnum" />
    <property name="Drop" visibility="public" read="Get_Drop" type="Single" default="0" />
    <property name="DropType" visibility="public" read="Get_DropType" type="TOleEnum" />
    <property name="Gap" visibility="public" read="Get_Gap" write="Set_Gap" type="Single" default="0" />
    <property name="Length" visibility="public" read="Get_Length" type="Single" default="0" />
    <property name="type_" visibility="public" read="Get_type_" write="Set_type_" type="TOleEnum" />
  </interface>
  <interface name="CalloutFormatDisp" GUID="{000209C5-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Accent" visibility="automated" type="TOleEnum" />
    <property name="Angle" visibility="automated" type="TOleEnum" />
    <property name="AutoAttach" visibility="automated" type="TOleEnum" />
    <property name="AutoLength" visibility="automated" type="TOleEnum" />
    <property name="Border" visibility="automated" type="TOleEnum" />
    <property name="Drop" visibility="automated" type="Single" />
    <property name="DropType" visibility="automated" type="TOleEnum" />
    <property name="Gap" visibility="automated" type="Single" />
    <property name="Length" visibility="automated" type="Single" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <procedure name="AutomaticLength" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="CustomDrop" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Drop" type="Single" />
      </parameters>
    </procedure>
    <procedure name="CustomLength" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Length" type="Single" />
      </parameters>
    </procedure>
    <procedure name="PresetDrop" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="DropType" type="TOleEnum" />
      </parameters>
    </procedure>
  </interface>
  <interface name="ColorFormat" GUID="{000209C6-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_RGB" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_RGB" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_SchemeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_SchemeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="RGB" visibility="public" read="Get_RGB" write="Set_RGB" type="Integer" />
    <property name="SchemeColor" visibility="public" read="Get_SchemeColor" write="Set_SchemeColor" type="Integer" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
  </interface>
  <interface name="ColorFormatDisp" GUID="{000209C6-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="RGB" visibility="automated" type="Integer" />
    <property name="SchemeColor" visibility="automated" type="Integer" />
    <property name="type_" visibility="automated" type="TOleEnum" />
  </interface>
  <interface name="ConnectorFormat" GUID="{000209C7-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_BeginConnected" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_BeginConnectedShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get_BeginConnectionSite" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_EndConnected" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_EndConnectedShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get_EndConnectionSite" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="BeginConnect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ConnectedShape" type="Shape" paramflags="var" />
        <parameter name="ConnectionSite" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="BeginDisconnect" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="EndConnect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ConnectedShape" type="Shape" paramflags="var" />
        <parameter name="ConnectionSite" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="EndDisconnect" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="BeginConnected" visibility="public" read="Get_BeginConnected" type="TOleEnum" />
    <property name="BeginConnectedShape" visibility="public" read="Get_BeginConnectedShape" type="Shape" />
    <property name="BeginConnectionSite" visibility="public" read="Get_BeginConnectionSite" type="Integer" />
    <property name="EndConnected" visibility="public" read="Get_EndConnected" type="TOleEnum" />
    <property name="EndConnectedShape" visibility="public" read="Get_EndConnectedShape" type="Shape" />
    <property name="EndConnectionSite" visibility="public" read="Get_EndConnectionSite" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="type_" visibility="public" read="Get_type_" write="Set_type_" type="TOleEnum" />
  </interface>
  <interface name="ConnectorFormatDisp" GUID="{000209C7-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="BeginConnected" visibility="automated" type="TOleEnum" />
    <property name="BeginConnectedShape" visibility="automated" type="Shape" />
    <property name="BeginConnectionSite" visibility="automated" type="Integer" />
    <property name="EndConnected" visibility="automated" type="TOleEnum" />
    <property name="EndConnectedShape" visibility="automated" type="Shape" />
    <property name="EndConnectionSite" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <procedure name="BeginConnect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ConnectedShape" type="Shape" paramflags="var" />
        <parameter name="ConnectionSite" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="BeginDisconnect" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="EndConnect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ConnectedShape" type="Shape" paramflags="var" />
        <parameter name="ConnectionSite" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="EndDisconnect" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="FillFormat" GUID="{000209C8-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_BackColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ColorFormat" />
      </parameters>
    </function>
    <function name="Get_ForeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ColorFormat" />
      </parameters>
    </function>
    <function name="Get_GradientColorType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_GradientDegree" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <function name="Get_GradientStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_GradientVariant" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Pattern" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_PresetGradientType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_PresetTexture" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_TextureName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_TextureType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Transparency" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Transparency" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Background" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="OneColorGradient" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
        <parameter name="Variant" type="Integer" />
        <parameter name="Degree" type="Single" />
      </parameters>
    </procedure>
    <procedure name="Patterned" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Pattern" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="PresetGradient" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
        <parameter name="Variant" type="Integer" />
        <parameter name="PresetGradientType" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="PresetTextured" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetTexture" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Solid" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="TwoColorGradient" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
        <parameter name="Variant" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="UserPicture" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PictureFile" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="UserTextured" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="TextureFile" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="BackColor" visibility="public" read="Get_BackColor" type="ColorFormat" />
    <property name="ForeColor" visibility="public" read="Get_ForeColor" type="ColorFormat" />
    <property name="GradientColorType" visibility="public" read="Get_GradientColorType" type="TOleEnum" />
    <property name="GradientDegree" visibility="public" read="Get_GradientDegree" type="Single" default="0" />
    <property name="GradientStyle" visibility="public" read="Get_GradientStyle" type="TOleEnum" />
    <property name="GradientVariant" visibility="public" read="Get_GradientVariant" type="Integer" />
    <property name="Pattern" visibility="public" read="Get_Pattern" type="TOleEnum" />
    <property name="PresetGradientType" visibility="public" read="Get_PresetGradientType" type="TOleEnum" />
    <property name="PresetTexture" visibility="public" read="Get_PresetTexture" type="TOleEnum" />
    <property name="TextureName" visibility="public" read="Get_TextureName" type="WideString" default="0" />
    <property name="TextureType" visibility="public" read="Get_TextureType" type="TOleEnum" />
    <property name="Transparency" visibility="public" read="Get_Transparency" write="Set_Transparency" type="Single" default="0" />
    <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="TOleEnum" />
  </interface>
  <interface name="FillFormatDisp" GUID="{000209C8-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="BackColor" visibility="automated" type="ColorFormat" />
    <property name="ForeColor" visibility="automated" type="ColorFormat" />
    <property name="GradientColorType" visibility="automated" type="TOleEnum" />
    <property name="GradientDegree" visibility="automated" type="Single" />
    <property name="GradientStyle" visibility="automated" type="TOleEnum" />
    <property name="GradientVariant" visibility="automated" type="Integer" />
    <property name="Pattern" visibility="automated" type="TOleEnum" />
    <property name="PresetGradientType" visibility="automated" type="TOleEnum" />
    <property name="PresetTexture" visibility="automated" type="TOleEnum" />
    <property name="TextureName" visibility="automated" type="WideString" />
    <property name="TextureType" visibility="automated" type="TOleEnum" />
    <property name="Transparency" visibility="automated" type="Single" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="TOleEnum" />
    <procedure name="Background" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="OneColorGradient" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
        <parameter name="Variant" type="Integer" />
        <parameter name="Degree" type="Single" />
      </parameters>
    </procedure>
    <procedure name="Patterned" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Pattern" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="PresetGradient" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
        <parameter name="Variant" type="Integer" />
        <parameter name="PresetGradientType" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="PresetTextured" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="PresetTexture" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Solid" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="TwoColorGradient" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
        <parameter name="Variant" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="UserPicture" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="PictureFile" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="UserTextured" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="TextureFile" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
  </interface>
  <interface name="FreeformBuilder" GUID="{000209C9-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="AddNodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SegmentType" type="TOleEnum" />
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <parameter name="X2" type="Single" />
        <parameter name="Y2" type="Single" />
        <parameter name="X3" type="Single" />
        <parameter name="Y3" type="Single" />
      </parameters>
    </procedure>
    <function name="ConvertToShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="FreeformBuilderDisp" GUID="{000209C9-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="AddNodes" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="SegmentType" type="TOleEnum" />
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <parameter name="X2" type="Single" />
        <parameter name="Y2" type="Single" />
        <parameter name="X3" type="Single" />
        <parameter name="Y3" type="Single" />
      </parameters>
    </procedure>
    <function name="ConvertToShape" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Anchor" type="OleVariant" paramflags="var" />
        <retval type="Shape" />
      </parameters>
    </function>
  </interface>
  <interface name="LineFormat" GUID="{000209CA-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_BackColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ColorFormat" />
      </parameters>
    </function>
    <function name="Get_BeginArrowheadLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_BeginArrowheadLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_BeginArrowheadStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_BeginArrowheadStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_BeginArrowheadWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_BeginArrowheadWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_DashStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_DashStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_EndArrowheadLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_EndArrowheadLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_EndArrowheadStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_EndArrowheadStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_EndArrowheadWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_EndArrowheadWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_ForeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ColorFormat" />
      </parameters>
    </function>
    <function name="Get_Pattern" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Pattern" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Transparency" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Transparency" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Weight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Weight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="BackColor" visibility="public" read="Get_BackColor" type="ColorFormat" />
    <property name="BeginArrowheadLength" visibility="public" read="Get_BeginArrowheadLength" write="Set_BeginArrowheadLength" type="TOleEnum" />
    <property name="BeginArrowheadStyle" visibility="public" read="Get_BeginArrowheadStyle" write="Set_BeginArrowheadStyle" type="TOleEnum" />
    <property name="BeginArrowheadWidth" visibility="public" read="Get_BeginArrowheadWidth" write="Set_BeginArrowheadWidth" type="TOleEnum" />
    <property name="DashStyle" visibility="public" read="Get_DashStyle" write="Set_DashStyle" type="TOleEnum" />
    <property name="EndArrowheadLength" visibility="public" read="Get_EndArrowheadLength" write="Set_EndArrowheadLength" type="TOleEnum" />
    <property name="EndArrowheadStyle" visibility="public" read="Get_EndArrowheadStyle" write="Set_EndArrowheadStyle" type="TOleEnum" />
    <property name="EndArrowheadWidth" visibility="public" read="Get_EndArrowheadWidth" write="Set_EndArrowheadWidth" type="TOleEnum" />
    <property name="ForeColor" visibility="public" read="Get_ForeColor" type="ColorFormat" />
    <property name="Pattern" visibility="public" read="Get_Pattern" write="Set_Pattern" type="TOleEnum" />
    <property name="Style" visibility="public" read="Get_Style" write="Set_Style" type="TOleEnum" />
    <property name="Transparency" visibility="public" read="Get_Transparency" write="Set_Transparency" type="Single" default="0" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="TOleEnum" />
    <property name="Weight" visibility="public" read="Get_Weight" write="Set_Weight" type="Single" default="0" />
  </interface>
  <interface name="LineFormatDisp" GUID="{000209CA-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="BackColor" visibility="automated" type="ColorFormat" />
    <property name="BeginArrowheadLength" visibility="automated" type="TOleEnum" />
    <property name="BeginArrowheadStyle" visibility="automated" type="TOleEnum" />
    <property name="BeginArrowheadWidth" visibility="automated" type="TOleEnum" />
    <property name="DashStyle" visibility="automated" type="TOleEnum" />
    <property name="EndArrowheadLength" visibility="automated" type="TOleEnum" />
    <property name="EndArrowheadStyle" visibility="automated" type="TOleEnum" />
    <property name="EndArrowheadWidth" visibility="automated" type="TOleEnum" />
    <property name="ForeColor" visibility="automated" type="ColorFormat" />
    <property name="Pattern" visibility="automated" type="TOleEnum" />
    <property name="Style" visibility="automated" type="TOleEnum" />
    <property name="Transparency" visibility="automated" type="Single" />
    <property name="Visible" visibility="automated" type="TOleEnum" />
    <property name="Weight" visibility="automated" type="Single" />
  </interface>
  <interface name="PictureFormat" GUID="{000209CB-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Brightness" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Brightness" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ColorType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_ColorType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Contrast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Contrast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_CropBottom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_CropBottom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_CropLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_CropLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_CropRight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_CropRight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_CropTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_CropTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_TransparencyColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_TransparencyColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_TransparentBackground" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_TransparentBackground" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="IncrementBrightness" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementContrast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Brightness" visibility="public" read="Get_Brightness" write="Set_Brightness" type="Single" default="0" />
    <property name="ColorType" visibility="public" read="Get_ColorType" write="Set_ColorType" type="TOleEnum" />
    <property name="Contrast" visibility="public" read="Get_Contrast" write="Set_Contrast" type="Single" default="0" />
    <property name="CropBottom" visibility="public" read="Get_CropBottom" write="Set_CropBottom" type="Single" default="0" />
    <property name="CropLeft" visibility="public" read="Get_CropLeft" write="Set_CropLeft" type="Single" default="0" />
    <property name="CropRight" visibility="public" read="Get_CropRight" write="Set_CropRight" type="Single" default="0" />
    <property name="CropTop" visibility="public" read="Get_CropTop" write="Set_CropTop" type="Single" default="0" />
    <property name="TransparencyColor" visibility="public" read="Get_TransparencyColor" write="Set_TransparencyColor" type="Integer" />
    <property name="TransparentBackground" visibility="public" read="Get_TransparentBackground" write="Set_TransparentBackground" type="TOleEnum" />
  </interface>
  <interface name="PictureFormatDisp" GUID="{000209CB-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Brightness" visibility="automated" type="Single" />
    <property name="ColorType" visibility="automated" type="TOleEnum" />
    <property name="Contrast" visibility="automated" type="Single" />
    <property name="CropBottom" visibility="automated" type="Single" />
    <property name="CropLeft" visibility="automated" type="Single" />
    <property name="CropRight" visibility="automated" type="Single" />
    <property name="CropTop" visibility="automated" type="Single" />
    <property name="TransparencyColor" visibility="automated" type="Integer" />
    <property name="TransparentBackground" visibility="automated" type="TOleEnum" />
    <procedure name="IncrementBrightness" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementContrast" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
  </interface>
  <interface name="ShadowFormat" GUID="{000209CC-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_ForeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ColorFormat" />
      </parameters>
    </function>
    <function name="Get_Obscured" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Obscured" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_OffsetX" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_OffsetX" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_OffsetY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_OffsetY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Transparency" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Transparency" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="IncrementOffsetX" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementOffsetY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="ForeColor" visibility="public" read="Get_ForeColor" type="ColorFormat" />
    <property name="Obscured" visibility="public" read="Get_Obscured" write="Set_Obscured" type="TOleEnum" />
    <property name="OffsetX" visibility="public" read="Get_OffsetX" write="Set_OffsetX" type="Single" default="0" />
    <property name="OffsetY" visibility="public" read="Get_OffsetY" write="Set_OffsetY" type="Single" default="0" />
    <property name="Transparency" visibility="public" read="Get_Transparency" write="Set_Transparency" type="Single" default="0" />
    <property name="type_" visibility="public" read="Get_type_" write="Set_type_" type="TOleEnum" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="TOleEnum" />
  </interface>
  <interface name="ShadowFormatDisp" GUID="{000209CC-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="ForeColor" visibility="automated" type="ColorFormat" />
    <property name="Obscured" visibility="automated" type="TOleEnum" />
    <property name="OffsetX" visibility="automated" type="Single" />
    <property name="OffsetY" visibility="automated" type="Single" />
    <property name="Transparency" visibility="automated" type="Single" />
    <property name="type_" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="TOleEnum" />
    <procedure name="IncrementOffsetX" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementOffsetY" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
  </interface>
  <interface name="ShapeNode" GUID="{000209CD-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_EditingType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Points" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_SegmentType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="EditingType" visibility="public" read="Get_EditingType" type="TOleEnum" />
    <property name="Points" visibility="public" read="Get_Points" type="OleVariant" default="0" />
    <property name="SegmentType" visibility="public" read="Get_SegmentType" type="TOleEnum" />
  </interface>
  <interface name="ShapeNodeDisp" GUID="{000209CD-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="EditingType" visibility="automated" type="TOleEnum" />
    <property name="Points" visibility="automated" type="OleVariant" />
    <property name="SegmentType" visibility="automated" type="TOleEnum" />
  </interface>
  <interface name="ShapeNodes" GUID="{000209CE-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="ShapeNode" />
      </parameters>
    </function>
    <procedure name="SetEditingType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="EditingType" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
      </parameters>
    </procedure>
    <procedure name="SetSegmentType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="SegmentType" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Insert" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="SegmentType" type="TOleEnum" />
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <parameter name="X2" type="Single" />
        <parameter name="Y2" type="Single" />
        <parameter name="X3" type="Single" />
        <parameter name="Y3" type="Single" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="ShapeNodesDisp" GUID="{000209CE-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="ShapeNode" />
      </parameters>
    </function>
    <procedure name="SetEditingType" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="EditingType" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetPosition" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
      </parameters>
    </procedure>
    <procedure name="SetSegmentType" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="SegmentType" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Insert" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="SegmentType" type="TOleEnum" />
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <parameter name="X2" type="Single" />
        <parameter name="Y2" type="Single" />
        <parameter name="X3" type="Single" />
        <parameter name="Y3" type="Single" />
      </parameters>
    </procedure>
  </interface>
  <interface name="TextEffectFormat" GUID="{000209CF-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_FontBold" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_FontBold" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_FontItalic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_FontItalic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_FontName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_FontName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_FontSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_FontSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_KernedPairs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_KernedPairs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_NormalizedHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_NormalizedHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PresetShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_PresetShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PresetTextEffect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_PresetTextEffect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_RotatedChars" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_RotatedChars" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Tracking" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Tracking" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <procedure name="ToggleVerticalText" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Alignment" visibility="public" read="Get_Alignment" write="Set_Alignment" type="TOleEnum" />
    <property name="FontBold" visibility="public" read="Get_FontBold" write="Set_FontBold" type="TOleEnum" />
    <property name="FontItalic" visibility="public" read="Get_FontItalic" write="Set_FontItalic" type="TOleEnum" />
    <property name="FontName" visibility="public" read="Get_FontName" write="Set_FontName" type="WideString" default="0" />
    <property name="FontSize" visibility="public" read="Get_FontSize" write="Set_FontSize" type="Single" default="0" />
    <property name="KernedPairs" visibility="public" read="Get_KernedPairs" write="Set_KernedPairs" type="TOleEnum" />
    <property name="NormalizedHeight" visibility="public" read="Get_NormalizedHeight" write="Set_NormalizedHeight" type="TOleEnum" />
    <property name="PresetShape" visibility="public" read="Get_PresetShape" write="Set_PresetShape" type="TOleEnum" />
    <property name="PresetTextEffect" visibility="public" read="Get_PresetTextEffect" write="Set_PresetTextEffect" type="TOleEnum" />
    <property name="RotatedChars" visibility="public" read="Get_RotatedChars" write="Set_RotatedChars" type="TOleEnum" />
    <property name="Text" visibility="public" read="Get_Text" write="Set_Text" type="WideString" default="0" />
    <property name="Tracking" visibility="public" read="Get_Tracking" write="Set_Tracking" type="Single" default="0" />
  </interface>
  <interface name="TextEffectFormatDisp" GUID="{000209CF-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Alignment" visibility="automated" type="TOleEnum" />
    <property name="FontBold" visibility="automated" type="TOleEnum" />
    <property name="FontItalic" visibility="automated" type="TOleEnum" />
    <property name="FontName" visibility="automated" type="WideString" />
    <property name="FontSize" visibility="automated" type="Single" />
    <property name="KernedPairs" visibility="automated" type="TOleEnum" />
    <property name="NormalizedHeight" visibility="automated" type="TOleEnum" />
    <property name="PresetShape" visibility="automated" type="TOleEnum" />
    <property name="PresetTextEffect" visibility="automated" type="TOleEnum" />
    <property name="RotatedChars" visibility="automated" type="TOleEnum" />
    <property name="Text" visibility="automated" type="WideString" />
    <property name="Tracking" visibility="automated" type="Single" />
    <procedure name="ToggleVerticalText" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="ThreeDFormat" GUID="{000209D0-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="_Application" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Depth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Depth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ExtrusionColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ColorFormat" />
      </parameters>
    </function>
    <function name="Get_ExtrusionColorType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_ExtrusionColorType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Perspective" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Perspective" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PresetExtrusionDirection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_PresetLightingDirection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_PresetLightingDirection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PresetLightingSoftness" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_PresetLightingSoftness" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PresetMaterial" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_PresetMaterial" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PresetThreeDFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_RotationX" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_RotationX" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_RotationY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_RotationY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="prop" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="IncrementRotationX" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementRotationY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="ResetRotation" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SetExtrusionDirection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetExtrusionDirection" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetThreeDFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetThreeDFormat" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="_Application" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Depth" visibility="public" read="Get_Depth" write="Set_Depth" type="Single" default="0" />
    <property name="ExtrusionColor" visibility="public" read="Get_ExtrusionColor" type="ColorFormat" />
    <property name="ExtrusionColorType" visibility="public" read="Get_ExtrusionColorType" write="Set_ExtrusionColorType" type="TOleEnum" />
    <property name="Perspective" visibility="public" read="Get_Perspective" write="Set_Perspective" type="TOleEnum" />
    <property name="PresetExtrusionDirection" visibility="public" read="Get_PresetExtrusionDirection" type="TOleEnum" />
    <property name="PresetLightingDirection" visibility="public" read="Get_PresetLightingDirection" write="Set_PresetLightingDirection" type="TOleEnum" />
    <property name="PresetLightingSoftness" visibility="public" read="Get_PresetLightingSoftness" write="Set_PresetLightingSoftness" type="TOleEnum" />
    <property name="PresetMaterial" visibility="public" read="Get_PresetMaterial" write="Set_PresetMaterial" type="TOleEnum" />
    <property name="PresetThreeDFormat" visibility="public" read="Get_PresetThreeDFormat" type="TOleEnum" />
    <property name="RotationX" visibility="public" read="Get_RotationX" write="Set_RotationX" type="Single" default="0" />
    <property name="RotationY" visibility="public" read="Get_RotationY" write="Set_RotationY" type="Single" default="0" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="TOleEnum" />
  </interface>
  <interface name="ThreeDFormatDisp" GUID="{000209D0-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="_Application" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Depth" visibility="automated" type="Single" />
    <property name="ExtrusionColor" visibility="automated" type="ColorFormat" />
    <property name="ExtrusionColorType" visibility="automated" type="TOleEnum" />
    <property name="Perspective" visibility="automated" type="TOleEnum" />
    <property name="PresetExtrusionDirection" visibility="automated" type="TOleEnum" />
    <property name="PresetLightingDirection" visibility="automated" type="TOleEnum" />
    <property name="PresetLightingSoftness" visibility="automated" type="TOleEnum" />
    <property name="PresetMaterial" visibility="automated" type="TOleEnum" />
    <property name="PresetThreeDFormat" visibility="automated" type="TOleEnum" />
    <property name="RotationX" visibility="automated" type="Single" />
    <property name="RotationY" visibility="automated" type="Single" />
    <property name="Visible" visibility="automated" type="TOleEnum" />
    <procedure name="IncrementRotationX" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementRotationY" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="ResetRotation" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetExtrusionDirection" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="PresetExtrusionDirection" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetThreeDFormat" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="PresetThreeDFormat" type="TOleEnum" />
      </parameters>
    </procedure>
  </interface>
  <interface name="ApplicationEvents" GUID="{000209F7-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <procedure name="Startup" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Quit" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="DocumentChange" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="DocumentEvents" GUID="{000209F6-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <procedure name="New" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Open" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Close" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="OCXEvents" GUID="{000209F3-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <procedure name="GotFocus" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="LostFocus" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <class name="CoWordGlobal">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="DisposeOf" visibility="public" procflags="inline" symflags="deprecated">
      </methodref>
      <methodref name="InitInstance" visibility="public" procflags="class">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public" procflags="inline">
      </methodref>
      <methodref name="ClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassNameIs" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassParent" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="ClassInfo" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InstanceSize" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InheritsFrom" visibility="public" procflags="class">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodName" visibility="public" procflags="class">
      </methodref>
      <methodref name="QualifiedClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="UnitName" visibility="public" procflags="class">
      </methodref>
      <methodref name="UnitScope" visibility="public" procflags="class">
      </methodref>
      <methodref name="Equals" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetHashCode" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToString" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="SafeCallException" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Dispatch" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="NewInstance" visibility="public" procflags="class virtual">
      </methodref>
      <methodref name="FreeInstance" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
      </methodref>
      <methodref name="GetDisposed" visibility="protected" procflags="inline">
      </methodref>
      <methodref name="CheckDisposed" visibility="protected" procflags="inline">
      </methodref>
      <propertyref name="Disposed" visibility="protected">
      </propertyref>
    </ancestor>
    <members>
      <function name="Create" visibility="public" procflags="class">
        <parameters>
          <retval type="_Global" />
        </parameters>
      </function>
      <function name="CreateRemote" visibility="public" procflags="class">
        <parameters>
          <parameter name="MachineName" type="string" paramflags="const" />
          <retval type="_Global" />
        </parameters>
      </function>
    </members>
  </class>
  <class name="TWordGlobal">
    <ancestor name="TOleServer" namespace="Vcl.OleServer">
      <interfaces>
        <implements name="IInterface" />
      </interfaces>
      <methodref name="QueryInterface" visibility="protected" procflags="override">
      </methodref>
      <methodref name="_AddRef" visibility="protected">
      </methodref>
      <methodref name="_Release" visibility="protected">
      </methodref>
      <methodref name="Loaded" visibility="protected" procflags="override">
      </methodref>
      <methodref name="InitServerData" visibility="protected" procflags="abstract virtual">
      </methodref>
      <methodref name="GetServer" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="ConnectEvents" visibility="protected">
      </methodref>
      <methodref name="DisconnectEvents" visibility="protected">
      </methodref>
      <methodref name="InvokeEvent" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetConnectKind" visibility="protected">
      </methodref>
      <methodref name="SetConnectKind" visibility="protected">
      </methodref>
      <methodref name="GetAutoConnect" visibility="protected">
      </methodref>
      <methodref name="SetAutoConnect" visibility="protected">
      </methodref>
      <propertyref name="ServerData" visibility="protected">
      </propertyref>
      <propertyref name="EventDispatch" visibility="protected">
      </propertyref>
      <methodref name="Create" visibility="public" procflags="constructor override">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor override">
      </methodref>
      <methodref name="Connect" visibility="public" procflags="abstract virtual">
      </methodref>
      <methodref name="Disconnect" visibility="public" procflags="abstract virtual">
      </methodref>
      <propertyref name="AutoConnect" visibility="published">
      </propertyref>
      <propertyref name="ConnectKind" visibility="published">
      </propertyref>
      <propertyref name="RemoteMachineName" visibility="published">
      </propertyref>
      <ancestor name="TComponent" namespace="System.Classes">
        <interfaces>
          <implements name="IInterfaceComponentReference" />
          <implements name="IInterface" />
        </interfaces>
        <methodref name="GetComObject" visibility="private">
        </methodref>
        <methodref name="GetComponent" visibility="private">
        </methodref>
        <methodref name="GetComponentCount" visibility="private">
        </methodref>
        <methodref name="GetComponentIndex" visibility="private">
        </methodref>
        <methodref name="Insert" visibility="private">
        </methodref>
        <methodref name="ReadLeft" visibility="private">
        </methodref>
        <methodref name="ReadTop" visibility="private">
        </methodref>
        <methodref name="Remove" visibility="private">
        </methodref>
        <methodref name="RemoveNotification" visibility="private">
        </methodref>
        <methodref name="SetComponentIndex" visibility="private">
        </methodref>
        <methodref name="SetReference" visibility="private">
        </methodref>
        <methodref name="WriteLeft" visibility="private">
        </methodref>
        <methodref name="WriteTop" visibility="private">
        </methodref>
        <methodref name="IntfGetComponent" visibility="private">
        </methodref>
        <methodref name="DoGetDeltaStreams" visibility="private">
        </methodref>
        <methodref name="ReadDeltaStream" visibility="private">
        </methodref>
        <methodref name="ReadDeltaState" visibility="private">
        </methodref>
        <methodref name="FindSortedComponent" visibility="private">
        </methodref>
        <methodref name="AddSortedComponent" visibility="private">
        </methodref>
        <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
        </methodref>
        <methodref name="Create@" visibility="class private" procflags="class constructor noself">
        </methodref>
        <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ChangeName" visibility="protected">
        </methodref>
        <methodref name="DefineProperties" visibility="protected" procflags="override">
        </methodref>
        <methodref name="GetChildren" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetOwner" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Loaded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Notification" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ReadState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="CanObserve" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetObservers" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetAncestor" visibility="protected">
        </methodref>
        <methodref name="SetDesigning" visibility="protected">
        </methodref>
        <methodref name="SetInline" visibility="protected">
        </methodref>
        <methodref name="SetDesignInstance" visibility="protected">
        </methodref>
        <methodref name="SetName" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updating" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updated" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
        </methodref>
        <methodref name="ValidateRename" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="WriteState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="RemoveFreeNotifications" visibility="protected">
        </methodref>
        <methodref name="QueryInterface" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="_AddRef" visibility="protected">
        </methodref>
        <methodref name="_Release" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfoCount" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfo" visibility="protected">
        </methodref>
        <methodref name="GetIDsOfNames" visibility="protected">
        </methodref>
        <methodref name="Invoke" visibility="protected">
        </methodref>
        <eventref name="OnGetDeltaStreams" visibility="protected">
        </eventref>
        <methodref name="Create" visibility="public" procflags="constructor virtual">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor override">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public" procflags="override">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndFunctionInvoke" visibility="public">
        </methodref>
        <methodref name="DestroyComponents" visibility="public">
        </methodref>
        <methodref name="Destroying" visibility="public">
        </methodref>
        <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="FindComponent" visibility="public">
        </methodref>
        <methodref name="FreeNotification" visibility="public">
        </methodref>
        <methodref name="RemoveFreeNotification" visibility="public">
        </methodref>
        <methodref name="FreeOnRelease" visibility="public">
        </methodref>
        <methodref name="GetEnumerator" visibility="public" procflags="inline">
        </methodref>
        <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="GetNamePath" visibility="public" procflags="override">
        </methodref>
        <methodref name="HasParent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="InsertComponent" visibility="public">
        </methodref>
        <methodref name="RemoveComponent" visibility="public">
        </methodref>
        <methodref name="SetSubComponent" visibility="public">
        </methodref>
        <methodref name="SafeCallException" visibility="public" procflags="override">
        </methodref>
        <methodref name="UpdateAction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="IsImplementorOf" visibility="public">
        </methodref>
        <methodref name="ReferenceInterface" visibility="public">
        </methodref>
        <propertyref name="ComObject" visibility="public">
        </propertyref>
        <propertyref name="Components" visibility="public">
        </propertyref>
        <propertyref name="ComponentCount" visibility="public">
        </propertyref>
        <propertyref name="ComponentIndex" visibility="public">
        </propertyref>
        <propertyref name="ComponentState" visibility="public">
        </propertyref>
        <propertyref name="ComponentStyle" visibility="public">
        </propertyref>
        <propertyref name="DesignInfo" visibility="public">
        </propertyref>
        <propertyref name="Owner" visibility="public">
        </propertyref>
        <propertyref name="VCLComObject" visibility="public">
        </propertyref>
        <propertyref name="Observers" visibility="public">
        </propertyref>
        <propertyref name="Name" visibility="published">
        </propertyref>
        <propertyref name="Tag" visibility="published">
        </propertyref>
        <ancestor name="TPersistent" namespace="System.Classes">
          <methodref name="AssignError" visibility="private">
          </methodref>
          <methodref name="AssignTo" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DefineProperties" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetOwner" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor override">
          </methodref>
          <methodref name="Assign" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="GetNamePath" visibility="public" procflags="dynamic">
          </methodref>
          <ancestor name="TObject" namespace="System">
            <methodref name="Create" visibility="public" procflags="constructor">
            </methodref>
            <methodref name="Free" visibility="public">
            </methodref>
            <methodref name="DisposeOf" visibility="public" procflags="inline" symflags="deprecated">
            </methodref>
            <methodref name="InitInstance" visibility="public" procflags="class">
            </methodref>
            <methodref name="CleanupInstance" visibility="public">
            </methodref>
            <methodref name="ClassType" visibility="public" procflags="inline">
            </methodref>
            <methodref name="ClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassNameIs" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassParent" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="ClassInfo" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InstanceSize" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InheritsFrom" visibility="public" procflags="class">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodName" visibility="public" procflags="class">
            </methodref>
            <methodref name="QualifiedClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="GetInterface" visibility="public">
            </methodref>
            <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
            </methodref>
            <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="UnitName" visibility="public" procflags="class">
            </methodref>
            <methodref name="UnitScope" visibility="public" procflags="class">
            </methodref>
            <methodref name="Equals" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="GetHashCode" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="ToString" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="SafeCallException" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="AfterConstruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Dispatch" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="DefaultHandler" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="NewInstance" visibility="public" procflags="class virtual">
            </methodref>
            <methodref name="FreeInstance" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor virtual">
            </methodref>
            <methodref name="GetDisposed" visibility="protected" procflags="inline">
            </methodref>
            <methodref name="CheckDisposed" visibility="protected" procflags="inline">
            </methodref>
            <propertyref name="Disposed" visibility="protected">
            </propertyref>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <field name="FIntf" type="_Global" visibility="private" size="4" offset="96" />
      <function name="GetDefaultInterface" visibility="private">
        <parameters>
          <retval type="_Global" />
        </parameters>
      </function>
      <procedure name="InitServerData" visibility="protected" procflags="override">
      </procedure>
      <function name="Get_Application" visibility="protected">
        <parameters>
          <retval type="_Application" />
        </parameters>
      </function>
      <function name="Get_Creator" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="Get_Parent" visibility="protected">
        <parameters>
          <retval type="IDispatch" />
        </parameters>
      </function>
      <function name="Get_Name" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="Get_Documents" visibility="protected">
        <parameters>
          <retval type="Documents" />
        </parameters>
      </function>
      <function name="Get_Windows" visibility="protected">
        <parameters>
          <retval type="Windows" />
        </parameters>
      </function>
      <function name="Get_ActiveDocument" visibility="protected">
        <parameters>
          <retval type="_Document" />
        </parameters>
      </function>
      <function name="Get_ActiveWindow" visibility="protected">
        <parameters>
          <retval type="Window" />
        </parameters>
      </function>
      <function name="Get_Selection" visibility="protected">
        <parameters>
          <retval type="WordSelection" />
        </parameters>
      </function>
      <function name="Get_WordBasic" visibility="protected">
        <parameters>
          <retval type="IDispatch" />
        </parameters>
      </function>
      <function name="Get_PrintPreview" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_PrintPreview" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_RecentFiles" visibility="protected">
        <parameters>
          <retval type="RecentFiles" />
        </parameters>
      </function>
      <function name="Get_NormalTemplate" visibility="protected">
        <parameters>
          <retval type="Template" />
        </parameters>
      </function>
      <function name="Get_System_" visibility="protected">
        <parameters>
          <retval type="System" />
        </parameters>
      </function>
      <function name="Get_AutoCorrect" visibility="protected">
        <parameters>
          <retval type="AutoCorrect" />
        </parameters>
      </function>
      <function name="Get_FontNames" visibility="protected">
        <parameters>
          <retval type="FontNames" />
        </parameters>
      </function>
      <function name="Get_LandscapeFontNames" visibility="protected">
        <parameters>
          <retval type="FontNames" />
        </parameters>
      </function>
      <function name="Get_PortraitFontNames" visibility="protected">
        <parameters>
          <retval type="FontNames" />
        </parameters>
      </function>
      <function name="Get_Languages" visibility="protected">
        <parameters>
          <retval type="Languages" />
        </parameters>
      </function>
      <function name="Get_Assistant" visibility="protected">
        <parameters>
          <retval type="Assistant" />
        </parameters>
      </function>
      <function name="Get_FileConverters" visibility="protected">
        <parameters>
          <retval type="FileConverters" />
        </parameters>
      </function>
      <function name="Get_Dialogs" visibility="protected">
        <parameters>
          <retval type="Dialogs" />
        </parameters>
      </function>
      <function name="Get_CaptionLabels" visibility="protected">
        <parameters>
          <retval type="CaptionLabels" />
        </parameters>
      </function>
      <function name="Get_AutoCaptions" visibility="protected">
        <parameters>
          <retval type="AutoCaptions" />
        </parameters>
      </function>
      <function name="Get_AddIns" visibility="protected">
        <parameters>
          <retval type="AddIns" />
        </parameters>
      </function>
      <function name="Get_Tasks" visibility="protected">
        <parameters>
          <retval type="Tasks" />
        </parameters>
      </function>
      <function name="Get_MacroContainer" visibility="protected">
        <parameters>
          <retval type="IDispatch" />
        </parameters>
      </function>
      <function name="Get_CommandBars" visibility="protected">
        <parameters>
          <retval type="CommandBars" />
        </parameters>
      </function>
      <function name="Get_SynonymInfo" visibility="protected">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="LanguageID" type="OleVariant" paramflags="var" />
          <retval type="SynonymInfo" />
        </parameters>
      </function>
      <function name="Get_VBE" visibility="protected">
        <parameters>
          <retval type="VBE" />
        </parameters>
      </function>
      <function name="Get_ListGalleries" visibility="protected">
        <parameters>
          <retval type="ListGalleries" />
        </parameters>
      </function>
      <function name="Get_ActivePrinter" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_ActivePrinter" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_Templates" visibility="protected">
        <parameters>
          <retval type="Templates" />
        </parameters>
      </function>
      <function name="Get_CustomizationContext" visibility="protected">
        <parameters>
          <retval type="IDispatch" />
        </parameters>
      </function>
      <procedure name="Set_CustomizationContext" visibility="protected">
        <parameters>
          <parameter name="prop" type="IDispatch" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_KeyBindings" visibility="protected">
        <parameters>
          <retval type="KeyBindings" />
        </parameters>
      </function>
      <function name="Get_KeysBoundTo" visibility="protected">
        <parameters>
          <parameter name="KeyCategory" type="TOleEnum" />
          <parameter name="Command" type="WideString" paramflags="const" />
          <parameter name="CommandParameter" type="OleVariant" paramflags="var" />
          <retval type="KeysBoundTo" />
        </parameters>
      </function>
      <function name="Get_FindKey" visibility="protected">
        <parameters>
          <parameter name="KeyCode" type="Integer" />
          <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
          <retval type="KeyBinding" />
        </parameters>
      </function>
      <function name="Get_Options" visibility="protected">
        <parameters>
          <retval type="Options" />
        </parameters>
      </function>
      <function name="Get_CustomDictionaries" visibility="protected">
        <parameters>
          <retval type="Dictionaries" />
        </parameters>
      </function>
      <procedure name="Set_StatusBar" visibility="protected">
        <parameters>
          <parameter name="Param1" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_ShowVisualBasicEditor" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_ShowVisualBasicEditor" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_IsObjectValid" visibility="protected">
        <parameters>
          <parameter name="Object_" type="IDispatch" paramflags="const" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Get_HangulHanjaDictionaries" visibility="protected">
        <parameters>
          <retval type="HangulHanjaConversionDictionaries" />
        </parameters>
      </function>
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="AOwner" type="TComponent" />
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public">
        <parameters>
        </parameters>
      </destructor>
      <procedure name="Connect" visibility="public" procflags="override">
      </procedure>
      <procedure name="ConnectTo" visibility="public">
        <parameters>
          <parameter name="svrIntf" type="_Global" />
        </parameters>
      </procedure>
      <procedure name="Disconnect" visibility="public" procflags="override">
      </procedure>
      <function name="Repeat_" visibility="public" procflags="overload">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Repeat_" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Times" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="DDEExecute" visibility="public">
        <parameters>
          <parameter name="Channel" type="Integer" />
          <parameter name="Command" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="DDEInitiate" visibility="public">
        <parameters>
          <parameter name="App" type="WideString" paramflags="const" />
          <parameter name="Topic" type="WideString" paramflags="const" />
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="DDEPoke" visibility="public">
        <parameters>
          <parameter name="Channel" type="Integer" />
          <parameter name="Item" type="WideString" paramflags="const" />
          <parameter name="Data" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="DDERequest" visibility="public">
        <parameters>
          <parameter name="Channel" type="Integer" />
          <parameter name="Item" type="WideString" paramflags="const" />
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="DDETerminate" visibility="public">
        <parameters>
          <parameter name="Channel" type="Integer" />
        </parameters>
      </procedure>
      <procedure name="DDETerminateAll" visibility="public">
      </procedure>
      <function name="BuildKeyCode" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Arg1" type="TOleEnum" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="BuildKeyCode" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Arg1" type="TOleEnum" />
          <parameter name="Arg2" type="OleVariant" paramflags="var" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="BuildKeyCode" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Arg1" type="TOleEnum" />
          <parameter name="Arg2" type="OleVariant" paramflags="var" />
          <parameter name="Arg3" type="OleVariant" paramflags="var" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="BuildKeyCode" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Arg1" type="TOleEnum" />
          <parameter name="Arg2" type="OleVariant" paramflags="var" />
          <parameter name="Arg3" type="OleVariant" paramflags="var" />
          <parameter name="Arg4" type="OleVariant" paramflags="var" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="KeyString" visibility="public" procflags="overload">
        <parameters>
          <parameter name="KeyCode" type="Integer" />
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="KeyString" visibility="public" procflags="overload">
        <parameters>
          <parameter name="KeyCode" type="Integer" />
          <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <procedure name="Help" visibility="public">
        <parameters>
          <parameter name="HelpType" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <function name="NewWindow" visibility="public">
        <parameters>
          <retval type="Window" />
        </parameters>
      </function>
      <function name="CleanString" visibility="public">
        <parameters>
          <parameter name="String_" type="WideString" paramflags="const" />
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="ChangeFileOpenDirectory" visibility="public">
        <parameters>
          <parameter name="Path" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="InchesToPoints" visibility="public">
        <parameters>
          <parameter name="Inches" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="CentimetersToPoints" visibility="public">
        <parameters>
          <parameter name="Centimeters" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="MillimetersToPoints" visibility="public">
        <parameters>
          <parameter name="Millimeters" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="PicasToPoints" visibility="public">
        <parameters>
          <parameter name="Picas" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="LinesToPoints" visibility="public">
        <parameters>
          <parameter name="Lines" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="PointsToInches" visibility="public">
        <parameters>
          <parameter name="Points" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="PointsToCentimeters" visibility="public">
        <parameters>
          <parameter name="Points" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="PointsToMillimeters" visibility="public">
        <parameters>
          <parameter name="Points" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="PointsToPicas" visibility="public">
        <parameters>
          <parameter name="Points" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="PointsToLines" visibility="public">
        <parameters>
          <parameter name="Points" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <property name="DefaultInterface" visibility="public" read="GetDefaultInterface" type="_Global" />
      <property name="Application" visibility="public" read="Get_Application" type="_Application" />
      <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
      <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
      <property name="Name" visibility="public" read="Get_Name" type="WideString" />
      <property name="Documents" visibility="public" read="Get_Documents" type="Documents" />
      <property name="Windows" visibility="public" read="Get_Windows" type="Windows" />
      <property name="ActiveDocument" visibility="public" read="Get_ActiveDocument" type="_Document" />
      <property name="ActiveWindow" visibility="public" read="Get_ActiveWindow" type="Window" />
      <property name="Selection" visibility="public" read="Get_Selection" type="WordSelection" />
      <property name="WordBasic" visibility="public" read="Get_WordBasic" type="IDispatch" />
      <property name="RecentFiles" visibility="public" read="Get_RecentFiles" type="RecentFiles" />
      <property name="NormalTemplate" visibility="public" read="Get_NormalTemplate" type="Template" />
      <property name="System_" visibility="public" read="Get_System_" type="System" />
      <property name="AutoCorrect" visibility="public" read="Get_AutoCorrect" type="AutoCorrect" />
      <property name="FontNames" visibility="public" read="Get_FontNames" type="FontNames" />
      <property name="LandscapeFontNames" visibility="public" read="Get_LandscapeFontNames" type="FontNames" />
      <property name="PortraitFontNames" visibility="public" read="Get_PortraitFontNames" type="FontNames" />
      <property name="Languages" visibility="public" read="Get_Languages" type="Languages" />
      <property name="Assistant" visibility="public" read="Get_Assistant" type="Assistant" />
      <property name="FileConverters" visibility="public" read="Get_FileConverters" type="FileConverters" />
      <property name="Dialogs" visibility="public" read="Get_Dialogs" type="Dialogs" />
      <property name="CaptionLabels" visibility="public" read="Get_CaptionLabels" type="CaptionLabels" />
      <property name="AutoCaptions" visibility="public" read="Get_AutoCaptions" type="AutoCaptions" />
      <property name="AddIns" visibility="public" read="Get_AddIns" type="AddIns" />
      <property name="Tasks" visibility="public" read="Get_Tasks" type="Tasks" />
      <property name="MacroContainer" visibility="public" read="Get_MacroContainer" type="IDispatch" />
      <property name="CommandBars" visibility="public" read="Get_CommandBars" type="CommandBars" />
      <property name="SynonymInfo[const Word][LanguageID]" visibility="public" read="Get_SynonymInfo" type="SynonymInfo" />
      <property name="VBE" visibility="public" read="Get_VBE" type="VBE" />
      <property name="ListGalleries" visibility="public" read="Get_ListGalleries" type="ListGalleries" />
      <property name="Templates" visibility="public" read="Get_Templates" type="Templates" />
      <property name="CustomizationContext" visibility="public" read="Get_CustomizationContext" write="Set_CustomizationContext" type="IDispatch" />
      <property name="KeyBindings" visibility="public" read="Get_KeyBindings" type="KeyBindings" />
      <property name="KeysBoundTo[KeyCategory][const Command][CommandParameter]" visibility="public" read="Get_KeysBoundTo" type="KeysBoundTo" />
      <property name="FindKey[KeyCode][KeyCode2]" visibility="public" read="Get_FindKey" type="KeyBinding" />
      <property name="Options" visibility="public" read="Get_Options" type="Options" />
      <property name="CustomDictionaries" visibility="public" read="Get_CustomDictionaries" type="Dictionaries" />
      <property name="StatusBar" visibility="public" write="Set_StatusBar" type="WideString" default="0" />
      <property name="IsObjectValid[const Object_]" visibility="public" read="Get_IsObjectValid" type="WordBool" />
      <property name="HangulHanjaDictionaries" visibility="public" read="Get_HangulHanjaDictionaries" type="HangulHanjaConversionDictionaries" />
      <property name="PrintPreview" visibility="public" read="Get_PrintPreview" write="Set_PrintPreview" type="WordBool" />
      <property name="ActivePrinter" visibility="public" read="Get_ActivePrinter" write="Set_ActivePrinter" type="WideString" default="0" />
      <property name="ShowVisualBasicEditor" visibility="public" read="Get_ShowVisualBasicEditor" write="Set_ShowVisualBasicEditor" type="WordBool" />
    </members>
  </class>
  <class name="CoWordApplication">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="DisposeOf" visibility="public" procflags="inline" symflags="deprecated">
      </methodref>
      <methodref name="InitInstance" visibility="public" procflags="class">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public" procflags="inline">
      </methodref>
      <methodref name="ClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassNameIs" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassParent" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="ClassInfo" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InstanceSize" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InheritsFrom" visibility="public" procflags="class">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodName" visibility="public" procflags="class">
      </methodref>
      <methodref name="QualifiedClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="UnitName" visibility="public" procflags="class">
      </methodref>
      <methodref name="UnitScope" visibility="public" procflags="class">
      </methodref>
      <methodref name="Equals" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetHashCode" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToString" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="SafeCallException" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Dispatch" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="NewInstance" visibility="public" procflags="class virtual">
      </methodref>
      <methodref name="FreeInstance" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
      </methodref>
      <methodref name="GetDisposed" visibility="protected" procflags="inline">
      </methodref>
      <methodref name="CheckDisposed" visibility="protected" procflags="inline">
      </methodref>
      <propertyref name="Disposed" visibility="protected">
      </propertyref>
    </ancestor>
    <members>
      <function name="Create" visibility="public" procflags="class">
        <parameters>
          <retval type="_Application" />
        </parameters>
      </function>
      <function name="CreateRemote" visibility="public" procflags="class">
        <parameters>
          <parameter name="MachineName" type="string" paramflags="const" />
          <retval type="_Application" />
        </parameters>
      </function>
    </members>
  </class>
  <class name="TWordApplication">
    <ancestor name="TOleServer" namespace="Vcl.OleServer">
      <interfaces>
        <implements name="IInterface" />
      </interfaces>
      <methodref name="QueryInterface" visibility="protected" procflags="override">
      </methodref>
      <methodref name="_AddRef" visibility="protected">
      </methodref>
      <methodref name="_Release" visibility="protected">
      </methodref>
      <methodref name="Loaded" visibility="protected" procflags="override">
      </methodref>
      <methodref name="InitServerData" visibility="protected" procflags="abstract virtual">
      </methodref>
      <methodref name="GetServer" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="ConnectEvents" visibility="protected">
      </methodref>
      <methodref name="DisconnectEvents" visibility="protected">
      </methodref>
      <methodref name="InvokeEvent" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetConnectKind" visibility="protected">
      </methodref>
      <methodref name="SetConnectKind" visibility="protected">
      </methodref>
      <methodref name="GetAutoConnect" visibility="protected">
      </methodref>
      <methodref name="SetAutoConnect" visibility="protected">
      </methodref>
      <propertyref name="ServerData" visibility="protected">
      </propertyref>
      <propertyref name="EventDispatch" visibility="protected">
      </propertyref>
      <methodref name="Create" visibility="public" procflags="constructor override">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor override">
      </methodref>
      <methodref name="Connect" visibility="public" procflags="abstract virtual">
      </methodref>
      <methodref name="Disconnect" visibility="public" procflags="abstract virtual">
      </methodref>
      <propertyref name="AutoConnect" visibility="published">
      </propertyref>
      <propertyref name="ConnectKind" visibility="published">
      </propertyref>
      <propertyref name="RemoteMachineName" visibility="published">
      </propertyref>
      <ancestor name="TComponent" namespace="System.Classes">
        <interfaces>
          <implements name="IInterfaceComponentReference" />
          <implements name="IInterface" />
        </interfaces>
        <methodref name="GetComObject" visibility="private">
        </methodref>
        <methodref name="GetComponent" visibility="private">
        </methodref>
        <methodref name="GetComponentCount" visibility="private">
        </methodref>
        <methodref name="GetComponentIndex" visibility="private">
        </methodref>
        <methodref name="Insert" visibility="private">
        </methodref>
        <methodref name="ReadLeft" visibility="private">
        </methodref>
        <methodref name="ReadTop" visibility="private">
        </methodref>
        <methodref name="Remove" visibility="private">
        </methodref>
        <methodref name="RemoveNotification" visibility="private">
        </methodref>
        <methodref name="SetComponentIndex" visibility="private">
        </methodref>
        <methodref name="SetReference" visibility="private">
        </methodref>
        <methodref name="WriteLeft" visibility="private">
        </methodref>
        <methodref name="WriteTop" visibility="private">
        </methodref>
        <methodref name="IntfGetComponent" visibility="private">
        </methodref>
        <methodref name="DoGetDeltaStreams" visibility="private">
        </methodref>
        <methodref name="ReadDeltaStream" visibility="private">
        </methodref>
        <methodref name="ReadDeltaState" visibility="private">
        </methodref>
        <methodref name="FindSortedComponent" visibility="private">
        </methodref>
        <methodref name="AddSortedComponent" visibility="private">
        </methodref>
        <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
        </methodref>
        <methodref name="Create@" visibility="class private" procflags="class constructor noself">
        </methodref>
        <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ChangeName" visibility="protected">
        </methodref>
        <methodref name="DefineProperties" visibility="protected" procflags="override">
        </methodref>
        <methodref name="GetChildren" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetOwner" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Loaded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Notification" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ReadState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="CanObserve" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetObservers" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetAncestor" visibility="protected">
        </methodref>
        <methodref name="SetDesigning" visibility="protected">
        </methodref>
        <methodref name="SetInline" visibility="protected">
        </methodref>
        <methodref name="SetDesignInstance" visibility="protected">
        </methodref>
        <methodref name="SetName" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updating" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updated" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
        </methodref>
        <methodref name="ValidateRename" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="WriteState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="RemoveFreeNotifications" visibility="protected">
        </methodref>
        <methodref name="QueryInterface" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="_AddRef" visibility="protected">
        </methodref>
        <methodref name="_Release" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfoCount" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfo" visibility="protected">
        </methodref>
        <methodref name="GetIDsOfNames" visibility="protected">
        </methodref>
        <methodref name="Invoke" visibility="protected">
        </methodref>
        <eventref name="OnGetDeltaStreams" visibility="protected">
        </eventref>
        <methodref name="Create" visibility="public" procflags="constructor virtual">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor override">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public" procflags="override">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndFunctionInvoke" visibility="public">
        </methodref>
        <methodref name="DestroyComponents" visibility="public">
        </methodref>
        <methodref name="Destroying" visibility="public">
        </methodref>
        <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="FindComponent" visibility="public">
        </methodref>
        <methodref name="FreeNotification" visibility="public">
        </methodref>
        <methodref name="RemoveFreeNotification" visibility="public">
        </methodref>
        <methodref name="FreeOnRelease" visibility="public">
        </methodref>
        <methodref name="GetEnumerator" visibility="public" procflags="inline">
        </methodref>
        <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="GetNamePath" visibility="public" procflags="override">
        </methodref>
        <methodref name="HasParent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="InsertComponent" visibility="public">
        </methodref>
        <methodref name="RemoveComponent" visibility="public">
        </methodref>
        <methodref name="SetSubComponent" visibility="public">
        </methodref>
        <methodref name="SafeCallException" visibility="public" procflags="override">
        </methodref>
        <methodref name="UpdateAction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="IsImplementorOf" visibility="public">
        </methodref>
        <methodref name="ReferenceInterface" visibility="public">
        </methodref>
        <propertyref name="ComObject" visibility="public">
        </propertyref>
        <propertyref name="Components" visibility="public">
        </propertyref>
        <propertyref name="ComponentCount" visibility="public">
        </propertyref>
        <propertyref name="ComponentIndex" visibility="public">
        </propertyref>
        <propertyref name="ComponentState" visibility="public">
        </propertyref>
        <propertyref name="ComponentStyle" visibility="public">
        </propertyref>
        <propertyref name="DesignInfo" visibility="public">
        </propertyref>
        <propertyref name="Owner" visibility="public">
        </propertyref>
        <propertyref name="VCLComObject" visibility="public">
        </propertyref>
        <propertyref name="Observers" visibility="public">
        </propertyref>
        <propertyref name="Name" visibility="published">
        </propertyref>
        <propertyref name="Tag" visibility="published">
        </propertyref>
        <ancestor name="TPersistent" namespace="System.Classes">
          <methodref name="AssignError" visibility="private">
          </methodref>
          <methodref name="AssignTo" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DefineProperties" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetOwner" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor override">
          </methodref>
          <methodref name="Assign" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="GetNamePath" visibility="public" procflags="dynamic">
          </methodref>
          <ancestor name="TObject" namespace="System">
            <methodref name="Create" visibility="public" procflags="constructor">
            </methodref>
            <methodref name="Free" visibility="public">
            </methodref>
            <methodref name="DisposeOf" visibility="public" procflags="inline" symflags="deprecated">
            </methodref>
            <methodref name="InitInstance" visibility="public" procflags="class">
            </methodref>
            <methodref name="CleanupInstance" visibility="public">
            </methodref>
            <methodref name="ClassType" visibility="public" procflags="inline">
            </methodref>
            <methodref name="ClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassNameIs" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassParent" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="ClassInfo" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InstanceSize" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InheritsFrom" visibility="public" procflags="class">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodName" visibility="public" procflags="class">
            </methodref>
            <methodref name="QualifiedClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="GetInterface" visibility="public">
            </methodref>
            <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
            </methodref>
            <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="UnitName" visibility="public" procflags="class">
            </methodref>
            <methodref name="UnitScope" visibility="public" procflags="class">
            </methodref>
            <methodref name="Equals" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="GetHashCode" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="ToString" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="SafeCallException" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="AfterConstruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Dispatch" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="DefaultHandler" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="NewInstance" visibility="public" procflags="class virtual">
            </methodref>
            <methodref name="FreeInstance" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor virtual">
            </methodref>
            <methodref name="GetDisposed" visibility="protected" procflags="inline">
            </methodref>
            <methodref name="CheckDisposed" visibility="protected" procflags="inline">
            </methodref>
            <propertyref name="Disposed" visibility="protected">
            </propertyref>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <field name="FOnStartup" type="TNotifyEvent" visibility="private" size="8" offset="96" />
      <field name="FOnQuit" type="TNotifyEvent" visibility="private" size="8" offset="104" />
      <field name="FOnDocumentChange" type="TNotifyEvent" visibility="private" size="8" offset="112" />
      <field name="FAutoQuit" type="Boolean" visibility="private" size="1" offset="120" />
      <field name="FIntf" type="_Application" visibility="private" size="4" offset="124" />
      <function name="GetDefaultInterface" visibility="private">
        <parameters>
          <retval type="_Application" />
        </parameters>
      </function>
      <procedure name="InitServerData" visibility="protected" procflags="override">
      </procedure>
      <procedure name="InvokeEvent" visibility="protected" procflags="override">
        <parameters>
          <parameter name="DispID" type="Integer" />
          <parameter name="Params" type="TOleVariantArray" paramflags="var" />
        </parameters>
      </procedure>
      <function name="Get_Application" visibility="protected">
        <parameters>
          <retval type="_Application" />
        </parameters>
      </function>
      <function name="Get_Creator" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="Get_Parent" visibility="protected">
        <parameters>
          <retval type="IDispatch" />
        </parameters>
      </function>
      <function name="Get_Name" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="Get_Documents" visibility="protected">
        <parameters>
          <retval type="Documents" />
        </parameters>
      </function>
      <function name="Get_Windows" visibility="protected">
        <parameters>
          <retval type="Windows" />
        </parameters>
      </function>
      <function name="Get_ActiveDocument" visibility="protected">
        <parameters>
          <retval type="_Document" />
        </parameters>
      </function>
      <function name="Get_ActiveWindow" visibility="protected">
        <parameters>
          <retval type="Window" />
        </parameters>
      </function>
      <function name="Get_Selection" visibility="protected">
        <parameters>
          <retval type="WordSelection" />
        </parameters>
      </function>
      <function name="Get_WordBasic" visibility="protected">
        <parameters>
          <retval type="IDispatch" />
        </parameters>
      </function>
      <function name="Get_RecentFiles" visibility="protected">
        <parameters>
          <retval type="RecentFiles" />
        </parameters>
      </function>
      <function name="Get_NormalTemplate" visibility="protected">
        <parameters>
          <retval type="Template" />
        </parameters>
      </function>
      <function name="Get_System_" visibility="protected">
        <parameters>
          <retval type="System" />
        </parameters>
      </function>
      <function name="Get_AutoCorrect" visibility="protected">
        <parameters>
          <retval type="AutoCorrect" />
        </parameters>
      </function>
      <function name="Get_FontNames" visibility="protected">
        <parameters>
          <retval type="FontNames" />
        </parameters>
      </function>
      <function name="Get_LandscapeFontNames" visibility="protected">
        <parameters>
          <retval type="FontNames" />
        </parameters>
      </function>
      <function name="Get_PortraitFontNames" visibility="protected">
        <parameters>
          <retval type="FontNames" />
        </parameters>
      </function>
      <function name="Get_Languages" visibility="protected">
        <parameters>
          <retval type="Languages" />
        </parameters>
      </function>
      <function name="Get_Assistant" visibility="protected">
        <parameters>
          <retval type="Assistant" />
        </parameters>
      </function>
      <function name="Get_Browser" visibility="protected">
        <parameters>
          <retval type="Browser" />
        </parameters>
      </function>
      <function name="Get_FileConverters" visibility="protected">
        <parameters>
          <retval type="FileConverters" />
        </parameters>
      </function>
      <function name="Get_MailingLabel" visibility="protected">
        <parameters>
          <retval type="MailingLabel" />
        </parameters>
      </function>
      <function name="Get_Dialogs" visibility="protected">
        <parameters>
          <retval type="Dialogs" />
        </parameters>
      </function>
      <function name="Get_CaptionLabels" visibility="protected">
        <parameters>
          <retval type="CaptionLabels" />
        </parameters>
      </function>
      <function name="Get_AutoCaptions" visibility="protected">
        <parameters>
          <retval type="AutoCaptions" />
        </parameters>
      </function>
      <function name="Get_AddIns" visibility="protected">
        <parameters>
          <retval type="AddIns" />
        </parameters>
      </function>
      <function name="Get_Visible" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_Visible" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_Version" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="Get_ScreenUpdating" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_ScreenUpdating" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_PrintPreview" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_PrintPreview" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_Tasks" visibility="protected">
        <parameters>
          <retval type="Tasks" />
        </parameters>
      </function>
      <function name="Get_DisplayStatusBar" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_DisplayStatusBar" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_SpecialMode" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Get_UsableWidth" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="Get_UsableHeight" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="Get_MathCoprocessorAvailable" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Get_MouseAvailable" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Get_International" visibility="protected">
        <parameters>
          <parameter name="Index" type="TOleEnum" />
          <retval type="OleVariant" />
        </parameters>
      </function>
      <function name="Get_Build" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="Get_CapsLock" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Get_NumLock" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Get_UserName" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_UserName" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_UserInitials" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_UserInitials" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_UserAddress" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_UserAddress" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_MacroContainer" visibility="protected">
        <parameters>
          <retval type="IDispatch" />
        </parameters>
      </function>
      <function name="Get_DisplayRecentFiles" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_DisplayRecentFiles" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_CommandBars" visibility="protected">
        <parameters>
          <retval type="CommandBars" />
        </parameters>
      </function>
      <function name="Get_SynonymInfo" visibility="protected">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="LanguageID" type="OleVariant" paramflags="var" />
          <retval type="SynonymInfo" />
        </parameters>
      </function>
      <function name="Get_VBE" visibility="protected">
        <parameters>
          <retval type="VBE" />
        </parameters>
      </function>
      <function name="Get_DefaultSaveFormat" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_DefaultSaveFormat" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_ListGalleries" visibility="protected">
        <parameters>
          <retval type="ListGalleries" />
        </parameters>
      </function>
      <function name="Get_ActivePrinter" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_ActivePrinter" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_Templates" visibility="protected">
        <parameters>
          <retval type="Templates" />
        </parameters>
      </function>
      <function name="Get_CustomizationContext" visibility="protected">
        <parameters>
          <retval type="IDispatch" />
        </parameters>
      </function>
      <procedure name="Set_CustomizationContext" visibility="protected">
        <parameters>
          <parameter name="prop" type="IDispatch" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_KeyBindings" visibility="protected">
        <parameters>
          <retval type="KeyBindings" />
        </parameters>
      </function>
      <function name="Get_KeysBoundTo" visibility="protected">
        <parameters>
          <parameter name="KeyCategory" type="TOleEnum" />
          <parameter name="Command" type="WideString" paramflags="const" />
          <parameter name="CommandParameter" type="OleVariant" paramflags="var" />
          <retval type="KeysBoundTo" />
        </parameters>
      </function>
      <function name="Get_FindKey" visibility="protected">
        <parameters>
          <parameter name="KeyCode" type="Integer" />
          <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
          <retval type="KeyBinding" />
        </parameters>
      </function>
      <function name="Get_Caption" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_Caption" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_Path" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="Get_DisplayScrollBars" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_DisplayScrollBars" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_StartupPath" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_StartupPath" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_BackgroundSavingStatus" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="Get_BackgroundPrintingStatus" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="Get_Left" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_Left" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_Top" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_Top" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_Width" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_Width" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_Height" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_Height" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_WindowState" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_WindowState" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <function name="Get_DisplayAutoCompleteTips" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_DisplayAutoCompleteTips" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_Options" visibility="protected">
        <parameters>
          <retval type="Options" />
        </parameters>
      </function>
      <function name="Get_DisplayAlerts" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_DisplayAlerts" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <function name="Get_CustomDictionaries" visibility="protected">
        <parameters>
          <retval type="Dictionaries" />
        </parameters>
      </function>
      <function name="Get_PathSeparator" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_StatusBar" visibility="protected">
        <parameters>
          <parameter name="Param1" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_MAPIAvailable" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Get_DisplayScreenTips" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_DisplayScreenTips" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_EnableCancelKey" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_EnableCancelKey" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <function name="Get_UserControl" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Get_FileSearch" visibility="protected">
        <parameters>
          <retval type="FileSearch" />
        </parameters>
      </function>
      <function name="Get_MailSystem" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <function name="Get_DefaultTableSeparator" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_DefaultTableSeparator" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_ShowVisualBasicEditor" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_ShowVisualBasicEditor" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_BrowseExtraFileTypes" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_BrowseExtraFileTypes" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_IsObjectValid" visibility="protected">
        <parameters>
          <parameter name="Object_" type="IDispatch" paramflags="const" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Get_HangulHanjaDictionaries" visibility="protected">
        <parameters>
          <retval type="HangulHanjaConversionDictionaries" />
        </parameters>
      </function>
      <function name="Get_MailMessage" visibility="protected">
        <parameters>
          <retval type="MailMessage" />
        </parameters>
      </function>
      <function name="Get_FocusInMailHeader" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="AOwner" type="TComponent" />
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public">
        <parameters>
        </parameters>
      </destructor>
      <procedure name="Connect" visibility="public" procflags="override">
      </procedure>
      <procedure name="ConnectTo" visibility="public">
        <parameters>
          <parameter name="svrIntf" type="_Application" />
        </parameters>
      </procedure>
      <procedure name="Disconnect" visibility="public" procflags="override">
      </procedure>
      <procedure name="Quit" visibility="public" procflags="overload">
      </procedure>
      <procedure name="Quit" visibility="public" procflags="overload">
        <parameters>
          <parameter name="SaveChanges" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="Quit" visibility="public" procflags="overload">
        <parameters>
          <parameter name="SaveChanges" type="OleVariant" paramflags="var" />
          <parameter name="OriginalFormat" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="Quit" visibility="public" procflags="overload">
        <parameters>
          <parameter name="SaveChanges" type="OleVariant" paramflags="var" />
          <parameter name="OriginalFormat" type="OleVariant" paramflags="var" />
          <parameter name="RouteDocument" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="ScreenRefresh" visibility="public">
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
          <parameter name="To_" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
          <parameter name="To_" type="OleVariant" paramflags="var" />
          <parameter name="Item" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
          <parameter name="To_" type="OleVariant" paramflags="var" />
          <parameter name="Item" type="OleVariant" paramflags="var" />
          <parameter name="Copies" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
          <parameter name="To_" type="OleVariant" paramflags="var" />
          <parameter name="Item" type="OleVariant" paramflags="var" />
          <parameter name="Copies" type="OleVariant" paramflags="var" />
          <parameter name="Pages" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
          <parameter name="To_" type="OleVariant" paramflags="var" />
          <parameter name="Item" type="OleVariant" paramflags="var" />
          <parameter name="Copies" type="OleVariant" paramflags="var" />
          <parameter name="Pages" type="OleVariant" paramflags="var" />
          <parameter name="PageType" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
          <parameter name="To_" type="OleVariant" paramflags="var" />
          <parameter name="Item" type="OleVariant" paramflags="var" />
          <parameter name="Copies" type="OleVariant" paramflags="var" />
          <parameter name="Pages" type="OleVariant" paramflags="var" />
          <parameter name="PageType" type="OleVariant" paramflags="var" />
          <parameter name="PrintToFile" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
          <parameter name="To_" type="OleVariant" paramflags="var" />
          <parameter name="Item" type="OleVariant" paramflags="var" />
          <parameter name="Copies" type="OleVariant" paramflags="var" />
          <parameter name="Pages" type="OleVariant" paramflags="var" />
          <parameter name="PageType" type="OleVariant" paramflags="var" />
          <parameter name="PrintToFile" type="OleVariant" paramflags="var" />
          <parameter name="Collate" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
          <parameter name="To_" type="OleVariant" paramflags="var" />
          <parameter name="Item" type="OleVariant" paramflags="var" />
          <parameter name="Copies" type="OleVariant" paramflags="var" />
          <parameter name="Pages" type="OleVariant" paramflags="var" />
          <parameter name="PageType" type="OleVariant" paramflags="var" />
          <parameter name="PrintToFile" type="OleVariant" paramflags="var" />
          <parameter name="Collate" type="OleVariant" paramflags="var" />
          <parameter name="FileName" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
          <parameter name="To_" type="OleVariant" paramflags="var" />
          <parameter name="Item" type="OleVariant" paramflags="var" />
          <parameter name="Copies" type="OleVariant" paramflags="var" />
          <parameter name="Pages" type="OleVariant" paramflags="var" />
          <parameter name="PageType" type="OleVariant" paramflags="var" />
          <parameter name="PrintToFile" type="OleVariant" paramflags="var" />
          <parameter name="Collate" type="OleVariant" paramflags="var" />
          <parameter name="FileName" type="OleVariant" paramflags="var" />
          <parameter name="ActivePrinterMacGX" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
          <parameter name="To_" type="OleVariant" paramflags="var" />
          <parameter name="Item" type="OleVariant" paramflags="var" />
          <parameter name="Copies" type="OleVariant" paramflags="var" />
          <parameter name="Pages" type="OleVariant" paramflags="var" />
          <parameter name="PageType" type="OleVariant" paramflags="var" />
          <parameter name="PrintToFile" type="OleVariant" paramflags="var" />
          <parameter name="Collate" type="OleVariant" paramflags="var" />
          <parameter name="FileName" type="OleVariant" paramflags="var" />
          <parameter name="ActivePrinterMacGX" type="OleVariant" paramflags="var" />
          <parameter name="ManualDuplexPrint" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="LookupNameProperties" visibility="public">
        <parameters>
          <parameter name="Name" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="SubstituteFont" visibility="public">
        <parameters>
          <parameter name="UnavailableFont" type="WideString" paramflags="const" />
          <parameter name="SubstituteFont" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Repeat_" visibility="public" procflags="overload">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Repeat_" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Times" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="DDEExecute" visibility="public">
        <parameters>
          <parameter name="Channel" type="Integer" />
          <parameter name="Command" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="DDEInitiate" visibility="public">
        <parameters>
          <parameter name="App" type="WideString" paramflags="const" />
          <parameter name="Topic" type="WideString" paramflags="const" />
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="DDEPoke" visibility="public">
        <parameters>
          <parameter name="Channel" type="Integer" />
          <parameter name="Item" type="WideString" paramflags="const" />
          <parameter name="Data" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="DDERequest" visibility="public">
        <parameters>
          <parameter name="Channel" type="Integer" />
          <parameter name="Item" type="WideString" paramflags="const" />
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="DDETerminate" visibility="public">
        <parameters>
          <parameter name="Channel" type="Integer" />
        </parameters>
      </procedure>
      <procedure name="DDETerminateAll" visibility="public">
      </procedure>
      <function name="BuildKeyCode" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Arg1" type="TOleEnum" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="BuildKeyCode" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Arg1" type="TOleEnum" />
          <parameter name="Arg2" type="OleVariant" paramflags="var" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="BuildKeyCode" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Arg1" type="TOleEnum" />
          <parameter name="Arg2" type="OleVariant" paramflags="var" />
          <parameter name="Arg3" type="OleVariant" paramflags="var" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="BuildKeyCode" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Arg1" type="TOleEnum" />
          <parameter name="Arg2" type="OleVariant" paramflags="var" />
          <parameter name="Arg3" type="OleVariant" paramflags="var" />
          <parameter name="Arg4" type="OleVariant" paramflags="var" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="KeyString" visibility="public" procflags="overload">
        <parameters>
          <parameter name="KeyCode" type="Integer" />
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="KeyString" visibility="public" procflags="overload">
        <parameters>
          <parameter name="KeyCode" type="Integer" />
          <parameter name="KeyCode2" type="OleVariant" paramflags="var" />
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="OrganizerCopy" visibility="public">
        <parameters>
          <parameter name="Source" type="WideString" paramflags="const" />
          <parameter name="Destination" type="WideString" paramflags="const" />
          <parameter name="Name" type="WideString" paramflags="const" />
          <parameter name="Object_" type="TOleEnum" />
        </parameters>
      </procedure>
      <procedure name="OrganizerDelete" visibility="public">
        <parameters>
          <parameter name="Source" type="WideString" paramflags="const" />
          <parameter name="Name" type="WideString" paramflags="const" />
          <parameter name="Object_" type="TOleEnum" />
        </parameters>
      </procedure>
      <procedure name="OrganizerRename" visibility="public">
        <parameters>
          <parameter name="Source" type="WideString" paramflags="const" />
          <parameter name="Name" type="WideString" paramflags="const" />
          <parameter name="NewName" type="WideString" paramflags="const" />
          <parameter name="Object_" type="TOleEnum" />
        </parameters>
      </procedure>
      <procedure name="AddAddress" visibility="public">
        <parameters>
          <parameter name="TagID" type="PSafeArray" paramflags="var" />
          <parameter name="Value" type="PSafeArray" paramflags="var" />
        </parameters>
      </procedure>
      <function name="GetAddress" visibility="public" procflags="overload">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="GetAddress" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Name" type="OleVariant" paramflags="var" />
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="GetAddress" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Name" type="OleVariant" paramflags="var" />
          <parameter name="AddressProperties" type="OleVariant" paramflags="var" />
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="GetAddress" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Name" type="OleVariant" paramflags="var" />
          <parameter name="AddressProperties" type="OleVariant" paramflags="var" />
          <parameter name="UseAutoText" type="OleVariant" paramflags="var" />
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="GetAddress" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Name" type="OleVariant" paramflags="var" />
          <parameter name="AddressProperties" type="OleVariant" paramflags="var" />
          <parameter name="UseAutoText" type="OleVariant" paramflags="var" />
          <parameter name="DisplaySelectDialog" type="OleVariant" paramflags="var" />
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="GetAddress" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Name" type="OleVariant" paramflags="var" />
          <parameter name="AddressProperties" type="OleVariant" paramflags="var" />
          <parameter name="UseAutoText" type="OleVariant" paramflags="var" />
          <parameter name="DisplaySelectDialog" type="OleVariant" paramflags="var" />
          <parameter name="SelectDialog" type="OleVariant" paramflags="var" />
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="GetAddress" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Name" type="OleVariant" paramflags="var" />
          <parameter name="AddressProperties" type="OleVariant" paramflags="var" />
          <parameter name="UseAutoText" type="OleVariant" paramflags="var" />
          <parameter name="DisplaySelectDialog" type="OleVariant" paramflags="var" />
          <parameter name="SelectDialog" type="OleVariant" paramflags="var" />
          <parameter name="CheckNamesDialog" type="OleVariant" paramflags="var" />
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="GetAddress" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Name" type="OleVariant" paramflags="var" />
          <parameter name="AddressProperties" type="OleVariant" paramflags="var" />
          <parameter name="UseAutoText" type="OleVariant" paramflags="var" />
          <parameter name="DisplaySelectDialog" type="OleVariant" paramflags="var" />
          <parameter name="SelectDialog" type="OleVariant" paramflags="var" />
          <parameter name="CheckNamesDialog" type="OleVariant" paramflags="var" />
          <parameter name="RecentAddressesChoice" type="OleVariant" paramflags="var" />
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="GetAddress" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Name" type="OleVariant" paramflags="var" />
          <parameter name="AddressProperties" type="OleVariant" paramflags="var" />
          <parameter name="UseAutoText" type="OleVariant" paramflags="var" />
          <parameter name="DisplaySelectDialog" type="OleVariant" paramflags="var" />
          <parameter name="SelectDialog" type="OleVariant" paramflags="var" />
          <parameter name="CheckNamesDialog" type="OleVariant" paramflags="var" />
          <parameter name="RecentAddressesChoice" type="OleVariant" paramflags="var" />
          <parameter name="UpdateRecentAddresses" type="OleVariant" paramflags="var" />
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="CheckGrammar" visibility="public">
        <parameters>
          <parameter name="String_" type="WideString" paramflags="const" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="ResetIgnoreAll" visibility="public">
      </procedure>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <function name="GetSpellingSuggestions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Word" type="WideString" paramflags="const" />
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="MainDictionary" type="OleVariant" paramflags="var" />
          <parameter name="SuggestionMode" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
          <retval type="SpellingSuggestions" />
        </parameters>
      </function>
      <procedure name="GoBack" visibility="public">
      </procedure>
      <procedure name="Help" visibility="public">
        <parameters>
          <parameter name="HelpType" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="AutomaticChange" visibility="public">
      </procedure>
      <procedure name="ShowMe" visibility="public">
      </procedure>
      <procedure name="HelpTool" visibility="public">
      </procedure>
      <function name="NewWindow" visibility="public">
        <parameters>
          <retval type="Window" />
        </parameters>
      </function>
      <procedure name="ListCommands" visibility="public">
        <parameters>
          <parameter name="ListAllCommands" type="WordBool" />
        </parameters>
      </procedure>
      <procedure name="ShowClipboard" visibility="public">
      </procedure>
      <procedure name="OnTime" visibility="public" procflags="overload">
        <parameters>
          <parameter name="When" type="OleVariant" paramflags="var" />
          <parameter name="Name" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="OnTime" visibility="public" procflags="overload">
        <parameters>
          <parameter name="When" type="OleVariant" paramflags="var" />
          <parameter name="Name" type="WideString" paramflags="const" />
          <parameter name="Tolerance" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="NextLetter" visibility="public">
      </procedure>
      <function name="MountVolume" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Zone" type="WideString" paramflags="const" />
          <parameter name="Server" type="WideString" paramflags="const" />
          <parameter name="Volume" type="WideString" paramflags="const" />
          <retval type="SmallInt" />
        </parameters>
      </function>
      <function name="MountVolume" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Zone" type="WideString" paramflags="const" />
          <parameter name="Server" type="WideString" paramflags="const" />
          <parameter name="Volume" type="WideString" paramflags="const" />
          <parameter name="User" type="OleVariant" paramflags="var" />
          <retval type="SmallInt" />
        </parameters>
      </function>
      <function name="MountVolume" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Zone" type="WideString" paramflags="const" />
          <parameter name="Server" type="WideString" paramflags="const" />
          <parameter name="Volume" type="WideString" paramflags="const" />
          <parameter name="User" type="OleVariant" paramflags="var" />
          <parameter name="UserPassword" type="OleVariant" paramflags="var" />
          <retval type="SmallInt" />
        </parameters>
      </function>
      <function name="MountVolume" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Zone" type="WideString" paramflags="const" />
          <parameter name="Server" type="WideString" paramflags="const" />
          <parameter name="Volume" type="WideString" paramflags="const" />
          <parameter name="User" type="OleVariant" paramflags="var" />
          <parameter name="UserPassword" type="OleVariant" paramflags="var" />
          <parameter name="VolumePassword" type="OleVariant" paramflags="var" />
          <retval type="SmallInt" />
        </parameters>
      </function>
      <function name="CleanString" visibility="public">
        <parameters>
          <parameter name="String_" type="WideString" paramflags="const" />
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="SendFax" visibility="public">
      </procedure>
      <procedure name="ChangeFileOpenDirectory" visibility="public">
        <parameters>
          <parameter name="Path" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="Run" visibility="public">
        <parameters>
          <parameter name="MacroName" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="GoForward" visibility="public">
      </procedure>
      <procedure name="Move" visibility="public">
        <parameters>
          <parameter name="Left" type="Integer" />
          <parameter name="Top" type="Integer" />
        </parameters>
      </procedure>
      <procedure name="Resize" visibility="public">
        <parameters>
          <parameter name="Width" type="Integer" />
          <parameter name="Height" type="Integer" />
        </parameters>
      </procedure>
      <function name="InchesToPoints" visibility="public">
        <parameters>
          <parameter name="Inches" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="CentimetersToPoints" visibility="public">
        <parameters>
          <parameter name="Centimeters" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="MillimetersToPoints" visibility="public">
        <parameters>
          <parameter name="Millimeters" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="PicasToPoints" visibility="public">
        <parameters>
          <parameter name="Picas" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="LinesToPoints" visibility="public">
        <parameters>
          <parameter name="Lines" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="PointsToInches" visibility="public">
        <parameters>
          <parameter name="Points" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="PointsToCentimeters" visibility="public">
        <parameters>
          <parameter name="Points" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="PointsToMillimeters" visibility="public">
        <parameters>
          <parameter name="Points" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="PointsToPicas" visibility="public">
        <parameters>
          <parameter name="Points" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <function name="PointsToLines" visibility="public">
        <parameters>
          <parameter name="Points" type="Single" />
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Activate" visibility="public">
      </procedure>
      <property name="DefaultInterface" visibility="public" read="GetDefaultInterface" type="_Application" />
      <property name="Application" visibility="public" read="Get_Application" type="_Application" />
      <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
      <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
      <property name="Name" visibility="public" read="Get_Name" type="WideString" />
      <property name="Documents" visibility="public" read="Get_Documents" type="Documents" />
      <property name="Windows" visibility="public" read="Get_Windows" type="Windows" />
      <property name="ActiveDocument" visibility="public" read="Get_ActiveDocument" type="_Document" />
      <property name="ActiveWindow" visibility="public" read="Get_ActiveWindow" type="Window" />
      <property name="Selection" visibility="public" read="Get_Selection" type="WordSelection" />
      <property name="WordBasic" visibility="public" read="Get_WordBasic" type="IDispatch" />
      <property name="RecentFiles" visibility="public" read="Get_RecentFiles" type="RecentFiles" />
      <property name="NormalTemplate" visibility="public" read="Get_NormalTemplate" type="Template" />
      <property name="System_" visibility="public" read="Get_System_" type="System" />
      <property name="AutoCorrect" visibility="public" read="Get_AutoCorrect" type="AutoCorrect" />
      <property name="FontNames" visibility="public" read="Get_FontNames" type="FontNames" />
      <property name="LandscapeFontNames" visibility="public" read="Get_LandscapeFontNames" type="FontNames" />
      <property name="PortraitFontNames" visibility="public" read="Get_PortraitFontNames" type="FontNames" />
      <property name="Languages" visibility="public" read="Get_Languages" type="Languages" />
      <property name="Assistant" visibility="public" read="Get_Assistant" type="Assistant" />
      <property name="Browser" visibility="public" read="Get_Browser" type="Browser" />
      <property name="FileConverters" visibility="public" read="Get_FileConverters" type="FileConverters" />
      <property name="MailingLabel" visibility="public" read="Get_MailingLabel" type="MailingLabel" />
      <property name="Dialogs" visibility="public" read="Get_Dialogs" type="Dialogs" />
      <property name="CaptionLabels" visibility="public" read="Get_CaptionLabels" type="CaptionLabels" />
      <property name="AutoCaptions" visibility="public" read="Get_AutoCaptions" type="AutoCaptions" />
      <property name="AddIns" visibility="public" read="Get_AddIns" type="AddIns" />
      <property name="Version" visibility="public" read="Get_Version" type="WideString" default="0" />
      <property name="Tasks" visibility="public" read="Get_Tasks" type="Tasks" />
      <property name="SpecialMode" visibility="public" read="Get_SpecialMode" type="WordBool" />
      <property name="UsableWidth" visibility="public" read="Get_UsableWidth" type="Integer" />
      <property name="UsableHeight" visibility="public" read="Get_UsableHeight" type="Integer" />
      <property name="MathCoprocessorAvailable" visibility="public" read="Get_MathCoprocessorAvailable" type="WordBool" />
      <property name="MouseAvailable" visibility="public" read="Get_MouseAvailable" type="WordBool" />
      <property name="International[Index]" visibility="public" read="Get_International" type="OleVariant" />
      <property name="Build" visibility="public" read="Get_Build" type="WideString" default="0" />
      <property name="CapsLock" visibility="public" read="Get_CapsLock" type="WordBool" />
      <property name="NumLock" visibility="public" read="Get_NumLock" type="WordBool" />
      <property name="MacroContainer" visibility="public" read="Get_MacroContainer" type="IDispatch" />
      <property name="CommandBars" visibility="public" read="Get_CommandBars" type="CommandBars" />
      <property name="SynonymInfo[const Word][LanguageID]" visibility="public" read="Get_SynonymInfo" type="SynonymInfo" />
      <property name="VBE" visibility="public" read="Get_VBE" type="VBE" />
      <property name="ListGalleries" visibility="public" read="Get_ListGalleries" type="ListGalleries" />
      <property name="Templates" visibility="public" read="Get_Templates" type="Templates" />
      <property name="CustomizationContext" visibility="public" read="Get_CustomizationContext" write="Set_CustomizationContext" type="IDispatch" />
      <property name="KeyBindings" visibility="public" read="Get_KeyBindings" type="KeyBindings" />
      <property name="KeysBoundTo[KeyCategory][const Command][CommandParameter]" visibility="public" read="Get_KeysBoundTo" type="KeysBoundTo" />
      <property name="FindKey[KeyCode][KeyCode2]" visibility="public" read="Get_FindKey" type="KeyBinding" />
      <property name="Path" visibility="public" read="Get_Path" type="WideString" default="0" />
      <property name="BackgroundSavingStatus" visibility="public" read="Get_BackgroundSavingStatus" type="Integer" />
      <property name="BackgroundPrintingStatus" visibility="public" read="Get_BackgroundPrintingStatus" type="Integer" />
      <property name="Options" visibility="public" read="Get_Options" type="Options" />
      <property name="CustomDictionaries" visibility="public" read="Get_CustomDictionaries" type="Dictionaries" />
      <property name="PathSeparator" visibility="public" read="Get_PathSeparator" type="WideString" default="0" />
      <property name="StatusBar" visibility="public" write="Set_StatusBar" type="WideString" default="0" />
      <property name="MAPIAvailable" visibility="public" read="Get_MAPIAvailable" type="WordBool" />
      <property name="UserControl" visibility="public" read="Get_UserControl" type="WordBool" />
      <property name="FileSearch" visibility="public" read="Get_FileSearch" type="FileSearch" />
      <property name="MailSystem" visibility="public" read="Get_MailSystem" type="TOleEnum" />
      <property name="IsObjectValid[const Object_]" visibility="public" read="Get_IsObjectValid" type="WordBool" />
      <property name="HangulHanjaDictionaries" visibility="public" read="Get_HangulHanjaDictionaries" type="HangulHanjaConversionDictionaries" />
      <property name="MailMessage" visibility="public" read="Get_MailMessage" type="MailMessage" />
      <property name="FocusInMailHeader" visibility="public" read="Get_FocusInMailHeader" type="WordBool" />
      <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="WordBool" />
      <property name="ScreenUpdating" visibility="public" read="Get_ScreenUpdating" write="Set_ScreenUpdating" type="WordBool" />
      <property name="PrintPreview" visibility="public" read="Get_PrintPreview" write="Set_PrintPreview" type="WordBool" />
      <property name="DisplayStatusBar" visibility="public" read="Get_DisplayStatusBar" write="Set_DisplayStatusBar" type="WordBool" />
      <property name="UserName" visibility="public" read="Get_UserName" write="Set_UserName" type="WideString" default="0" />
      <property name="UserInitials" visibility="public" read="Get_UserInitials" write="Set_UserInitials" type="WideString" default="0" />
      <property name="UserAddress" visibility="public" read="Get_UserAddress" write="Set_UserAddress" type="WideString" default="0" />
      <property name="DisplayRecentFiles" visibility="public" read="Get_DisplayRecentFiles" write="Set_DisplayRecentFiles" type="WordBool" />
      <property name="DefaultSaveFormat" visibility="public" read="Get_DefaultSaveFormat" write="Set_DefaultSaveFormat" type="WideString" default="0" />
      <property name="ActivePrinter" visibility="public" read="Get_ActivePrinter" write="Set_ActivePrinter" type="WideString" default="0" />
      <property name="Caption" visibility="public" read="Get_Caption" write="Set_Caption" type="WideString" default="0" />
      <property name="DisplayScrollBars" visibility="public" read="Get_DisplayScrollBars" write="Set_DisplayScrollBars" type="WordBool" />
      <property name="StartupPath" visibility="public" read="Get_StartupPath" write="Set_StartupPath" type="WideString" default="0" />
      <property name="Left" visibility="public" read="Get_Left" write="Set_Left" type="Integer" />
      <property name="Top" visibility="public" read="Get_Top" write="Set_Top" type="Integer" />
      <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Integer" />
      <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Integer" />
      <property name="WindowState" visibility="public" read="Get_WindowState" write="Set_WindowState" type="TOleEnum" />
      <property name="DisplayAutoCompleteTips" visibility="public" read="Get_DisplayAutoCompleteTips" write="Set_DisplayAutoCompleteTips" type="WordBool" />
      <property name="DisplayAlerts" visibility="public" read="Get_DisplayAlerts" write="Set_DisplayAlerts" type="TOleEnum" />
      <property name="DisplayScreenTips" visibility="public" read="Get_DisplayScreenTips" write="Set_DisplayScreenTips" type="WordBool" />
      <property name="EnableCancelKey" visibility="public" read="Get_EnableCancelKey" write="Set_EnableCancelKey" type="TOleEnum" />
      <property name="DefaultTableSeparator" visibility="public" read="Get_DefaultTableSeparator" write="Set_DefaultTableSeparator" type="WideString" default="0" />
      <property name="ShowVisualBasicEditor" visibility="public" read="Get_ShowVisualBasicEditor" write="Set_ShowVisualBasicEditor" type="WordBool" />
      <property name="BrowseExtraFileTypes" visibility="public" read="Get_BrowseExtraFileTypes" write="Set_BrowseExtraFileTypes" type="WideString" default="0" />
      <property name="AutoQuit" visibility="published" read="FAutoQuit" write="FAutoQuit" type="Boolean" />
      <event name="OnStartup" visibility="published" read="FOnStartup" write="FOnStartup" type="TNotifyEvent" />
      <event name="OnQuit" visibility="published" read="FOnQuit" write="FOnQuit" type="TNotifyEvent" />
      <event name="OnDocumentChange" visibility="published" read="FOnDocumentChange" write="FOnDocumentChange" type="TNotifyEvent" />
    </members>
  </class>
  <class name="CoWordDocument">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="DisposeOf" visibility="public" procflags="inline" symflags="deprecated">
      </methodref>
      <methodref name="InitInstance" visibility="public" procflags="class">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public" procflags="inline">
      </methodref>
      <methodref name="ClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassNameIs" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassParent" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="ClassInfo" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InstanceSize" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InheritsFrom" visibility="public" procflags="class">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodName" visibility="public" procflags="class">
      </methodref>
      <methodref name="QualifiedClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="UnitName" visibility="public" procflags="class">
      </methodref>
      <methodref name="UnitScope" visibility="public" procflags="class">
      </methodref>
      <methodref name="Equals" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetHashCode" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToString" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="SafeCallException" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Dispatch" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="NewInstance" visibility="public" procflags="class virtual">
      </methodref>
      <methodref name="FreeInstance" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
      </methodref>
      <methodref name="GetDisposed" visibility="protected" procflags="inline">
      </methodref>
      <methodref name="CheckDisposed" visibility="protected" procflags="inline">
      </methodref>
      <propertyref name="Disposed" visibility="protected">
      </propertyref>
    </ancestor>
    <members>
      <function name="Create" visibility="public" procflags="class">
        <parameters>
          <retval type="_Document" />
        </parameters>
      </function>
      <function name="CreateRemote" visibility="public" procflags="class">
        <parameters>
          <parameter name="MachineName" type="string" paramflags="const" />
          <retval type="_Document" />
        </parameters>
      </function>
    </members>
  </class>
  <class name="TWordDocument">
    <ancestor name="TOleServer" namespace="Vcl.OleServer">
      <interfaces>
        <implements name="IInterface" />
      </interfaces>
      <methodref name="QueryInterface" visibility="protected" procflags="override">
      </methodref>
      <methodref name="_AddRef" visibility="protected">
      </methodref>
      <methodref name="_Release" visibility="protected">
      </methodref>
      <methodref name="Loaded" visibility="protected" procflags="override">
      </methodref>
      <methodref name="InitServerData" visibility="protected" procflags="abstract virtual">
      </methodref>
      <methodref name="GetServer" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="ConnectEvents" visibility="protected">
      </methodref>
      <methodref name="DisconnectEvents" visibility="protected">
      </methodref>
      <methodref name="InvokeEvent" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetConnectKind" visibility="protected">
      </methodref>
      <methodref name="SetConnectKind" visibility="protected">
      </methodref>
      <methodref name="GetAutoConnect" visibility="protected">
      </methodref>
      <methodref name="SetAutoConnect" visibility="protected">
      </methodref>
      <propertyref name="ServerData" visibility="protected">
      </propertyref>
      <propertyref name="EventDispatch" visibility="protected">
      </propertyref>
      <methodref name="Create" visibility="public" procflags="constructor override">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor override">
      </methodref>
      <methodref name="Connect" visibility="public" procflags="abstract virtual">
      </methodref>
      <methodref name="Disconnect" visibility="public" procflags="abstract virtual">
      </methodref>
      <propertyref name="AutoConnect" visibility="published">
      </propertyref>
      <propertyref name="ConnectKind" visibility="published">
      </propertyref>
      <propertyref name="RemoteMachineName" visibility="published">
      </propertyref>
      <ancestor name="TComponent" namespace="System.Classes">
        <interfaces>
          <implements name="IInterfaceComponentReference" />
          <implements name="IInterface" />
        </interfaces>
        <methodref name="GetComObject" visibility="private">
        </methodref>
        <methodref name="GetComponent" visibility="private">
        </methodref>
        <methodref name="GetComponentCount" visibility="private">
        </methodref>
        <methodref name="GetComponentIndex" visibility="private">
        </methodref>
        <methodref name="Insert" visibility="private">
        </methodref>
        <methodref name="ReadLeft" visibility="private">
        </methodref>
        <methodref name="ReadTop" visibility="private">
        </methodref>
        <methodref name="Remove" visibility="private">
        </methodref>
        <methodref name="RemoveNotification" visibility="private">
        </methodref>
        <methodref name="SetComponentIndex" visibility="private">
        </methodref>
        <methodref name="SetReference" visibility="private">
        </methodref>
        <methodref name="WriteLeft" visibility="private">
        </methodref>
        <methodref name="WriteTop" visibility="private">
        </methodref>
        <methodref name="IntfGetComponent" visibility="private">
        </methodref>
        <methodref name="DoGetDeltaStreams" visibility="private">
        </methodref>
        <methodref name="ReadDeltaStream" visibility="private">
        </methodref>
        <methodref name="ReadDeltaState" visibility="private">
        </methodref>
        <methodref name="FindSortedComponent" visibility="private">
        </methodref>
        <methodref name="AddSortedComponent" visibility="private">
        </methodref>
        <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
        </methodref>
        <methodref name="Create@" visibility="class private" procflags="class constructor noself">
        </methodref>
        <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ChangeName" visibility="protected">
        </methodref>
        <methodref name="DefineProperties" visibility="protected" procflags="override">
        </methodref>
        <methodref name="GetChildren" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetOwner" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Loaded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Notification" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ReadState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="CanObserve" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetObservers" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetAncestor" visibility="protected">
        </methodref>
        <methodref name="SetDesigning" visibility="protected">
        </methodref>
        <methodref name="SetInline" visibility="protected">
        </methodref>
        <methodref name="SetDesignInstance" visibility="protected">
        </methodref>
        <methodref name="SetName" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updating" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updated" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
        </methodref>
        <methodref name="ValidateRename" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="WriteState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="RemoveFreeNotifications" visibility="protected">
        </methodref>
        <methodref name="QueryInterface" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="_AddRef" visibility="protected">
        </methodref>
        <methodref name="_Release" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfoCount" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfo" visibility="protected">
        </methodref>
        <methodref name="GetIDsOfNames" visibility="protected">
        </methodref>
        <methodref name="Invoke" visibility="protected">
        </methodref>
        <eventref name="OnGetDeltaStreams" visibility="protected">
        </eventref>
        <methodref name="Create" visibility="public" procflags="constructor virtual">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor override">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public" procflags="override">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndFunctionInvoke" visibility="public">
        </methodref>
        <methodref name="DestroyComponents" visibility="public">
        </methodref>
        <methodref name="Destroying" visibility="public">
        </methodref>
        <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="FindComponent" visibility="public">
        </methodref>
        <methodref name="FreeNotification" visibility="public">
        </methodref>
        <methodref name="RemoveFreeNotification" visibility="public">
        </methodref>
        <methodref name="FreeOnRelease" visibility="public">
        </methodref>
        <methodref name="GetEnumerator" visibility="public" procflags="inline">
        </methodref>
        <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="GetNamePath" visibility="public" procflags="override">
        </methodref>
        <methodref name="HasParent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="InsertComponent" visibility="public">
        </methodref>
        <methodref name="RemoveComponent" visibility="public">
        </methodref>
        <methodref name="SetSubComponent" visibility="public">
        </methodref>
        <methodref name="SafeCallException" visibility="public" procflags="override">
        </methodref>
        <methodref name="UpdateAction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="IsImplementorOf" visibility="public">
        </methodref>
        <methodref name="ReferenceInterface" visibility="public">
        </methodref>
        <propertyref name="ComObject" visibility="public">
        </propertyref>
        <propertyref name="Components" visibility="public">
        </propertyref>
        <propertyref name="ComponentCount" visibility="public">
        </propertyref>
        <propertyref name="ComponentIndex" visibility="public">
        </propertyref>
        <propertyref name="ComponentState" visibility="public">
        </propertyref>
        <propertyref name="ComponentStyle" visibility="public">
        </propertyref>
        <propertyref name="DesignInfo" visibility="public">
        </propertyref>
        <propertyref name="Owner" visibility="public">
        </propertyref>
        <propertyref name="VCLComObject" visibility="public">
        </propertyref>
        <propertyref name="Observers" visibility="public">
        </propertyref>
        <propertyref name="Name" visibility="published">
        </propertyref>
        <propertyref name="Tag" visibility="published">
        </propertyref>
        <ancestor name="TPersistent" namespace="System.Classes">
          <methodref name="AssignError" visibility="private">
          </methodref>
          <methodref name="AssignTo" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DefineProperties" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetOwner" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor override">
          </methodref>
          <methodref name="Assign" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="GetNamePath" visibility="public" procflags="dynamic">
          </methodref>
          <ancestor name="TObject" namespace="System">
            <methodref name="Create" visibility="public" procflags="constructor">
            </methodref>
            <methodref name="Free" visibility="public">
            </methodref>
            <methodref name="DisposeOf" visibility="public" procflags="inline" symflags="deprecated">
            </methodref>
            <methodref name="InitInstance" visibility="public" procflags="class">
            </methodref>
            <methodref name="CleanupInstance" visibility="public">
            </methodref>
            <methodref name="ClassType" visibility="public" procflags="inline">
            </methodref>
            <methodref name="ClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassNameIs" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassParent" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="ClassInfo" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InstanceSize" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InheritsFrom" visibility="public" procflags="class">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodName" visibility="public" procflags="class">
            </methodref>
            <methodref name="QualifiedClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="GetInterface" visibility="public">
            </methodref>
            <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
            </methodref>
            <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="UnitName" visibility="public" procflags="class">
            </methodref>
            <methodref name="UnitScope" visibility="public" procflags="class">
            </methodref>
            <methodref name="Equals" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="GetHashCode" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="ToString" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="SafeCallException" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="AfterConstruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Dispatch" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="DefaultHandler" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="NewInstance" visibility="public" procflags="class virtual">
            </methodref>
            <methodref name="FreeInstance" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor virtual">
            </methodref>
            <methodref name="GetDisposed" visibility="protected" procflags="inline">
            </methodref>
            <methodref name="CheckDisposed" visibility="protected" procflags="inline">
            </methodref>
            <propertyref name="Disposed" visibility="protected">
            </propertyref>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <field name="FOnNew" type="TNotifyEvent" visibility="private" size="8" offset="96" />
      <field name="FOnOpen" type="TNotifyEvent" visibility="private" size="8" offset="104" />
      <field name="FOnClose" type="TNotifyEvent" visibility="private" size="8" offset="112" />
      <field name="FIntf" type="_Document" visibility="private" size="4" offset="120" />
      <function name="GetDefaultInterface" visibility="private">
        <parameters>
          <retval type="_Document" />
        </parameters>
      </function>
      <procedure name="InitServerData" visibility="protected" procflags="override">
      </procedure>
      <procedure name="InvokeEvent" visibility="protected" procflags="override">
        <parameters>
          <parameter name="DispID" type="Integer" />
          <parameter name="Params" type="TOleVariantArray" paramflags="var" />
        </parameters>
      </procedure>
      <function name="Get_Name" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="Get_Application" visibility="protected">
        <parameters>
          <retval type="_Application" />
        </parameters>
      </function>
      <function name="Get_Creator" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="Get_Parent" visibility="protected">
        <parameters>
          <retval type="IDispatch" />
        </parameters>
      </function>
      <function name="Get_BuiltInDocumentProperties" visibility="protected">
        <parameters>
          <retval type="IDispatch" />
        </parameters>
      </function>
      <function name="Get_CustomDocumentProperties" visibility="protected">
        <parameters>
          <retval type="IDispatch" />
        </parameters>
      </function>
      <function name="Get_Path" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="Get_Bookmarks" visibility="protected">
        <parameters>
          <retval type="Bookmarks" />
        </parameters>
      </function>
      <function name="Get_Tables" visibility="protected">
        <parameters>
          <retval type="Tables" />
        </parameters>
      </function>
      <function name="Get_Footnotes" visibility="protected">
        <parameters>
          <retval type="Footnotes" />
        </parameters>
      </function>
      <function name="Get_Endnotes" visibility="protected">
        <parameters>
          <retval type="Endnotes" />
        </parameters>
      </function>
      <function name="Get_Comments" visibility="protected">
        <parameters>
          <retval type="Comments" />
        </parameters>
      </function>
      <function name="Get_type_" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <function name="Get_AutoHyphenation" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_AutoHyphenation" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_HyphenateCaps" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_HyphenateCaps" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_HyphenationZone" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_HyphenationZone" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_ConsecutiveHyphensLimit" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_ConsecutiveHyphensLimit" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_Sections" visibility="protected">
        <parameters>
          <retval type="Sections" />
        </parameters>
      </function>
      <function name="Get_Paragraphs" visibility="protected">
        <parameters>
          <retval type="Paragraphs" />
        </parameters>
      </function>
      <function name="Get_Words" visibility="protected">
        <parameters>
          <retval type="Words" />
        </parameters>
      </function>
      <function name="Get_Sentences" visibility="protected">
        <parameters>
          <retval type="Sentences" />
        </parameters>
      </function>
      <function name="Get_Characters" visibility="protected">
        <parameters>
          <retval type="Characters" />
        </parameters>
      </function>
      <function name="Get_Fields" visibility="protected">
        <parameters>
          <retval type="Fields" />
        </parameters>
      </function>
      <function name="Get_FormFields" visibility="protected">
        <parameters>
          <retval type="FormFields" />
        </parameters>
      </function>
      <function name="Get_Styles" visibility="protected">
        <parameters>
          <retval type="Styles" />
        </parameters>
      </function>
      <function name="Get_Frames" visibility="protected">
        <parameters>
          <retval type="Frames" />
        </parameters>
      </function>
      <function name="Get_TablesOfFigures" visibility="protected">
        <parameters>
          <retval type="TablesOfFigures" />
        </parameters>
      </function>
      <function name="Get_Variables" visibility="protected">
        <parameters>
          <retval type="Variables" />
        </parameters>
      </function>
      <function name="Get_MailMerge" visibility="protected">
        <parameters>
          <retval type="MailMerge" />
        </parameters>
      </function>
      <function name="Get_Envelope" visibility="protected">
        <parameters>
          <retval type="Envelope" />
        </parameters>
      </function>
      <function name="Get_FullName" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="Get_Revisions" visibility="protected">
        <parameters>
          <retval type="Revisions" />
        </parameters>
      </function>
      <function name="Get_TablesOfContents" visibility="protected">
        <parameters>
          <retval type="TablesOfContents" />
        </parameters>
      </function>
      <function name="Get_TablesOfAuthorities" visibility="protected">
        <parameters>
          <retval type="TablesOfAuthorities" />
        </parameters>
      </function>
      <function name="Get_PageSetup" visibility="protected">
        <parameters>
          <retval type="PageSetup" />
        </parameters>
      </function>
      <procedure name="Set_PageSetup" visibility="protected">
        <parameters>
          <parameter name="prop" type="PageSetup" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_Windows" visibility="protected">
        <parameters>
          <retval type="Windows" />
        </parameters>
      </function>
      <function name="Get_HasRoutingSlip" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_HasRoutingSlip" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_RoutingSlip" visibility="protected">
        <parameters>
          <retval type="RoutingSlip" />
        </parameters>
      </function>
      <function name="Get_Routed" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Get_TablesOfAuthoritiesCategories" visibility="protected">
        <parameters>
          <retval type="TablesOfAuthoritiesCategories" />
        </parameters>
      </function>
      <function name="Get_Indexes" visibility="protected">
        <parameters>
          <retval type="Indexes" />
        </parameters>
      </function>
      <function name="Get_Saved" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_Saved" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_Content" visibility="protected">
        <parameters>
          <retval type="Range" />
        </parameters>
      </function>
      <function name="Get_ActiveWindow" visibility="protected">
        <parameters>
          <retval type="Window" />
        </parameters>
      </function>
      <function name="Get_Kind" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_Kind" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <function name="Get_ReadOnly" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Get_Subdocuments" visibility="protected">
        <parameters>
          <retval type="Subdocuments" />
        </parameters>
      </function>
      <function name="Get_IsMasterDocument" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Get_DefaultTabStop" visibility="protected">
        <parameters>
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Set_DefaultTabStop" visibility="protected">
        <parameters>
          <parameter name="prop" type="Single" />
        </parameters>
      </procedure>
      <function name="Get_EmbedTrueTypeFonts" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_EmbedTrueTypeFonts" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_SaveFormsData" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_SaveFormsData" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_ReadOnlyRecommended" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_ReadOnlyRecommended" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_SaveSubsetFonts" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_SaveSubsetFonts" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_Compatibility" visibility="protected">
        <parameters>
          <parameter name="Type_" type="TOleEnum" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_Compatibility" visibility="protected">
        <parameters>
          <parameter name="Type_" type="TOleEnum" />
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_StoryRanges" visibility="protected">
        <parameters>
          <retval type="StoryRanges" />
        </parameters>
      </function>
      <function name="Get_CommandBars" visibility="protected">
        <parameters>
          <retval type="CommandBars" />
        </parameters>
      </function>
      <function name="Get_IsSubdocument" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Get_SaveFormat" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="Get_ProtectionType" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <function name="Get_Hyperlinks" visibility="protected">
        <parameters>
          <retval type="Hyperlinks" />
        </parameters>
      </function>
      <function name="Get_Shapes" visibility="protected">
        <parameters>
          <retval type="Shapes" />
        </parameters>
      </function>
      <function name="Get_ListTemplates" visibility="protected">
        <parameters>
          <retval type="ListTemplates" />
        </parameters>
      </function>
      <function name="Get_Lists" visibility="protected">
        <parameters>
          <retval type="Lists" />
        </parameters>
      </function>
      <function name="Get_UpdateStylesOnOpen" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_UpdateStylesOnOpen" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_AttachedTemplate" visibility="protected">
        <parameters>
          <retval type="OleVariant" />
        </parameters>
      </function>
      <procedure name="Set_AttachedTemplate" visibility="protected">
        <parameters>
          <parameter name="prop" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <function name="Get_InlineShapes" visibility="protected">
        <parameters>
          <retval type="InlineShapes" />
        </parameters>
      </function>
      <function name="Get_Background" visibility="protected">
        <parameters>
          <retval type="Shape" />
        </parameters>
      </function>
      <procedure name="Set_Background" visibility="protected">
        <parameters>
          <parameter name="prop" type="Shape" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_GrammarChecked" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_GrammarChecked" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_SpellingChecked" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_SpellingChecked" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_ShowGrammaticalErrors" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_ShowGrammaticalErrors" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_ShowSpellingErrors" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_ShowSpellingErrors" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_Versions" visibility="protected">
        <parameters>
          <retval type="Versions" />
        </parameters>
      </function>
      <function name="Get_ShowSummary" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_ShowSummary" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_SummaryViewMode" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_SummaryViewMode" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <function name="Get_SummaryLength" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_SummaryLength" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_PrintFractionalWidths" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_PrintFractionalWidths" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_PrintPostScriptOverText" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_PrintPostScriptOverText" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_Container" visibility="protected">
        <parameters>
          <retval type="IDispatch" />
        </parameters>
      </function>
      <function name="Get_PrintFormsData" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_PrintFormsData" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_ListParagraphs" visibility="protected">
        <parameters>
          <retval type="ListParagraphs" />
        </parameters>
      </function>
      <procedure name="Set_Password" visibility="protected">
        <parameters>
          <parameter name="Param1" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="Set_WritePassword" visibility="protected">
        <parameters>
          <parameter name="Param1" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_HasPassword" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Get_WriteReserved" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Get_ActiveWritingStyle" visibility="protected">
        <parameters>
          <parameter name="LanguageID" type="OleVariant" paramflags="var" />
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_ActiveWritingStyle" visibility="protected">
        <parameters>
          <parameter name="LanguageID" type="OleVariant" paramflags="var" />
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_UserControl" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_UserControl" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_HasMailer" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_HasMailer" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_Mailer" visibility="protected">
        <parameters>
          <retval type="Mailer" />
        </parameters>
      </function>
      <function name="Get_ReadabilityStatistics" visibility="protected">
        <parameters>
          <retval type="ReadabilityStatistics" />
        </parameters>
      </function>
      <function name="Get_GrammaticalErrors" visibility="protected">
        <parameters>
          <retval type="ProofreadingErrors" />
        </parameters>
      </function>
      <function name="Get_SpellingErrors" visibility="protected">
        <parameters>
          <retval type="ProofreadingErrors" />
        </parameters>
      </function>
      <function name="Get_VBProject" visibility="protected">
        <parameters>
          <retval type="_VBProject" />
        </parameters>
      </function>
      <function name="Get_FormsDesign" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Get__CodeName" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set__CodeName" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_CodeName" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <function name="Get_SnapToGrid" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_SnapToGrid" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_SnapToShapes" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_SnapToShapes" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_GridDistanceHorizontal" visibility="protected">
        <parameters>
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Set_GridDistanceHorizontal" visibility="protected">
        <parameters>
          <parameter name="prop" type="Single" />
        </parameters>
      </procedure>
      <function name="Get_GridDistanceVertical" visibility="protected">
        <parameters>
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Set_GridDistanceVertical" visibility="protected">
        <parameters>
          <parameter name="prop" type="Single" />
        </parameters>
      </procedure>
      <function name="Get_GridOriginHorizontal" visibility="protected">
        <parameters>
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Set_GridOriginHorizontal" visibility="protected">
        <parameters>
          <parameter name="prop" type="Single" />
        </parameters>
      </procedure>
      <function name="Get_GridOriginVertical" visibility="protected">
        <parameters>
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Set_GridOriginVertical" visibility="protected">
        <parameters>
          <parameter name="prop" type="Single" />
        </parameters>
      </procedure>
      <function name="Get_GridSpaceBetweenHorizontalLines" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_GridSpaceBetweenHorizontalLines" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_GridSpaceBetweenVerticalLines" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_GridSpaceBetweenVerticalLines" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_GridOriginFromMargin" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_GridOriginFromMargin" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_KerningByAlgorithm" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_KerningByAlgorithm" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_JustificationMode" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_JustificationMode" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <function name="Get_FarEastLineBreakLevel" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_FarEastLineBreakLevel" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <function name="Get_NoLineBreakBefore" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_NoLineBreakBefore" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_NoLineBreakAfter" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_NoLineBreakAfter" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_TrackRevisions" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_TrackRevisions" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_PrintRevisions" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_PrintRevisions" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_ShowRevisions" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_ShowRevisions" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="AOwner" type="TComponent" />
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public">
        <parameters>
        </parameters>
      </destructor>
      <procedure name="Connect" visibility="public" procflags="override">
      </procedure>
      <procedure name="ConnectTo" visibility="public">
        <parameters>
          <parameter name="svrIntf" type="_Document" />
        </parameters>
      </procedure>
      <procedure name="Disconnect" visibility="public" procflags="override">
      </procedure>
      <procedure name="Close" visibility="public" procflags="overload">
      </procedure>
      <procedure name="Close" visibility="public" procflags="overload">
        <parameters>
          <parameter name="SaveChanges" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="Close" visibility="public" procflags="overload">
        <parameters>
          <parameter name="SaveChanges" type="OleVariant" paramflags="var" />
          <parameter name="OriginalFormat" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="Close" visibility="public" procflags="overload">
        <parameters>
          <parameter name="SaveChanges" type="OleVariant" paramflags="var" />
          <parameter name="OriginalFormat" type="OleVariant" paramflags="var" />
          <parameter name="RouteDocument" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="SaveAs" visibility="public" procflags="overload">
      </procedure>
      <procedure name="SaveAs" visibility="public" procflags="overload">
        <parameters>
          <parameter name="FileName" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="SaveAs" visibility="public" procflags="overload">
        <parameters>
          <parameter name="FileName" type="OleVariant" paramflags="var" />
          <parameter name="FileFormat" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="SaveAs" visibility="public" procflags="overload">
        <parameters>
          <parameter name="FileName" type="OleVariant" paramflags="var" />
          <parameter name="FileFormat" type="OleVariant" paramflags="var" />
          <parameter name="LockComments" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="SaveAs" visibility="public" procflags="overload">
        <parameters>
          <parameter name="FileName" type="OleVariant" paramflags="var" />
          <parameter name="FileFormat" type="OleVariant" paramflags="var" />
          <parameter name="LockComments" type="OleVariant" paramflags="var" />
          <parameter name="Password" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="SaveAs" visibility="public" procflags="overload">
        <parameters>
          <parameter name="FileName" type="OleVariant" paramflags="var" />
          <parameter name="FileFormat" type="OleVariant" paramflags="var" />
          <parameter name="LockComments" type="OleVariant" paramflags="var" />
          <parameter name="Password" type="OleVariant" paramflags="var" />
          <parameter name="AddToRecentFiles" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="SaveAs" visibility="public" procflags="overload">
        <parameters>
          <parameter name="FileName" type="OleVariant" paramflags="var" />
          <parameter name="FileFormat" type="OleVariant" paramflags="var" />
          <parameter name="LockComments" type="OleVariant" paramflags="var" />
          <parameter name="Password" type="OleVariant" paramflags="var" />
          <parameter name="AddToRecentFiles" type="OleVariant" paramflags="var" />
          <parameter name="WritePassword" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="SaveAs" visibility="public" procflags="overload">
        <parameters>
          <parameter name="FileName" type="OleVariant" paramflags="var" />
          <parameter name="FileFormat" type="OleVariant" paramflags="var" />
          <parameter name="LockComments" type="OleVariant" paramflags="var" />
          <parameter name="Password" type="OleVariant" paramflags="var" />
          <parameter name="AddToRecentFiles" type="OleVariant" paramflags="var" />
          <parameter name="WritePassword" type="OleVariant" paramflags="var" />
          <parameter name="ReadOnlyRecommended" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="SaveAs" visibility="public" procflags="overload">
        <parameters>
          <parameter name="FileName" type="OleVariant" paramflags="var" />
          <parameter name="FileFormat" type="OleVariant" paramflags="var" />
          <parameter name="LockComments" type="OleVariant" paramflags="var" />
          <parameter name="Password" type="OleVariant" paramflags="var" />
          <parameter name="AddToRecentFiles" type="OleVariant" paramflags="var" />
          <parameter name="WritePassword" type="OleVariant" paramflags="var" />
          <parameter name="ReadOnlyRecommended" type="OleVariant" paramflags="var" />
          <parameter name="EmbedTrueTypeFonts" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="SaveAs" visibility="public" procflags="overload">
        <parameters>
          <parameter name="FileName" type="OleVariant" paramflags="var" />
          <parameter name="FileFormat" type="OleVariant" paramflags="var" />
          <parameter name="LockComments" type="OleVariant" paramflags="var" />
          <parameter name="Password" type="OleVariant" paramflags="var" />
          <parameter name="AddToRecentFiles" type="OleVariant" paramflags="var" />
          <parameter name="WritePassword" type="OleVariant" paramflags="var" />
          <parameter name="ReadOnlyRecommended" type="OleVariant" paramflags="var" />
          <parameter name="EmbedTrueTypeFonts" type="OleVariant" paramflags="var" />
          <parameter name="SaveNativePictureFormat" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="SaveAs" visibility="public" procflags="overload">
        <parameters>
          <parameter name="FileName" type="OleVariant" paramflags="var" />
          <parameter name="FileFormat" type="OleVariant" paramflags="var" />
          <parameter name="LockComments" type="OleVariant" paramflags="var" />
          <parameter name="Password" type="OleVariant" paramflags="var" />
          <parameter name="AddToRecentFiles" type="OleVariant" paramflags="var" />
          <parameter name="WritePassword" type="OleVariant" paramflags="var" />
          <parameter name="ReadOnlyRecommended" type="OleVariant" paramflags="var" />
          <parameter name="EmbedTrueTypeFonts" type="OleVariant" paramflags="var" />
          <parameter name="SaveNativePictureFormat" type="OleVariant" paramflags="var" />
          <parameter name="SaveFormsData" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="SaveAs" visibility="public" procflags="overload">
        <parameters>
          <parameter name="FileName" type="OleVariant" paramflags="var" />
          <parameter name="FileFormat" type="OleVariant" paramflags="var" />
          <parameter name="LockComments" type="OleVariant" paramflags="var" />
          <parameter name="Password" type="OleVariant" paramflags="var" />
          <parameter name="AddToRecentFiles" type="OleVariant" paramflags="var" />
          <parameter name="WritePassword" type="OleVariant" paramflags="var" />
          <parameter name="ReadOnlyRecommended" type="OleVariant" paramflags="var" />
          <parameter name="EmbedTrueTypeFonts" type="OleVariant" paramflags="var" />
          <parameter name="SaveNativePictureFormat" type="OleVariant" paramflags="var" />
          <parameter name="SaveFormsData" type="OleVariant" paramflags="var" />
          <parameter name="SaveAsAOCELetter" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="Repaginate" visibility="public">
      </procedure>
      <procedure name="FitToPages" visibility="public">
      </procedure>
      <procedure name="ManualHyphenation" visibility="public">
      </procedure>
      <procedure name="Select" visibility="public">
      </procedure>
      <procedure name="DataForm" visibility="public">
      </procedure>
      <procedure name="Route" visibility="public">
      </procedure>
      <procedure name="Save" visibility="public">
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
          <parameter name="To_" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
          <parameter name="To_" type="OleVariant" paramflags="var" />
          <parameter name="Item" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
          <parameter name="To_" type="OleVariant" paramflags="var" />
          <parameter name="Item" type="OleVariant" paramflags="var" />
          <parameter name="Copies" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
          <parameter name="To_" type="OleVariant" paramflags="var" />
          <parameter name="Item" type="OleVariant" paramflags="var" />
          <parameter name="Copies" type="OleVariant" paramflags="var" />
          <parameter name="Pages" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
          <parameter name="To_" type="OleVariant" paramflags="var" />
          <parameter name="Item" type="OleVariant" paramflags="var" />
          <parameter name="Copies" type="OleVariant" paramflags="var" />
          <parameter name="Pages" type="OleVariant" paramflags="var" />
          <parameter name="PageType" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
          <parameter name="To_" type="OleVariant" paramflags="var" />
          <parameter name="Item" type="OleVariant" paramflags="var" />
          <parameter name="Copies" type="OleVariant" paramflags="var" />
          <parameter name="Pages" type="OleVariant" paramflags="var" />
          <parameter name="PageType" type="OleVariant" paramflags="var" />
          <parameter name="PrintToFile" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
          <parameter name="To_" type="OleVariant" paramflags="var" />
          <parameter name="Item" type="OleVariant" paramflags="var" />
          <parameter name="Copies" type="OleVariant" paramflags="var" />
          <parameter name="Pages" type="OleVariant" paramflags="var" />
          <parameter name="PageType" type="OleVariant" paramflags="var" />
          <parameter name="PrintToFile" type="OleVariant" paramflags="var" />
          <parameter name="Collate" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
          <parameter name="To_" type="OleVariant" paramflags="var" />
          <parameter name="Item" type="OleVariant" paramflags="var" />
          <parameter name="Copies" type="OleVariant" paramflags="var" />
          <parameter name="Pages" type="OleVariant" paramflags="var" />
          <parameter name="PageType" type="OleVariant" paramflags="var" />
          <parameter name="PrintToFile" type="OleVariant" paramflags="var" />
          <parameter name="Collate" type="OleVariant" paramflags="var" />
          <parameter name="ActivePrinterMacGX" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="PrintOut" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Background" type="OleVariant" paramflags="var" />
          <parameter name="Append" type="OleVariant" paramflags="var" />
          <parameter name="Range" type="OleVariant" paramflags="var" />
          <parameter name="OutputFileName" type="OleVariant" paramflags="var" />
          <parameter name="From" type="OleVariant" paramflags="var" />
          <parameter name="To_" type="OleVariant" paramflags="var" />
          <parameter name="Item" type="OleVariant" paramflags="var" />
          <parameter name="Copies" type="OleVariant" paramflags="var" />
          <parameter name="Pages" type="OleVariant" paramflags="var" />
          <parameter name="PageType" type="OleVariant" paramflags="var" />
          <parameter name="PrintToFile" type="OleVariant" paramflags="var" />
          <parameter name="Collate" type="OleVariant" paramflags="var" />
          <parameter name="ActivePrinterMacGX" type="OleVariant" paramflags="var" />
          <parameter name="ManualDuplexPrint" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="SendMail" visibility="public">
      </procedure>
      <function name="Range" visibility="public" procflags="overload">
        <parameters>
          <retval type="Range" />
        </parameters>
      </function>
      <function name="Range" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Start" type="OleVariant" paramflags="var" />
          <retval type="Range" />
        </parameters>
      </function>
      <function name="Range" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Start" type="OleVariant" paramflags="var" />
          <parameter name="End_" type="OleVariant" paramflags="var" />
          <retval type="Range" />
        </parameters>
      </function>
      <procedure name="RunAutoMacro" visibility="public">
        <parameters>
          <parameter name="Which" type="TOleEnum" />
        </parameters>
      </procedure>
      <procedure name="Activate" visibility="public">
      </procedure>
      <procedure name="PrintPreview" visibility="public">
      </procedure>
      <function name="GoTo_" visibility="public" procflags="overload">
        <parameters>
          <retval type="Range" />
        </parameters>
      </function>
      <function name="GoTo_" visibility="public" procflags="overload">
        <parameters>
          <parameter name="What" type="OleVariant" paramflags="var" />
          <retval type="Range" />
        </parameters>
      </function>
      <function name="GoTo_" visibility="public" procflags="overload">
        <parameters>
          <parameter name="What" type="OleVariant" paramflags="var" />
          <parameter name="Which" type="OleVariant" paramflags="var" />
          <retval type="Range" />
        </parameters>
      </function>
      <function name="GoTo_" visibility="public" procflags="overload">
        <parameters>
          <parameter name="What" type="OleVariant" paramflags="var" />
          <parameter name="Which" type="OleVariant" paramflags="var" />
          <parameter name="Count" type="OleVariant" paramflags="var" />
          <retval type="Range" />
        </parameters>
      </function>
      <function name="GoTo_" visibility="public" procflags="overload">
        <parameters>
          <parameter name="What" type="OleVariant" paramflags="var" />
          <parameter name="Which" type="OleVariant" paramflags="var" />
          <parameter name="Count" type="OleVariant" paramflags="var" />
          <parameter name="Name" type="OleVariant" paramflags="var" />
          <retval type="Range" />
        </parameters>
      </function>
      <function name="Undo" visibility="public" procflags="overload">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Undo" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Times" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Redo" visibility="public" procflags="overload">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="Redo" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Times" type="OleVariant" paramflags="var" />
          <retval type="WordBool" />
        </parameters>
      </function>
      <function name="ComputeStatistics" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Statistic" type="TOleEnum" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="ComputeStatistics" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Statistic" type="TOleEnum" />
          <parameter name="IncludeFootnotesAndEndnotes" type="OleVariant" paramflags="var" />
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="MakeCompatibilityDefault" visibility="public">
      </procedure>
      <procedure name="Protect" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Type_" type="TOleEnum" />
        </parameters>
      </procedure>
      <procedure name="Protect" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Type_" type="TOleEnum" />
          <parameter name="NoReset" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="Protect" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Type_" type="TOleEnum" />
          <parameter name="NoReset" type="OleVariant" paramflags="var" />
          <parameter name="Password" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="Unprotect" visibility="public" procflags="overload">
      </procedure>
      <procedure name="Unprotect" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Password" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="EditionOptions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Type_" type="TOleEnum" />
          <parameter name="Option" type="TOleEnum" />
          <parameter name="Name" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="EditionOptions" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Type_" type="TOleEnum" />
          <parameter name="Option" type="TOleEnum" />
          <parameter name="Name" type="WideString" paramflags="const" />
          <parameter name="Format" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="RunLetterWizard" visibility="public" procflags="overload">
      </procedure>
      <procedure name="RunLetterWizard" visibility="public" procflags="overload">
        <parameters>
          <parameter name="LetterContent" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="RunLetterWizard" visibility="public" procflags="overload">
        <parameters>
          <parameter name="LetterContent" type="OleVariant" paramflags="var" />
          <parameter name="WizardMode" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <function name="GetLetterContent" visibility="public">
        <parameters>
          <retval type="_LetterContent" />
        </parameters>
      </function>
      <procedure name="SetLetterContent" visibility="public">
        <parameters>
          <parameter name="LetterContent" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="CopyStylesFromTemplate" visibility="public">
        <parameters>
          <parameter name="Template" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="UpdateStyles" visibility="public">
      </procedure>
      <procedure name="CheckGrammar" visibility="public">
      </procedure>
      <procedure name="CheckSpelling" visibility="public" procflags="overload">
      </procedure>
      <procedure name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="AlwaysSuggest" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="AlwaysSuggest" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="AlwaysSuggest" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="AlwaysSuggest" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="AlwaysSuggest" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="AlwaysSuggest" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="AlwaysSuggest" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="AlwaysSuggest" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="AlwaysSuggest" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="CheckSpelling" visibility="public" procflags="overload">
        <parameters>
          <parameter name="CustomDictionary" type="OleVariant" paramflags="var" />
          <parameter name="IgnoreUppercase" type="OleVariant" paramflags="var" />
          <parameter name="AlwaysSuggest" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary2" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary3" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary4" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary5" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary6" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary7" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary8" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary9" type="OleVariant" paramflags="var" />
          <parameter name="CustomDictionary10" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="FollowHyperlink" visibility="public" procflags="overload">
      </procedure>
      <procedure name="FollowHyperlink" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Address" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="FollowHyperlink" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Address" type="OleVariant" paramflags="var" />
          <parameter name="SubAddress" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="FollowHyperlink" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Address" type="OleVariant" paramflags="var" />
          <parameter name="SubAddress" type="OleVariant" paramflags="var" />
          <parameter name="NewWindow" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="FollowHyperlink" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Address" type="OleVariant" paramflags="var" />
          <parameter name="SubAddress" type="OleVariant" paramflags="var" />
          <parameter name="NewWindow" type="OleVariant" paramflags="var" />
          <parameter name="AddHistory" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="FollowHyperlink" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Address" type="OleVariant" paramflags="var" />
          <parameter name="SubAddress" type="OleVariant" paramflags="var" />
          <parameter name="NewWindow" type="OleVariant" paramflags="var" />
          <parameter name="AddHistory" type="OleVariant" paramflags="var" />
          <parameter name="ExtraInfo" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="FollowHyperlink" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Address" type="OleVariant" paramflags="var" />
          <parameter name="SubAddress" type="OleVariant" paramflags="var" />
          <parameter name="NewWindow" type="OleVariant" paramflags="var" />
          <parameter name="AddHistory" type="OleVariant" paramflags="var" />
          <parameter name="ExtraInfo" type="OleVariant" paramflags="var" />
          <parameter name="Method" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="FollowHyperlink" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Address" type="OleVariant" paramflags="var" />
          <parameter name="SubAddress" type="OleVariant" paramflags="var" />
          <parameter name="NewWindow" type="OleVariant" paramflags="var" />
          <parameter name="AddHistory" type="OleVariant" paramflags="var" />
          <parameter name="ExtraInfo" type="OleVariant" paramflags="var" />
          <parameter name="Method" type="OleVariant" paramflags="var" />
          <parameter name="HeaderInfo" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="AddToFavorites" visibility="public">
      </procedure>
      <procedure name="Reload" visibility="public">
      </procedure>
      <function name="AutoSummarize" visibility="public" procflags="overload">
        <parameters>
          <retval type="Range" />
        </parameters>
      </function>
      <function name="AutoSummarize" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Length" type="OleVariant" paramflags="var" />
          <retval type="Range" />
        </parameters>
      </function>
      <function name="AutoSummarize" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Length" type="OleVariant" paramflags="var" />
          <parameter name="Mode" type="OleVariant" paramflags="var" />
          <retval type="Range" />
        </parameters>
      </function>
      <function name="AutoSummarize" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Length" type="OleVariant" paramflags="var" />
          <parameter name="Mode" type="OleVariant" paramflags="var" />
          <parameter name="UpdateProperties" type="OleVariant" paramflags="var" />
          <retval type="Range" />
        </parameters>
      </function>
      <procedure name="RemoveNumbers" visibility="public" procflags="overload">
      </procedure>
      <procedure name="RemoveNumbers" visibility="public" procflags="overload">
        <parameters>
          <parameter name="NumberType" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="ConvertNumbersToText" visibility="public" procflags="overload">
      </procedure>
      <procedure name="ConvertNumbersToText" visibility="public" procflags="overload">
        <parameters>
          <parameter name="NumberType" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <function name="CountNumberedItems" visibility="public" procflags="overload">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="CountNumberedItems" visibility="public" procflags="overload">
        <parameters>
          <parameter name="NumberType" type="OleVariant" paramflags="var" />
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="CountNumberedItems" visibility="public" procflags="overload">
        <parameters>
          <parameter name="NumberType" type="OleVariant" paramflags="var" />
          <parameter name="Level" type="OleVariant" paramflags="var" />
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Post" visibility="public">
      </procedure>
      <procedure name="ToggleFormsDesign" visibility="public">
      </procedure>
      <procedure name="Compare" visibility="public">
        <parameters>
          <parameter name="Name" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="UpdateSummaryProperties" visibility="public">
      </procedure>
      <function name="GetCrossReferenceItems" visibility="public">
        <parameters>
          <parameter name="ReferenceType" type="OleVariant" paramflags="var" />
          <retval type="OleVariant" />
        </parameters>
      </function>
      <procedure name="AutoFormat" visibility="public">
      </procedure>
      <procedure name="ViewCode" visibility="public">
      </procedure>
      <procedure name="ViewPropertyBrowser" visibility="public">
      </procedure>
      <procedure name="ForwardMailer" visibility="public">
      </procedure>
      <procedure name="Reply" visibility="public">
      </procedure>
      <procedure name="ReplyAll" visibility="public">
      </procedure>
      <procedure name="SendMailer" visibility="public" procflags="overload">
      </procedure>
      <procedure name="SendMailer" visibility="public" procflags="overload">
        <parameters>
          <parameter name="FileFormat" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="SendMailer" visibility="public" procflags="overload">
        <parameters>
          <parameter name="FileFormat" type="OleVariant" paramflags="var" />
          <parameter name="Priority" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="UndoClear" visibility="public">
      </procedure>
      <procedure name="PresentIt" visibility="public">
      </procedure>
      <procedure name="SendFax" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Address" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="SendFax" visibility="public" procflags="overload">
        <parameters>
          <parameter name="Address" type="WideString" paramflags="const" />
          <parameter name="Subject" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <procedure name="Merge" visibility="public">
        <parameters>
          <parameter name="FileName" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <procedure name="ClosePrintPreview" visibility="public">
      </procedure>
      <procedure name="CheckConsistency" visibility="public">
      </procedure>
      <function name="CreateLetterContent" visibility="public" procflags="overload">
        <parameters>
          <parameter name="DateFormat" type="WideString" paramflags="const" />
          <parameter name="IncludeHeaderFooter" type="WordBool" />
          <parameter name="PageDesign" type="WideString" paramflags="const" />
          <parameter name="LetterStyle" type="TOleEnum" />
          <parameter name="Letterhead" type="WordBool" />
          <parameter name="LetterheadLocation" type="TOleEnum" />
          <parameter name="LetterheadSize" type="Single" />
          <parameter name="RecipientName" type="WideString" paramflags="const" />
          <parameter name="RecipientAddress" type="WideString" paramflags="const" />
          <parameter name="Salutation" type="WideString" paramflags="const" />
          <parameter name="SalutationType" type="TOleEnum" />
          <parameter name="RecipientReference" type="WideString" paramflags="const" />
          <parameter name="MailingInstructions" type="WideString" paramflags="const" />
          <parameter name="AttentionLine" type="WideString" paramflags="const" />
          <parameter name="Subject" type="WideString" paramflags="const" />
          <parameter name="CCList" type="WideString" paramflags="const" />
          <parameter name="ReturnAddress" type="WideString" paramflags="const" />
          <parameter name="SenderName" type="WideString" paramflags="const" />
          <parameter name="Closing" type="WideString" paramflags="const" />
          <parameter name="SenderCompany" type="WideString" paramflags="const" />
          <parameter name="SenderJobTitle" type="WideString" paramflags="const" />
          <parameter name="SenderInitials" type="WideString" paramflags="const" />
          <parameter name="EnclosureNumber" type="Integer" />
          <retval type="_LetterContent" />
        </parameters>
      </function>
      <function name="CreateLetterContent" visibility="public" procflags="overload">
        <parameters>
          <parameter name="DateFormat" type="WideString" paramflags="const" />
          <parameter name="IncludeHeaderFooter" type="WordBool" />
          <parameter name="PageDesign" type="WideString" paramflags="const" />
          <parameter name="LetterStyle" type="TOleEnum" />
          <parameter name="Letterhead" type="WordBool" />
          <parameter name="LetterheadLocation" type="TOleEnum" />
          <parameter name="LetterheadSize" type="Single" />
          <parameter name="RecipientName" type="WideString" paramflags="const" />
          <parameter name="RecipientAddress" type="WideString" paramflags="const" />
          <parameter name="Salutation" type="WideString" paramflags="const" />
          <parameter name="SalutationType" type="TOleEnum" />
          <parameter name="RecipientReference" type="WideString" paramflags="const" />
          <parameter name="MailingInstructions" type="WideString" paramflags="const" />
          <parameter name="AttentionLine" type="WideString" paramflags="const" />
          <parameter name="Subject" type="WideString" paramflags="const" />
          <parameter name="CCList" type="WideString" paramflags="const" />
          <parameter name="ReturnAddress" type="WideString" paramflags="const" />
          <parameter name="SenderName" type="WideString" paramflags="const" />
          <parameter name="Closing" type="WideString" paramflags="const" />
          <parameter name="SenderCompany" type="WideString" paramflags="const" />
          <parameter name="SenderJobTitle" type="WideString" paramflags="const" />
          <parameter name="SenderInitials" type="WideString" paramflags="const" />
          <parameter name="EnclosureNumber" type="Integer" />
          <parameter name="InfoBlock" type="OleVariant" paramflags="var" />
          <retval type="_LetterContent" />
        </parameters>
      </function>
      <function name="CreateLetterContent" visibility="public" procflags="overload">
        <parameters>
          <parameter name="DateFormat" type="WideString" paramflags="const" />
          <parameter name="IncludeHeaderFooter" type="WordBool" />
          <parameter name="PageDesign" type="WideString" paramflags="const" />
          <parameter name="LetterStyle" type="TOleEnum" />
          <parameter name="Letterhead" type="WordBool" />
          <parameter name="LetterheadLocation" type="TOleEnum" />
          <parameter name="LetterheadSize" type="Single" />
          <parameter name="RecipientName" type="WideString" paramflags="const" />
          <parameter name="RecipientAddress" type="WideString" paramflags="const" />
          <parameter name="Salutation" type="WideString" paramflags="const" />
          <parameter name="SalutationType" type="TOleEnum" />
          <parameter name="RecipientReference" type="WideString" paramflags="const" />
          <parameter name="MailingInstructions" type="WideString" paramflags="const" />
          <parameter name="AttentionLine" type="WideString" paramflags="const" />
          <parameter name="Subject" type="WideString" paramflags="const" />
          <parameter name="CCList" type="WideString" paramflags="const" />
          <parameter name="ReturnAddress" type="WideString" paramflags="const" />
          <parameter name="SenderName" type="WideString" paramflags="const" />
          <parameter name="Closing" type="WideString" paramflags="const" />
          <parameter name="SenderCompany" type="WideString" paramflags="const" />
          <parameter name="SenderJobTitle" type="WideString" paramflags="const" />
          <parameter name="SenderInitials" type="WideString" paramflags="const" />
          <parameter name="EnclosureNumber" type="Integer" />
          <parameter name="InfoBlock" type="OleVariant" paramflags="var" />
          <parameter name="RecipientCode" type="OleVariant" paramflags="var" />
          <retval type="_LetterContent" />
        </parameters>
      </function>
      <function name="CreateLetterContent" visibility="public" procflags="overload">
        <parameters>
          <parameter name="DateFormat" type="WideString" paramflags="const" />
          <parameter name="IncludeHeaderFooter" type="WordBool" />
          <parameter name="PageDesign" type="WideString" paramflags="const" />
          <parameter name="LetterStyle" type="TOleEnum" />
          <parameter name="Letterhead" type="WordBool" />
          <parameter name="LetterheadLocation" type="TOleEnum" />
          <parameter name="LetterheadSize" type="Single" />
          <parameter name="RecipientName" type="WideString" paramflags="const" />
          <parameter name="RecipientAddress" type="WideString" paramflags="const" />
          <parameter name="Salutation" type="WideString" paramflags="const" />
          <parameter name="SalutationType" type="TOleEnum" />
          <parameter name="RecipientReference" type="WideString" paramflags="const" />
          <parameter name="MailingInstructions" type="WideString" paramflags="const" />
          <parameter name="AttentionLine" type="WideString" paramflags="const" />
          <parameter name="Subject" type="WideString" paramflags="const" />
          <parameter name="CCList" type="WideString" paramflags="const" />
          <parameter name="ReturnAddress" type="WideString" paramflags="const" />
          <parameter name="SenderName" type="WideString" paramflags="const" />
          <parameter name="Closing" type="WideString" paramflags="const" />
          <parameter name="SenderCompany" type="WideString" paramflags="const" />
          <parameter name="SenderJobTitle" type="WideString" paramflags="const" />
          <parameter name="SenderInitials" type="WideString" paramflags="const" />
          <parameter name="EnclosureNumber" type="Integer" />
          <parameter name="InfoBlock" type="OleVariant" paramflags="var" />
          <parameter name="RecipientCode" type="OleVariant" paramflags="var" />
          <parameter name="RecipientGender" type="OleVariant" paramflags="var" />
          <retval type="_LetterContent" />
        </parameters>
      </function>
      <function name="CreateLetterContent" visibility="public" procflags="overload">
        <parameters>
          <parameter name="DateFormat" type="WideString" paramflags="const" />
          <parameter name="IncludeHeaderFooter" type="WordBool" />
          <parameter name="PageDesign" type="WideString" paramflags="const" />
          <parameter name="LetterStyle" type="TOleEnum" />
          <parameter name="Letterhead" type="WordBool" />
          <parameter name="LetterheadLocation" type="TOleEnum" />
          <parameter name="LetterheadSize" type="Single" />
          <parameter name="RecipientName" type="WideString" paramflags="const" />
          <parameter name="RecipientAddress" type="WideString" paramflags="const" />
          <parameter name="Salutation" type="WideString" paramflags="const" />
          <parameter name="SalutationType" type="TOleEnum" />
          <parameter name="RecipientReference" type="WideString" paramflags="const" />
          <parameter name="MailingInstructions" type="WideString" paramflags="const" />
          <parameter name="AttentionLine" type="WideString" paramflags="const" />
          <parameter name="Subject" type="WideString" paramflags="const" />
          <parameter name="CCList" type="WideString" paramflags="const" />
          <parameter name="ReturnAddress" type="WideString" paramflags="const" />
          <parameter name="SenderName" type="WideString" paramflags="const" />
          <parameter name="Closing" type="WideString" paramflags="const" />
          <parameter name="SenderCompany" type="WideString" paramflags="const" />
          <parameter name="SenderJobTitle" type="WideString" paramflags="const" />
          <parameter name="SenderInitials" type="WideString" paramflags="const" />
          <parameter name="EnclosureNumber" type="Integer" />
          <parameter name="InfoBlock" type="OleVariant" paramflags="var" />
          <parameter name="RecipientCode" type="OleVariant" paramflags="var" />
          <parameter name="RecipientGender" type="OleVariant" paramflags="var" />
          <parameter name="ReturnAddressShortForm" type="OleVariant" paramflags="var" />
          <retval type="_LetterContent" />
        </parameters>
      </function>
      <function name="CreateLetterContent" visibility="public" procflags="overload">
        <parameters>
          <parameter name="DateFormat" type="WideString" paramflags="const" />
          <parameter name="IncludeHeaderFooter" type="WordBool" />
          <parameter name="PageDesign" type="WideString" paramflags="const" />
          <parameter name="LetterStyle" type="TOleEnum" />
          <parameter name="Letterhead" type="WordBool" />
          <parameter name="LetterheadLocation" type="TOleEnum" />
          <parameter name="LetterheadSize" type="Single" />
          <parameter name="RecipientName" type="WideString" paramflags="const" />
          <parameter name="RecipientAddress" type="WideString" paramflags="const" />
          <parameter name="Salutation" type="WideString" paramflags="const" />
          <parameter name="SalutationType" type="TOleEnum" />
          <parameter name="RecipientReference" type="WideString" paramflags="const" />
          <parameter name="MailingInstructions" type="WideString" paramflags="const" />
          <parameter name="AttentionLine" type="WideString" paramflags="const" />
          <parameter name="Subject" type="WideString" paramflags="const" />
          <parameter name="CCList" type="WideString" paramflags="const" />
          <parameter name="ReturnAddress" type="WideString" paramflags="const" />
          <parameter name="SenderName" type="WideString" paramflags="const" />
          <parameter name="Closing" type="WideString" paramflags="const" />
          <parameter name="SenderCompany" type="WideString" paramflags="const" />
          <parameter name="SenderJobTitle" type="WideString" paramflags="const" />
          <parameter name="SenderInitials" type="WideString" paramflags="const" />
          <parameter name="EnclosureNumber" type="Integer" />
          <parameter name="InfoBlock" type="OleVariant" paramflags="var" />
          <parameter name="RecipientCode" type="OleVariant" paramflags="var" />
          <parameter name="RecipientGender" type="OleVariant" paramflags="var" />
          <parameter name="ReturnAddressShortForm" type="OleVariant" paramflags="var" />
          <parameter name="SenderCity" type="OleVariant" paramflags="var" />
          <retval type="_LetterContent" />
        </parameters>
      </function>
      <function name="CreateLetterContent" visibility="public" procflags="overload">
        <parameters>
          <parameter name="DateFormat" type="WideString" paramflags="const" />
          <parameter name="IncludeHeaderFooter" type="WordBool" />
          <parameter name="PageDesign" type="WideString" paramflags="const" />
          <parameter name="LetterStyle" type="TOleEnum" />
          <parameter name="Letterhead" type="WordBool" />
          <parameter name="LetterheadLocation" type="TOleEnum" />
          <parameter name="LetterheadSize" type="Single" />
          <parameter name="RecipientName" type="WideString" paramflags="const" />
          <parameter name="RecipientAddress" type="WideString" paramflags="const" />
          <parameter name="Salutation" type="WideString" paramflags="const" />
          <parameter name="SalutationType" type="TOleEnum" />
          <parameter name="RecipientReference" type="WideString" paramflags="const" />
          <parameter name="MailingInstructions" type="WideString" paramflags="const" />
          <parameter name="AttentionLine" type="WideString" paramflags="const" />
          <parameter name="Subject" type="WideString" paramflags="const" />
          <parameter name="CCList" type="WideString" paramflags="const" />
          <parameter name="ReturnAddress" type="WideString" paramflags="const" />
          <parameter name="SenderName" type="WideString" paramflags="const" />
          <parameter name="Closing" type="WideString" paramflags="const" />
          <parameter name="SenderCompany" type="WideString" paramflags="const" />
          <parameter name="SenderJobTitle" type="WideString" paramflags="const" />
          <parameter name="SenderInitials" type="WideString" paramflags="const" />
          <parameter name="EnclosureNumber" type="Integer" />
          <parameter name="InfoBlock" type="OleVariant" paramflags="var" />
          <parameter name="RecipientCode" type="OleVariant" paramflags="var" />
          <parameter name="RecipientGender" type="OleVariant" paramflags="var" />
          <parameter name="ReturnAddressShortForm" type="OleVariant" paramflags="var" />
          <parameter name="SenderCity" type="OleVariant" paramflags="var" />
          <parameter name="SenderCode" type="OleVariant" paramflags="var" />
          <retval type="_LetterContent" />
        </parameters>
      </function>
      <function name="CreateLetterContent" visibility="public" procflags="overload">
        <parameters>
          <parameter name="DateFormat" type="WideString" paramflags="const" />
          <parameter name="IncludeHeaderFooter" type="WordBool" />
          <parameter name="PageDesign" type="WideString" paramflags="const" />
          <parameter name="LetterStyle" type="TOleEnum" />
          <parameter name="Letterhead" type="WordBool" />
          <parameter name="LetterheadLocation" type="TOleEnum" />
          <parameter name="LetterheadSize" type="Single" />
          <parameter name="RecipientName" type="WideString" paramflags="const" />
          <parameter name="RecipientAddress" type="WideString" paramflags="const" />
          <parameter name="Salutation" type="WideString" paramflags="const" />
          <parameter name="SalutationType" type="TOleEnum" />
          <parameter name="RecipientReference" type="WideString" paramflags="const" />
          <parameter name="MailingInstructions" type="WideString" paramflags="const" />
          <parameter name="AttentionLine" type="WideString" paramflags="const" />
          <parameter name="Subject" type="WideString" paramflags="const" />
          <parameter name="CCList" type="WideString" paramflags="const" />
          <parameter name="ReturnAddress" type="WideString" paramflags="const" />
          <parameter name="SenderName" type="WideString" paramflags="const" />
          <parameter name="Closing" type="WideString" paramflags="const" />
          <parameter name="SenderCompany" type="WideString" paramflags="const" />
          <parameter name="SenderJobTitle" type="WideString" paramflags="const" />
          <parameter name="SenderInitials" type="WideString" paramflags="const" />
          <parameter name="EnclosureNumber" type="Integer" />
          <parameter name="InfoBlock" type="OleVariant" paramflags="var" />
          <parameter name="RecipientCode" type="OleVariant" paramflags="var" />
          <parameter name="RecipientGender" type="OleVariant" paramflags="var" />
          <parameter name="ReturnAddressShortForm" type="OleVariant" paramflags="var" />
          <parameter name="SenderCity" type="OleVariant" paramflags="var" />
          <parameter name="SenderCode" type="OleVariant" paramflags="var" />
          <parameter name="SenderGender" type="OleVariant" paramflags="var" />
          <retval type="_LetterContent" />
        </parameters>
      </function>
      <function name="CreateLetterContent" visibility="public" procflags="overload">
        <parameters>
          <parameter name="DateFormat" type="WideString" paramflags="const" />
          <parameter name="IncludeHeaderFooter" type="WordBool" />
          <parameter name="PageDesign" type="WideString" paramflags="const" />
          <parameter name="LetterStyle" type="TOleEnum" />
          <parameter name="Letterhead" type="WordBool" />
          <parameter name="LetterheadLocation" type="TOleEnum" />
          <parameter name="LetterheadSize" type="Single" />
          <parameter name="RecipientName" type="WideString" paramflags="const" />
          <parameter name="RecipientAddress" type="WideString" paramflags="const" />
          <parameter name="Salutation" type="WideString" paramflags="const" />
          <parameter name="SalutationType" type="TOleEnum" />
          <parameter name="RecipientReference" type="WideString" paramflags="const" />
          <parameter name="MailingInstructions" type="WideString" paramflags="const" />
          <parameter name="AttentionLine" type="WideString" paramflags="const" />
          <parameter name="Subject" type="WideString" paramflags="const" />
          <parameter name="CCList" type="WideString" paramflags="const" />
          <parameter name="ReturnAddress" type="WideString" paramflags="const" />
          <parameter name="SenderName" type="WideString" paramflags="const" />
          <parameter name="Closing" type="WideString" paramflags="const" />
          <parameter name="SenderCompany" type="WideString" paramflags="const" />
          <parameter name="SenderJobTitle" type="WideString" paramflags="const" />
          <parameter name="SenderInitials" type="WideString" paramflags="const" />
          <parameter name="EnclosureNumber" type="Integer" />
          <parameter name="InfoBlock" type="OleVariant" paramflags="var" />
          <parameter name="RecipientCode" type="OleVariant" paramflags="var" />
          <parameter name="RecipientGender" type="OleVariant" paramflags="var" />
          <parameter name="ReturnAddressShortForm" type="OleVariant" paramflags="var" />
          <parameter name="SenderCity" type="OleVariant" paramflags="var" />
          <parameter name="SenderCode" type="OleVariant" paramflags="var" />
          <parameter name="SenderGender" type="OleVariant" paramflags="var" />
          <parameter name="SenderReference" type="OleVariant" paramflags="var" />
          <retval type="_LetterContent" />
        </parameters>
      </function>
      <procedure name="AcceptAllRevisions" visibility="public">
      </procedure>
      <procedure name="RejectAllRevisions" visibility="public">
      </procedure>
      <property name="DefaultInterface" visibility="public" read="GetDefaultInterface" type="_Document" />
      <property name="Name" visibility="public" read="Get_Name" type="WideString" />
      <property name="Application" visibility="public" read="Get_Application" type="_Application" />
      <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
      <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
      <property name="BuiltInDocumentProperties" visibility="public" read="Get_BuiltInDocumentProperties" type="IDispatch" />
      <property name="CustomDocumentProperties" visibility="public" read="Get_CustomDocumentProperties" type="IDispatch" />
      <property name="Path" visibility="public" read="Get_Path" type="WideString" default="0" />
      <property name="Bookmarks" visibility="public" read="Get_Bookmarks" type="Bookmarks" />
      <property name="Tables" visibility="public" read="Get_Tables" type="Tables" />
      <property name="Footnotes" visibility="public" read="Get_Footnotes" type="Footnotes" />
      <property name="Endnotes" visibility="public" read="Get_Endnotes" type="Endnotes" />
      <property name="Comments" visibility="public" read="Get_Comments" type="Comments" />
      <property name="type_" visibility="public" read="Get_type_" type="TOleEnum" />
      <property name="Sections" visibility="public" read="Get_Sections" type="Sections" />
      <property name="Paragraphs" visibility="public" read="Get_Paragraphs" type="Paragraphs" />
      <property name="Words" visibility="public" read="Get_Words" type="Words" />
      <property name="Sentences" visibility="public" read="Get_Sentences" type="Sentences" />
      <property name="Characters" visibility="public" read="Get_Characters" type="Characters" />
      <property name="Fields" visibility="public" read="Get_Fields" type="Fields" />
      <property name="FormFields" visibility="public" read="Get_FormFields" type="FormFields" />
      <property name="Styles" visibility="public" read="Get_Styles" type="Styles" />
      <property name="Frames" visibility="public" read="Get_Frames" type="Frames" />
      <property name="TablesOfFigures" visibility="public" read="Get_TablesOfFigures" type="TablesOfFigures" />
      <property name="Variables" visibility="public" read="Get_Variables" type="Variables" />
      <property name="MailMerge" visibility="public" read="Get_MailMerge" type="MailMerge" />
      <property name="Envelope" visibility="public" read="Get_Envelope" type="Envelope" />
      <property name="FullName" visibility="public" read="Get_FullName" type="WideString" default="0" />
      <property name="Revisions" visibility="public" read="Get_Revisions" type="Revisions" />
      <property name="TablesOfContents" visibility="public" read="Get_TablesOfContents" type="TablesOfContents" />
      <property name="TablesOfAuthorities" visibility="public" read="Get_TablesOfAuthorities" type="TablesOfAuthorities" />
      <property name="Windows" visibility="public" read="Get_Windows" type="Windows" />
      <property name="RoutingSlip" visibility="public" read="Get_RoutingSlip" type="RoutingSlip" />
      <property name="Routed" visibility="public" read="Get_Routed" type="WordBool" />
      <property name="TablesOfAuthoritiesCategories" visibility="public" read="Get_TablesOfAuthoritiesCategories" type="TablesOfAuthoritiesCategories" />
      <property name="Indexes" visibility="public" read="Get_Indexes" type="Indexes" />
      <property name="Content" visibility="public" read="Get_Content" type="Range" />
      <property name="ActiveWindow" visibility="public" read="Get_ActiveWindow" type="Window" />
      <property name="ReadOnly" visibility="public" read="Get_ReadOnly" type="WordBool" />
      <property name="Subdocuments" visibility="public" read="Get_Subdocuments" type="Subdocuments" />
      <property name="IsMasterDocument" visibility="public" read="Get_IsMasterDocument" type="WordBool" />
      <property name="Compatibility[Type_]" visibility="public" read="Get_Compatibility" write="Set_Compatibility" type="WordBool" />
      <property name="StoryRanges" visibility="public" read="Get_StoryRanges" type="StoryRanges" />
      <property name="CommandBars" visibility="public" read="Get_CommandBars" type="CommandBars" />
      <property name="IsSubdocument" visibility="public" read="Get_IsSubdocument" type="WordBool" />
      <property name="SaveFormat" visibility="public" read="Get_SaveFormat" type="Integer" />
      <property name="ProtectionType" visibility="public" read="Get_ProtectionType" type="TOleEnum" />
      <property name="Hyperlinks" visibility="public" read="Get_Hyperlinks" type="Hyperlinks" />
      <property name="Shapes" visibility="public" read="Get_Shapes" type="Shapes" />
      <property name="ListTemplates" visibility="public" read="Get_ListTemplates" type="ListTemplates" />
      <property name="Lists" visibility="public" read="Get_Lists" type="Lists" />
      <property name="InlineShapes" visibility="public" read="Get_InlineShapes" type="InlineShapes" />
      <property name="Versions" visibility="public" read="Get_Versions" type="Versions" />
      <property name="Container" visibility="public" read="Get_Container" type="IDispatch" />
      <property name="ListParagraphs" visibility="public" read="Get_ListParagraphs" type="ListParagraphs" />
      <property name="Password" visibility="public" write="Set_Password" type="WideString" default="0" />
      <property name="WritePassword" visibility="public" write="Set_WritePassword" type="WideString" default="0" />
      <property name="HasPassword" visibility="public" read="Get_HasPassword" type="WordBool" />
      <property name="WriteReserved" visibility="public" read="Get_WriteReserved" type="WordBool" />
      <property name="ActiveWritingStyle[LanguageID]" visibility="public" read="Get_ActiveWritingStyle" write="Set_ActiveWritingStyle" type="WideString" />
      <property name="Mailer" visibility="public" read="Get_Mailer" type="Mailer" />
      <property name="ReadabilityStatistics" visibility="public" read="Get_ReadabilityStatistics" type="ReadabilityStatistics" />
      <property name="GrammaticalErrors" visibility="public" read="Get_GrammaticalErrors" type="ProofreadingErrors" />
      <property name="SpellingErrors" visibility="public" read="Get_SpellingErrors" type="ProofreadingErrors" />
      <property name="VBProject" visibility="public" read="Get_VBProject" type="_VBProject" />
      <property name="FormsDesign" visibility="public" read="Get_FormsDesign" type="WordBool" />
      <property name="CodeName" visibility="public" read="Get_CodeName" type="WideString" default="0" />
      <property name="SnapToGrid" visibility="public" read="Get_SnapToGrid" write="Set_SnapToGrid" type="WordBool" />
      <property name="SnapToShapes" visibility="public" read="Get_SnapToShapes" write="Set_SnapToShapes" type="WordBool" />
      <property name="GridDistanceHorizontal" visibility="public" read="Get_GridDistanceHorizontal" write="Set_GridDistanceHorizontal" type="Single" default="0" />
      <property name="GridDistanceVertical" visibility="public" read="Get_GridDistanceVertical" write="Set_GridDistanceVertical" type="Single" default="0" />
      <property name="GridOriginHorizontal" visibility="public" read="Get_GridOriginHorizontal" write="Set_GridOriginHorizontal" type="Single" default="0" />
      <property name="GridOriginVertical" visibility="public" read="Get_GridOriginVertical" write="Set_GridOriginVertical" type="Single" default="0" />
      <property name="GridSpaceBetweenHorizontalLines" visibility="public" read="Get_GridSpaceBetweenHorizontalLines" write="Set_GridSpaceBetweenHorizontalLines" type="Integer" />
      <property name="GridSpaceBetweenVerticalLines" visibility="public" read="Get_GridSpaceBetweenVerticalLines" write="Set_GridSpaceBetweenVerticalLines" type="Integer" />
      <property name="GridOriginFromMargin" visibility="public" read="Get_GridOriginFromMargin" write="Set_GridOriginFromMargin" type="WordBool" />
      <property name="KerningByAlgorithm" visibility="public" read="Get_KerningByAlgorithm" write="Set_KerningByAlgorithm" type="WordBool" />
      <property name="JustificationMode" visibility="public" read="Get_JustificationMode" write="Set_JustificationMode" type="TOleEnum" />
      <property name="FarEastLineBreakLevel" visibility="public" read="Get_FarEastLineBreakLevel" write="Set_FarEastLineBreakLevel" type="TOleEnum" />
      <property name="NoLineBreakBefore" visibility="public" read="Get_NoLineBreakBefore" write="Set_NoLineBreakBefore" type="WideString" default="0" />
      <property name="NoLineBreakAfter" visibility="public" read="Get_NoLineBreakAfter" write="Set_NoLineBreakAfter" type="WideString" default="0" />
      <property name="AutoHyphenation" visibility="public" read="Get_AutoHyphenation" write="Set_AutoHyphenation" type="WordBool" />
      <property name="HyphenateCaps" visibility="public" read="Get_HyphenateCaps" write="Set_HyphenateCaps" type="WordBool" />
      <property name="HyphenationZone" visibility="public" read="Get_HyphenationZone" write="Set_HyphenationZone" type="Integer" />
      <property name="ConsecutiveHyphensLimit" visibility="public" read="Get_ConsecutiveHyphensLimit" write="Set_ConsecutiveHyphensLimit" type="Integer" />
      <property name="PageSetup" visibility="public" read="Get_PageSetup" write="Set_PageSetup" type="PageSetup" />
      <property name="HasRoutingSlip" visibility="public" read="Get_HasRoutingSlip" write="Set_HasRoutingSlip" type="WordBool" />
      <property name="Saved" visibility="public" read="Get_Saved" write="Set_Saved" type="WordBool" />
      <property name="Kind" visibility="public" read="Get_Kind" write="Set_Kind" type="TOleEnum" />
      <property name="DefaultTabStop" visibility="public" read="Get_DefaultTabStop" write="Set_DefaultTabStop" type="Single" default="0" />
      <property name="EmbedTrueTypeFonts" visibility="public" read="Get_EmbedTrueTypeFonts" write="Set_EmbedTrueTypeFonts" type="WordBool" />
      <property name="SaveFormsData" visibility="public" read="Get_SaveFormsData" write="Set_SaveFormsData" type="WordBool" />
      <property name="ReadOnlyRecommended" visibility="public" read="Get_ReadOnlyRecommended" write="Set_ReadOnlyRecommended" type="WordBool" />
      <property name="SaveSubsetFonts" visibility="public" read="Get_SaveSubsetFonts" write="Set_SaveSubsetFonts" type="WordBool" />
      <property name="UpdateStylesOnOpen" visibility="public" read="Get_UpdateStylesOnOpen" write="Set_UpdateStylesOnOpen" type="WordBool" />
      <property name="Background" visibility="public" read="Get_Background" write="Set_Background" type="Shape" />
      <property name="GrammarChecked" visibility="public" read="Get_GrammarChecked" write="Set_GrammarChecked" type="WordBool" />
      <property name="SpellingChecked" visibility="public" read="Get_SpellingChecked" write="Set_SpellingChecked" type="WordBool" />
      <property name="ShowGrammaticalErrors" visibility="public" read="Get_ShowGrammaticalErrors" write="Set_ShowGrammaticalErrors" type="WordBool" />
      <property name="ShowSpellingErrors" visibility="public" read="Get_ShowSpellingErrors" write="Set_ShowSpellingErrors" type="WordBool" />
      <property name="ShowSummary" visibility="public" read="Get_ShowSummary" write="Set_ShowSummary" type="WordBool" />
      <property name="SummaryViewMode" visibility="public" read="Get_SummaryViewMode" write="Set_SummaryViewMode" type="TOleEnum" />
      <property name="SummaryLength" visibility="public" read="Get_SummaryLength" write="Set_SummaryLength" type="Integer" />
      <property name="PrintFractionalWidths" visibility="public" read="Get_PrintFractionalWidths" write="Set_PrintFractionalWidths" type="WordBool" />
      <property name="PrintPostScriptOverText" visibility="public" read="Get_PrintPostScriptOverText" write="Set_PrintPostScriptOverText" type="WordBool" />
      <property name="PrintFormsData" visibility="public" read="Get_PrintFormsData" write="Set_PrintFormsData" type="WordBool" />
      <property name="UserControl" visibility="public" read="Get_UserControl" write="Set_UserControl" type="WordBool" />
      <property name="HasMailer" visibility="public" read="Get_HasMailer" write="Set_HasMailer" type="WordBool" />
      <property name="_CodeName" visibility="public" read="Get__CodeName" write="Set__CodeName" type="WideString" default="0" />
      <property name="TrackRevisions" visibility="public" read="Get_TrackRevisions" write="Set_TrackRevisions" type="WordBool" />
      <property name="PrintRevisions" visibility="public" read="Get_PrintRevisions" write="Set_PrintRevisions" type="WordBool" />
      <property name="ShowRevisions" visibility="public" read="Get_ShowRevisions" write="Set_ShowRevisions" type="WordBool" />
      <event name="OnNew" visibility="published" read="FOnNew" write="FOnNew" type="TNotifyEvent" />
      <event name="OnOpen" visibility="published" read="FOnOpen" write="FOnOpen" type="TNotifyEvent" />
      <event name="OnClose" visibility="published" read="FOnClose" write="FOnClose" type="TNotifyEvent" />
    </members>
  </class>
  <class name="CoWordFont">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="DisposeOf" visibility="public" procflags="inline" symflags="deprecated">
      </methodref>
      <methodref name="InitInstance" visibility="public" procflags="class">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public" procflags="inline">
      </methodref>
      <methodref name="ClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassNameIs" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassParent" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="ClassInfo" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InstanceSize" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InheritsFrom" visibility="public" procflags="class">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodName" visibility="public" procflags="class">
      </methodref>
      <methodref name="QualifiedClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="UnitName" visibility="public" procflags="class">
      </methodref>
      <methodref name="UnitScope" visibility="public" procflags="class">
      </methodref>
      <methodref name="Equals" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetHashCode" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToString" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="SafeCallException" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Dispatch" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="NewInstance" visibility="public" procflags="class virtual">
      </methodref>
      <methodref name="FreeInstance" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
      </methodref>
      <methodref name="GetDisposed" visibility="protected" procflags="inline">
      </methodref>
      <methodref name="CheckDisposed" visibility="protected" procflags="inline">
      </methodref>
      <propertyref name="Disposed" visibility="protected">
      </propertyref>
    </ancestor>
    <members>
      <function name="Create" visibility="public" procflags="class">
        <parameters>
          <retval type="_Font" />
        </parameters>
      </function>
      <function name="CreateRemote" visibility="public" procflags="class">
        <parameters>
          <parameter name="MachineName" type="string" paramflags="const" />
          <retval type="_Font" />
        </parameters>
      </function>
    </members>
  </class>
  <class name="TWordFont">
    <ancestor name="TOleServer" namespace="Vcl.OleServer">
      <interfaces>
        <implements name="IInterface" />
      </interfaces>
      <methodref name="QueryInterface" visibility="protected" procflags="override">
      </methodref>
      <methodref name="_AddRef" visibility="protected">
      </methodref>
      <methodref name="_Release" visibility="protected">
      </methodref>
      <methodref name="Loaded" visibility="protected" procflags="override">
      </methodref>
      <methodref name="InitServerData" visibility="protected" procflags="abstract virtual">
      </methodref>
      <methodref name="GetServer" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="ConnectEvents" visibility="protected">
      </methodref>
      <methodref name="DisconnectEvents" visibility="protected">
      </methodref>
      <methodref name="InvokeEvent" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetConnectKind" visibility="protected">
      </methodref>
      <methodref name="SetConnectKind" visibility="protected">
      </methodref>
      <methodref name="GetAutoConnect" visibility="protected">
      </methodref>
      <methodref name="SetAutoConnect" visibility="protected">
      </methodref>
      <propertyref name="ServerData" visibility="protected">
      </propertyref>
      <propertyref name="EventDispatch" visibility="protected">
      </propertyref>
      <methodref name="Create" visibility="public" procflags="constructor override">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor override">
      </methodref>
      <methodref name="Connect" visibility="public" procflags="abstract virtual">
      </methodref>
      <methodref name="Disconnect" visibility="public" procflags="abstract virtual">
      </methodref>
      <propertyref name="AutoConnect" visibility="published">
      </propertyref>
      <propertyref name="ConnectKind" visibility="published">
      </propertyref>
      <propertyref name="RemoteMachineName" visibility="published">
      </propertyref>
      <ancestor name="TComponent" namespace="System.Classes">
        <interfaces>
          <implements name="IInterfaceComponentReference" />
          <implements name="IInterface" />
        </interfaces>
        <methodref name="GetComObject" visibility="private">
        </methodref>
        <methodref name="GetComponent" visibility="private">
        </methodref>
        <methodref name="GetComponentCount" visibility="private">
        </methodref>
        <methodref name="GetComponentIndex" visibility="private">
        </methodref>
        <methodref name="Insert" visibility="private">
        </methodref>
        <methodref name="ReadLeft" visibility="private">
        </methodref>
        <methodref name="ReadTop" visibility="private">
        </methodref>
        <methodref name="Remove" visibility="private">
        </methodref>
        <methodref name="RemoveNotification" visibility="private">
        </methodref>
        <methodref name="SetComponentIndex" visibility="private">
        </methodref>
        <methodref name="SetReference" visibility="private">
        </methodref>
        <methodref name="WriteLeft" visibility="private">
        </methodref>
        <methodref name="WriteTop" visibility="private">
        </methodref>
        <methodref name="IntfGetComponent" visibility="private">
        </methodref>
        <methodref name="DoGetDeltaStreams" visibility="private">
        </methodref>
        <methodref name="ReadDeltaStream" visibility="private">
        </methodref>
        <methodref name="ReadDeltaState" visibility="private">
        </methodref>
        <methodref name="FindSortedComponent" visibility="private">
        </methodref>
        <methodref name="AddSortedComponent" visibility="private">
        </methodref>
        <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
        </methodref>
        <methodref name="Create@" visibility="class private" procflags="class constructor noself">
        </methodref>
        <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ChangeName" visibility="protected">
        </methodref>
        <methodref name="DefineProperties" visibility="protected" procflags="override">
        </methodref>
        <methodref name="GetChildren" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetOwner" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Loaded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Notification" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ReadState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="CanObserve" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetObservers" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetAncestor" visibility="protected">
        </methodref>
        <methodref name="SetDesigning" visibility="protected">
        </methodref>
        <methodref name="SetInline" visibility="protected">
        </methodref>
        <methodref name="SetDesignInstance" visibility="protected">
        </methodref>
        <methodref name="SetName" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updating" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updated" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
        </methodref>
        <methodref name="ValidateRename" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="WriteState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="RemoveFreeNotifications" visibility="protected">
        </methodref>
        <methodref name="QueryInterface" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="_AddRef" visibility="protected">
        </methodref>
        <methodref name="_Release" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfoCount" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfo" visibility="protected">
        </methodref>
        <methodref name="GetIDsOfNames" visibility="protected">
        </methodref>
        <methodref name="Invoke" visibility="protected">
        </methodref>
        <eventref name="OnGetDeltaStreams" visibility="protected">
        </eventref>
        <methodref name="Create" visibility="public" procflags="constructor virtual">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor override">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public" procflags="override">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndFunctionInvoke" visibility="public">
        </methodref>
        <methodref name="DestroyComponents" visibility="public">
        </methodref>
        <methodref name="Destroying" visibility="public">
        </methodref>
        <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="FindComponent" visibility="public">
        </methodref>
        <methodref name="FreeNotification" visibility="public">
        </methodref>
        <methodref name="RemoveFreeNotification" visibility="public">
        </methodref>
        <methodref name="FreeOnRelease" visibility="public">
        </methodref>
        <methodref name="GetEnumerator" visibility="public" procflags="inline">
        </methodref>
        <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="GetNamePath" visibility="public" procflags="override">
        </methodref>
        <methodref name="HasParent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="InsertComponent" visibility="public">
        </methodref>
        <methodref name="RemoveComponent" visibility="public">
        </methodref>
        <methodref name="SetSubComponent" visibility="public">
        </methodref>
        <methodref name="SafeCallException" visibility="public" procflags="override">
        </methodref>
        <methodref name="UpdateAction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="IsImplementorOf" visibility="public">
        </methodref>
        <methodref name="ReferenceInterface" visibility="public">
        </methodref>
        <propertyref name="ComObject" visibility="public">
        </propertyref>
        <propertyref name="Components" visibility="public">
        </propertyref>
        <propertyref name="ComponentCount" visibility="public">
        </propertyref>
        <propertyref name="ComponentIndex" visibility="public">
        </propertyref>
        <propertyref name="ComponentState" visibility="public">
        </propertyref>
        <propertyref name="ComponentStyle" visibility="public">
        </propertyref>
        <propertyref name="DesignInfo" visibility="public">
        </propertyref>
        <propertyref name="Owner" visibility="public">
        </propertyref>
        <propertyref name="VCLComObject" visibility="public">
        </propertyref>
        <propertyref name="Observers" visibility="public">
        </propertyref>
        <propertyref name="Name" visibility="published">
        </propertyref>
        <propertyref name="Tag" visibility="published">
        </propertyref>
        <ancestor name="TPersistent" namespace="System.Classes">
          <methodref name="AssignError" visibility="private">
          </methodref>
          <methodref name="AssignTo" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DefineProperties" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetOwner" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor override">
          </methodref>
          <methodref name="Assign" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="GetNamePath" visibility="public" procflags="dynamic">
          </methodref>
          <ancestor name="TObject" namespace="System">
            <methodref name="Create" visibility="public" procflags="constructor">
            </methodref>
            <methodref name="Free" visibility="public">
            </methodref>
            <methodref name="DisposeOf" visibility="public" procflags="inline" symflags="deprecated">
            </methodref>
            <methodref name="InitInstance" visibility="public" procflags="class">
            </methodref>
            <methodref name="CleanupInstance" visibility="public">
            </methodref>
            <methodref name="ClassType" visibility="public" procflags="inline">
            </methodref>
            <methodref name="ClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassNameIs" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassParent" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="ClassInfo" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InstanceSize" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InheritsFrom" visibility="public" procflags="class">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodName" visibility="public" procflags="class">
            </methodref>
            <methodref name="QualifiedClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="GetInterface" visibility="public">
            </methodref>
            <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
            </methodref>
            <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="UnitName" visibility="public" procflags="class">
            </methodref>
            <methodref name="UnitScope" visibility="public" procflags="class">
            </methodref>
            <methodref name="Equals" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="GetHashCode" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="ToString" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="SafeCallException" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="AfterConstruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Dispatch" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="DefaultHandler" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="NewInstance" visibility="public" procflags="class virtual">
            </methodref>
            <methodref name="FreeInstance" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor virtual">
            </methodref>
            <methodref name="GetDisposed" visibility="protected" procflags="inline">
            </methodref>
            <methodref name="CheckDisposed" visibility="protected" procflags="inline">
            </methodref>
            <propertyref name="Disposed" visibility="protected">
            </propertyref>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <field name="FIntf" type="_Font" visibility="private" size="4" offset="96" />
      <function name="GetDefaultInterface" visibility="private">
        <parameters>
          <retval type="_Font" />
        </parameters>
      </function>
      <procedure name="InitServerData" visibility="protected" procflags="override">
      </procedure>
      <function name="Get_Application" visibility="protected">
        <parameters>
          <retval type="_Application" />
        </parameters>
      </function>
      <function name="Get_Creator" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="Get_Parent" visibility="protected">
        <parameters>
          <retval type="IDispatch" />
        </parameters>
      </function>
      <function name="Get_Duplicate" visibility="protected">
        <parameters>
          <retval type="_Font" />
        </parameters>
      </function>
      <function name="Get_Bold" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_Bold" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_Italic" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_Italic" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_Hidden" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_Hidden" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_SmallCaps" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_SmallCaps" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_AllCaps" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_AllCaps" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_StrikeThrough" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_StrikeThrough" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_DoubleStrikeThrough" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_DoubleStrikeThrough" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_ColorIndex" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_ColorIndex" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <function name="Get_Subscript" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_Subscript" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_Superscript" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_Superscript" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_Underline" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_Underline" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <function name="Get_Size" visibility="protected">
        <parameters>
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Set_Size" visibility="protected">
        <parameters>
          <parameter name="prop" type="Single" />
        </parameters>
      </procedure>
      <function name="Get_Name" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_Name" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_Position" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_Position" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_Spacing" visibility="protected">
        <parameters>
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Set_Spacing" visibility="protected">
        <parameters>
          <parameter name="prop" type="Single" />
        </parameters>
      </procedure>
      <function name="Get_Scaling" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_Scaling" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_Shadow" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_Shadow" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_Outline" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_Outline" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_Emboss" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_Emboss" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_Kerning" visibility="protected">
        <parameters>
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Set_Kerning" visibility="protected">
        <parameters>
          <parameter name="prop" type="Single" />
        </parameters>
      </procedure>
      <function name="Get_Engrave" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_Engrave" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_Animation" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_Animation" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <function name="Get_Borders" visibility="protected">
        <parameters>
          <retval type="Borders" />
        </parameters>
      </function>
      <procedure name="Set_Borders" visibility="protected">
        <parameters>
          <parameter name="prop" type="Borders" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_Shading" visibility="protected">
        <parameters>
          <retval type="Shading" />
        </parameters>
      </function>
      <function name="Get_EmphasisMark" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_EmphasisMark" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <function name="Get_DisableCharacterSpaceGrid" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_DisableCharacterSpaceGrid" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_NameFarEast" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_NameFarEast" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_NameAscii" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_NameAscii" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_NameOther" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_NameOther" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="AOwner" type="TComponent" />
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public">
        <parameters>
        </parameters>
      </destructor>
      <procedure name="Connect" visibility="public" procflags="override">
      </procedure>
      <procedure name="ConnectTo" visibility="public">
        <parameters>
          <parameter name="svrIntf" type="_Font" />
        </parameters>
      </procedure>
      <procedure name="Disconnect" visibility="public" procflags="override">
      </procedure>
      <procedure name="Grow" visibility="public">
      </procedure>
      <procedure name="Shrink" visibility="public">
      </procedure>
      <procedure name="Reset" visibility="public">
      </procedure>
      <procedure name="SetAsTemplateDefault" visibility="public">
      </procedure>
      <property name="DefaultInterface" visibility="public" read="GetDefaultInterface" type="_Font" />
      <property name="Application" visibility="public" read="Get_Application" type="_Application" />
      <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
      <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
      <property name="Duplicate" visibility="public" read="Get_Duplicate" type="_Font" />
      <property name="Shading" visibility="public" read="Get_Shading" type="Shading" />
      <property name="EmphasisMark" visibility="public" read="Get_EmphasisMark" write="Set_EmphasisMark" type="TOleEnum" />
      <property name="DisableCharacterSpaceGrid" visibility="public" read="Get_DisableCharacterSpaceGrid" write="Set_DisableCharacterSpaceGrid" type="WordBool" />
      <property name="Bold" visibility="public" read="Get_Bold" write="Set_Bold" type="Integer" />
      <property name="Italic" visibility="public" read="Get_Italic" write="Set_Italic" type="Integer" />
      <property name="Hidden" visibility="public" read="Get_Hidden" write="Set_Hidden" type="Integer" />
      <property name="SmallCaps" visibility="public" read="Get_SmallCaps" write="Set_SmallCaps" type="Integer" />
      <property name="AllCaps" visibility="public" read="Get_AllCaps" write="Set_AllCaps" type="Integer" />
      <property name="StrikeThrough" visibility="public" read="Get_StrikeThrough" write="Set_StrikeThrough" type="Integer" />
      <property name="DoubleStrikeThrough" visibility="public" read="Get_DoubleStrikeThrough" write="Set_DoubleStrikeThrough" type="Integer" />
      <property name="ColorIndex" visibility="public" read="Get_ColorIndex" write="Set_ColorIndex" type="TOleEnum" />
      <property name="Subscript" visibility="public" read="Get_Subscript" write="Set_Subscript" type="Integer" />
      <property name="Superscript" visibility="public" read="Get_Superscript" write="Set_Superscript" type="Integer" />
      <property name="Underline" visibility="public" read="Get_Underline" write="Set_Underline" type="TOleEnum" />
      <property name="Size" visibility="public" read="Get_Size" write="Set_Size" type="Single" default="0" />
      <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" />
      <property name="Position" visibility="public" read="Get_Position" write="Set_Position" type="Integer" />
      <property name="Spacing" visibility="public" read="Get_Spacing" write="Set_Spacing" type="Single" default="0" />
      <property name="Scaling" visibility="public" read="Get_Scaling" write="Set_Scaling" type="Integer" />
      <property name="Shadow" visibility="public" read="Get_Shadow" write="Set_Shadow" type="Integer" />
      <property name="Outline" visibility="public" read="Get_Outline" write="Set_Outline" type="Integer" />
      <property name="Emboss" visibility="public" read="Get_Emboss" write="Set_Emboss" type="Integer" />
      <property name="Kerning" visibility="public" read="Get_Kerning" write="Set_Kerning" type="Single" default="0" />
      <property name="Engrave" visibility="public" read="Get_Engrave" write="Set_Engrave" type="Integer" />
      <property name="Animation" visibility="public" read="Get_Animation" write="Set_Animation" type="TOleEnum" />
      <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
      <property name="NameFarEast" visibility="public" read="Get_NameFarEast" write="Set_NameFarEast" type="WideString" default="0" />
      <property name="NameAscii" visibility="public" read="Get_NameAscii" write="Set_NameAscii" type="WideString" default="0" />
      <property name="NameOther" visibility="public" read="Get_NameOther" write="Set_NameOther" type="WideString" default="0" />
    </members>
  </class>
  <class name="CoWordParagraphFormat">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="DisposeOf" visibility="public" procflags="inline" symflags="deprecated">
      </methodref>
      <methodref name="InitInstance" visibility="public" procflags="class">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public" procflags="inline">
      </methodref>
      <methodref name="ClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassNameIs" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassParent" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="ClassInfo" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InstanceSize" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InheritsFrom" visibility="public" procflags="class">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodName" visibility="public" procflags="class">
      </methodref>
      <methodref name="QualifiedClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="UnitName" visibility="public" procflags="class">
      </methodref>
      <methodref name="UnitScope" visibility="public" procflags="class">
      </methodref>
      <methodref name="Equals" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetHashCode" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToString" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="SafeCallException" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Dispatch" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="NewInstance" visibility="public" procflags="class virtual">
      </methodref>
      <methodref name="FreeInstance" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
      </methodref>
      <methodref name="GetDisposed" visibility="protected" procflags="inline">
      </methodref>
      <methodref name="CheckDisposed" visibility="protected" procflags="inline">
      </methodref>
      <propertyref name="Disposed" visibility="protected">
      </propertyref>
    </ancestor>
    <members>
      <function name="Create" visibility="public" procflags="class">
        <parameters>
          <retval type="_ParagraphFormat" />
        </parameters>
      </function>
      <function name="CreateRemote" visibility="public" procflags="class">
        <parameters>
          <parameter name="MachineName" type="string" paramflags="const" />
          <retval type="_ParagraphFormat" />
        </parameters>
      </function>
    </members>
  </class>
  <class name="TWordParagraphFormat">
    <ancestor name="TOleServer" namespace="Vcl.OleServer">
      <interfaces>
        <implements name="IInterface" />
      </interfaces>
      <methodref name="QueryInterface" visibility="protected" procflags="override">
      </methodref>
      <methodref name="_AddRef" visibility="protected">
      </methodref>
      <methodref name="_Release" visibility="protected">
      </methodref>
      <methodref name="Loaded" visibility="protected" procflags="override">
      </methodref>
      <methodref name="InitServerData" visibility="protected" procflags="abstract virtual">
      </methodref>
      <methodref name="GetServer" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="ConnectEvents" visibility="protected">
      </methodref>
      <methodref name="DisconnectEvents" visibility="protected">
      </methodref>
      <methodref name="InvokeEvent" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetConnectKind" visibility="protected">
      </methodref>
      <methodref name="SetConnectKind" visibility="protected">
      </methodref>
      <methodref name="GetAutoConnect" visibility="protected">
      </methodref>
      <methodref name="SetAutoConnect" visibility="protected">
      </methodref>
      <propertyref name="ServerData" visibility="protected">
      </propertyref>
      <propertyref name="EventDispatch" visibility="protected">
      </propertyref>
      <methodref name="Create" visibility="public" procflags="constructor override">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor override">
      </methodref>
      <methodref name="Connect" visibility="public" procflags="abstract virtual">
      </methodref>
      <methodref name="Disconnect" visibility="public" procflags="abstract virtual">
      </methodref>
      <propertyref name="AutoConnect" visibility="published">
      </propertyref>
      <propertyref name="ConnectKind" visibility="published">
      </propertyref>
      <propertyref name="RemoteMachineName" visibility="published">
      </propertyref>
      <ancestor name="TComponent" namespace="System.Classes">
        <interfaces>
          <implements name="IInterfaceComponentReference" />
          <implements name="IInterface" />
        </interfaces>
        <methodref name="GetComObject" visibility="private">
        </methodref>
        <methodref name="GetComponent" visibility="private">
        </methodref>
        <methodref name="GetComponentCount" visibility="private">
        </methodref>
        <methodref name="GetComponentIndex" visibility="private">
        </methodref>
        <methodref name="Insert" visibility="private">
        </methodref>
        <methodref name="ReadLeft" visibility="private">
        </methodref>
        <methodref name="ReadTop" visibility="private">
        </methodref>
        <methodref name="Remove" visibility="private">
        </methodref>
        <methodref name="RemoveNotification" visibility="private">
        </methodref>
        <methodref name="SetComponentIndex" visibility="private">
        </methodref>
        <methodref name="SetReference" visibility="private">
        </methodref>
        <methodref name="WriteLeft" visibility="private">
        </methodref>
        <methodref name="WriteTop" visibility="private">
        </methodref>
        <methodref name="IntfGetComponent" visibility="private">
        </methodref>
        <methodref name="DoGetDeltaStreams" visibility="private">
        </methodref>
        <methodref name="ReadDeltaStream" visibility="private">
        </methodref>
        <methodref name="ReadDeltaState" visibility="private">
        </methodref>
        <methodref name="FindSortedComponent" visibility="private">
        </methodref>
        <methodref name="AddSortedComponent" visibility="private">
        </methodref>
        <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
        </methodref>
        <methodref name="Create@" visibility="class private" procflags="class constructor noself">
        </methodref>
        <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ChangeName" visibility="protected">
        </methodref>
        <methodref name="DefineProperties" visibility="protected" procflags="override">
        </methodref>
        <methodref name="GetChildren" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetOwner" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Loaded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Notification" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ReadState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="CanObserve" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetObservers" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetAncestor" visibility="protected">
        </methodref>
        <methodref name="SetDesigning" visibility="protected">
        </methodref>
        <methodref name="SetInline" visibility="protected">
        </methodref>
        <methodref name="SetDesignInstance" visibility="protected">
        </methodref>
        <methodref name="SetName" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updating" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updated" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
        </methodref>
        <methodref name="ValidateRename" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="WriteState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="RemoveFreeNotifications" visibility="protected">
        </methodref>
        <methodref name="QueryInterface" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="_AddRef" visibility="protected">
        </methodref>
        <methodref name="_Release" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfoCount" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfo" visibility="protected">
        </methodref>
        <methodref name="GetIDsOfNames" visibility="protected">
        </methodref>
        <methodref name="Invoke" visibility="protected">
        </methodref>
        <eventref name="OnGetDeltaStreams" visibility="protected">
        </eventref>
        <methodref name="Create" visibility="public" procflags="constructor virtual">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor override">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public" procflags="override">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndFunctionInvoke" visibility="public">
        </methodref>
        <methodref name="DestroyComponents" visibility="public">
        </methodref>
        <methodref name="Destroying" visibility="public">
        </methodref>
        <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="FindComponent" visibility="public">
        </methodref>
        <methodref name="FreeNotification" visibility="public">
        </methodref>
        <methodref name="RemoveFreeNotification" visibility="public">
        </methodref>
        <methodref name="FreeOnRelease" visibility="public">
        </methodref>
        <methodref name="GetEnumerator" visibility="public" procflags="inline">
        </methodref>
        <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="GetNamePath" visibility="public" procflags="override">
        </methodref>
        <methodref name="HasParent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="InsertComponent" visibility="public">
        </methodref>
        <methodref name="RemoveComponent" visibility="public">
        </methodref>
        <methodref name="SetSubComponent" visibility="public">
        </methodref>
        <methodref name="SafeCallException" visibility="public" procflags="override">
        </methodref>
        <methodref name="UpdateAction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="IsImplementorOf" visibility="public">
        </methodref>
        <methodref name="ReferenceInterface" visibility="public">
        </methodref>
        <propertyref name="ComObject" visibility="public">
        </propertyref>
        <propertyref name="Components" visibility="public">
        </propertyref>
        <propertyref name="ComponentCount" visibility="public">
        </propertyref>
        <propertyref name="ComponentIndex" visibility="public">
        </propertyref>
        <propertyref name="ComponentState" visibility="public">
        </propertyref>
        <propertyref name="ComponentStyle" visibility="public">
        </propertyref>
        <propertyref name="DesignInfo" visibility="public">
        </propertyref>
        <propertyref name="Owner" visibility="public">
        </propertyref>
        <propertyref name="VCLComObject" visibility="public">
        </propertyref>
        <propertyref name="Observers" visibility="public">
        </propertyref>
        <propertyref name="Name" visibility="published">
        </propertyref>
        <propertyref name="Tag" visibility="published">
        </propertyref>
        <ancestor name="TPersistent" namespace="System.Classes">
          <methodref name="AssignError" visibility="private">
          </methodref>
          <methodref name="AssignTo" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DefineProperties" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetOwner" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor override">
          </methodref>
          <methodref name="Assign" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="GetNamePath" visibility="public" procflags="dynamic">
          </methodref>
          <ancestor name="TObject" namespace="System">
            <methodref name="Create" visibility="public" procflags="constructor">
            </methodref>
            <methodref name="Free" visibility="public">
            </methodref>
            <methodref name="DisposeOf" visibility="public" procflags="inline" symflags="deprecated">
            </methodref>
            <methodref name="InitInstance" visibility="public" procflags="class">
            </methodref>
            <methodref name="CleanupInstance" visibility="public">
            </methodref>
            <methodref name="ClassType" visibility="public" procflags="inline">
            </methodref>
            <methodref name="ClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassNameIs" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassParent" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="ClassInfo" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InstanceSize" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InheritsFrom" visibility="public" procflags="class">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodName" visibility="public" procflags="class">
            </methodref>
            <methodref name="QualifiedClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="GetInterface" visibility="public">
            </methodref>
            <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
            </methodref>
            <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="UnitName" visibility="public" procflags="class">
            </methodref>
            <methodref name="UnitScope" visibility="public" procflags="class">
            </methodref>
            <methodref name="Equals" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="GetHashCode" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="ToString" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="SafeCallException" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="AfterConstruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Dispatch" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="DefaultHandler" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="NewInstance" visibility="public" procflags="class virtual">
            </methodref>
            <methodref name="FreeInstance" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor virtual">
            </methodref>
            <methodref name="GetDisposed" visibility="protected" procflags="inline">
            </methodref>
            <methodref name="CheckDisposed" visibility="protected" procflags="inline">
            </methodref>
            <propertyref name="Disposed" visibility="protected">
            </propertyref>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <field name="FIntf" type="_ParagraphFormat" visibility="private" size="4" offset="96" />
      <function name="GetDefaultInterface" visibility="private">
        <parameters>
          <retval type="_ParagraphFormat" />
        </parameters>
      </function>
      <procedure name="InitServerData" visibility="protected" procflags="override">
      </procedure>
      <function name="Get_Application" visibility="protected">
        <parameters>
          <retval type="_Application" />
        </parameters>
      </function>
      <function name="Get_Creator" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="Get_Parent" visibility="protected">
        <parameters>
          <retval type="IDispatch" />
        </parameters>
      </function>
      <function name="Get_Duplicate" visibility="protected">
        <parameters>
          <retval type="_ParagraphFormat" />
        </parameters>
      </function>
      <function name="Get_Style" visibility="protected">
        <parameters>
          <retval type="OleVariant" />
        </parameters>
      </function>
      <procedure name="Set_Style" visibility="protected">
        <parameters>
          <parameter name="prop" type="OleVariant" paramflags="var" />
        </parameters>
      </procedure>
      <function name="Get_Alignment" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_Alignment" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <function name="Get_KeepTogether" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_KeepTogether" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_KeepWithNext" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_KeepWithNext" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_PageBreakBefore" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_PageBreakBefore" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_NoLineNumber" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_NoLineNumber" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_RightIndent" visibility="protected">
        <parameters>
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Set_RightIndent" visibility="protected">
        <parameters>
          <parameter name="prop" type="Single" />
        </parameters>
      </procedure>
      <function name="Get_LeftIndent" visibility="protected">
        <parameters>
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Set_LeftIndent" visibility="protected">
        <parameters>
          <parameter name="prop" type="Single" />
        </parameters>
      </procedure>
      <function name="Get_FirstLineIndent" visibility="protected">
        <parameters>
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Set_FirstLineIndent" visibility="protected">
        <parameters>
          <parameter name="prop" type="Single" />
        </parameters>
      </procedure>
      <function name="Get_LineSpacing" visibility="protected">
        <parameters>
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Set_LineSpacing" visibility="protected">
        <parameters>
          <parameter name="prop" type="Single" />
        </parameters>
      </procedure>
      <function name="Get_LineSpacingRule" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_LineSpacingRule" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <function name="Get_SpaceBefore" visibility="protected">
        <parameters>
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Set_SpaceBefore" visibility="protected">
        <parameters>
          <parameter name="prop" type="Single" />
        </parameters>
      </procedure>
      <function name="Get_SpaceAfter" visibility="protected">
        <parameters>
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Set_SpaceAfter" visibility="protected">
        <parameters>
          <parameter name="prop" type="Single" />
        </parameters>
      </procedure>
      <function name="Get_Hyphenation" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_Hyphenation" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_WidowControl" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_WidowControl" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_FarEastLineBreakControl" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_FarEastLineBreakControl" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_WordWrap" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_WordWrap" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_HangingPunctuation" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_HangingPunctuation" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_HalfWidthPunctuationOnTopOfLine" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_HalfWidthPunctuationOnTopOfLine" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_AddSpaceBetweenFarEastAndAlpha" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_AddSpaceBetweenFarEastAndAlpha" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_AddSpaceBetweenFarEastAndDigit" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_AddSpaceBetweenFarEastAndDigit" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_BaseLineAlignment" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_BaseLineAlignment" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <function name="Get_AutoAdjustRightIndent" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_AutoAdjustRightIndent" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_DisableLineHeightGrid" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_DisableLineHeightGrid" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_TabStops" visibility="protected">
        <parameters>
          <retval type="TabStops" />
        </parameters>
      </function>
      <procedure name="Set_TabStops" visibility="protected">
        <parameters>
          <parameter name="prop" type="TabStops" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_Borders" visibility="protected">
        <parameters>
          <retval type="Borders" />
        </parameters>
      </function>
      <procedure name="Set_Borders" visibility="protected">
        <parameters>
          <parameter name="prop" type="Borders" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_Shading" visibility="protected">
        <parameters>
          <retval type="Shading" />
        </parameters>
      </function>
      <function name="Get_OutlineLevel" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_OutlineLevel" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="AOwner" type="TComponent" />
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public">
        <parameters>
        </parameters>
      </destructor>
      <procedure name="Connect" visibility="public" procflags="override">
      </procedure>
      <procedure name="ConnectTo" visibility="public">
        <parameters>
          <parameter name="svrIntf" type="_ParagraphFormat" />
        </parameters>
      </procedure>
      <procedure name="Disconnect" visibility="public" procflags="override">
      </procedure>
      <procedure name="CloseUp" visibility="public">
      </procedure>
      <procedure name="OpenUp" visibility="public">
      </procedure>
      <procedure name="OpenOrCloseUp" visibility="public">
      </procedure>
      <procedure name="TabHangingIndent" visibility="public">
        <parameters>
          <parameter name="Count" type="SmallInt" />
        </parameters>
      </procedure>
      <procedure name="TabIndent" visibility="public">
        <parameters>
          <parameter name="Count" type="SmallInt" />
        </parameters>
      </procedure>
      <procedure name="Reset" visibility="public">
      </procedure>
      <procedure name="Space1" visibility="public">
      </procedure>
      <procedure name="Space15" visibility="public">
      </procedure>
      <procedure name="Space2" visibility="public">
      </procedure>
      <procedure name="IndentCharWidth" visibility="public">
        <parameters>
          <parameter name="Count" type="SmallInt" />
        </parameters>
      </procedure>
      <procedure name="IndentFirstLineCharWidth" visibility="public">
        <parameters>
          <parameter name="Count" type="SmallInt" />
        </parameters>
      </procedure>
      <property name="DefaultInterface" visibility="public" read="GetDefaultInterface" type="_ParagraphFormat" />
      <property name="Application" visibility="public" read="Get_Application" type="_Application" />
      <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
      <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
      <property name="Duplicate" visibility="public" read="Get_Duplicate" type="_ParagraphFormat" />
      <property name="FarEastLineBreakControl" visibility="public" read="Get_FarEastLineBreakControl" write="Set_FarEastLineBreakControl" type="Integer" />
      <property name="WordWrap" visibility="public" read="Get_WordWrap" write="Set_WordWrap" type="Integer" />
      <property name="HangingPunctuation" visibility="public" read="Get_HangingPunctuation" write="Set_HangingPunctuation" type="Integer" />
      <property name="HalfWidthPunctuationOnTopOfLine" visibility="public" read="Get_HalfWidthPunctuationOnTopOfLine" write="Set_HalfWidthPunctuationOnTopOfLine" type="Integer" />
      <property name="AddSpaceBetweenFarEastAndAlpha" visibility="public" read="Get_AddSpaceBetweenFarEastAndAlpha" write="Set_AddSpaceBetweenFarEastAndAlpha" type="Integer" />
      <property name="AddSpaceBetweenFarEastAndDigit" visibility="public" read="Get_AddSpaceBetweenFarEastAndDigit" write="Set_AddSpaceBetweenFarEastAndDigit" type="Integer" />
      <property name="BaseLineAlignment" visibility="public" read="Get_BaseLineAlignment" write="Set_BaseLineAlignment" type="TOleEnum" />
      <property name="AutoAdjustRightIndent" visibility="public" read="Get_AutoAdjustRightIndent" write="Set_AutoAdjustRightIndent" type="Integer" />
      <property name="DisableLineHeightGrid" visibility="public" read="Get_DisableLineHeightGrid" write="Set_DisableLineHeightGrid" type="Integer" />
      <property name="Shading" visibility="public" read="Get_Shading" type="Shading" />
      <property name="Alignment" visibility="public" read="Get_Alignment" write="Set_Alignment" type="TOleEnum" />
      <property name="KeepTogether" visibility="public" read="Get_KeepTogether" write="Set_KeepTogether" type="Integer" />
      <property name="KeepWithNext" visibility="public" read="Get_KeepWithNext" write="Set_KeepWithNext" type="Integer" />
      <property name="PageBreakBefore" visibility="public" read="Get_PageBreakBefore" write="Set_PageBreakBefore" type="Integer" />
      <property name="NoLineNumber" visibility="public" read="Get_NoLineNumber" write="Set_NoLineNumber" type="Integer" />
      <property name="RightIndent" visibility="public" read="Get_RightIndent" write="Set_RightIndent" type="Single" default="0" />
      <property name="LeftIndent" visibility="public" read="Get_LeftIndent" write="Set_LeftIndent" type="Single" default="0" />
      <property name="FirstLineIndent" visibility="public" read="Get_FirstLineIndent" write="Set_FirstLineIndent" type="Single" default="0" />
      <property name="LineSpacing" visibility="public" read="Get_LineSpacing" write="Set_LineSpacing" type="Single" default="0" />
      <property name="LineSpacingRule" visibility="public" read="Get_LineSpacingRule" write="Set_LineSpacingRule" type="TOleEnum" />
      <property name="SpaceBefore" visibility="public" read="Get_SpaceBefore" write="Set_SpaceBefore" type="Single" default="0" />
      <property name="SpaceAfter" visibility="public" read="Get_SpaceAfter" write="Set_SpaceAfter" type="Single" default="0" />
      <property name="Hyphenation" visibility="public" read="Get_Hyphenation" write="Set_Hyphenation" type="Integer" />
      <property name="WidowControl" visibility="public" read="Get_WidowControl" write="Set_WidowControl" type="Integer" />
      <property name="TabStops" visibility="public" read="Get_TabStops" write="Set_TabStops" type="TabStops" />
      <property name="Borders" visibility="public" read="Get_Borders" write="Set_Borders" type="Borders" />
      <property name="OutlineLevel" visibility="public" read="Get_OutlineLevel" write="Set_OutlineLevel" type="TOleEnum" />
    </members>
  </class>
  <class name="CoWordOLEControl">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="DisposeOf" visibility="public" procflags="inline" symflags="deprecated">
      </methodref>
      <methodref name="InitInstance" visibility="public" procflags="class">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public" procflags="inline">
      </methodref>
      <methodref name="ClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassNameIs" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassParent" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="ClassInfo" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InstanceSize" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InheritsFrom" visibility="public" procflags="class">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodName" visibility="public" procflags="class">
      </methodref>
      <methodref name="QualifiedClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="UnitName" visibility="public" procflags="class">
      </methodref>
      <methodref name="UnitScope" visibility="public" procflags="class">
      </methodref>
      <methodref name="Equals" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetHashCode" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToString" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="SafeCallException" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Dispatch" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="NewInstance" visibility="public" procflags="class virtual">
      </methodref>
      <methodref name="FreeInstance" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
      </methodref>
      <methodref name="GetDisposed" visibility="protected" procflags="inline">
      </methodref>
      <methodref name="CheckDisposed" visibility="protected" procflags="inline">
      </methodref>
      <propertyref name="Disposed" visibility="protected">
      </propertyref>
    </ancestor>
    <members>
      <function name="Create" visibility="public" procflags="class">
        <parameters>
          <retval type="_OLEControl" />
        </parameters>
      </function>
      <function name="CreateRemote" visibility="public" procflags="class">
        <parameters>
          <parameter name="MachineName" type="string" paramflags="const" />
          <retval type="_OLEControl" />
        </parameters>
      </function>
    </members>
  </class>
  <class name="TWordOLEControl">
    <ancestor name="TOleServer" namespace="Vcl.OleServer">
      <interfaces>
        <implements name="IInterface" />
      </interfaces>
      <methodref name="QueryInterface" visibility="protected" procflags="override">
      </methodref>
      <methodref name="_AddRef" visibility="protected">
      </methodref>
      <methodref name="_Release" visibility="protected">
      </methodref>
      <methodref name="Loaded" visibility="protected" procflags="override">
      </methodref>
      <methodref name="InitServerData" visibility="protected" procflags="abstract virtual">
      </methodref>
      <methodref name="GetServer" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="ConnectEvents" visibility="protected">
      </methodref>
      <methodref name="DisconnectEvents" visibility="protected">
      </methodref>
      <methodref name="InvokeEvent" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetConnectKind" visibility="protected">
      </methodref>
      <methodref name="SetConnectKind" visibility="protected">
      </methodref>
      <methodref name="GetAutoConnect" visibility="protected">
      </methodref>
      <methodref name="SetAutoConnect" visibility="protected">
      </methodref>
      <propertyref name="ServerData" visibility="protected">
      </propertyref>
      <propertyref name="EventDispatch" visibility="protected">
      </propertyref>
      <methodref name="Create" visibility="public" procflags="constructor override">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor override">
      </methodref>
      <methodref name="Connect" visibility="public" procflags="abstract virtual">
      </methodref>
      <methodref name="Disconnect" visibility="public" procflags="abstract virtual">
      </methodref>
      <propertyref name="AutoConnect" visibility="published">
      </propertyref>
      <propertyref name="ConnectKind" visibility="published">
      </propertyref>
      <propertyref name="RemoteMachineName" visibility="published">
      </propertyref>
      <ancestor name="TComponent" namespace="System.Classes">
        <interfaces>
          <implements name="IInterfaceComponentReference" />
          <implements name="IInterface" />
        </interfaces>
        <methodref name="GetComObject" visibility="private">
        </methodref>
        <methodref name="GetComponent" visibility="private">
        </methodref>
        <methodref name="GetComponentCount" visibility="private">
        </methodref>
        <methodref name="GetComponentIndex" visibility="private">
        </methodref>
        <methodref name="Insert" visibility="private">
        </methodref>
        <methodref name="ReadLeft" visibility="private">
        </methodref>
        <methodref name="ReadTop" visibility="private">
        </methodref>
        <methodref name="Remove" visibility="private">
        </methodref>
        <methodref name="RemoveNotification" visibility="private">
        </methodref>
        <methodref name="SetComponentIndex" visibility="private">
        </methodref>
        <methodref name="SetReference" visibility="private">
        </methodref>
        <methodref name="WriteLeft" visibility="private">
        </methodref>
        <methodref name="WriteTop" visibility="private">
        </methodref>
        <methodref name="IntfGetComponent" visibility="private">
        </methodref>
        <methodref name="DoGetDeltaStreams" visibility="private">
        </methodref>
        <methodref name="ReadDeltaStream" visibility="private">
        </methodref>
        <methodref name="ReadDeltaState" visibility="private">
        </methodref>
        <methodref name="FindSortedComponent" visibility="private">
        </methodref>
        <methodref name="AddSortedComponent" visibility="private">
        </methodref>
        <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
        </methodref>
        <methodref name="Create@" visibility="class private" procflags="class constructor noself">
        </methodref>
        <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ChangeName" visibility="protected">
        </methodref>
        <methodref name="DefineProperties" visibility="protected" procflags="override">
        </methodref>
        <methodref name="GetChildren" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetOwner" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Loaded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Notification" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ReadState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="CanObserve" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetObservers" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetAncestor" visibility="protected">
        </methodref>
        <methodref name="SetDesigning" visibility="protected">
        </methodref>
        <methodref name="SetInline" visibility="protected">
        </methodref>
        <methodref name="SetDesignInstance" visibility="protected">
        </methodref>
        <methodref name="SetName" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updating" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updated" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
        </methodref>
        <methodref name="ValidateRename" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="WriteState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="RemoveFreeNotifications" visibility="protected">
        </methodref>
        <methodref name="QueryInterface" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="_AddRef" visibility="protected">
        </methodref>
        <methodref name="_Release" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfoCount" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfo" visibility="protected">
        </methodref>
        <methodref name="GetIDsOfNames" visibility="protected">
        </methodref>
        <methodref name="Invoke" visibility="protected">
        </methodref>
        <eventref name="OnGetDeltaStreams" visibility="protected">
        </eventref>
        <methodref name="Create" visibility="public" procflags="constructor virtual">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor override">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public" procflags="override">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndFunctionInvoke" visibility="public">
        </methodref>
        <methodref name="DestroyComponents" visibility="public">
        </methodref>
        <methodref name="Destroying" visibility="public">
        </methodref>
        <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="FindComponent" visibility="public">
        </methodref>
        <methodref name="FreeNotification" visibility="public">
        </methodref>
        <methodref name="RemoveFreeNotification" visibility="public">
        </methodref>
        <methodref name="FreeOnRelease" visibility="public">
        </methodref>
        <methodref name="GetEnumerator" visibility="public" procflags="inline">
        </methodref>
        <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="GetNamePath" visibility="public" procflags="override">
        </methodref>
        <methodref name="HasParent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="InsertComponent" visibility="public">
        </methodref>
        <methodref name="RemoveComponent" visibility="public">
        </methodref>
        <methodref name="SetSubComponent" visibility="public">
        </methodref>
        <methodref name="SafeCallException" visibility="public" procflags="override">
        </methodref>
        <methodref name="UpdateAction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="IsImplementorOf" visibility="public">
        </methodref>
        <methodref name="ReferenceInterface" visibility="public">
        </methodref>
        <propertyref name="ComObject" visibility="public">
        </propertyref>
        <propertyref name="Components" visibility="public">
        </propertyref>
        <propertyref name="ComponentCount" visibility="public">
        </propertyref>
        <propertyref name="ComponentIndex" visibility="public">
        </propertyref>
        <propertyref name="ComponentState" visibility="public">
        </propertyref>
        <propertyref name="ComponentStyle" visibility="public">
        </propertyref>
        <propertyref name="DesignInfo" visibility="public">
        </propertyref>
        <propertyref name="Owner" visibility="public">
        </propertyref>
        <propertyref name="VCLComObject" visibility="public">
        </propertyref>
        <propertyref name="Observers" visibility="public">
        </propertyref>
        <propertyref name="Name" visibility="published">
        </propertyref>
        <propertyref name="Tag" visibility="published">
        </propertyref>
        <ancestor name="TPersistent" namespace="System.Classes">
          <methodref name="AssignError" visibility="private">
          </methodref>
          <methodref name="AssignTo" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DefineProperties" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetOwner" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor override">
          </methodref>
          <methodref name="Assign" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="GetNamePath" visibility="public" procflags="dynamic">
          </methodref>
          <ancestor name="TObject" namespace="System">
            <methodref name="Create" visibility="public" procflags="constructor">
            </methodref>
            <methodref name="Free" visibility="public">
            </methodref>
            <methodref name="DisposeOf" visibility="public" procflags="inline" symflags="deprecated">
            </methodref>
            <methodref name="InitInstance" visibility="public" procflags="class">
            </methodref>
            <methodref name="CleanupInstance" visibility="public">
            </methodref>
            <methodref name="ClassType" visibility="public" procflags="inline">
            </methodref>
            <methodref name="ClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassNameIs" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassParent" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="ClassInfo" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InstanceSize" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InheritsFrom" visibility="public" procflags="class">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodName" visibility="public" procflags="class">
            </methodref>
            <methodref name="QualifiedClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="GetInterface" visibility="public">
            </methodref>
            <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
            </methodref>
            <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="UnitName" visibility="public" procflags="class">
            </methodref>
            <methodref name="UnitScope" visibility="public" procflags="class">
            </methodref>
            <methodref name="Equals" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="GetHashCode" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="ToString" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="SafeCallException" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="AfterConstruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Dispatch" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="DefaultHandler" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="NewInstance" visibility="public" procflags="class virtual">
            </methodref>
            <methodref name="FreeInstance" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor virtual">
            </methodref>
            <methodref name="GetDisposed" visibility="protected" procflags="inline">
            </methodref>
            <methodref name="CheckDisposed" visibility="protected" procflags="inline">
            </methodref>
            <propertyref name="Disposed" visibility="protected">
            </propertyref>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <field name="FOnGotFocus" type="TNotifyEvent" visibility="private" size="8" offset="96" />
      <field name="FOnLostFocus" type="TNotifyEvent" visibility="private" size="8" offset="104" />
      <field name="FIntf" type="_OLEControl" visibility="private" size="4" offset="112" />
      <function name="GetDefaultInterface" visibility="private">
        <parameters>
          <retval type="_OLEControl" />
        </parameters>
      </function>
      <procedure name="InitServerData" visibility="protected" procflags="override">
      </procedure>
      <procedure name="InvokeEvent" visibility="protected" procflags="override">
        <parameters>
          <parameter name="DispID" type="Integer" />
          <parameter name="Params" type="TOleVariantArray" paramflags="var" />
        </parameters>
      </procedure>
      <function name="Get_Left" visibility="protected">
        <parameters>
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Set_Left" visibility="protected">
        <parameters>
          <parameter name="prop" type="Single" />
        </parameters>
      </procedure>
      <function name="Get_Top" visibility="protected">
        <parameters>
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Set_Top" visibility="protected">
        <parameters>
          <parameter name="prop" type="Single" />
        </parameters>
      </procedure>
      <function name="Get_Height" visibility="protected">
        <parameters>
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Set_Height" visibility="protected">
        <parameters>
          <parameter name="prop" type="Single" />
        </parameters>
      </procedure>
      <function name="Get_Width" visibility="protected">
        <parameters>
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Set_Width" visibility="protected">
        <parameters>
          <parameter name="prop" type="Single" />
        </parameters>
      </procedure>
      <function name="Get_Name" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_Name" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_Automation" visibility="protected">
        <parameters>
          <retval type="IDispatch" />
        </parameters>
      </function>
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="AOwner" type="TComponent" />
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public">
        <parameters>
        </parameters>
      </destructor>
      <procedure name="Connect" visibility="public" procflags="override">
      </procedure>
      <procedure name="ConnectTo" visibility="public">
        <parameters>
          <parameter name="svrIntf" type="_OLEControl" />
        </parameters>
      </procedure>
      <procedure name="Disconnect" visibility="public" procflags="override">
      </procedure>
      <procedure name="Select" visibility="public">
      </procedure>
      <procedure name="Copy" visibility="public">
      </procedure>
      <procedure name="Cut" visibility="public">
      </procedure>
      <procedure name="Delete" visibility="public">
      </procedure>
      <procedure name="Activate" visibility="public">
      </procedure>
      <property name="DefaultInterface" visibility="public" read="GetDefaultInterface" type="_OLEControl" />
      <property name="Automation" visibility="public" read="Get_Automation" type="IDispatch" />
      <property name="Left" visibility="public" read="Get_Left" write="Set_Left" type="Single" default="0" />
      <property name="Top" visibility="public" read="Get_Top" write="Set_Top" type="Single" default="0" />
      <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Single" default="0" />
      <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Single" default="0" />
      <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" />
      <event name="OnGotFocus" visibility="published" read="FOnGotFocus" write="FOnGotFocus" type="TNotifyEvent" />
      <event name="OnLostFocus" visibility="published" read="FOnLostFocus" write="FOnLostFocus" type="TNotifyEvent" />
    </members>
  </class>
  <class name="CoWordLetterContent">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="DisposeOf" visibility="public" procflags="inline" symflags="deprecated">
      </methodref>
      <methodref name="InitInstance" visibility="public" procflags="class">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public" procflags="inline">
      </methodref>
      <methodref name="ClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassNameIs" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassParent" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="ClassInfo" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InstanceSize" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InheritsFrom" visibility="public" procflags="class">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodName" visibility="public" procflags="class">
      </methodref>
      <methodref name="QualifiedClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="UnitName" visibility="public" procflags="class">
      </methodref>
      <methodref name="UnitScope" visibility="public" procflags="class">
      </methodref>
      <methodref name="Equals" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetHashCode" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToString" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="SafeCallException" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Dispatch" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="NewInstance" visibility="public" procflags="class virtual">
      </methodref>
      <methodref name="FreeInstance" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
      </methodref>
      <methodref name="GetDisposed" visibility="protected" procflags="inline">
      </methodref>
      <methodref name="CheckDisposed" visibility="protected" procflags="inline">
      </methodref>
      <propertyref name="Disposed" visibility="protected">
      </propertyref>
    </ancestor>
    <members>
      <function name="Create" visibility="public" procflags="class">
        <parameters>
          <retval type="_LetterContent" />
        </parameters>
      </function>
      <function name="CreateRemote" visibility="public" procflags="class">
        <parameters>
          <parameter name="MachineName" type="string" paramflags="const" />
          <retval type="_LetterContent" />
        </parameters>
      </function>
    </members>
  </class>
  <class name="TWordLetterContent">
    <ancestor name="TOleServer" namespace="Vcl.OleServer">
      <interfaces>
        <implements name="IInterface" />
      </interfaces>
      <methodref name="QueryInterface" visibility="protected" procflags="override">
      </methodref>
      <methodref name="_AddRef" visibility="protected">
      </methodref>
      <methodref name="_Release" visibility="protected">
      </methodref>
      <methodref name="Loaded" visibility="protected" procflags="override">
      </methodref>
      <methodref name="InitServerData" visibility="protected" procflags="abstract virtual">
      </methodref>
      <methodref name="GetServer" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="ConnectEvents" visibility="protected">
      </methodref>
      <methodref name="DisconnectEvents" visibility="protected">
      </methodref>
      <methodref name="InvokeEvent" visibility="protected" procflags="virtual">
      </methodref>
      <methodref name="GetConnectKind" visibility="protected">
      </methodref>
      <methodref name="SetConnectKind" visibility="protected">
      </methodref>
      <methodref name="GetAutoConnect" visibility="protected">
      </methodref>
      <methodref name="SetAutoConnect" visibility="protected">
      </methodref>
      <propertyref name="ServerData" visibility="protected">
      </propertyref>
      <propertyref name="EventDispatch" visibility="protected">
      </propertyref>
      <methodref name="Create" visibility="public" procflags="constructor override">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor override">
      </methodref>
      <methodref name="Connect" visibility="public" procflags="abstract virtual">
      </methodref>
      <methodref name="Disconnect" visibility="public" procflags="abstract virtual">
      </methodref>
      <propertyref name="AutoConnect" visibility="published">
      </propertyref>
      <propertyref name="ConnectKind" visibility="published">
      </propertyref>
      <propertyref name="RemoteMachineName" visibility="published">
      </propertyref>
      <ancestor name="TComponent" namespace="System.Classes">
        <interfaces>
          <implements name="IInterfaceComponentReference" />
          <implements name="IInterface" />
        </interfaces>
        <methodref name="GetComObject" visibility="private">
        </methodref>
        <methodref name="GetComponent" visibility="private">
        </methodref>
        <methodref name="GetComponentCount" visibility="private">
        </methodref>
        <methodref name="GetComponentIndex" visibility="private">
        </methodref>
        <methodref name="Insert" visibility="private">
        </methodref>
        <methodref name="ReadLeft" visibility="private">
        </methodref>
        <methodref name="ReadTop" visibility="private">
        </methodref>
        <methodref name="Remove" visibility="private">
        </methodref>
        <methodref name="RemoveNotification" visibility="private">
        </methodref>
        <methodref name="SetComponentIndex" visibility="private">
        </methodref>
        <methodref name="SetReference" visibility="private">
        </methodref>
        <methodref name="WriteLeft" visibility="private">
        </methodref>
        <methodref name="WriteTop" visibility="private">
        </methodref>
        <methodref name="IntfGetComponent" visibility="private">
        </methodref>
        <methodref name="DoGetDeltaStreams" visibility="private">
        </methodref>
        <methodref name="ReadDeltaStream" visibility="private">
        </methodref>
        <methodref name="ReadDeltaState" visibility="private">
        </methodref>
        <methodref name="FindSortedComponent" visibility="private">
        </methodref>
        <methodref name="AddSortedComponent" visibility="private">
        </methodref>
        <methodref name="RemoveSortedComponent" visibility="private" procflags="inline">
        </methodref>
        <methodref name="Create@" visibility="class private" procflags="class constructor noself">
        </methodref>
        <methodref name="AsyncSchedule" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ChangeName" visibility="protected">
        </methodref>
        <methodref name="DefineProperties" visibility="protected" procflags="override">
        </methodref>
        <methodref name="GetChildren" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildOwner" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetChildParent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="GetOwner" visibility="protected" procflags="override">
        </methodref>
        <methodref name="Loaded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="Notification" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetDeltaStreams" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ReadState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="CanObserve" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ObserverAdded" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="GetObservers" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetAncestor" visibility="protected">
        </methodref>
        <methodref name="SetDesigning" visibility="protected">
        </methodref>
        <methodref name="SetInline" visibility="protected">
        </methodref>
        <methodref name="SetDesignInstance" visibility="protected">
        </methodref>
        <methodref name="SetName" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="SetChildOrder" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="SetParentComponent" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updating" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="Updated" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="UpdateRegistry" visibility="protected" procflags="class virtual">
        </methodref>
        <methodref name="ValidateRename" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="ValidateContainer" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="ValidateInsert" visibility="protected" procflags="dynamic">
        </methodref>
        <methodref name="WriteState" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="RemoveFreeNotifications" visibility="protected">
        </methodref>
        <methodref name="QueryInterface" visibility="protected" procflags="virtual">
        </methodref>
        <methodref name="_AddRef" visibility="protected">
        </methodref>
        <methodref name="_Release" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfoCount" visibility="protected">
        </methodref>
        <methodref name="GetTypeInfo" visibility="protected">
        </methodref>
        <methodref name="GetIDsOfNames" visibility="protected">
        </methodref>
        <methodref name="Invoke" visibility="protected">
        </methodref>
        <eventref name="OnGetDeltaStreams" visibility="protected">
        </eventref>
        <methodref name="Create" visibility="public" procflags="constructor virtual">
        </methodref>
        <methodref name="Destroy" visibility="public" procflags="destructor override">
        </methodref>
        <methodref name="BeforeDestruction" visibility="public" procflags="override">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="BeginInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndInvoke" visibility="public" procflags="overload">
        </methodref>
        <methodref name="EndFunctionInvoke" visibility="public">
        </methodref>
        <methodref name="DestroyComponents" visibility="public">
        </methodref>
        <methodref name="Destroying" visibility="public">
        </methodref>
        <methodref name="ExecuteAction" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="FindComponent" visibility="public">
        </methodref>
        <methodref name="FreeNotification" visibility="public">
        </methodref>
        <methodref name="RemoveFreeNotification" visibility="public">
        </methodref>
        <methodref name="FreeOnRelease" visibility="public">
        </methodref>
        <methodref name="GetEnumerator" visibility="public" procflags="inline">
        </methodref>
        <methodref name="GetParentComponent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="GetNamePath" visibility="public" procflags="override">
        </methodref>
        <methodref name="HasParent" visibility="public" procflags="dynamic">
        </methodref>
        <methodref name="InsertComponent" visibility="public">
        </methodref>
        <methodref name="RemoveComponent" visibility="public">
        </methodref>
        <methodref name="SetSubComponent" visibility="public">
        </methodref>
        <methodref name="SafeCallException" visibility="public" procflags="override">
        </methodref>
        <methodref name="UpdateAction" visibility="public" procflags="virtual">
        </methodref>
        <methodref name="IsImplementorOf" visibility="public">
        </methodref>
        <methodref name="ReferenceInterface" visibility="public">
        </methodref>
        <propertyref name="ComObject" visibility="public">
        </propertyref>
        <propertyref name="Components" visibility="public">
        </propertyref>
        <propertyref name="ComponentCount" visibility="public">
        </propertyref>
        <propertyref name="ComponentIndex" visibility="public">
        </propertyref>
        <propertyref name="ComponentState" visibility="public">
        </propertyref>
        <propertyref name="ComponentStyle" visibility="public">
        </propertyref>
        <propertyref name="DesignInfo" visibility="public">
        </propertyref>
        <propertyref name="Owner" visibility="public">
        </propertyref>
        <propertyref name="VCLComObject" visibility="public">
        </propertyref>
        <propertyref name="Observers" visibility="public">
        </propertyref>
        <propertyref name="Name" visibility="published">
        </propertyref>
        <propertyref name="Tag" visibility="published">
        </propertyref>
        <ancestor name="TPersistent" namespace="System.Classes">
          <methodref name="AssignError" visibility="private">
          </methodref>
          <methodref name="AssignTo" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="DefineProperties" visibility="protected" procflags="virtual">
          </methodref>
          <methodref name="GetOwner" visibility="protected" procflags="dynamic">
          </methodref>
          <methodref name="Destroy" visibility="public" procflags="destructor override">
          </methodref>
          <methodref name="Assign" visibility="public" procflags="virtual">
          </methodref>
          <methodref name="GetNamePath" visibility="public" procflags="dynamic">
          </methodref>
          <ancestor name="TObject" namespace="System">
            <methodref name="Create" visibility="public" procflags="constructor">
            </methodref>
            <methodref name="Free" visibility="public">
            </methodref>
            <methodref name="DisposeOf" visibility="public" procflags="inline" symflags="deprecated">
            </methodref>
            <methodref name="InitInstance" visibility="public" procflags="class">
            </methodref>
            <methodref name="CleanupInstance" visibility="public">
            </methodref>
            <methodref name="ClassType" visibility="public" procflags="inline">
            </methodref>
            <methodref name="ClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassNameIs" visibility="public" procflags="class">
            </methodref>
            <methodref name="ClassParent" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="ClassInfo" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InstanceSize" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="InheritsFrom" visibility="public" procflags="class">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodAddress" visibility="public" procflags="class overload">
            </methodref>
            <methodref name="MethodName" visibility="public" procflags="class">
            </methodref>
            <methodref name="QualifiedClassName" visibility="public" procflags="class">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="FieldAddress" visibility="public" procflags="overload">
            </methodref>
            <methodref name="GetInterface" visibility="public">
            </methodref>
            <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
            </methodref>
            <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
            </methodref>
            <methodref name="UnitName" visibility="public" procflags="class">
            </methodref>
            <methodref name="UnitScope" visibility="public" procflags="class">
            </methodref>
            <methodref name="Equals" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="GetHashCode" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="ToString" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="SafeCallException" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="AfterConstruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Dispatch" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="DefaultHandler" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="NewInstance" visibility="public" procflags="class virtual">
            </methodref>
            <methodref name="FreeInstance" visibility="public" procflags="virtual">
            </methodref>
            <methodref name="Destroy" visibility="public" procflags="destructor virtual">
            </methodref>
            <methodref name="GetDisposed" visibility="protected" procflags="inline">
            </methodref>
            <methodref name="CheckDisposed" visibility="protected" procflags="inline">
            </methodref>
            <propertyref name="Disposed" visibility="protected">
            </propertyref>
          </ancestor>
        </ancestor>
      </ancestor>
    </ancestor>
    <members>
      <field name="FIntf" type="_LetterContent" visibility="private" size="4" offset="96" />
      <function name="GetDefaultInterface" visibility="private">
        <parameters>
          <retval type="_LetterContent" />
        </parameters>
      </function>
      <procedure name="InitServerData" visibility="protected" procflags="override">
      </procedure>
      <function name="Get_Application" visibility="protected">
        <parameters>
          <retval type="_Application" />
        </parameters>
      </function>
      <function name="Get_Creator" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <function name="Get_Parent" visibility="protected">
        <parameters>
          <retval type="IDispatch" />
        </parameters>
      </function>
      <function name="Get_Duplicate" visibility="protected">
        <parameters>
          <retval type="_LetterContent" />
        </parameters>
      </function>
      <function name="Get_DateFormat" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_DateFormat" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_IncludeHeaderFooter" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_IncludeHeaderFooter" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_PageDesign" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_PageDesign" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_LetterStyle" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_LetterStyle" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <function name="Get_Letterhead" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_Letterhead" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_LetterheadLocation" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_LetterheadLocation" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <function name="Get_LetterheadSize" visibility="protected">
        <parameters>
          <retval type="Single" />
        </parameters>
      </function>
      <procedure name="Set_LetterheadSize" visibility="protected">
        <parameters>
          <parameter name="prop" type="Single" />
        </parameters>
      </procedure>
      <function name="Get_RecipientName" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_RecipientName" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_RecipientAddress" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_RecipientAddress" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_Salutation" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_Salutation" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_SalutationType" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_SalutationType" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <function name="Get_RecipientReference" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_RecipientReference" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_MailingInstructions" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_MailingInstructions" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_AttentionLine" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_AttentionLine" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_Subject" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_Subject" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_EnclosureNumber" visibility="protected">
        <parameters>
          <retval type="Integer" />
        </parameters>
      </function>
      <procedure name="Set_EnclosureNumber" visibility="protected">
        <parameters>
          <parameter name="prop" type="Integer" />
        </parameters>
      </procedure>
      <function name="Get_CCList" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_CCList" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_ReturnAddress" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_ReturnAddress" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_SenderName" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_SenderName" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_Closing" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_Closing" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_SenderCompany" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_SenderCompany" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_SenderJobTitle" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_SenderJobTitle" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_SenderInitials" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_SenderInitials" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_InfoBlock" visibility="protected">
        <parameters>
          <retval type="WordBool" />
        </parameters>
      </function>
      <procedure name="Set_InfoBlock" visibility="protected">
        <parameters>
          <parameter name="prop" type="WordBool" />
        </parameters>
      </procedure>
      <function name="Get_RecipientCode" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_RecipientCode" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_RecipientGender" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_RecipientGender" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <function name="Get_ReturnAddressShortForm" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_ReturnAddressShortForm" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_SenderCity" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_SenderCity" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_SenderCode" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_SenderCode" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <function name="Get_SenderGender" visibility="protected">
        <parameters>
          <retval type="TOleEnum" />
        </parameters>
      </function>
      <procedure name="Set_SenderGender" visibility="protected">
        <parameters>
          <parameter name="prop" type="TOleEnum" />
        </parameters>
      </procedure>
      <function name="Get_SenderReference" visibility="protected">
        <parameters>
          <retval type="WideString" />
        </parameters>
      </function>
      <procedure name="Set_SenderReference" visibility="protected">
        <parameters>
          <parameter name="prop" type="WideString" paramflags="const" />
        </parameters>
      </procedure>
      <constructor name="Create" visibility="public">
        <parameters>
          <parameter name="AOwner" type="TComponent" />
        </parameters>
      </constructor>
      <destructor name="Destroy" visibility="public">
        <parameters>
        </parameters>
      </destructor>
      <procedure name="Connect" visibility="public" procflags="override">
      </procedure>
      <procedure name="ConnectTo" visibility="public">
        <parameters>
          <parameter name="svrIntf" type="_LetterContent" />
        </parameters>
      </procedure>
      <procedure name="Disconnect" visibility="public" procflags="override">
      </procedure>
      <property name="DefaultInterface" visibility="public" read="GetDefaultInterface" type="_LetterContent" />
      <property name="Application" visibility="public" read="Get_Application" type="_Application" />
      <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
      <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
      <property name="Duplicate" visibility="public" read="Get_Duplicate" type="_LetterContent" />
      <property name="DateFormat" visibility="public" read="Get_DateFormat" write="Set_DateFormat" type="WideString" default="0" />
      <property name="IncludeHeaderFooter" visibility="public" read="Get_IncludeHeaderFooter" write="Set_IncludeHeaderFooter" type="WordBool" />
      <property name="PageDesign" visibility="public" read="Get_PageDesign" write="Set_PageDesign" type="WideString" default="0" />
      <property name="LetterStyle" visibility="public" read="Get_LetterStyle" write="Set_LetterStyle" type="TOleEnum" />
      <property name="Letterhead" visibility="public" read="Get_Letterhead" write="Set_Letterhead" type="WordBool" />
      <property name="LetterheadLocation" visibility="public" read="Get_LetterheadLocation" write="Set_LetterheadLocation" type="TOleEnum" />
      <property name="LetterheadSize" visibility="public" read="Get_LetterheadSize" write="Set_LetterheadSize" type="Single" default="0" />
      <property name="RecipientName" visibility="public" read="Get_RecipientName" write="Set_RecipientName" type="WideString" default="0" />
      <property name="RecipientAddress" visibility="public" read="Get_RecipientAddress" write="Set_RecipientAddress" type="WideString" default="0" />
      <property name="Salutation" visibility="public" read="Get_Salutation" write="Set_Salutation" type="WideString" default="0" />
      <property name="SalutationType" visibility="public" read="Get_SalutationType" write="Set_SalutationType" type="TOleEnum" />
      <property name="RecipientReference" visibility="public" read="Get_RecipientReference" write="Set_RecipientReference" type="WideString" default="0" />
      <property name="MailingInstructions" visibility="public" read="Get_MailingInstructions" write="Set_MailingInstructions" type="WideString" default="0" />
      <property name="AttentionLine" visibility="public" read="Get_AttentionLine" write="Set_AttentionLine" type="WideString" default="0" />
      <property name="Subject" visibility="public" read="Get_Subject" write="Set_Subject" type="WideString" default="0" />
      <property name="EnclosureNumber" visibility="public" read="Get_EnclosureNumber" write="Set_EnclosureNumber" type="Integer" />
      <property name="CCList" visibility="public" read="Get_CCList" write="Set_CCList" type="WideString" default="0" />
      <property name="ReturnAddress" visibility="public" read="Get_ReturnAddress" write="Set_ReturnAddress" type="WideString" default="0" />
      <property name="SenderName" visibility="public" read="Get_SenderName" write="Set_SenderName" type="WideString" default="0" />
      <property name="Closing" visibility="public" read="Get_Closing" write="Set_Closing" type="WideString" default="0" />
      <property name="SenderCompany" visibility="public" read="Get_SenderCompany" write="Set_SenderCompany" type="WideString" default="0" />
      <property name="SenderJobTitle" visibility="public" read="Get_SenderJobTitle" write="Set_SenderJobTitle" type="WideString" default="0" />
      <property name="SenderInitials" visibility="public" read="Get_SenderInitials" write="Set_SenderInitials" type="WideString" default="0" />
      <property name="InfoBlock" visibility="public" read="Get_InfoBlock" write="Set_InfoBlock" type="WordBool" />
      <property name="RecipientCode" visibility="public" read="Get_RecipientCode" write="Set_RecipientCode" type="WideString" default="0" />
      <property name="RecipientGender" visibility="public" read="Get_RecipientGender" write="Set_RecipientGender" type="TOleEnum" />
      <property name="ReturnAddressShortForm" visibility="public" read="Get_ReturnAddressShortForm" write="Set_ReturnAddressShortForm" type="WideString" default="0" />
      <property name="SenderCity" visibility="public" read="Get_SenderCity" write="Set_SenderCity" type="WideString" default="0" />
      <property name="SenderCode" visibility="public" read="Get_SenderCode" write="Set_SenderCode" type="WideString" default="0" />
      <property name="SenderGender" visibility="public" read="Get_SenderGender" write="Set_SenderGender" type="TOleEnum" />
      <property name="SenderReference" visibility="public" read="Get_SenderReference" write="Set_SenderReference" type="WideString" default="0" />
    </members>
  </class>
</namespace>
