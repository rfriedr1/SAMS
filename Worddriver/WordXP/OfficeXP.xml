<?xml version="1.0" encoding="utf-8"?>
<namespace name="OfficeXP" platform="Win32">
  <const name="OfficeMajorVersion" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="OfficeMinorVersion" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="LIBID_Office" type="TGUID" visibility="public" />
  <const name="IID_IAccessible" type="TGUID" visibility="public" />
  <const name="IID__IMsoDispObj" type="TGUID" visibility="public" />
  <const name="IID__IMsoOleAccDispObj" type="TGUID" visibility="public" />
  <const name="IID__CommandBars" type="TGUID" visibility="public" />
  <const name="IID_CommandBar" type="TGUID" visibility="public" />
  <const name="IID_CommandBarControls" type="TGUID" visibility="public" />
  <const name="IID_CommandBarControl" type="TGUID" visibility="public" />
  <const name="IID__CommandBarButton" type="TGUID" visibility="public" />
  <const name="IID_CommandBarPopup" type="TGUID" visibility="public" />
  <const name="IID__CommandBarComboBox" type="TGUID" visibility="public" />
  <const name="IID__CommandBarActiveX" type="TGUID" visibility="public" />
  <const name="IID_Adjustments" type="TGUID" visibility="public" />
  <const name="IID_CalloutFormat" type="TGUID" visibility="public" />
  <const name="IID_ColorFormat" type="TGUID" visibility="public" />
  <const name="IID_ConnectorFormat" type="TGUID" visibility="public" />
  <const name="IID_FillFormat" type="TGUID" visibility="public" />
  <const name="IID_FreeformBuilder" type="TGUID" visibility="public" />
  <const name="IID_GroupShapes" type="TGUID" visibility="public" />
  <const name="IID_LineFormat" type="TGUID" visibility="public" />
  <const name="IID_ShapeNode" type="TGUID" visibility="public" />
  <const name="IID_ShapeNodes" type="TGUID" visibility="public" />
  <const name="IID_PictureFormat" type="TGUID" visibility="public" />
  <const name="IID_ShadowFormat" type="TGUID" visibility="public" />
  <const name="IID_Script" type="TGUID" visibility="public" />
  <const name="IID_Scripts" type="TGUID" visibility="public" />
  <const name="IID_Shape" type="TGUID" visibility="public" />
  <const name="IID_ShapeRange" type="TGUID" visibility="public" />
  <const name="IID_Shapes" type="TGUID" visibility="public" />
  <const name="IID_TextEffectFormat" type="TGUID" visibility="public" />
  <const name="IID_TextFrame" type="TGUID" visibility="public" />
  <const name="IID_ThreeDFormat" type="TGUID" visibility="public" />
  <const name="IID_IMsoDispCagNotifySink" type="TGUID" visibility="public" />
  <const name="IID_Balloon" type="TGUID" visibility="public" />
  <const name="IID_BalloonCheckboxes" type="TGUID" visibility="public" />
  <const name="IID_BalloonCheckbox" type="TGUID" visibility="public" />
  <const name="IID_BalloonLabels" type="TGUID" visibility="public" />
  <const name="IID_BalloonLabel" type="TGUID" visibility="public" />
  <const name="IID_AnswerWizardFiles" type="TGUID" visibility="public" />
  <const name="IID_AnswerWizard" type="TGUID" visibility="public" />
  <const name="IID_Assistant" type="TGUID" visibility="public" />
  <const name="IID_DocumentProperty" type="TGUID" visibility="public" />
  <const name="IID_DocumentProperties" type="TGUID" visibility="public" />
  <const name="IID_IFoundFiles" type="TGUID" visibility="public" />
  <const name="IID_IFind" type="TGUID" visibility="public" />
  <const name="IID_FoundFiles" type="TGUID" visibility="public" />
  <const name="IID_PropertyTest" type="TGUID" visibility="public" />
  <const name="IID_PropertyTests" type="TGUID" visibility="public" />
  <const name="IID_FileSearch" type="TGUID" visibility="public" />
  <const name="IID_COMAddIn" type="TGUID" visibility="public" />
  <const name="IID_COMAddIns" type="TGUID" visibility="public" />
  <const name="IID_LanguageSettings" type="TGUID" visibility="public" />
  <const name="IID_ICommandBarsEvents" type="TGUID" visibility="public" />
  <const name="DIID__CommandBarsEvents" type="TGUID" visibility="public" />
  <const name="CLASS_CommandBars" type="TGUID" visibility="public" />
  <const name="IID_ICommandBarComboBoxEvents" type="TGUID" visibility="public" />
  <const name="DIID__CommandBarComboBoxEvents" type="TGUID" visibility="public" />
  <const name="CLASS_CommandBarComboBox" type="TGUID" visibility="public" />
  <const name="IID_ICommandBarButtonEvents" type="TGUID" visibility="public" />
  <const name="DIID__CommandBarButtonEvents" type="TGUID" visibility="public" />
  <const name="CLASS_CommandBarButton" type="TGUID" visibility="public" />
  <const name="IID_WebPageFont" type="TGUID" visibility="public" />
  <const name="IID_WebPageFonts" type="TGUID" visibility="public" />
  <const name="IID_HTMLProjectItem" type="TGUID" visibility="public" />
  <const name="IID_HTMLProjectItems" type="TGUID" visibility="public" />
  <const name="IID_HTMLProject" type="TGUID" visibility="public" />
  <const name="IID_MsoDebugOptions" type="TGUID" visibility="public" />
  <const name="IID_FileDialogSelectedItems" type="TGUID" visibility="public" />
  <const name="IID_FileDialogFilter" type="TGUID" visibility="public" />
  <const name="IID_FileDialogFilters" type="TGUID" visibility="public" />
  <const name="IID_FileDialog" type="TGUID" visibility="public" />
  <const name="IID_SignatureSet" type="TGUID" visibility="public" />
  <const name="IID_Signature" type="TGUID" visibility="public" />
  <const name="IID_IMsoEnvelopeVB" type="TGUID" visibility="public" />
  <const name="DIID_IMsoEnvelopeVBEvents" type="TGUID" visibility="public" />
  <const name="CLASS_MsoEnvelope" type="TGUID" visibility="public" />
  <const name="IID_FileTypes" type="TGUID" visibility="public" />
  <const name="IID_SearchFolders" type="TGUID" visibility="public" />
  <const name="IID_ScopeFolders" type="TGUID" visibility="public" />
  <const name="IID_ScopeFolder" type="TGUID" visibility="public" />
  <const name="IID_SearchScope" type="TGUID" visibility="public" />
  <const name="IID_SearchScopes" type="TGUID" visibility="public" />
  <const name="IID_IMsoDiagram" type="TGUID" visibility="public" />
  <const name="IID_DiagramNodes" type="TGUID" visibility="public" />
  <const name="IID_DiagramNodeChildren" type="TGUID" visibility="public" />
  <const name="IID_DiagramNode" type="TGUID" visibility="public" />
  <const name="IID_CanvasShapes" type="TGUID" visibility="public" />
  <const name="IID_OfficeDataSourceObject" type="TGUID" visibility="public" />
  <const name="IID_ODSOColumn" type="TGUID" visibility="public" />
  <const name="IID_ODSOColumns" type="TGUID" visibility="public" />
  <const name="IID_ODSOFilter" type="TGUID" visibility="public" />
  <const name="IID_ODSOFilters" type="TGUID" visibility="public" />
  <const name="IID_NewFile" type="TGUID" visibility="public" />
  <const name="IID_WebComponent" type="TGUID" visibility="public" />
  <const name="IID_WebComponentWindowExternal" type="TGUID" visibility="public" />
  <const name="IID_WebComponentFormat" type="TGUID" visibility="public" />
  <const name="IID_ILicWizExternal" type="TGUID" visibility="public" />
  <const name="IID_ILicValidator" type="TGUID" visibility="public" />
  <const name="IID_ILicAgent" type="TGUID" visibility="public" />
  <const name="IID_IMsoEServicesDialog" type="TGUID" visibility="public" />
  <const name="IID_WebComponentProperties" type="TGUID" visibility="public" />
  <type name="MsoLineDashStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoLineDashStyleMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoLineSolid" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoLineSquareDot" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoLineRoundDot" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoLineDash" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoLineDashDot" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoLineDashDotDot" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoLineLongDash" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoLineLongDashDot" type="Integer">
    <value>
      $8
    </value>
  </const>
  <type name="MsoLineStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoLineStyleMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoLineSingle" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoLineThinThin" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoLineThinThick" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoLineThickThin" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoLineThickBetweenThin" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoArrowheadStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoArrowheadStyleMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoArrowheadNone" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoArrowheadTriangle" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoArrowheadOpen" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoArrowheadStealth" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoArrowheadDiamond" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoArrowheadOval" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="MsoArrowheadWidth" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoArrowheadWidthMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoArrowheadNarrow" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoArrowheadWidthMedium" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoArrowheadWide" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoArrowheadLength" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoArrowheadLengthMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoArrowheadShort" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoArrowheadLengthMedium" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoArrowheadLong" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoFillType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoFillMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoFillSolid" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoFillPatterned" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoFillGradient" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoFillTextured" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoFillBackground" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoFillPicture" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="MsoGradientStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoGradientMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoGradientHorizontal" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoGradientVertical" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoGradientDiagonalUp" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoGradientDiagonalDown" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoGradientFromCorner" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoGradientFromTitle" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoGradientFromCenter" type="Integer">
    <value>
      $7
    </value>
  </const>
  <type name="MsoGradientColorType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoGradientColorMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoGradientOneColor" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoGradientTwoColors" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoGradientPresetColors" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoTextureType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoTextureTypeMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoTexturePreset" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoTextureUserDefined" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoPresetTexture" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPresetTextureMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoTexturePapyrus" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoTextureCanvas" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoTextureDenim" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoTextureWovenMat" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoTextureWaterDroplets" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoTexturePaperBag" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoTextureFishFossil" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoTextureSand" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoTextureGreenMarble" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoTextureWhiteMarble" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoTextureBrownMarble" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoTextureGranite" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoTextureNewsprint" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoTextureRecycledPaper" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoTextureParchment" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoTextureStationery" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoTextureBlueTissuePaper" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoTexturePinkTissuePaper" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoTexturePurpleMesh" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoTextureBouquet" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="msoTextureCork" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="msoTextureWalnut" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="msoTextureOak" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="msoTextureMediumWood" type="Integer">
    <value>
      $18
    </value>
  </const>
  <type name="MsoPatternType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPatternMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoPattern5Percent" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoPattern10Percent" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoPattern20Percent" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoPattern25Percent" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoPattern30Percent" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoPattern40Percent" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoPattern50Percent" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoPattern60Percent" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoPattern70Percent" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoPattern75Percent" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoPattern80Percent" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoPattern90Percent" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoPatternDarkHorizontal" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoPatternDarkVertical" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoPatternDarkDownwardDiagonal" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoPatternDarkUpwardDiagonal" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoPatternSmallCheckerBoard" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoPatternTrellis" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoPatternLightHorizontal" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoPatternLightVertical" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="msoPatternLightDownwardDiagonal" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="msoPatternLightUpwardDiagonal" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="msoPatternSmallGrid" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="msoPatternDottedDiamond" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="msoPatternWideDownwardDiagonal" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="msoPatternWideUpwardDiagonal" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="msoPatternDashedUpwardDiagonal" type="Integer">
    <value>
      $1B
    </value>
  </const>
  <const name="msoPatternDashedDownwardDiagonal" type="Integer">
    <value>
      $1C
    </value>
  </const>
  <const name="msoPatternNarrowVertical" type="Integer">
    <value>
      $1D
    </value>
  </const>
  <const name="msoPatternNarrowHorizontal" type="Integer">
    <value>
      $1E
    </value>
  </const>
  <const name="msoPatternDashedVertical" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="msoPatternDashedHorizontal" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="msoPatternLargeConfetti" type="Integer">
    <value>
      $21
    </value>
  </const>
  <const name="msoPatternLargeGrid" type="Integer">
    <value>
      $22
    </value>
  </const>
  <const name="msoPatternHorizontalBrick" type="Integer">
    <value>
      $23
    </value>
  </const>
  <const name="msoPatternLargeCheckerBoard" type="Integer">
    <value>
      $24
    </value>
  </const>
  <const name="msoPatternSmallConfetti" type="Integer">
    <value>
      $25
    </value>
  </const>
  <const name="msoPatternZigZag" type="Integer">
    <value>
      $26
    </value>
  </const>
  <const name="msoPatternSolidDiamond" type="Integer">
    <value>
      $27
    </value>
  </const>
  <const name="msoPatternDiagonalBrick" type="Integer">
    <value>
      $28
    </value>
  </const>
  <const name="msoPatternOutlinedDiamond" type="Integer">
    <value>
      $29
    </value>
  </const>
  <const name="msoPatternPlaid" type="Integer">
    <value>
      $2A
    </value>
  </const>
  <const name="msoPatternSphere" type="Integer">
    <value>
      $2B
    </value>
  </const>
  <const name="msoPatternWeave" type="Integer">
    <value>
      $2C
    </value>
  </const>
  <const name="msoPatternDottedGrid" type="Integer">
    <value>
      $2D
    </value>
  </const>
  <const name="msoPatternDivot" type="Integer">
    <value>
      $2E
    </value>
  </const>
  <const name="msoPatternShingle" type="Integer">
    <value>
      $2F
    </value>
  </const>
  <const name="msoPatternWave" type="Integer">
    <value>
      $30
    </value>
  </const>
  <type name="MsoPresetGradientType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPresetGradientMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoGradientEarlySunset" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoGradientLateSunset" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoGradientNightfall" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoGradientDaybreak" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoGradientHorizon" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoGradientDesert" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoGradientOcean" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoGradientCalmWater" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoGradientFire" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoGradientFog" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoGradientMoss" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoGradientPeacock" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoGradientWheat" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoGradientParchment" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoGradientMahogany" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoGradientRainbow" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoGradientRainbowII" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoGradientGold" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoGradientGoldII" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoGradientBrass" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="msoGradientChrome" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="msoGradientChromeII" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="msoGradientSilver" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="msoGradientSapphire" type="Integer">
    <value>
      $18
    </value>
  </const>
  <type name="MsoShadowType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoShadowMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoShadow1" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoShadow2" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoShadow3" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoShadow4" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoShadow5" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoShadow6" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoShadow7" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoShadow8" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoShadow9" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoShadow10" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoShadow11" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoShadow12" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoShadow13" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoShadow14" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoShadow15" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoShadow16" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoShadow17" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoShadow18" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoShadow19" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoShadow20" type="Integer">
    <value>
      $14
    </value>
  </const>
  <type name="MsoPresetTextEffect" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoTextEffectMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoTextEffect1" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoTextEffect2" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoTextEffect3" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoTextEffect4" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoTextEffect5" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoTextEffect6" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoTextEffect7" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoTextEffect8" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoTextEffect9" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoTextEffect10" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoTextEffect11" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoTextEffect12" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoTextEffect13" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoTextEffect14" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoTextEffect15" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoTextEffect16" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoTextEffect17" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoTextEffect18" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoTextEffect19" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoTextEffect20" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoTextEffect21" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="msoTextEffect22" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="msoTextEffect23" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="msoTextEffect24" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="msoTextEffect25" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="msoTextEffect26" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="msoTextEffect27" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="msoTextEffect28" type="Integer">
    <value>
      $1B
    </value>
  </const>
  <const name="msoTextEffect29" type="Integer">
    <value>
      $1C
    </value>
  </const>
  <const name="msoTextEffect30" type="Integer">
    <value>
      $1D
    </value>
  </const>
  <type name="MsoPresetTextEffectShape" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoTextEffectShapeMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoTextEffectShapePlainText" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoTextEffectShapeStop" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoTextEffectShapeTriangleUp" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoTextEffectShapeTriangleDown" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoTextEffectShapeChevronUp" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoTextEffectShapeChevronDown" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoTextEffectShapeRingInside" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoTextEffectShapeRingOutside" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoTextEffectShapeArchUpCurve" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoTextEffectShapeArchDownCurve" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoTextEffectShapeCircleCurve" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoTextEffectShapeButtonCurve" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoTextEffectShapeArchUpPour" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoTextEffectShapeArchDownPour" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoTextEffectShapeCirclePour" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoTextEffectShapeButtonPour" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoTextEffectShapeCurveUp" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoTextEffectShapeCurveDown" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoTextEffectShapeCanUp" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoTextEffectShapeCanDown" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="msoTextEffectShapeWave1" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="msoTextEffectShapeWave2" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="msoTextEffectShapeDoubleWave1" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="msoTextEffectShapeDoubleWave2" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="msoTextEffectShapeInflate" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="msoTextEffectShapeDeflate" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="msoTextEffectShapeInflateBottom" type="Integer">
    <value>
      $1B
    </value>
  </const>
  <const name="msoTextEffectShapeDeflateBottom" type="Integer">
    <value>
      $1C
    </value>
  </const>
  <const name="msoTextEffectShapeInflateTop" type="Integer">
    <value>
      $1D
    </value>
  </const>
  <const name="msoTextEffectShapeDeflateTop" type="Integer">
    <value>
      $1E
    </value>
  </const>
  <const name="msoTextEffectShapeDeflateInflate" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="msoTextEffectShapeDeflateInflateDeflate" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="msoTextEffectShapeFadeRight" type="Integer">
    <value>
      $21
    </value>
  </const>
  <const name="msoTextEffectShapeFadeLeft" type="Integer">
    <value>
      $22
    </value>
  </const>
  <const name="msoTextEffectShapeFadeUp" type="Integer">
    <value>
      $23
    </value>
  </const>
  <const name="msoTextEffectShapeFadeDown" type="Integer">
    <value>
      $24
    </value>
  </const>
  <const name="msoTextEffectShapeSlantUp" type="Integer">
    <value>
      $25
    </value>
  </const>
  <const name="msoTextEffectShapeSlantDown" type="Integer">
    <value>
      $26
    </value>
  </const>
  <const name="msoTextEffectShapeCascadeUp" type="Integer">
    <value>
      $27
    </value>
  </const>
  <const name="msoTextEffectShapeCascadeDown" type="Integer">
    <value>
      $28
    </value>
  </const>
  <type name="MsoTextEffectAlignment" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoTextEffectAlignmentMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoTextEffectAlignmentLeft" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoTextEffectAlignmentCentered" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoTextEffectAlignmentRight" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoTextEffectAlignmentLetterJustify" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoTextEffectAlignmentWordJustify" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoTextEffectAlignmentStretchJustify" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="MsoPresetLightingDirection" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPresetLightingDirectionMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoLightingTopLeft" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoLightingTop" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoLightingTopRight" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoLightingLeft" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoLightingNone" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoLightingRight" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoLightingBottomLeft" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoLightingBottom" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoLightingBottomRight" type="Integer">
    <value>
      $9
    </value>
  </const>
  <type name="MsoPresetLightingSoftness" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPresetLightingSoftnessMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoLightingDim" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoLightingNormal" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoLightingBright" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoPresetMaterial" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPresetMaterialMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoMaterialMatte" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoMaterialPlastic" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoMaterialMetal" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoMaterialWireFrame" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="MsoPresetExtrusionDirection" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPresetExtrusionDirectionMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoExtrusionBottomRight" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoExtrusionBottom" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoExtrusionBottomLeft" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoExtrusionRight" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoExtrusionNone" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoExtrusionLeft" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoExtrusionTopRight" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoExtrusionTop" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoExtrusionTopLeft" type="Integer">
    <value>
      $9
    </value>
  </const>
  <type name="MsoPresetThreeDFormat" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPresetThreeDFormatMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoThreeD1" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoThreeD2" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoThreeD3" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoThreeD4" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoThreeD5" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoThreeD6" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoThreeD7" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoThreeD8" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoThreeD9" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoThreeD10" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoThreeD11" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoThreeD12" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoThreeD13" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoThreeD14" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoThreeD15" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoThreeD16" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoThreeD17" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoThreeD18" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoThreeD19" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoThreeD20" type="Integer">
    <value>
      $14
    </value>
  </const>
  <type name="MsoExtrusionColorType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoExtrusionColorTypeMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoExtrusionColorAutomatic" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoExtrusionColorCustom" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoAlignCmd" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoAlignLefts" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoAlignCenters" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoAlignRights" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoAlignTops" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoAlignMiddles" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoAlignBottoms" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoDistributeCmd" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoDistributeHorizontally" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoDistributeVertically" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="MsoConnectorType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoConnectorTypeMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoConnectorStraight" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoConnectorElbow" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoConnectorCurve" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoHorizontalAnchor" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoHorizontalAnchorMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoAnchorNone" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoAnchorCenter" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoVerticalAnchor" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoVerticalAnchorMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoAnchorTop" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoAnchorTopBaseline" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoAnchorMiddle" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoAnchorBottom" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoAnchorBottomBaseLine" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoOrientation" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoOrientationMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoOrientationHorizontal" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoOrientationVertical" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoZOrderCmd" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoBringToFront" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoSendToBack" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoBringForward" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoSendBackward" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoBringInFrontOfText" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoSendBehindText" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoSegmentType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoSegmentLine" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoSegmentCurve" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="MsoEditingType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoEditingAuto" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoEditingCorner" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoEditingSmooth" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoEditingSymmetric" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoAutoShapeType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoShapeMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoShapeRectangle" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoShapeParallelogram" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoShapeTrapezoid" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoShapeDiamond" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoShapeRoundedRectangle" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoShapeOctagon" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoShapeIsoscelesTriangle" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoShapeRightTriangle" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoShapeOval" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoShapeHexagon" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoShapeCross" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoShapeRegularPentagon" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoShapeCan" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoShapeCube" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoShapeBevel" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoShapeFoldedCorner" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoShapeSmileyFace" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoShapeDonut" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoShapeNoSymbol" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoShapeBlockArc" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="msoShapeHeart" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="msoShapeLightningBolt" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="msoShapeSun" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="msoShapeMoon" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="msoShapeArc" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="msoShapeDoubleBracket" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="msoShapeDoubleBrace" type="Integer">
    <value>
      $1B
    </value>
  </const>
  <const name="msoShapePlaque" type="Integer">
    <value>
      $1C
    </value>
  </const>
  <const name="msoShapeLeftBracket" type="Integer">
    <value>
      $1D
    </value>
  </const>
  <const name="msoShapeRightBracket" type="Integer">
    <value>
      $1E
    </value>
  </const>
  <const name="msoShapeLeftBrace" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="msoShapeRightBrace" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="msoShapeRightArrow" type="Integer">
    <value>
      $21
    </value>
  </const>
  <const name="msoShapeLeftArrow" type="Integer">
    <value>
      $22
    </value>
  </const>
  <const name="msoShapeUpArrow" type="Integer">
    <value>
      $23
    </value>
  </const>
  <const name="msoShapeDownArrow" type="Integer">
    <value>
      $24
    </value>
  </const>
  <const name="msoShapeLeftRightArrow" type="Integer">
    <value>
      $25
    </value>
  </const>
  <const name="msoShapeUpDownArrow" type="Integer">
    <value>
      $26
    </value>
  </const>
  <const name="msoShapeQuadArrow" type="Integer">
    <value>
      $27
    </value>
  </const>
  <const name="msoShapeLeftRightUpArrow" type="Integer">
    <value>
      $28
    </value>
  </const>
  <const name="msoShapeBentArrow" type="Integer">
    <value>
      $29
    </value>
  </const>
  <const name="msoShapeUTurnArrow" type="Integer">
    <value>
      $2A
    </value>
  </const>
  <const name="msoShapeLeftUpArrow" type="Integer">
    <value>
      $2B
    </value>
  </const>
  <const name="msoShapeBentUpArrow" type="Integer">
    <value>
      $2C
    </value>
  </const>
  <const name="msoShapeCurvedRightArrow" type="Integer">
    <value>
      $2D
    </value>
  </const>
  <const name="msoShapeCurvedLeftArrow" type="Integer">
    <value>
      $2E
    </value>
  </const>
  <const name="msoShapeCurvedUpArrow" type="Integer">
    <value>
      $2F
    </value>
  </const>
  <const name="msoShapeCurvedDownArrow" type="Integer">
    <value>
      $30
    </value>
  </const>
  <const name="msoShapeStripedRightArrow" type="Integer">
    <value>
      $31
    </value>
  </const>
  <const name="msoShapeNotchedRightArrow" type="Integer">
    <value>
      $32
    </value>
  </const>
  <const name="msoShapePentagon" type="Integer">
    <value>
      $33
    </value>
  </const>
  <const name="msoShapeChevron" type="Integer">
    <value>
      $34
    </value>
  </const>
  <const name="msoShapeRightArrowCallout" type="Integer">
    <value>
      $35
    </value>
  </const>
  <const name="msoShapeLeftArrowCallout" type="Integer">
    <value>
      $36
    </value>
  </const>
  <const name="msoShapeUpArrowCallout" type="Integer">
    <value>
      $37
    </value>
  </const>
  <const name="msoShapeDownArrowCallout" type="Integer">
    <value>
      $38
    </value>
  </const>
  <const name="msoShapeLeftRightArrowCallout" type="Integer">
    <value>
      $39
    </value>
  </const>
  <const name="msoShapeUpDownArrowCallout" type="Integer">
    <value>
      $3A
    </value>
  </const>
  <const name="msoShapeQuadArrowCallout" type="Integer">
    <value>
      $3B
    </value>
  </const>
  <const name="msoShapeCircularArrow" type="Integer">
    <value>
      $3C
    </value>
  </const>
  <const name="msoShapeFlowchartProcess" type="Integer">
    <value>
      $3D
    </value>
  </const>
  <const name="msoShapeFlowchartAlternateProcess" type="Integer">
    <value>
      $3E
    </value>
  </const>
  <const name="msoShapeFlowchartDecision" type="Integer">
    <value>
      $3F
    </value>
  </const>
  <const name="msoShapeFlowchartData" type="Integer">
    <value>
      $40
    </value>
  </const>
  <const name="msoShapeFlowchartPredefinedProcess" type="Integer">
    <value>
      $41
    </value>
  </const>
  <const name="msoShapeFlowchartInternalStorage" type="Integer">
    <value>
      $42
    </value>
  </const>
  <const name="msoShapeFlowchartDocument" type="Integer">
    <value>
      $43
    </value>
  </const>
  <const name="msoShapeFlowchartMultidocument" type="Integer">
    <value>
      $44
    </value>
  </const>
  <const name="msoShapeFlowchartTerminator" type="Integer">
    <value>
      $45
    </value>
  </const>
  <const name="msoShapeFlowchartPreparation" type="Integer">
    <value>
      $46
    </value>
  </const>
  <const name="msoShapeFlowchartManualInput" type="Integer">
    <value>
      $47
    </value>
  </const>
  <const name="msoShapeFlowchartManualOperation" type="Integer">
    <value>
      $48
    </value>
  </const>
  <const name="msoShapeFlowchartConnector" type="Integer">
    <value>
      $49
    </value>
  </const>
  <const name="msoShapeFlowchartOffpageConnector" type="Integer">
    <value>
      $4A
    </value>
  </const>
  <const name="msoShapeFlowchartCard" type="Integer">
    <value>
      $4B
    </value>
  </const>
  <const name="msoShapeFlowchartPunchedTape" type="Integer">
    <value>
      $4C
    </value>
  </const>
  <const name="msoShapeFlowchartSummingJunction" type="Integer">
    <value>
      $4D
    </value>
  </const>
  <const name="msoShapeFlowchartOr" type="Integer">
    <value>
      $4E
    </value>
  </const>
  <const name="msoShapeFlowchartCollate" type="Integer">
    <value>
      $4F
    </value>
  </const>
  <const name="msoShapeFlowchartSort" type="Integer">
    <value>
      $50
    </value>
  </const>
  <const name="msoShapeFlowchartExtract" type="Integer">
    <value>
      $51
    </value>
  </const>
  <const name="msoShapeFlowchartMerge" type="Integer">
    <value>
      $52
    </value>
  </const>
  <const name="msoShapeFlowchartStoredData" type="Integer">
    <value>
      $53
    </value>
  </const>
  <const name="msoShapeFlowchartDelay" type="Integer">
    <value>
      $54
    </value>
  </const>
  <const name="msoShapeFlowchartSequentialAccessStorage" type="Integer">
    <value>
      $55
    </value>
  </const>
  <const name="msoShapeFlowchartMagneticDisk" type="Integer">
    <value>
      $56
    </value>
  </const>
  <const name="msoShapeFlowchartDirectAccessStorage" type="Integer">
    <value>
      $57
    </value>
  </const>
  <const name="msoShapeFlowchartDisplay" type="Integer">
    <value>
      $58
    </value>
  </const>
  <const name="msoShapeExplosion1" type="Integer">
    <value>
      $59
    </value>
  </const>
  <const name="msoShapeExplosion2" type="Integer">
    <value>
      $5A
    </value>
  </const>
  <const name="msoShape4pointStar" type="Integer">
    <value>
      $5B
    </value>
  </const>
  <const name="msoShape5pointStar" type="Integer">
    <value>
      $5C
    </value>
  </const>
  <const name="msoShape8pointStar" type="Integer">
    <value>
      $5D
    </value>
  </const>
  <const name="msoShape16pointStar" type="Integer">
    <value>
      $5E
    </value>
  </const>
  <const name="msoShape24pointStar" type="Integer">
    <value>
      $5F
    </value>
  </const>
  <const name="msoShape32pointStar" type="Integer">
    <value>
      $60
    </value>
  </const>
  <const name="msoShapeUpRibbon" type="Integer">
    <value>
      $61
    </value>
  </const>
  <const name="msoShapeDownRibbon" type="Integer">
    <value>
      $62
    </value>
  </const>
  <const name="msoShapeCurvedUpRibbon" type="Integer">
    <value>
      $63
    </value>
  </const>
  <const name="msoShapeCurvedDownRibbon" type="Integer">
    <value>
      $64
    </value>
  </const>
  <const name="msoShapeVerticalScroll" type="Integer">
    <value>
      $65
    </value>
  </const>
  <const name="msoShapeHorizontalScroll" type="Integer">
    <value>
      $66
    </value>
  </const>
  <const name="msoShapeWave" type="Integer">
    <value>
      $67
    </value>
  </const>
  <const name="msoShapeDoubleWave" type="Integer">
    <value>
      $68
    </value>
  </const>
  <const name="msoShapeRectangularCallout" type="Integer">
    <value>
      $69
    </value>
  </const>
  <const name="msoShapeRoundedRectangularCallout" type="Integer">
    <value>
      $6A
    </value>
  </const>
  <const name="msoShapeOvalCallout" type="Integer">
    <value>
      $6B
    </value>
  </const>
  <const name="msoShapeCloudCallout" type="Integer">
    <value>
      $6C
    </value>
  </const>
  <const name="msoShapeLineCallout1" type="Integer">
    <value>
      $6D
    </value>
  </const>
  <const name="msoShapeLineCallout2" type="Integer">
    <value>
      $6E
    </value>
  </const>
  <const name="msoShapeLineCallout3" type="Integer">
    <value>
      $6F
    </value>
  </const>
  <const name="msoShapeLineCallout4" type="Integer">
    <value>
      $70
    </value>
  </const>
  <const name="msoShapeLineCallout1AccentBar" type="Integer">
    <value>
      $71
    </value>
  </const>
  <const name="msoShapeLineCallout2AccentBar" type="Integer">
    <value>
      $72
    </value>
  </const>
  <const name="msoShapeLineCallout3AccentBar" type="Integer">
    <value>
      $73
    </value>
  </const>
  <const name="msoShapeLineCallout4AccentBar" type="Integer">
    <value>
      $74
    </value>
  </const>
  <const name="msoShapeLineCallout1NoBorder" type="Integer">
    <value>
      $75
    </value>
  </const>
  <const name="msoShapeLineCallout2NoBorder" type="Integer">
    <value>
      $76
    </value>
  </const>
  <const name="msoShapeLineCallout3NoBorder" type="Integer">
    <value>
      $77
    </value>
  </const>
  <const name="msoShapeLineCallout4NoBorder" type="Integer">
    <value>
      $78
    </value>
  </const>
  <const name="msoShapeLineCallout1BorderandAccentBar" type="Integer">
    <value>
      $79
    </value>
  </const>
  <const name="msoShapeLineCallout2BorderandAccentBar" type="Integer">
    <value>
      $7A
    </value>
  </const>
  <const name="msoShapeLineCallout3BorderandAccentBar" type="Integer">
    <value>
      $7B
    </value>
  </const>
  <const name="msoShapeLineCallout4BorderandAccentBar" type="Integer">
    <value>
      $7C
    </value>
  </const>
  <const name="msoShapeActionButtonCustom" type="Integer">
    <value>
      $7D
    </value>
  </const>
  <const name="msoShapeActionButtonHome" type="Integer">
    <value>
      $7E
    </value>
  </const>
  <const name="msoShapeActionButtonHelp" type="Integer">
    <value>
      $7F
    </value>
  </const>
  <const name="msoShapeActionButtonInformation" type="Integer">
    <value>
      $80
    </value>
  </const>
  <const name="msoShapeActionButtonBackorPrevious" type="Integer">
    <value>
      $81
    </value>
  </const>
  <const name="msoShapeActionButtonForwardorNext" type="Integer">
    <value>
      $82
    </value>
  </const>
  <const name="msoShapeActionButtonBeginning" type="Integer">
    <value>
      $83
    </value>
  </const>
  <const name="msoShapeActionButtonEnd" type="Integer">
    <value>
      $84
    </value>
  </const>
  <const name="msoShapeActionButtonReturn" type="Integer">
    <value>
      $85
    </value>
  </const>
  <const name="msoShapeActionButtonDocument" type="Integer">
    <value>
      $86
    </value>
  </const>
  <const name="msoShapeActionButtonSound" type="Integer">
    <value>
      $87
    </value>
  </const>
  <const name="msoShapeActionButtonMovie" type="Integer">
    <value>
      $88
    </value>
  </const>
  <const name="msoShapeBalloon" type="Integer">
    <value>
      $89
    </value>
  </const>
  <const name="msoShapeNotPrimitive" type="Integer">
    <value>
      $8A
    </value>
  </const>
  <type name="MsoShapeType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoShapeTypeMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoAutoShape" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoCallout" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoChart" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoComment" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoFreeform" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoGroup" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoEmbeddedOLEObject" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoFormControl" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoLine" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoLinkedOLEObject" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoLinkedPicture" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoOLEControlObject" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoPicture" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoPlaceholder" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoTextEffect" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoMedia" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoTextBox" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoScriptAnchor" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoTable" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoCanvas" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="msoDiagram" type="Integer">
    <value>
      $15
    </value>
  </const>
  <type name="MsoFlipCmd" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoFlipHorizontal" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoFlipVertical" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="MsoTriState" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoTrue" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="msoFalse" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoCTrue" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoTriStateToggle" type="Integer">
    <value>
      $FFFFFFFD
    </value>
  </const>
  <const name="msoTriStateMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <type name="MsoColorType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoColorTypeMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoColorTypeRGB" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoColorTypeScheme" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoColorTypeCMYK" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoColorTypeCMS" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoColorTypeInk" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoPictureColorType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPictureMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoPictureAutomatic" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoPictureGrayscale" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoPictureBlackAndWhite" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoPictureWatermark" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="MsoCalloutAngleType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoCalloutAngleMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoCalloutAngleAutomatic" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoCalloutAngle30" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoCalloutAngle45" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoCalloutAngle60" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoCalloutAngle90" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoCalloutDropType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoCalloutDropMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoCalloutDropCustom" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoCalloutDropTop" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoCalloutDropCenter" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoCalloutDropBottom" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="MsoCalloutType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoCalloutMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoCalloutOne" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoCalloutTwo" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoCalloutThree" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoCalloutFour" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="MsoBlackWhiteMode" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoBlackWhiteMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoBlackWhiteAutomatic" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoBlackWhiteGrayScale" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoBlackWhiteLightGrayScale" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoBlackWhiteInverseGrayScale" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoBlackWhiteGrayOutline" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoBlackWhiteBlackTextAndLine" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoBlackWhiteHighContrast" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoBlackWhiteBlack" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoBlackWhiteWhite" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoBlackWhiteDontShow" type="Integer">
    <value>
      $A
    </value>
  </const>
  <type name="MsoMixedType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoIntegerMixed" type="Integer">
    <value>
      $8000
    </value>
  </const>
  <const name="msoSingleMixed" type="Integer">
    <value>
      $80000000
    </value>
  </const>
  <type name="MsoTextOrientation" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoTextOrientationMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoTextOrientationHorizontal" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoTextOrientationUpward" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoTextOrientationDownward" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoTextOrientationVerticalFarEast" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoTextOrientationVertical" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoTextOrientationHorizontalRotatedFarEast" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="MsoScaleFrom" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoScaleFromTopLeft" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoScaleFromMiddle" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoScaleFromBottomRight" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoBarPosition" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoBarLeft" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoBarTop" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoBarRight" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoBarBottom" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoBarFloating" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoBarPopup" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoBarMenuBar" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="MsoBarProtection" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoBarNoProtection" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoBarNoCustomize" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoBarNoResize" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoBarNoMove" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoBarNoChangeVisible" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoBarNoChangeDock" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoBarNoVerticalDock" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="msoBarNoHorizontalDock" type="Integer">
    <value>
      $40
    </value>
  </const>
  <type name="MsoBarType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoBarTypeNormal" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoBarTypeMenuBar" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoBarTypePopup" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoControlType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoControlCustom" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoControlButton" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoControlEdit" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoControlDropdown" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoControlComboBox" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoControlButtonDropdown" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoControlSplitDropdown" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoControlOCXDropdown" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoControlGenericDropdown" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoControlGraphicDropdown" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoControlPopup" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoControlGraphicPopup" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoControlButtonPopup" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoControlSplitButtonPopup" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoControlSplitButtonMRUPopup" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoControlLabel" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoControlExpandingGrid" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoControlSplitExpandingGrid" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoControlGrid" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoControlGauge" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoControlGraphicCombo" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="msoControlPane" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="msoControlActiveX" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="msoControlSpinner" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="msoControlLabelEx" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="msoControlWorkPane" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="msoControlAutoCompleteCombo" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <type name="MsoButtonState" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoButtonUp" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoButtonDown" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="msoButtonMixed" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoControlOLEUsage" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoControlOLEUsageNeither" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoControlOLEUsageServer" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoControlOLEUsageClient" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoControlOLEUsageBoth" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoButtonStyleHidden" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoButtonWrapText" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoButtonTextBelow" type="Integer">
    <value>
      $8
    </value>
  </const>
  <type name="MsoButtonStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoButtonAutomatic" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoButtonIcon" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoButtonCaption" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoButtonIconAndCaption" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoButtonIconAndWrapCaption" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoButtonIconAndCaptionBelow" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoButtonWrapCaption" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoButtonIconAndWrapCaptionBelow" type="Integer">
    <value>
      $F
    </value>
  </const>
  <type name="MsoComboStyle" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoComboNormal" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoComboLabel" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="MsoOLEMenuGroup" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoOLEMenuGroupNone" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="msoOLEMenuGroupFile" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoOLEMenuGroupEdit" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoOLEMenuGroupContainer" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoOLEMenuGroupObject" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoOLEMenuGroupWindow" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoOLEMenuGroupHelp" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoMenuAnimation" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoMenuAnimationNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoMenuAnimationRandom" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoMenuAnimationUnfold" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoMenuAnimationSlide" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoBarRow" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoBarRowFirst" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoBarRowLast" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <type name="MsoCommandBarButtonHyperlinkType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoCommandBarButtonHyperlinkNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoCommandBarButtonHyperlinkOpen" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoCommandBarButtonHyperlinkInsertPicture" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoHyperlinkType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoHyperlinkRange" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoHyperlinkShape" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoHyperlinkInlineShape" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoExtraInfoMethod" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoMethodGet" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoMethodPost" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="MsoAnimationType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoAnimationIdle" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoAnimationGreeting" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoAnimationGoodbye" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoAnimationBeginSpeaking" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoAnimationRestPose" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoAnimationCharacterSuccessMajor" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoAnimationGetAttentionMajor" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoAnimationGetAttentionMinor" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoAnimationSearching" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoAnimationPrinting" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoAnimationGestureRight" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoAnimationWritingNotingSomething" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="msoAnimationWorkingAtSomething" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="msoAnimationThinking" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="msoAnimationSendingMail" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="msoAnimationListensToComputer" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="msoAnimationDisappear" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="msoAnimationAppear" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="msoAnimationGetArtsy" type="Integer">
    <value>
      $64
    </value>
  </const>
  <const name="msoAnimationGetTechy" type="Integer">
    <value>
      $65
    </value>
  </const>
  <const name="msoAnimationGetWizardy" type="Integer">
    <value>
      $66
    </value>
  </const>
  <const name="msoAnimationCheckingSomething" type="Integer">
    <value>
      $67
    </value>
  </const>
  <const name="msoAnimationLookDown" type="Integer">
    <value>
      $68
    </value>
  </const>
  <const name="msoAnimationLookDownLeft" type="Integer">
    <value>
      $69
    </value>
  </const>
  <const name="msoAnimationLookDownRight" type="Integer">
    <value>
      $6A
    </value>
  </const>
  <const name="msoAnimationLookLeft" type="Integer">
    <value>
      $6B
    </value>
  </const>
  <const name="msoAnimationLookRight" type="Integer">
    <value>
      $6C
    </value>
  </const>
  <const name="msoAnimationLookUp" type="Integer">
    <value>
      $6D
    </value>
  </const>
  <const name="msoAnimationLookUpLeft" type="Integer">
    <value>
      $6E
    </value>
  </const>
  <const name="msoAnimationLookUpRight" type="Integer">
    <value>
      $6F
    </value>
  </const>
  <const name="msoAnimationSaving" type="Integer">
    <value>
      $70
    </value>
  </const>
  <const name="msoAnimationGestureDown" type="Integer">
    <value>
      $71
    </value>
  </const>
  <const name="msoAnimationGestureLeft" type="Integer">
    <value>
      $72
    </value>
  </const>
  <const name="msoAnimationGestureUp" type="Integer">
    <value>
      $73
    </value>
  </const>
  <const name="msoAnimationEmptyTrash" type="Integer">
    <value>
      $74
    </value>
  </const>
  <type name="MsoButtonSetType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoButtonSetNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoButtonSetOK" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoButtonSetCancel" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoButtonSetOkCancel" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoButtonSetYesNo" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoButtonSetYesNoCancel" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoButtonSetBackClose" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoButtonSetNextClose" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoButtonSetBackNextClose" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoButtonSetRetryCancel" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoButtonSetAbortRetryIgnore" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoButtonSetSearchClose" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoButtonSetBackNextSnooze" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoButtonSetTipsOptionsClose" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoButtonSetYesAllNoCancel" type="Integer">
    <value>
      $E
    </value>
  </const>
  <type name="MsoIconType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoIconNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoIconAlert" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoIconTip" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoIconAlertInfo" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoIconAlertWarning" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoIconAlertQuery" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoIconAlertCritical" type="Integer">
    <value>
      $7
    </value>
  </const>
  <type name="MsoBalloonType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoBalloonTypeButtons" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoBalloonTypeBullets" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoBalloonTypeNumbers" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoModeType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoModeModal" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoModeAutoDown" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoModeModeless" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoBalloonErrorType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoBalloonErrorNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoBalloonErrorOther" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoBalloonErrorTooBig" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoBalloonErrorOutOfMemory" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoBalloonErrorBadPictureRef" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoBalloonErrorBadReference" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoBalloonErrorButtonlessModal" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoBalloonErrorButtonModeless" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoBalloonErrorBadCharacter" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoBalloonErrorCOMFailure" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoBalloonErrorCharNotTopmostForModal" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoBalloonErrorTooManyControls" type="Integer">
    <value>
      $B
    </value>
  </const>
  <type name="MsoWizardActType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoWizardActInactive" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoWizardActActive" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoWizardActSuspend" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoWizardActResume" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoWizardMsgType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoWizardMsgLocalStateOn" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoWizardMsgLocalStateOff" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoWizardMsgShowHelp" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoWizardMsgSuspending" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoWizardMsgResuming" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoBalloonButtonType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoBalloonButtonYesToAll" type="Integer">
    <value>
      $FFFFFFF1
    </value>
  </const>
  <const name="msoBalloonButtonOptions" type="Integer">
    <value>
      $FFFFFFF2
    </value>
  </const>
  <const name="msoBalloonButtonTips" type="Integer">
    <value>
      $FFFFFFF3
    </value>
  </const>
  <const name="msoBalloonButtonClose" type="Integer">
    <value>
      $FFFFFFF4
    </value>
  </const>
  <const name="msoBalloonButtonSnooze" type="Integer">
    <value>
      $FFFFFFF5
    </value>
  </const>
  <const name="msoBalloonButtonSearch" type="Integer">
    <value>
      $FFFFFFF6
    </value>
  </const>
  <const name="msoBalloonButtonIgnore" type="Integer">
    <value>
      $FFFFFFF7
    </value>
  </const>
  <const name="msoBalloonButtonAbort" type="Integer">
    <value>
      $FFFFFFF8
    </value>
  </const>
  <const name="msoBalloonButtonRetry" type="Integer">
    <value>
      $FFFFFFF9
    </value>
  </const>
  <const name="msoBalloonButtonNext" type="Integer">
    <value>
      $FFFFFFFA
    </value>
  </const>
  <const name="msoBalloonButtonBack" type="Integer">
    <value>
      $FFFFFFFB
    </value>
  </const>
  <const name="msoBalloonButtonNo" type="Integer">
    <value>
      $FFFFFFFC
    </value>
  </const>
  <const name="msoBalloonButtonYes" type="Integer">
    <value>
      $FFFFFFFD
    </value>
  </const>
  <const name="msoBalloonButtonCancel" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoBalloonButtonOK" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="msoBalloonButtonNull" type="Integer">
    <value>
      $0
    </value>
  </const>
  <type name="DocProperties" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="offPropertyTypeNumber" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="offPropertyTypeBoolean" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="offPropertyTypeDate" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="offPropertyTypeString" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="offPropertyTypeFloat" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoDocProperties" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoPropertyTypeNumber" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoPropertyTypeBoolean" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoPropertyTypeDate" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoPropertyTypeString" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoPropertyTypeFloat" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoAppLanguageID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoLanguageIDInstall" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoLanguageIDUI" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoLanguageIDHelp" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoLanguageIDExeMode" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoLanguageIDUIPrevious" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoFarEastLineBreakLanguageID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="MsoFarEastLineBreakLanguageJapanese" type="Integer">
    <value>
      $411
    </value>
  </const>
  <const name="MsoFarEastLineBreakLanguageKorean" type="Integer">
    <value>
      $412
    </value>
  </const>
  <const name="MsoFarEastLineBreakLanguageSimplifiedChinese" type="Integer">
    <value>
      $804
    </value>
  </const>
  <const name="MsoFarEastLineBreakLanguageTraditionalChinese" type="Integer">
    <value>
      $404
    </value>
  </const>
  <type name="MsoFeatureInstall" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoFeatureInstallNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoFeatureInstallOnDemand" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoFeatureInstallOnDemandWithUI" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoScriptLanguage" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoScriptLanguageJava" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoScriptLanguageVisualBasic" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoScriptLanguageASP" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoScriptLanguageOther" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="MsoScriptLocation" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoScriptLocationInHead" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoScriptLocationInBody" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoFileFindOptions" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoOptionsNew" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoOptionsAdd" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoOptionsWithin" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoFileFindView" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoViewFileInfo" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoViewPreview" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoViewSummaryInfo" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoFileFindSortBy" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoFileFindSortbyAuthor" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoFileFindSortbyDateCreated" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoFileFindSortbyLastSavedBy" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoFileFindSortbyDateSaved" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoFileFindSortbyFileName" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoFileFindSortbySize" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoFileFindSortbyTitle" type="Integer">
    <value>
      $7
    </value>
  </const>
  <type name="MsoFileFindListBy" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoListbyName" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoListbyTitle" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoLastModified" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoLastModifiedYesterday" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoLastModifiedToday" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoLastModifiedLastWeek" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoLastModifiedThisWeek" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoLastModifiedLastMonth" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoLastModifiedThisMonth" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoLastModifiedAnyTime" type="Integer">
    <value>
      $7
    </value>
  </const>
  <type name="MsoSortBy" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoSortByFileName" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoSortBySize" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoSortByFileType" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoSortByLastModified" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoSortByNone" type="Integer">
    <value>
      $5
    </value>
  </const>
  <type name="MsoSortOrder" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoSortOrderAscending" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoSortOrderDescending" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoConnector" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoConnectorAnd" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoConnectorOr" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoCondition" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoConditionFileTypeAllFiles" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoConditionFileTypeOfficeFiles" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoConditionFileTypeWordDocuments" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoConditionFileTypeExcelWorkbooks" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoConditionFileTypePowerPointPresentations" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoConditionFileTypeBinders" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoConditionFileTypeDatabases" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoConditionFileTypeTemplates" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoConditionIncludes" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoConditionIncludesPhrase" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoConditionBeginsWith" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoConditionEndsWith" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoConditionIncludesNearEachOther" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoConditionIsExactly" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoConditionIsNot" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoConditionYesterday" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoConditionToday" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoConditionTomorrow" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoConditionLastWeek" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoConditionThisWeek" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="msoConditionNextWeek" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="msoConditionLastMonth" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="msoConditionThisMonth" type="Integer">
    <value>
      $17
    </value>
  </const>
  <const name="msoConditionNextMonth" type="Integer">
    <value>
      $18
    </value>
  </const>
  <const name="msoConditionAnytime" type="Integer">
    <value>
      $19
    </value>
  </const>
  <const name="msoConditionAnytimeBetween" type="Integer">
    <value>
      $1A
    </value>
  </const>
  <const name="msoConditionOn" type="Integer">
    <value>
      $1B
    </value>
  </const>
  <const name="msoConditionOnOrAfter" type="Integer">
    <value>
      $1C
    </value>
  </const>
  <const name="msoConditionOnOrBefore" type="Integer">
    <value>
      $1D
    </value>
  </const>
  <const name="msoConditionInTheNext" type="Integer">
    <value>
      $1E
    </value>
  </const>
  <const name="msoConditionInTheLast" type="Integer">
    <value>
      $1F
    </value>
  </const>
  <const name="msoConditionEquals" type="Integer">
    <value>
      $20
    </value>
  </const>
  <const name="msoConditionDoesNotEqual" type="Integer">
    <value>
      $21
    </value>
  </const>
  <const name="msoConditionAnyNumberBetween" type="Integer">
    <value>
      $22
    </value>
  </const>
  <const name="msoConditionAtMost" type="Integer">
    <value>
      $23
    </value>
  </const>
  <const name="msoConditionAtLeast" type="Integer">
    <value>
      $24
    </value>
  </const>
  <const name="msoConditionMoreThan" type="Integer">
    <value>
      $25
    </value>
  </const>
  <const name="msoConditionLessThan" type="Integer">
    <value>
      $26
    </value>
  </const>
  <const name="msoConditionIsYes" type="Integer">
    <value>
      $27
    </value>
  </const>
  <const name="msoConditionIsNo" type="Integer">
    <value>
      $28
    </value>
  </const>
  <const name="msoConditionIncludesFormsOf" type="Integer">
    <value>
      $29
    </value>
  </const>
  <const name="msoConditionFreeText" type="Integer">
    <value>
      $2A
    </value>
  </const>
  <const name="msoConditionFileTypeOutlookItems" type="Integer">
    <value>
      $2B
    </value>
  </const>
  <const name="msoConditionFileTypeMailItem" type="Integer">
    <value>
      $2C
    </value>
  </const>
  <const name="msoConditionFileTypeCalendarItem" type="Integer">
    <value>
      $2D
    </value>
  </const>
  <const name="msoConditionFileTypeContactItem" type="Integer">
    <value>
      $2E
    </value>
  </const>
  <const name="msoConditionFileTypeNoteItem" type="Integer">
    <value>
      $2F
    </value>
  </const>
  <const name="msoConditionFileTypeJournalItem" type="Integer">
    <value>
      $30
    </value>
  </const>
  <const name="msoConditionFileTypeTaskItem" type="Integer">
    <value>
      $31
    </value>
  </const>
  <const name="msoConditionFileTypePhotoDrawFiles" type="Integer">
    <value>
      $32
    </value>
  </const>
  <const name="msoConditionFileTypeDataConnectionFiles" type="Integer">
    <value>
      $33
    </value>
  </const>
  <const name="msoConditionFileTypePublisherFiles" type="Integer">
    <value>
      $34
    </value>
  </const>
  <const name="msoConditionFileTypeProjectFiles" type="Integer">
    <value>
      $35
    </value>
  </const>
  <const name="msoConditionFileTypeDocumentImagingFiles" type="Integer">
    <value>
      $36
    </value>
  </const>
  <const name="msoConditionFileTypeVisioFiles" type="Integer">
    <value>
      $37
    </value>
  </const>
  <const name="msoConditionFileTypeDesignerFiles" type="Integer">
    <value>
      $38
    </value>
  </const>
  <const name="msoConditionFileTypeWebPages" type="Integer">
    <value>
      $39
    </value>
  </const>
  <const name="msoConditionEqualsLow" type="Integer">
    <value>
      $3A
    </value>
  </const>
  <const name="msoConditionEqualsNormal" type="Integer">
    <value>
      $3B
    </value>
  </const>
  <const name="msoConditionEqualsHigh" type="Integer">
    <value>
      $3C
    </value>
  </const>
  <const name="msoConditionNotEqualToLow" type="Integer">
    <value>
      $3D
    </value>
  </const>
  <const name="msoConditionNotEqualToNormal" type="Integer">
    <value>
      $3E
    </value>
  </const>
  <const name="msoConditionNotEqualToHigh" type="Integer">
    <value>
      $3F
    </value>
  </const>
  <const name="msoConditionEqualsNotStarted" type="Integer">
    <value>
      $40
    </value>
  </const>
  <const name="msoConditionEqualsInProgress" type="Integer">
    <value>
      $41
    </value>
  </const>
  <const name="msoConditionEqualsCompleted" type="Integer">
    <value>
      $42
    </value>
  </const>
  <const name="msoConditionEqualsWaitingForSomeoneElse" type="Integer">
    <value>
      $43
    </value>
  </const>
  <const name="msoConditionEqualsDeferred" type="Integer">
    <value>
      $44
    </value>
  </const>
  <const name="msoConditionNotEqualToNotStarted" type="Integer">
    <value>
      $45
    </value>
  </const>
  <const name="msoConditionNotEqualToInProgress" type="Integer">
    <value>
      $46
    </value>
  </const>
  <const name="msoConditionNotEqualToCompleted" type="Integer">
    <value>
      $47
    </value>
  </const>
  <const name="msoConditionNotEqualToWaitingForSomeoneElse" type="Integer">
    <value>
      $48
    </value>
  </const>
  <const name="msoConditionNotEqualToDeferred" type="Integer">
    <value>
      $49
    </value>
  </const>
  <type name="MsoFileType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoFileTypeAllFiles" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoFileTypeOfficeFiles" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoFileTypeWordDocuments" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoFileTypeExcelWorkbooks" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoFileTypePowerPointPresentations" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoFileTypeBinders" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoFileTypeDatabases" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoFileTypeTemplates" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoFileTypeOutlookItems" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoFileTypeMailItem" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoFileTypeCalendarItem" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoFileTypeContactItem" type="Integer">
    <value>
      $C
    </value>
  </const>
  <const name="msoFileTypeNoteItem" type="Integer">
    <value>
      $D
    </value>
  </const>
  <const name="msoFileTypeJournalItem" type="Integer">
    <value>
      $E
    </value>
  </const>
  <const name="msoFileTypeTaskItem" type="Integer">
    <value>
      $F
    </value>
  </const>
  <const name="msoFileTypePhotoDrawFiles" type="Integer">
    <value>
      $10
    </value>
  </const>
  <const name="msoFileTypeDataConnectionFiles" type="Integer">
    <value>
      $11
    </value>
  </const>
  <const name="msoFileTypePublisherFiles" type="Integer">
    <value>
      $12
    </value>
  </const>
  <const name="msoFileTypeProjectFiles" type="Integer">
    <value>
      $13
    </value>
  </const>
  <const name="msoFileTypeDocumentImagingFiles" type="Integer">
    <value>
      $14
    </value>
  </const>
  <const name="msoFileTypeVisioFiles" type="Integer">
    <value>
      $15
    </value>
  </const>
  <const name="msoFileTypeDesignerFiles" type="Integer">
    <value>
      $16
    </value>
  </const>
  <const name="msoFileTypeWebPages" type="Integer">
    <value>
      $17
    </value>
  </const>
  <type name="MsoLanguageID" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoLanguageIDMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoLanguageIDNone" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoLanguageIDNoProofing" type="Integer">
    <value>
      $400
    </value>
  </const>
  <const name="msoLanguageIDAfrikaans" type="Integer">
    <value>
      $436
    </value>
  </const>
  <const name="msoLanguageIDAlbanian" type="Integer">
    <value>
      $41C
    </value>
  </const>
  <const name="msoLanguageIDAmharic" type="Integer">
    <value>
      $45E
    </value>
  </const>
  <const name="msoLanguageIDArabicAlgeria" type="Integer">
    <value>
      $1401
    </value>
  </const>
  <const name="msoLanguageIDArabicBahrain" type="Integer">
    <value>
      $3C01
    </value>
  </const>
  <const name="msoLanguageIDArabicEgypt" type="Integer">
    <value>
      $C01
    </value>
  </const>
  <const name="msoLanguageIDArabicIraq" type="Integer">
    <value>
      $801
    </value>
  </const>
  <const name="msoLanguageIDArabicJordan" type="Integer">
    <value>
      $2C01
    </value>
  </const>
  <const name="msoLanguageIDArabicKuwait" type="Integer">
    <value>
      $3401
    </value>
  </const>
  <const name="msoLanguageIDArabicLebanon" type="Integer">
    <value>
      $3001
    </value>
  </const>
  <const name="msoLanguageIDArabicLibya" type="Integer">
    <value>
      $1001
    </value>
  </const>
  <const name="msoLanguageIDArabicMorocco" type="Integer">
    <value>
      $1801
    </value>
  </const>
  <const name="msoLanguageIDArabicOman" type="Integer">
    <value>
      $2001
    </value>
  </const>
  <const name="msoLanguageIDArabicQatar" type="Integer">
    <value>
      $4001
    </value>
  </const>
  <const name="msoLanguageIDArabic" type="Integer">
    <value>
      $401
    </value>
  </const>
  <const name="msoLanguageIDArabicSyria" type="Integer">
    <value>
      $2801
    </value>
  </const>
  <const name="msoLanguageIDArabicTunisia" type="Integer">
    <value>
      $1C01
    </value>
  </const>
  <const name="msoLanguageIDArabicUAE" type="Integer">
    <value>
      $3801
    </value>
  </const>
  <const name="msoLanguageIDArabicYemen" type="Integer">
    <value>
      $2401
    </value>
  </const>
  <const name="msoLanguageIDArmenian" type="Integer">
    <value>
      $42B
    </value>
  </const>
  <const name="msoLanguageIDAssamese" type="Integer">
    <value>
      $44D
    </value>
  </const>
  <const name="msoLanguageIDAzeriCyrillic" type="Integer">
    <value>
      $82C
    </value>
  </const>
  <const name="msoLanguageIDAzeriLatin" type="Integer">
    <value>
      $42C
    </value>
  </const>
  <const name="msoLanguageIDBasque" type="Integer">
    <value>
      $42D
    </value>
  </const>
  <const name="msoLanguageIDByelorussian" type="Integer">
    <value>
      $423
    </value>
  </const>
  <const name="msoLanguageIDBengali" type="Integer">
    <value>
      $445
    </value>
  </const>
  <const name="msoLanguageIDBulgarian" type="Integer">
    <value>
      $402
    </value>
  </const>
  <const name="msoLanguageIDBurmese" type="Integer">
    <value>
      $455
    </value>
  </const>
  <const name="msoLanguageIDCatalan" type="Integer">
    <value>
      $403
    </value>
  </const>
  <const name="msoLanguageIDChineseHongKongSAR" type="Integer">
    <value>
      $C04
    </value>
  </const>
  <const name="msoLanguageIDChineseMacaoSAR" type="Integer">
    <value>
      $1404
    </value>
  </const>
  <const name="msoLanguageIDSimplifiedChinese" type="Integer">
    <value>
      $804
    </value>
  </const>
  <const name="msoLanguageIDChineseSingapore" type="Integer">
    <value>
      $1004
    </value>
  </const>
  <const name="msoLanguageIDTraditionalChinese" type="Integer">
    <value>
      $404
    </value>
  </const>
  <const name="msoLanguageIDCherokee" type="Integer">
    <value>
      $45C
    </value>
  </const>
  <const name="msoLanguageIDCroatian" type="Integer">
    <value>
      $41A
    </value>
  </const>
  <const name="msoLanguageIDCzech" type="Integer">
    <value>
      $405
    </value>
  </const>
  <const name="msoLanguageIDDanish" type="Integer">
    <value>
      $406
    </value>
  </const>
  <const name="msoLanguageIDDivehi" type="Integer">
    <value>
      $465
    </value>
  </const>
  <const name="msoLanguageIDBelgianDutch" type="Integer">
    <value>
      $813
    </value>
  </const>
  <const name="msoLanguageIDDutch" type="Integer">
    <value>
      $413
    </value>
  </const>
  <const name="msoLanguageIDDzongkhaBhutan" type="Integer">
    <value>
      $851
    </value>
  </const>
  <const name="msoLanguageIDEdo" type="Integer">
    <value>
      $466
    </value>
  </const>
  <const name="msoLanguageIDEnglishAUS" type="Integer">
    <value>
      $C09
    </value>
  </const>
  <const name="msoLanguageIDEnglishBelize" type="Integer">
    <value>
      $2809
    </value>
  </const>
  <const name="msoLanguageIDEnglishCanadian" type="Integer">
    <value>
      $1009
    </value>
  </const>
  <const name="msoLanguageIDEnglishCaribbean" type="Integer">
    <value>
      $2409
    </value>
  </const>
  <const name="msoLanguageIDEnglishIndonesia" type="Integer">
    <value>
      $3809
    </value>
  </const>
  <const name="msoLanguageIDEnglishIreland" type="Integer">
    <value>
      $1809
    </value>
  </const>
  <const name="msoLanguageIDEnglishJamaica" type="Integer">
    <value>
      $2009
    </value>
  </const>
  <const name="msoLanguageIDEnglishNewZealand" type="Integer">
    <value>
      $1409
    </value>
  </const>
  <const name="msoLanguageIDEnglishPhilippines" type="Integer">
    <value>
      $3409
    </value>
  </const>
  <const name="msoLanguageIDEnglishSouthAfrica" type="Integer">
    <value>
      $1C09
    </value>
  </const>
  <const name="msoLanguageIDEnglishTrinidadTobago" type="Integer">
    <value>
      $2C09
    </value>
  </const>
  <const name="msoLanguageIDEnglishUK" type="Integer">
    <value>
      $809
    </value>
  </const>
  <const name="msoLanguageIDEnglishUS" type="Integer">
    <value>
      $409
    </value>
  </const>
  <const name="msoLanguageIDEnglishZimbabwe" type="Integer">
    <value>
      $3009
    </value>
  </const>
  <const name="msoLanguageIDEstonian" type="Integer">
    <value>
      $425
    </value>
  </const>
  <const name="msoLanguageIDFaeroese" type="Integer">
    <value>
      $438
    </value>
  </const>
  <const name="msoLanguageIDFarsi" type="Integer">
    <value>
      $429
    </value>
  </const>
  <const name="msoLanguageIDFilipino" type="Integer">
    <value>
      $464
    </value>
  </const>
  <const name="msoLanguageIDFinnish" type="Integer">
    <value>
      $40B
    </value>
  </const>
  <const name="msoLanguageIDBelgianFrench" type="Integer">
    <value>
      $80C
    </value>
  </const>
  <const name="msoLanguageIDFrenchCameroon" type="Integer">
    <value>
      $2C0C
    </value>
  </const>
  <const name="msoLanguageIDFrenchCanadian" type="Integer">
    <value>
      $C0C
    </value>
  </const>
  <const name="msoLanguageIDFrenchCotedIvoire" type="Integer">
    <value>
      $300C
    </value>
  </const>
  <const name="msoLanguageIDFrench" type="Integer">
    <value>
      $40C
    </value>
  </const>
  <const name="msoLanguageIDFrenchHaiti" type="Integer">
    <value>
      $3C0C
    </value>
  </const>
  <const name="msoLanguageIDFrenchLuxembourg" type="Integer">
    <value>
      $140C
    </value>
  </const>
  <const name="msoLanguageIDFrenchMali" type="Integer">
    <value>
      $340C
    </value>
  </const>
  <const name="msoLanguageIDFrenchMonaco" type="Integer">
    <value>
      $180C
    </value>
  </const>
  <const name="msoLanguageIDFrenchMorocco" type="Integer">
    <value>
      $380C
    </value>
  </const>
  <const name="msoLanguageIDFrenchReunion" type="Integer">
    <value>
      $200C
    </value>
  </const>
  <const name="msoLanguageIDFrenchSenegal" type="Integer">
    <value>
      $280C
    </value>
  </const>
  <const name="msoLanguageIDSwissFrench" type="Integer">
    <value>
      $100C
    </value>
  </const>
  <const name="msoLanguageIDFrenchWestIndies" type="Integer">
    <value>
      $1C0C
    </value>
  </const>
  <const name="msoLanguageIDFrenchZaire" type="Integer">
    <value>
      $240C
    </value>
  </const>
  <const name="msoLanguageIDFrisianNetherlands" type="Integer">
    <value>
      $462
    </value>
  </const>
  <const name="msoLanguageIDFulfulde" type="Integer">
    <value>
      $467
    </value>
  </const>
  <const name="msoLanguageIDGaelicIreland" type="Integer">
    <value>
      $83C
    </value>
  </const>
  <const name="msoLanguageIDGaelicScotland" type="Integer">
    <value>
      $43C
    </value>
  </const>
  <const name="msoLanguageIDGalician" type="Integer">
    <value>
      $456
    </value>
  </const>
  <const name="msoLanguageIDGeorgian" type="Integer">
    <value>
      $437
    </value>
  </const>
  <const name="msoLanguageIDGermanAustria" type="Integer">
    <value>
      $C07
    </value>
  </const>
  <const name="msoLanguageIDGerman" type="Integer">
    <value>
      $407
    </value>
  </const>
  <const name="msoLanguageIDGermanLiechtenstein" type="Integer">
    <value>
      $1407
    </value>
  </const>
  <const name="msoLanguageIDGermanLuxembourg" type="Integer">
    <value>
      $1007
    </value>
  </const>
  <const name="msoLanguageIDSwissGerman" type="Integer">
    <value>
      $807
    </value>
  </const>
  <const name="msoLanguageIDGreek" type="Integer">
    <value>
      $408
    </value>
  </const>
  <const name="msoLanguageIDGuarani" type="Integer">
    <value>
      $474
    </value>
  </const>
  <const name="msoLanguageIDGujarati" type="Integer">
    <value>
      $447
    </value>
  </const>
  <const name="msoLanguageIDHausa" type="Integer">
    <value>
      $468
    </value>
  </const>
  <const name="msoLanguageIDHawaiian" type="Integer">
    <value>
      $475
    </value>
  </const>
  <const name="msoLanguageIDHebrew" type="Integer">
    <value>
      $40D
    </value>
  </const>
  <const name="msoLanguageIDHindi" type="Integer">
    <value>
      $439
    </value>
  </const>
  <const name="msoLanguageIDHungarian" type="Integer">
    <value>
      $40E
    </value>
  </const>
  <const name="msoLanguageIDIbibio" type="Integer">
    <value>
      $469
    </value>
  </const>
  <const name="msoLanguageIDIcelandic" type="Integer">
    <value>
      $40F
    </value>
  </const>
  <const name="msoLanguageIDIgbo" type="Integer">
    <value>
      $470
    </value>
  </const>
  <const name="msoLanguageIDIndonesian" type="Integer">
    <value>
      $421
    </value>
  </const>
  <const name="msoLanguageIDInuktitut" type="Integer">
    <value>
      $45D
    </value>
  </const>
  <const name="msoLanguageIDItalian" type="Integer">
    <value>
      $410
    </value>
  </const>
  <const name="msoLanguageIDSwissItalian" type="Integer">
    <value>
      $810
    </value>
  </const>
  <const name="msoLanguageIDJapanese" type="Integer">
    <value>
      $411
    </value>
  </const>
  <const name="msoLanguageIDKannada" type="Integer">
    <value>
      $44B
    </value>
  </const>
  <const name="msoLanguageIDKanuri" type="Integer">
    <value>
      $471
    </value>
  </const>
  <const name="msoLanguageIDKashmiri" type="Integer">
    <value>
      $460
    </value>
  </const>
  <const name="msoLanguageIDKashmiriDevanagari" type="Integer">
    <value>
      $860
    </value>
  </const>
  <const name="msoLanguageIDKazakh" type="Integer">
    <value>
      $43F
    </value>
  </const>
  <const name="msoLanguageIDKhmer" type="Integer">
    <value>
      $453
    </value>
  </const>
  <const name="msoLanguageIDKirghiz" type="Integer">
    <value>
      $440
    </value>
  </const>
  <const name="msoLanguageIDKonkani" type="Integer">
    <value>
      $457
    </value>
  </const>
  <const name="msoLanguageIDKorean" type="Integer">
    <value>
      $412
    </value>
  </const>
  <const name="msoLanguageIDKyrgyz" type="Integer">
    <value>
      $440
    </value>
  </const>
  <const name="msoLanguageIDLatin" type="Integer">
    <value>
      $476
    </value>
  </const>
  <const name="msoLanguageIDLao" type="Integer">
    <value>
      $454
    </value>
  </const>
  <const name="msoLanguageIDLatvian" type="Integer">
    <value>
      $426
    </value>
  </const>
  <const name="msoLanguageIDLithuanian" type="Integer">
    <value>
      $427
    </value>
  </const>
  <const name="msoLanguageIDMacedonian" type="Integer">
    <value>
      $42F
    </value>
  </const>
  <const name="msoLanguageIDMalaysian" type="Integer">
    <value>
      $43E
    </value>
  </const>
  <const name="msoLanguageIDMalayBruneiDarussalam" type="Integer">
    <value>
      $83E
    </value>
  </const>
  <const name="msoLanguageIDMalayalam" type="Integer">
    <value>
      $44C
    </value>
  </const>
  <const name="msoLanguageIDMaltese" type="Integer">
    <value>
      $43A
    </value>
  </const>
  <const name="msoLanguageIDManipuri" type="Integer">
    <value>
      $458
    </value>
  </const>
  <const name="msoLanguageIDMarathi" type="Integer">
    <value>
      $44E
    </value>
  </const>
  <const name="msoLanguageIDMongolian" type="Integer">
    <value>
      $450
    </value>
  </const>
  <const name="msoLanguageIDNepali" type="Integer">
    <value>
      $461
    </value>
  </const>
  <const name="msoLanguageIDNorwegianBokmol" type="Integer">
    <value>
      $414
    </value>
  </const>
  <const name="msoLanguageIDNorwegianNynorsk" type="Integer">
    <value>
      $814
    </value>
  </const>
  <const name="msoLanguageIDOriya" type="Integer">
    <value>
      $448
    </value>
  </const>
  <const name="msoLanguageIDOromo" type="Integer">
    <value>
      $472
    </value>
  </const>
  <const name="msoLanguageIDPashto" type="Integer">
    <value>
      $463
    </value>
  </const>
  <const name="msoLanguageIDPolish" type="Integer">
    <value>
      $415
    </value>
  </const>
  <const name="msoLanguageIDBrazilianPortuguese" type="Integer">
    <value>
      $416
    </value>
  </const>
  <const name="msoLanguageIDPortuguese" type="Integer">
    <value>
      $816
    </value>
  </const>
  <const name="msoLanguageIDPunjabi" type="Integer">
    <value>
      $446
    </value>
  </const>
  <const name="msoLanguageIDRhaetoRomanic" type="Integer">
    <value>
      $417
    </value>
  </const>
  <const name="msoLanguageIDRomanianMoldova" type="Integer">
    <value>
      $818
    </value>
  </const>
  <const name="msoLanguageIDRomanian" type="Integer">
    <value>
      $418
    </value>
  </const>
  <const name="msoLanguageIDRussianMoldova" type="Integer">
    <value>
      $819
    </value>
  </const>
  <const name="msoLanguageIDRussian" type="Integer">
    <value>
      $419
    </value>
  </const>
  <const name="msoLanguageIDSamiLappish" type="Integer">
    <value>
      $43B
    </value>
  </const>
  <const name="msoLanguageIDSanskrit" type="Integer">
    <value>
      $44F
    </value>
  </const>
  <const name="msoLanguageIDSerbianCyrillic" type="Integer">
    <value>
      $C1A
    </value>
  </const>
  <const name="msoLanguageIDSerbianLatin" type="Integer">
    <value>
      $81A
    </value>
  </const>
  <const name="msoLanguageIDSesotho" type="Integer">
    <value>
      $430
    </value>
  </const>
  <const name="msoLanguageIDSindhi" type="Integer">
    <value>
      $459
    </value>
  </const>
  <const name="msoLanguageIDSindhiPakistan" type="Integer">
    <value>
      $859
    </value>
  </const>
  <const name="msoLanguageIDSinhalese" type="Integer">
    <value>
      $45B
    </value>
  </const>
  <const name="msoLanguageIDSlovak" type="Integer">
    <value>
      $41B
    </value>
  </const>
  <const name="msoLanguageIDSlovenian" type="Integer">
    <value>
      $424
    </value>
  </const>
  <const name="msoLanguageIDSomali" type="Integer">
    <value>
      $477
    </value>
  </const>
  <const name="msoLanguageIDSorbian" type="Integer">
    <value>
      $42E
    </value>
  </const>
  <const name="msoLanguageIDSpanishArgentina" type="Integer">
    <value>
      $2C0A
    </value>
  </const>
  <const name="msoLanguageIDSpanishBolivia" type="Integer">
    <value>
      $400A
    </value>
  </const>
  <const name="msoLanguageIDSpanishChile" type="Integer">
    <value>
      $340A
    </value>
  </const>
  <const name="msoLanguageIDSpanishColombia" type="Integer">
    <value>
      $240A
    </value>
  </const>
  <const name="msoLanguageIDSpanishCostaRica" type="Integer">
    <value>
      $140A
    </value>
  </const>
  <const name="msoLanguageIDSpanishDominicanRepublic" type="Integer">
    <value>
      $1C0A
    </value>
  </const>
  <const name="msoLanguageIDSpanishEcuador" type="Integer">
    <value>
      $300A
    </value>
  </const>
  <const name="msoLanguageIDSpanishElSalvador" type="Integer">
    <value>
      $440A
    </value>
  </const>
  <const name="msoLanguageIDSpanishGuatemala" type="Integer">
    <value>
      $100A
    </value>
  </const>
  <const name="msoLanguageIDSpanishHonduras" type="Integer">
    <value>
      $480A
    </value>
  </const>
  <const name="msoLanguageIDMexicanSpanish" type="Integer">
    <value>
      $80A
    </value>
  </const>
  <const name="msoLanguageIDSpanishNicaragua" type="Integer">
    <value>
      $4C0A
    </value>
  </const>
  <const name="msoLanguageIDSpanishPanama" type="Integer">
    <value>
      $180A
    </value>
  </const>
  <const name="msoLanguageIDSpanishParaguay" type="Integer">
    <value>
      $3C0A
    </value>
  </const>
  <const name="msoLanguageIDSpanishPeru" type="Integer">
    <value>
      $280A
    </value>
  </const>
  <const name="msoLanguageIDSpanishPuertoRico" type="Integer">
    <value>
      $500A
    </value>
  </const>
  <const name="msoLanguageIDSpanishModernSort" type="Integer">
    <value>
      $C0A
    </value>
  </const>
  <const name="msoLanguageIDSpanish" type="Integer">
    <value>
      $40A
    </value>
  </const>
  <const name="msoLanguageIDSpanishUruguay" type="Integer">
    <value>
      $380A
    </value>
  </const>
  <const name="msoLanguageIDSpanishVenezuela" type="Integer">
    <value>
      $200A
    </value>
  </const>
  <const name="msoLanguageIDSutu" type="Integer">
    <value>
      $430
    </value>
  </const>
  <const name="msoLanguageIDSwahili" type="Integer">
    <value>
      $441
    </value>
  </const>
  <const name="msoLanguageIDSwedishFinland" type="Integer">
    <value>
      $81D
    </value>
  </const>
  <const name="msoLanguageIDSwedish" type="Integer">
    <value>
      $41D
    </value>
  </const>
  <const name="msoLanguageIDSyriac" type="Integer">
    <value>
      $45A
    </value>
  </const>
  <const name="msoLanguageIDTajik" type="Integer">
    <value>
      $428
    </value>
  </const>
  <const name="msoLanguageIDTamil" type="Integer">
    <value>
      $449
    </value>
  </const>
  <const name="msoLanguageIDTamazight" type="Integer">
    <value>
      $45F
    </value>
  </const>
  <const name="msoLanguageIDTamazightLatin" type="Integer">
    <value>
      $85F
    </value>
  </const>
  <const name="msoLanguageIDTatar" type="Integer">
    <value>
      $444
    </value>
  </const>
  <const name="msoLanguageIDTelugu" type="Integer">
    <value>
      $44A
    </value>
  </const>
  <const name="msoLanguageIDThai" type="Integer">
    <value>
      $41E
    </value>
  </const>
  <const name="msoLanguageIDTibetan" type="Integer">
    <value>
      $451
    </value>
  </const>
  <const name="msoLanguageIDTigrignaEthiopic" type="Integer">
    <value>
      $473
    </value>
  </const>
  <const name="msoLanguageIDTigrignaEritrea" type="Integer">
    <value>
      $873
    </value>
  </const>
  <const name="msoLanguageIDTsonga" type="Integer">
    <value>
      $431
    </value>
  </const>
  <const name="msoLanguageIDTswana" type="Integer">
    <value>
      $432
    </value>
  </const>
  <const name="msoLanguageIDTurkish" type="Integer">
    <value>
      $41F
    </value>
  </const>
  <const name="msoLanguageIDTurkmen" type="Integer">
    <value>
      $442
    </value>
  </const>
  <const name="msoLanguageIDUkrainian" type="Integer">
    <value>
      $422
    </value>
  </const>
  <const name="msoLanguageIDUrdu" type="Integer">
    <value>
      $420
    </value>
  </const>
  <const name="msoLanguageIDUzbekCyrillic" type="Integer">
    <value>
      $843
    </value>
  </const>
  <const name="msoLanguageIDUzbekLatin" type="Integer">
    <value>
      $443
    </value>
  </const>
  <const name="msoLanguageIDVenda" type="Integer">
    <value>
      $433
    </value>
  </const>
  <const name="msoLanguageIDVietnamese" type="Integer">
    <value>
      $42A
    </value>
  </const>
  <const name="msoLanguageIDWelsh" type="Integer">
    <value>
      $452
    </value>
  </const>
  <const name="msoLanguageIDXhosa" type="Integer">
    <value>
      $434
    </value>
  </const>
  <const name="msoLanguageIDYi" type="Integer">
    <value>
      $478
    </value>
  </const>
  <const name="msoLanguageIDYiddish" type="Integer">
    <value>
      $43D
    </value>
  </const>
  <const name="msoLanguageIDYoruba" type="Integer">
    <value>
      $46A
    </value>
  </const>
  <const name="msoLanguageIDZulu" type="Integer">
    <value>
      $435
    </value>
  </const>
  <type name="MsoScreenSize" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoScreenSize544x376" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoScreenSize640x480" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoScreenSize720x512" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoScreenSize800x600" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoScreenSize1024x768" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoScreenSize1152x882" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoScreenSize1152x900" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoScreenSize1280x1024" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoScreenSize1600x1200" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoScreenSize1800x1440" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoScreenSize1920x1200" type="Integer">
    <value>
      $A
    </value>
  </const>
  <type name="MsoCharacterSet" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoCharacterSetArabic" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoCharacterSetCyrillic" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoCharacterSetEnglishWesternEuropeanOtherLatinScript" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoCharacterSetGreek" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoCharacterSetHebrew" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoCharacterSetJapanese" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoCharacterSetKorean" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoCharacterSetMultilingualUnicode" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoCharacterSetSimplifiedChinese" type="Integer">
    <value>
      $9
    </value>
  </const>
  <const name="msoCharacterSetThai" type="Integer">
    <value>
      $A
    </value>
  </const>
  <const name="msoCharacterSetTraditionalChinese" type="Integer">
    <value>
      $B
    </value>
  </const>
  <const name="msoCharacterSetVietnamese" type="Integer">
    <value>
      $C
    </value>
  </const>
  <type name="MsoEncoding" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoEncodingThai" type="Integer">
    <value>
      $36A
    </value>
  </const>
  <const name="msoEncodingJapaneseShiftJIS" type="Integer">
    <value>
      $3A4
    </value>
  </const>
  <const name="msoEncodingSimplifiedChineseGBK" type="Integer">
    <value>
      $3A8
    </value>
  </const>
  <const name="msoEncodingKorean" type="Integer">
    <value>
      $3B5
    </value>
  </const>
  <const name="msoEncodingTraditionalChineseBig5" type="Integer">
    <value>
      $3B6
    </value>
  </const>
  <const name="msoEncodingUnicodeLittleEndian" type="Integer">
    <value>
      $4B0
    </value>
  </const>
  <const name="msoEncodingUnicodeBigEndian" type="Integer">
    <value>
      $4B1
    </value>
  </const>
  <const name="msoEncodingCentralEuropean" type="Integer">
    <value>
      $4E2
    </value>
  </const>
  <const name="msoEncodingCyrillic" type="Integer">
    <value>
      $4E3
    </value>
  </const>
  <const name="msoEncodingWestern" type="Integer">
    <value>
      $4E4
    </value>
  </const>
  <const name="msoEncodingGreek" type="Integer">
    <value>
      $4E5
    </value>
  </const>
  <const name="msoEncodingTurkish" type="Integer">
    <value>
      $4E6
    </value>
  </const>
  <const name="msoEncodingHebrew" type="Integer">
    <value>
      $4E7
    </value>
  </const>
  <const name="msoEncodingArabic" type="Integer">
    <value>
      $4E8
    </value>
  </const>
  <const name="msoEncodingBaltic" type="Integer">
    <value>
      $4E9
    </value>
  </const>
  <const name="msoEncodingVietnamese" type="Integer">
    <value>
      $4EA
    </value>
  </const>
  <const name="msoEncodingAutoDetect" type="Integer">
    <value>
      $C351
    </value>
  </const>
  <const name="msoEncodingJapaneseAutoDetect" type="Integer">
    <value>
      $C6F4
    </value>
  </const>
  <const name="msoEncodingSimplifiedChineseAutoDetect" type="Integer">
    <value>
      $C6F8
    </value>
  </const>
  <const name="msoEncodingKoreanAutoDetect" type="Integer">
    <value>
      $C705
    </value>
  </const>
  <const name="msoEncodingTraditionalChineseAutoDetect" type="Integer">
    <value>
      $C706
    </value>
  </const>
  <const name="msoEncodingCyrillicAutoDetect" type="Integer">
    <value>
      $C833
    </value>
  </const>
  <const name="msoEncodingGreekAutoDetect" type="Integer">
    <value>
      $C835
    </value>
  </const>
  <const name="msoEncodingArabicAutoDetect" type="Integer">
    <value>
      $C838
    </value>
  </const>
  <const name="msoEncodingISO88591Latin1" type="Integer">
    <value>
      $6FAF
    </value>
  </const>
  <const name="msoEncodingISO88592CentralEurope" type="Integer">
    <value>
      $6FB0
    </value>
  </const>
  <const name="msoEncodingISO88593Latin3" type="Integer">
    <value>
      $6FB1
    </value>
  </const>
  <const name="msoEncodingISO88594Baltic" type="Integer">
    <value>
      $6FB2
    </value>
  </const>
  <const name="msoEncodingISO88595Cyrillic" type="Integer">
    <value>
      $6FB3
    </value>
  </const>
  <const name="msoEncodingISO88596Arabic" type="Integer">
    <value>
      $6FB4
    </value>
  </const>
  <const name="msoEncodingISO88597Greek" type="Integer">
    <value>
      $6FB5
    </value>
  </const>
  <const name="msoEncodingISO88598Hebrew" type="Integer">
    <value>
      $6FB6
    </value>
  </const>
  <const name="msoEncodingISO88599Turkish" type="Integer">
    <value>
      $6FB7
    </value>
  </const>
  <const name="msoEncodingISO885915Latin9" type="Integer">
    <value>
      $6FBD
    </value>
  </const>
  <const name="msoEncodingISO2022JPNoHalfwidthKatakana" type="Integer">
    <value>
      $C42C
    </value>
  </const>
  <const name="msoEncodingISO2022JPJISX02021984" type="Integer">
    <value>
      $C42D
    </value>
  </const>
  <const name="msoEncodingISO2022JPJISX02011989" type="Integer">
    <value>
      $C42E
    </value>
  </const>
  <const name="msoEncodingISO2022KR" type="Integer">
    <value>
      $C431
    </value>
  </const>
  <const name="msoEncodingISO2022CNTraditionalChinese" type="Integer">
    <value>
      $C433
    </value>
  </const>
  <const name="msoEncodingISO2022CNSimplifiedChinese" type="Integer">
    <value>
      $C435
    </value>
  </const>
  <const name="msoEncodingMacRoman" type="Integer">
    <value>
      $2710
    </value>
  </const>
  <const name="msoEncodingMacJapanese" type="Integer">
    <value>
      $2711
    </value>
  </const>
  <const name="msoEncodingMacTraditionalChineseBig5" type="Integer">
    <value>
      $2712
    </value>
  </const>
  <const name="msoEncodingMacKorean" type="Integer">
    <value>
      $2713
    </value>
  </const>
  <const name="msoEncodingMacArabic" type="Integer">
    <value>
      $2714
    </value>
  </const>
  <const name="msoEncodingMacHebrew" type="Integer">
    <value>
      $2715
    </value>
  </const>
  <const name="msoEncodingMacGreek1" type="Integer">
    <value>
      $2716
    </value>
  </const>
  <const name="msoEncodingMacCyrillic" type="Integer">
    <value>
      $2717
    </value>
  </const>
  <const name="msoEncodingMacSimplifiedChineseGB2312" type="Integer">
    <value>
      $2718
    </value>
  </const>
  <const name="msoEncodingMacRomania" type="Integer">
    <value>
      $271A
    </value>
  </const>
  <const name="msoEncodingMacUkraine" type="Integer">
    <value>
      $2721
    </value>
  </const>
  <const name="msoEncodingMacLatin2" type="Integer">
    <value>
      $272D
    </value>
  </const>
  <const name="msoEncodingMacIcelandic" type="Integer">
    <value>
      $275F
    </value>
  </const>
  <const name="msoEncodingMacTurkish" type="Integer">
    <value>
      $2761
    </value>
  </const>
  <const name="msoEncodingMacCroatia" type="Integer">
    <value>
      $2762
    </value>
  </const>
  <const name="msoEncodingEBCDICUSCanada" type="Integer">
    <value>
      $25
    </value>
  </const>
  <const name="msoEncodingEBCDICInternational" type="Integer">
    <value>
      $1F4
    </value>
  </const>
  <const name="msoEncodingEBCDICMultilingualROECELatin2" type="Integer">
    <value>
      $366
    </value>
  </const>
  <const name="msoEncodingEBCDICGreekModern" type="Integer">
    <value>
      $36B
    </value>
  </const>
  <const name="msoEncodingEBCDICTurkishLatin5" type="Integer">
    <value>
      $402
    </value>
  </const>
  <const name="msoEncodingEBCDICGermany" type="Integer">
    <value>
      $4F31
    </value>
  </const>
  <const name="msoEncodingEBCDICDenmarkNorway" type="Integer">
    <value>
      $4F35
    </value>
  </const>
  <const name="msoEncodingEBCDICFinlandSweden" type="Integer">
    <value>
      $4F36
    </value>
  </const>
  <const name="msoEncodingEBCDICItaly" type="Integer">
    <value>
      $4F38
    </value>
  </const>
  <const name="msoEncodingEBCDICLatinAmericaSpain" type="Integer">
    <value>
      $4F3C
    </value>
  </const>
  <const name="msoEncodingEBCDICUnitedKingdom" type="Integer">
    <value>
      $4F3D
    </value>
  </const>
  <const name="msoEncodingEBCDICJapaneseKatakanaExtended" type="Integer">
    <value>
      $4F42
    </value>
  </const>
  <const name="msoEncodingEBCDICFrance" type="Integer">
    <value>
      $4F49
    </value>
  </const>
  <const name="msoEncodingEBCDICArabic" type="Integer">
    <value>
      $4FC4
    </value>
  </const>
  <const name="msoEncodingEBCDICGreek" type="Integer">
    <value>
      $4FC7
    </value>
  </const>
  <const name="msoEncodingEBCDICHebrew" type="Integer">
    <value>
      $4FC8
    </value>
  </const>
  <const name="msoEncodingEBCDICKoreanExtended" type="Integer">
    <value>
      $5161
    </value>
  </const>
  <const name="msoEncodingEBCDICThai" type="Integer">
    <value>
      $5166
    </value>
  </const>
  <const name="msoEncodingEBCDICIcelandic" type="Integer">
    <value>
      $5187
    </value>
  </const>
  <const name="msoEncodingEBCDICTurkish" type="Integer">
    <value>
      $51A9
    </value>
  </const>
  <const name="msoEncodingEBCDICRussian" type="Integer">
    <value>
      $5190
    </value>
  </const>
  <const name="msoEncodingEBCDICSerbianBulgarian" type="Integer">
    <value>
      $5221
    </value>
  </const>
  <const name="msoEncodingEBCDICJapaneseKatakanaExtendedAndJapanese" type="Integer">
    <value>
      $C6F2
    </value>
  </const>
  <const name="msoEncodingEBCDICUSCanadaAndJapanese" type="Integer">
    <value>
      $C6F3
    </value>
  </const>
  <const name="msoEncodingEBCDICKoreanExtendedAndKorean" type="Integer">
    <value>
      $C6F5
    </value>
  </const>
  <const name="msoEncodingEBCDICSimplifiedChineseExtendedAndSimplifiedChinese" type="Integer">
    <value>
      $C6F7
    </value>
  </const>
  <const name="msoEncodingEBCDICUSCanadaAndTraditionalChinese" type="Integer">
    <value>
      $C6F9
    </value>
  </const>
  <const name="msoEncodingEBCDICJapaneseLatinExtendedAndJapanese" type="Integer">
    <value>
      $C6FB
    </value>
  </const>
  <const name="msoEncodingOEMUnitedStates" type="Integer">
    <value>
      $1B5
    </value>
  </const>
  <const name="msoEncodingOEMGreek437G" type="Integer">
    <value>
      $2E1
    </value>
  </const>
  <const name="msoEncodingOEMBaltic" type="Integer">
    <value>
      $307
    </value>
  </const>
  <const name="msoEncodingOEMMultilingualLatinI" type="Integer">
    <value>
      $352
    </value>
  </const>
  <const name="msoEncodingOEMMultilingualLatinII" type="Integer">
    <value>
      $354
    </value>
  </const>
  <const name="msoEncodingOEMCyrillic" type="Integer">
    <value>
      $357
    </value>
  </const>
  <const name="msoEncodingOEMTurkish" type="Integer">
    <value>
      $359
    </value>
  </const>
  <const name="msoEncodingOEMPortuguese" type="Integer">
    <value>
      $35C
    </value>
  </const>
  <const name="msoEncodingOEMIcelandic" type="Integer">
    <value>
      $35D
    </value>
  </const>
  <const name="msoEncodingOEMHebrew" type="Integer">
    <value>
      $35E
    </value>
  </const>
  <const name="msoEncodingOEMCanadianFrench" type="Integer">
    <value>
      $35F
    </value>
  </const>
  <const name="msoEncodingOEMArabic" type="Integer">
    <value>
      $360
    </value>
  </const>
  <const name="msoEncodingOEMNordic" type="Integer">
    <value>
      $361
    </value>
  </const>
  <const name="msoEncodingOEMCyrillicII" type="Integer">
    <value>
      $362
    </value>
  </const>
  <const name="msoEncodingOEMModernGreek" type="Integer">
    <value>
      $365
    </value>
  </const>
  <const name="msoEncodingEUCJapanese" type="Integer">
    <value>
      $CADC
    </value>
  </const>
  <const name="msoEncodingEUCChineseSimplifiedChinese" type="Integer">
    <value>
      $CAE0
    </value>
  </const>
  <const name="msoEncodingEUCKorean" type="Integer">
    <value>
      $CAED
    </value>
  </const>
  <const name="msoEncodingEUCTaiwaneseTraditionalChinese" type="Integer">
    <value>
      $CAEE
    </value>
  </const>
  <const name="msoEncodingISCIIDevanagari" type="Integer">
    <value>
      $DEAA
    </value>
  </const>
  <const name="msoEncodingISCIIBengali" type="Integer">
    <value>
      $DEAB
    </value>
  </const>
  <const name="msoEncodingISCIITamil" type="Integer">
    <value>
      $DEAC
    </value>
  </const>
  <const name="msoEncodingISCIITelugu" type="Integer">
    <value>
      $DEAD
    </value>
  </const>
  <const name="msoEncodingISCIIAssamese" type="Integer">
    <value>
      $DEAE
    </value>
  </const>
  <const name="msoEncodingISCIIOriya" type="Integer">
    <value>
      $DEAF
    </value>
  </const>
  <const name="msoEncodingISCIIKannada" type="Integer">
    <value>
      $DEB0
    </value>
  </const>
  <const name="msoEncodingISCIIMalayalam" type="Integer">
    <value>
      $DEB1
    </value>
  </const>
  <const name="msoEncodingISCIIGujarati" type="Integer">
    <value>
      $DEB2
    </value>
  </const>
  <const name="msoEncodingISCIIPunjabi" type="Integer">
    <value>
      $DEB3
    </value>
  </const>
  <const name="msoEncodingArabicASMO" type="Integer">
    <value>
      $2C4
    </value>
  </const>
  <const name="msoEncodingArabicTransparentASMO" type="Integer">
    <value>
      $2D0
    </value>
  </const>
  <const name="msoEncodingKoreanJohab" type="Integer">
    <value>
      $551
    </value>
  </const>
  <const name="msoEncodingTaiwanCNS" type="Integer">
    <value>
      $4E20
    </value>
  </const>
  <const name="msoEncodingTaiwanTCA" type="Integer">
    <value>
      $4E21
    </value>
  </const>
  <const name="msoEncodingTaiwanEten" type="Integer">
    <value>
      $4E22
    </value>
  </const>
  <const name="msoEncodingTaiwanIBM5550" type="Integer">
    <value>
      $4E23
    </value>
  </const>
  <const name="msoEncodingTaiwanTeleText" type="Integer">
    <value>
      $4E24
    </value>
  </const>
  <const name="msoEncodingTaiwanWang" type="Integer">
    <value>
      $4E25
    </value>
  </const>
  <const name="msoEncodingIA5IRV" type="Integer">
    <value>
      $4E89
    </value>
  </const>
  <const name="msoEncodingIA5German" type="Integer">
    <value>
      $4E8A
    </value>
  </const>
  <const name="msoEncodingIA5Swedish" type="Integer">
    <value>
      $4E8B
    </value>
  </const>
  <const name="msoEncodingIA5Norwegian" type="Integer">
    <value>
      $4E8C
    </value>
  </const>
  <const name="msoEncodingUSASCII" type="Integer">
    <value>
      $4E9F
    </value>
  </const>
  <const name="msoEncodingT61" type="Integer">
    <value>
      $4F25
    </value>
  </const>
  <const name="msoEncodingISO6937NonSpacingAccent" type="Integer">
    <value>
      $4F2D
    </value>
  </const>
  <const name="msoEncodingKOI8R" type="Integer">
    <value>
      $5182
    </value>
  </const>
  <const name="msoEncodingExtAlphaLowercase" type="Integer">
    <value>
      $5223
    </value>
  </const>
  <const name="msoEncodingKOI8U" type="Integer">
    <value>
      $556A
    </value>
  </const>
  <const name="msoEncodingEuropa3" type="Integer">
    <value>
      $7149
    </value>
  </const>
  <const name="msoEncodingHZGBSimplifiedChinese" type="Integer">
    <value>
      $CEC8
    </value>
  </const>
  <const name="msoEncodingUTF7" type="Integer">
    <value>
      $FDE8
    </value>
  </const>
  <const name="msoEncodingUTF8" type="Integer">
    <value>
      $FDE9
    </value>
  </const>
  <type name="MsoHTMLProjectOpen" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoHTMLProjectOpenSourceView" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoHTMLProjectOpenTextView" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoHTMLProjectState" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoHTMLProjectStateDocumentLocked" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoHTMLProjectStateProjectLocked" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoHTMLProjectStateDocumentProjectUnlocked" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoFileDialogType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoFileDialogOpen" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoFileDialogSaveAs" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoFileDialogFilePicker" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoFileDialogFolderPicker" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="MsoFileDialogView" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoFileDialogViewList" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoFileDialogViewDetails" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoFileDialogViewProperties" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoFileDialogViewPreview" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoFileDialogViewThumbnail" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoFileDialogViewLargeIcons" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoFileDialogViewSmallIcons" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoFileDialogViewWebView" type="Integer">
    <value>
      $8
    </value>
  </const>
  <type name="MsoAutomationSecurity" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoAutomationSecurityLow" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoAutomationSecurityByUI" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoAutomationSecurityForceDisable" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MailFormat" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="mfPlainText" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="mfHTML" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="mfRTF" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoAlertButtonType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoAlertButtonOK" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoAlertButtonOKCancel" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoAlertButtonAbortRetryIgnore" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoAlertButtonYesNoCancel" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoAlertButtonYesNo" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoAlertButtonRetryCancel" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoAlertButtonYesAllNoCancel" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="MsoAlertIconType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoAlertIconNoIcon" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoAlertIconCritical" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoAlertIconQuery" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoAlertIconWarning" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoAlertIconInfo" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="MsoAlertDefaultType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoAlertDefaultFirst" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoAlertDefaultSecond" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoAlertDefaultThird" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoAlertDefaultFourth" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoAlertDefaultFifth" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="MsoAlertCancelType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoAlertCancelDefault" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <const name="msoAlertCancelFirst" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoAlertCancelSecond" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoAlertCancelThird" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoAlertCancelFourth" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoAlertCancelFifth" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="MsoSearchIn" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoSearchInMyComputer" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoSearchInOutlook" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoSearchInMyNetworkPlaces" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoSearchInCustom" type="Integer">
    <value>
      $3
    </value>
  </const>
  <type name="MsoTargetBrowser" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoTargetBrowserV3" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoTargetBrowserV4" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoTargetBrowserIE4" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoTargetBrowserIE5" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoTargetBrowserIE6" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="MsoOrgChartOrientation" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoOrgChartOrientationMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoOrgChartOrientationVertical" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="MsoOrgChartLayoutType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoOrgChartLayoutMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoOrgChartLayoutStandard" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoOrgChartLayoutBothHanging" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoOrgChartLayoutLeftHanging" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoOrgChartLayoutRightHanging" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="MsoRelativeNodePosition" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoBeforeNode" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoAfterNode" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoBeforeFirstSibling" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoAfterLastSibling" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="MsoDiagramType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoDiagramMixed" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoDiagramOrgChart" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoDiagramCycle" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoDiagramRadial" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoDiagramPyramid" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoDiagramVenn" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoDiagramTarget" type="Integer">
    <value>
      $6
    </value>
  </const>
  <type name="MsoDiagramNodeType" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoDiagramNode" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoDiagramAssistant" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoMoveRow" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoMoveRowFirst" type="Integer">
    <value>
      $FFFFFFFC
    </value>
  </const>
  <const name="msoMoveRowPrev" type="Integer">
    <value>
      $FFFFFFFD
    </value>
  </const>
  <const name="msoMoveRowNext" type="Integer">
    <value>
      $FFFFFFFE
    </value>
  </const>
  <const name="msoMoveRowNbr" type="Integer">
    <value>
      $FFFFFFFF
    </value>
  </const>
  <type name="MsoFilterComparison" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoFilterComparisonEqual" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoFilterComparisonNotEqual" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoFilterComparisonLessThan" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoFilterComparisonGreaterThan" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoFilterComparisonLessThanEqual" type="Integer">
    <value>
      $4
    </value>
  </const>
  <const name="msoFilterComparisonGreaterThanEqual" type="Integer">
    <value>
      $5
    </value>
  </const>
  <const name="msoFilterComparisonIsBlank" type="Integer">
    <value>
      $6
    </value>
  </const>
  <const name="msoFilterComparisonIsNotBlank" type="Integer">
    <value>
      $7
    </value>
  </const>
  <const name="msoFilterComparisonContains" type="Integer">
    <value>
      $8
    </value>
  </const>
  <const name="msoFilterComparisonNotContains" type="Integer">
    <value>
      $9
    </value>
  </const>
  <type name="MsoFilterConjunction" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoFilterConjunctionAnd" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoFilterConjunctionOr" type="Integer">
    <value>
      $1
    </value>
  </const>
  <type name="MsoFileNewSection" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoOpenDocument" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoNew" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoNewfromExistingFile" type="Integer">
    <value>
      $2
    </value>
  </const>
  <const name="msoNewfromTemplate" type="Integer">
    <value>
      $3
    </value>
  </const>
  <const name="msoBottomSection" type="Integer">
    <value>
      $4
    </value>
  </const>
  <type name="MsoFileNewAction" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoEditFile" type="Integer">
    <value>
      $0
    </value>
  </const>
  <const name="msoCreateNewFile" type="Integer">
    <value>
      $1
    </value>
  </const>
  <const name="msoOpenFile" type="Integer">
    <value>
      $2
    </value>
  </const>
  <type name="MsoLanguageIDHidden" type="cardinal" loBound="0" hiBound="-1" file="Winapi.ActiveX.pas" line="1701" />
  <const name="msoLanguageIDChineseHongKong" type="Integer">
    <value>
      $C04
    </value>
  </const>
  <const name="msoLanguageIDChineseMacao" type="Integer">
    <value>
      $1404
    </value>
  </const>
  <const name="msoLanguageIDEnglishTrinidad" type="Integer">
    <value>
      $2C09
    </value>
  </const>
  <interface name="CommandBars" alias="OfficeXP._CommandBars" GUID="{000C0302-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_ActionControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <function name="Get_ActiveMenuBar" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBar" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="OleVariant" />
        <parameter name="Position" type="OleVariant" />
        <parameter name="MenuBar" type="OleVariant" />
        <parameter name="Temporary" type="OleVariant" />
        <retval type="CommandBar" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_DisplayTooltips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayTooltips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfDisplayTooltips" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_DisplayKeysInTooltips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayKeysInTooltips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfDisplayKeys" type="WordBool" />
      </parameters>
    </procedure>
    <function name="FindControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="OleVariant" />
        <parameter name="Id" type="OleVariant" />
        <parameter name="Tag" type="OleVariant" />
        <parameter name="Visible" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="CommandBar" />
      </parameters>
    </function>
    <function name="Get_LargeButtons" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_LargeButtons" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfLargeButtons" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MenuAnimationStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_MenuAnimationStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pma" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="ReleaseFocus" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_IdsString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ids" type="Integer" />
        <parameter name="pbstrName" type="WideString" paramflags="out" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_TmcGetName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="tmc" type="Integer" />
        <parameter name="pbstrName" type="WideString" paramflags="out" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_AdaptiveMenus" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AdaptiveMenus" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfAdaptiveMenus" type="WordBool" />
      </parameters>
    </procedure>
    <function name="FindControls" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="OleVariant" />
        <parameter name="Id" type="OleVariant" />
        <parameter name="Tag" type="OleVariant" />
        <parameter name="Visible" type="OleVariant" />
        <retval type="CommandBarControls" />
      </parameters>
    </function>
    <function name="AddEx" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="TbidOrName" type="OleVariant" />
        <parameter name="Position" type="OleVariant" />
        <parameter name="MenuBar" type="OleVariant" />
        <parameter name="Temporary" type="OleVariant" />
        <parameter name="TbtrProtection" type="OleVariant" />
        <retval type="CommandBar" />
      </parameters>
    </function>
    <function name="Get_DisplayFonts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayFonts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfDisplayFonts" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_DisableCustomize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisableCustomize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfDisableCustomize" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_DisableAskAQuestionDropdown" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisableAskAQuestionDropdown" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfDisableAskAQuestionDropdown" type="WordBool" />
      </parameters>
    </procedure>
    <property name="ActionControl" visibility="public" read="Get_ActionControl" type="CommandBarControl" />
    <property name="ActiveMenuBar" visibility="public" read="Get_ActiveMenuBar" type="CommandBar" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="DisplayTooltips" visibility="public" read="Get_DisplayTooltips" type="WordBool" />
    <property name="DisplayKeysInTooltips" visibility="public" read="Get_DisplayKeysInTooltips" type="WordBool" />
    <property name="Item[Index]" visibility="public" read="Get_Item" type="CommandBar" />
    <property name="LargeButtons" visibility="public" read="Get_LargeButtons" type="WordBool" />
    <property name="MenuAnimationStyle" visibility="public" read="Get_MenuAnimationStyle" type="TOleEnum" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="IdsString[ids][pbstrName]" visibility="public" read="Get_IdsString" type="Integer" />
    <property name="TmcGetName[tmc][pbstrName]" visibility="public" read="Get_TmcGetName" type="Integer" />
    <property name="AdaptiveMenus" visibility="public" read="Get_AdaptiveMenus" type="WordBool" />
    <property name="DisplayFonts" visibility="public" read="Get_DisplayFonts" type="WordBool" />
    <property name="DisableCustomize" visibility="public" read="Get_DisableCustomize" type="WordBool" />
    <property name="DisableAskAQuestionDropdown" visibility="public" read="Get_DisableAskAQuestionDropdown" type="WordBool" />
  </interface>
  <interface name="CommandBarComboBox" alias="OfficeXP._CommandBarComboBox" GUID="{000C030C-0000-0000-C000-000000000046}" ancestor="CommandBarControl">
    <procedure name="AddItem" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Text" type="WideString" paramflags="const" />
        <parameter name="Index" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="Clear" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_DropDownLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_DropDownLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pcLines" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_DropDownWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_DropDownWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdx" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_List" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_List" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="pbstrItem" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ListCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_ListHeaderCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_ListHeaderCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pcItems" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_ListIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_ListIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pi" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="RemoveItem" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pstyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrText" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="DropDownLines" visibility="public" read="Get_DropDownLines" type="Integer" />
    <property name="DropDownWidth" visibility="public" read="Get_DropDownWidth" type="Integer" />
    <property name="List[Index]" visibility="public" read="Get_List" type="WideString" />
    <property name="ListCount" visibility="public" read="Get_ListCount" type="Integer" />
    <property name="ListHeaderCount" visibility="public" read="Get_ListHeaderCount" type="Integer" />
    <property name="ListIndex" visibility="public" read="Get_ListIndex" type="Integer" />
    <property name="Style" visibility="public" read="Get_Style" type="TOleEnum" />
    <property name="Text" visibility="public" read="Get_Text" type="WideString" default="0" />
  </interface>
  <interface name="CommandBarButton" alias="OfficeXP._CommandBarButton" GUID="{000C030E-0000-0000-C000-000000000046}" ancestor="CommandBarControl">
    <function name="Get_BuiltInFace" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_BuiltInFace" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfBuiltIn" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="CopyFace" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_FaceId" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_FaceId" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pid" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="PasteFace" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_ShortcutText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ShortcutText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrText" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_State" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_State" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pstate" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pstyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_HyperlinkType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_HyperlinkType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="phlType" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Picture" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IPictureDisp" />
      </parameters>
    </function>
    <procedure name="Set_Picture" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ppdispPicture" type="IPictureDisp" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Mask" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IPictureDisp" />
      </parameters>
    </function>
    <procedure name="Set_Mask" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ppipictdispMask" type="IPictureDisp" paramflags="const" />
      </parameters>
    </procedure>
    <property name="BuiltInFace" visibility="public" read="Get_BuiltInFace" type="WordBool" />
    <property name="FaceId" visibility="public" read="Get_FaceId" type="Integer" />
    <property name="ShortcutText" visibility="public" read="Get_ShortcutText" type="WideString" default="0" />
    <property name="State" visibility="public" read="Get_State" type="TOleEnum" />
    <property name="Style" visibility="public" read="Get_Style" type="TOleEnum" />
    <property name="HyperlinkType" visibility="public" read="Get_HyperlinkType" type="TOleEnum" />
    <property name="Picture" visibility="public" read="Get_Picture" type="IPictureDisp" />
    <property name="Mask" visibility="public" read="Get_Mask" type="IPictureDisp" />
  </interface>
  <interface name="MsoEnvelope" alias="OfficeXP.IMsoEnvelopeVB" GUID="{000672AC-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Introduction" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Introduction" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrIntro" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_CommandBars" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <property name="Introduction" visibility="public" read="Get_Introduction" write="Set_Introduction" type="WideString" default="0" />
    <property name="Item" visibility="public" read="Get_Item" type="IDispatch" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="CommandBars" visibility="public" read="Get_CommandBars" type="IDispatch" />
  </interface>
  <pointer name="POleVariant1" type="OleVariant" indircnt="1" />
  <pointer name="PUserType1" type="TGUID" indircnt="1" />
  <pointer name="PShortint1" type="ShortInt" indircnt="1" />
  <pointer name="PPShortint1" type="PShortint1" indircnt="1" />
  <pointer name="PUserType2" type="TGUID" indircnt="1" />
  <type name="MsoRGBType" type="integer" loBound="-2147483648" hiBound="2147483647" file="System.pas" line="12" />
  <interface name="IAccessible" GUID="{618736E0-3C3D-11CF-810C-00AA00389B71}" ancestor="IDispatch">
    <function name="Get_accParent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_accChildCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_accChild" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_accName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_accValue" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_accDescription" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_accRole" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_accState" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_accHelp" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_accHelpTopic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pszHelpFile" type="WideString" paramflags="out" />
        <parameter name="varChild" type="OleVariant" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_accKeyboardShortcut" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_accFocus" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_accSelection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_accDefaultAction" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="accSelect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="flagsSelect" type="Integer" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="accLocation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pxLeft" type="Integer" paramflags="out" />
        <parameter name="pyTop" type="Integer" paramflags="out" />
        <parameter name="pcxWidth" type="Integer" paramflags="out" />
        <parameter name="pcyHeight" type="Integer" paramflags="out" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="accNavigate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="navDir" type="Integer" />
        <parameter name="varStart" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="accHitTest" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="accDoDefaultAction" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="Set_accName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <parameter name="pszName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_accValue" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
        <parameter name="pszValue" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="accParent" visibility="public" read="Get_accParent" type="IDispatch" />
    <property name="accChildCount" visibility="public" read="Get_accChildCount" type="Integer" />
    <property name="accChild[varChild]" visibility="public" read="Get_accChild" type="IDispatch" />
    <property name="accName[varChild]" visibility="public" read="Get_accName" write="Set_accName" type="WideString" />
    <property name="accValue[varChild]" visibility="public" read="Get_accValue" write="Set_accValue" type="WideString" />
    <property name="accDescription[varChild]" visibility="public" read="Get_accDescription" type="WideString" />
    <property name="accRole[varChild]" visibility="public" read="Get_accRole" type="OleVariant" />
    <property name="accState[varChild]" visibility="public" read="Get_accState" type="OleVariant" />
    <property name="accHelp[varChild]" visibility="public" read="Get_accHelp" type="WideString" />
    <property name="accHelpTopic[pszHelpFile][varChild]" visibility="public" read="Get_accHelpTopic" type="Integer" />
    <property name="accKeyboardShortcut[varChild]" visibility="public" read="Get_accKeyboardShortcut" type="WideString" />
    <property name="accFocus" visibility="public" read="Get_accFocus" type="OleVariant" default="0" />
    <property name="accSelection" visibility="public" read="Get_accSelection" type="OleVariant" default="0" />
    <property name="accDefaultAction[varChild]" visibility="public" read="Get_accDefaultAction" type="WideString" />
  </interface>
  <interface name="IAccessibleDisp" GUID="{618736E0-3C3D-11CF-810C-00AA00389B71}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="accParent" visibility="automated" type="IDispatch" />
    <property name="accChildCount" visibility="automated" type="Integer" />
    <property name="accChild[varChild]" visibility="automated" type="IDispatch" />
    <property name="accName[varChild]" visibility="automated" type="WideString" />
    <property name="accValue[varChild]" visibility="automated" type="WideString" />
    <property name="accDescription[varChild]" visibility="automated" type="WideString" />
    <property name="accRole[varChild]" visibility="automated" type="OleVariant" />
    <property name="accState[varChild]" visibility="automated" type="OleVariant" />
    <property name="accHelp[varChild]" visibility="automated" type="WideString" />
    <property name="accHelpTopic[pszHelpFile][varChild]" visibility="automated" type="Integer" />
    <property name="accKeyboardShortcut[varChild]" visibility="automated" type="WideString" />
    <property name="accFocus" visibility="automated" type="OleVariant" />
    <property name="accSelection" visibility="automated" type="OleVariant" />
    <property name="accDefaultAction[varChild]" visibility="automated" type="WideString" />
    <procedure name="accSelect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="flagsSelect" type="Integer" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="accLocation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="pxLeft" type="Integer" paramflags="out" />
        <parameter name="pyTop" type="Integer" paramflags="out" />
        <parameter name="pcxWidth" type="Integer" paramflags="out" />
        <parameter name="pcyHeight" type="Integer" paramflags="out" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="accNavigate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="navDir" type="Integer" />
        <parameter name="varStart" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="accHitTest" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="accDoDefaultAction" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
  </interface>
  <interface name="_IMsoDispObj" GUID="{000C0300-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="IDispatch" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
  </interface>
  <interface name="_IMsoDispObjDisp" GUID="{000C0300-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="_IMsoOleAccDispObj" GUID="{000C0301-0000-0000-C000-000000000046}" ancestor="IAccessible">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <property name="Application" visibility="public" read="Get_Application" type="IDispatch" />
    <property name="Creator" visibility="public" read="Get_Creator" type="Integer" />
  </interface>
  <interface name="_IMsoOleAccDispObjDisp" GUID="{000C0301-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="accParent" visibility="automated" type="IDispatch" />
    <property name="accChildCount" visibility="automated" type="Integer" />
    <property name="accChild[varChild]" visibility="automated" type="IDispatch" />
    <property name="accName[varChild]" visibility="automated" type="WideString" />
    <property name="accValue[varChild]" visibility="automated" type="WideString" />
    <property name="accDescription[varChild]" visibility="automated" type="WideString" />
    <property name="accRole[varChild]" visibility="automated" type="OleVariant" />
    <property name="accState[varChild]" visibility="automated" type="OleVariant" />
    <property name="accHelp[varChild]" visibility="automated" type="WideString" />
    <property name="accHelpTopic[pszHelpFile][varChild]" visibility="automated" type="Integer" />
    <property name="accKeyboardShortcut[varChild]" visibility="automated" type="WideString" />
    <property name="accFocus" visibility="automated" type="OleVariant" />
    <property name="accSelection" visibility="automated" type="OleVariant" />
    <property name="accDefaultAction[varChild]" visibility="automated" type="WideString" />
    <procedure name="accSelect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="flagsSelect" type="Integer" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="accLocation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="pxLeft" type="Integer" paramflags="out" />
        <parameter name="pyTop" type="Integer" paramflags="out" />
        <parameter name="pcxWidth" type="Integer" paramflags="out" />
        <parameter name="pcyHeight" type="Integer" paramflags="out" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="accNavigate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="navDir" type="Integer" />
        <parameter name="varStart" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="accHitTest" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="accDoDefaultAction" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
  </interface>
  <interface name="_CommandBars" GUID="{000C0302-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_ActionControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <function name="Get_ActiveMenuBar" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBar" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="OleVariant" />
        <parameter name="Position" type="OleVariant" />
        <parameter name="MenuBar" type="OleVariant" />
        <parameter name="Temporary" type="OleVariant" />
        <retval type="CommandBar" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_DisplayTooltips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayTooltips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfDisplayTooltips" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_DisplayKeysInTooltips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayKeysInTooltips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfDisplayKeys" type="WordBool" />
      </parameters>
    </procedure>
    <function name="FindControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="OleVariant" />
        <parameter name="Id" type="OleVariant" />
        <parameter name="Tag" type="OleVariant" />
        <parameter name="Visible" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="CommandBar" />
      </parameters>
    </function>
    <function name="Get_LargeButtons" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_LargeButtons" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfLargeButtons" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MenuAnimationStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_MenuAnimationStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pma" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="ReleaseFocus" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_IdsString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ids" type="Integer" />
        <parameter name="pbstrName" type="WideString" paramflags="out" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_TmcGetName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="tmc" type="Integer" />
        <parameter name="pbstrName" type="WideString" paramflags="out" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_AdaptiveMenus" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AdaptiveMenus" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfAdaptiveMenus" type="WordBool" />
      </parameters>
    </procedure>
    <function name="FindControls" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="OleVariant" />
        <parameter name="Id" type="OleVariant" />
        <parameter name="Tag" type="OleVariant" />
        <parameter name="Visible" type="OleVariant" />
        <retval type="CommandBarControls" />
      </parameters>
    </function>
    <function name="AddEx" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="TbidOrName" type="OleVariant" />
        <parameter name="Position" type="OleVariant" />
        <parameter name="MenuBar" type="OleVariant" />
        <parameter name="Temporary" type="OleVariant" />
        <parameter name="TbtrProtection" type="OleVariant" />
        <retval type="CommandBar" />
      </parameters>
    </function>
    <function name="Get_DisplayFonts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisplayFonts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfDisplayFonts" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_DisableCustomize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisableCustomize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfDisableCustomize" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_DisableAskAQuestionDropdown" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_DisableAskAQuestionDropdown" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfDisableAskAQuestionDropdown" type="WordBool" />
      </parameters>
    </procedure>
    <property name="ActionControl" visibility="public" read="Get_ActionControl" type="CommandBarControl" />
    <property name="ActiveMenuBar" visibility="public" read="Get_ActiveMenuBar" type="CommandBar" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="DisplayTooltips" visibility="public" read="Get_DisplayTooltips" type="WordBool" />
    <property name="DisplayKeysInTooltips" visibility="public" read="Get_DisplayKeysInTooltips" type="WordBool" />
    <property name="Item[Index]" visibility="public" read="Get_Item" type="CommandBar" />
    <property name="LargeButtons" visibility="public" read="Get_LargeButtons" type="WordBool" />
    <property name="MenuAnimationStyle" visibility="public" read="Get_MenuAnimationStyle" type="TOleEnum" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="IdsString[ids][pbstrName]" visibility="public" read="Get_IdsString" type="Integer" />
    <property name="TmcGetName[tmc][pbstrName]" visibility="public" read="Get_TmcGetName" type="Integer" />
    <property name="AdaptiveMenus" visibility="public" read="Get_AdaptiveMenus" type="WordBool" />
    <property name="DisplayFonts" visibility="public" read="Get_DisplayFonts" type="WordBool" />
    <property name="DisableCustomize" visibility="public" read="Get_DisableCustomize" type="WordBool" />
    <property name="DisableAskAQuestionDropdown" visibility="public" read="Get_DisableAskAQuestionDropdown" type="WordBool" />
  </interface>
  <interface name="_CommandBarsDisp" GUID="{000C0302-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="ActionControl" visibility="automated" type="CommandBarControl" />
    <property name="ActiveMenuBar" visibility="automated" type="CommandBar" />
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="OleVariant" />
        <parameter name="Position" type="OleVariant" />
        <parameter name="MenuBar" type="OleVariant" />
        <parameter name="Temporary" type="OleVariant" />
        <retval type="CommandBar" />
      </parameters>
    </function>
    <property name="Count" visibility="automated" type="Integer" />
    <property name="DisplayTooltips" visibility="automated" type="WordBool" />
    <property name="DisplayKeysInTooltips" visibility="automated" type="WordBool" />
    <function name="FindControl" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="OleVariant" />
        <parameter name="Id" type="OleVariant" />
        <parameter name="Tag" type="OleVariant" />
        <parameter name="Visible" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <property name="Item[Index]" visibility="automated" type="CommandBar" />
    <property name="LargeButtons" visibility="automated" type="WordBool" />
    <property name="MenuAnimationStyle" visibility="automated" type="TOleEnum" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="ReleaseFocus" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="IdsString[ids][pbstrName]" visibility="automated" type="Integer" />
    <property name="TmcGetName[tmc][pbstrName]" visibility="automated" type="Integer" />
    <property name="AdaptiveMenus" visibility="automated" type="WordBool" />
    <function name="FindControls" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="OleVariant" />
        <parameter name="Id" type="OleVariant" />
        <parameter name="Tag" type="OleVariant" />
        <parameter name="Visible" type="OleVariant" />
        <retval type="CommandBarControls" />
      </parameters>
    </function>
    <function name="AddEx" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="TbidOrName" type="OleVariant" />
        <parameter name="Position" type="OleVariant" />
        <parameter name="MenuBar" type="OleVariant" />
        <parameter name="Temporary" type="OleVariant" />
        <parameter name="TbtrProtection" type="OleVariant" />
        <retval type="CommandBar" />
      </parameters>
    </function>
    <property name="DisplayFonts" visibility="automated" type="WordBool" />
    <property name="DisableCustomize" visibility="automated" type="WordBool" />
    <property name="DisableAskAQuestionDropdown" visibility="automated" type="WordBool" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="CommandBar" GUID="{000C0304-0000-0000-C000-000000000046}" ancestor="_IMsoOleAccDispObj">
    <function name="Get_BuiltIn" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Context" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Context" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrContext" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Controls" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBarControls" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_Enabled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Enabled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfEnabled" type="WordBool" />
      </parameters>
    </procedure>
    <function name="FindControl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="OleVariant" />
        <parameter name="Id" type="OleVariant" />
        <parameter name="Tag" type="OleVariant" />
        <parameter name="Visible" type="OleVariant" />
        <parameter name="Recursive" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdy" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_InstanceId" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pxpLeft" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_NameLocal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_NameLocal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrNameLocal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Position" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Position" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ppos" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_RowIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_RowIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="piRow" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Protection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Protection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pprot" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Reset" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ShowPopup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="x" type="OleVariant" />
        <parameter name="y" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="Get_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pypTop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfVisible" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdx" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_AdaptiveMenu" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AdaptiveMenu" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfAdaptiveMenu" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Id" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <property name="BuiltIn" visibility="public" read="Get_BuiltIn" type="WordBool" />
    <property name="Context" visibility="public" read="Get_Context" type="WideString" default="0" />
    <property name="Controls" visibility="public" read="Get_Controls" type="CommandBarControls" />
    <property name="Enabled" visibility="public" read="Get_Enabled" type="WordBool" />
    <property name="Height" visibility="public" read="Get_Height" type="Integer" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="InstanceId" visibility="public" read="Get_InstanceId" type="Integer" />
    <property name="Left" visibility="public" read="Get_Left" type="Integer" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="NameLocal" visibility="public" read="Get_NameLocal" type="WideString" default="0" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Position" visibility="public" read="Get_Position" type="TOleEnum" />
    <property name="RowIndex" visibility="public" read="Get_RowIndex" type="Integer" />
    <property name="Protection" visibility="public" read="Get_Protection" type="TOleEnum" />
    <property name="Top" visibility="public" read="Get_Top" type="Integer" />
    <property name="Type_" visibility="public" read="Get_Type_" type="TOleEnum" />
    <property name="Visible" visibility="public" read="Get_Visible" type="WordBool" />
    <property name="Width" visibility="public" read="Get_Width" type="Integer" />
    <property name="AdaptiveMenu" visibility="public" read="Get_AdaptiveMenu" type="WordBool" />
    <property name="Id" visibility="public" read="Get_Id" type="Integer" />
  </interface>
  <interface name="CommandBarDisp" GUID="{000C0304-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="BuiltIn" visibility="automated" type="WordBool" />
    <property name="Context" visibility="automated" type="WideString" />
    <property name="Controls" visibility="automated" type="CommandBarControls" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Enabled" visibility="automated" type="WordBool" />
    <function name="FindControl" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="OleVariant" />
        <parameter name="Id" type="OleVariant" />
        <parameter name="Tag" type="OleVariant" />
        <parameter name="Visible" type="OleVariant" />
        <parameter name="Recursive" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <property name="Height" visibility="automated" type="Integer" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="InstanceId" visibility="automated" type="Integer" />
    <property name="Left" visibility="automated" type="Integer" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="NameLocal" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Position" visibility="automated" type="TOleEnum" />
    <property name="RowIndex" visibility="automated" type="Integer" />
    <property name="Protection" visibility="automated" type="TOleEnum" />
    <procedure name="Reset" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ShowPopup" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="x" type="OleVariant" />
        <parameter name="y" type="OleVariant" />
      </parameters>
    </procedure>
    <property name="Top" visibility="automated" type="Integer" />
    <property name="Type_" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="WordBool" />
    <property name="Width" visibility="automated" type="Integer" />
    <property name="AdaptiveMenu" visibility="automated" type="WordBool" />
    <property name="Id" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="accParent" visibility="automated" type="IDispatch" />
    <property name="accChildCount" visibility="automated" type="Integer" />
    <property name="accChild[varChild]" visibility="automated" type="IDispatch" />
    <property name="accName[varChild]" visibility="automated" type="WideString" />
    <property name="accValue[varChild]" visibility="automated" type="WideString" />
    <property name="accDescription[varChild]" visibility="automated" type="WideString" />
    <property name="accRole[varChild]" visibility="automated" type="OleVariant" />
    <property name="accState[varChild]" visibility="automated" type="OleVariant" />
    <property name="accHelp[varChild]" visibility="automated" type="WideString" />
    <property name="accHelpTopic[pszHelpFile][varChild]" visibility="automated" type="Integer" />
    <property name="accKeyboardShortcut[varChild]" visibility="automated" type="WideString" />
    <property name="accFocus" visibility="automated" type="OleVariant" />
    <property name="accSelection" visibility="automated" type="OleVariant" />
    <property name="accDefaultAction[varChild]" visibility="automated" type="WideString" />
    <procedure name="accSelect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="flagsSelect" type="Integer" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="accLocation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="pxLeft" type="Integer" paramflags="out" />
        <parameter name="pyTop" type="Integer" paramflags="out" />
        <parameter name="pcxWidth" type="Integer" paramflags="out" />
        <parameter name="pcyHeight" type="Integer" paramflags="out" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="accNavigate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="navDir" type="Integer" />
        <parameter name="varStart" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="accHitTest" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="accDoDefaultAction" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
  </interface>
  <interface name="CommandBarControls" GUID="{000C0306-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="OleVariant" />
        <parameter name="Id" type="OleVariant" />
        <parameter name="Parameter" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <parameter name="Temporary" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBar" />
      </parameters>
    </function>
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Item[Index]" visibility="public" read="Get_Item" type="CommandBarControl" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Parent" visibility="public" read="Get_Parent" type="CommandBar" />
  </interface>
  <interface name="CommandBarControlsDisp" GUID="{000C0306-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="OleVariant" />
        <parameter name="Id" type="OleVariant" />
        <parameter name="Parameter" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <parameter name="Temporary" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Item[Index]" visibility="automated" type="CommandBarControl" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Parent" visibility="automated" type="CommandBar" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="CommandBarControl" GUID="{000C0308-0000-0000-C000-000000000046}" ancestor="_IMsoOleAccDispObj">
    <function name="Get_BeginGroup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_BeginGroup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfBeginGroup" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_BuiltIn" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Caption" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Caption" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrCaption" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Control" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Copy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Temporary" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="Get_DescriptionText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_DescriptionText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrText" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Enabled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Enabled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfEnabled" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Execute" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdy" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_HelpContextId" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_HelpContextId" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pid" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_HelpFile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_HelpFile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrFilename" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Id" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_InstanceId" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Move" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <function name="Get_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_OLEUsage" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_OLEUsage" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pcou" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_OnAction" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_OnAction" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrOnAction" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBar" />
      </parameters>
    </function>
    <function name="Get_Parameter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Parameter" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrParam" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Priority" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Priority" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pnPri" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Reset" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SetFocus" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_Tag" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Tag" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrTag" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_TooltipText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_TooltipText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrTooltip" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfVisible" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdx" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_IsPriorityDropped" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Reserved1" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reserved2" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reserved3" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reserved4" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reserved5" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reserved6" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Reserved7" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="BeginGroup" visibility="public" read="Get_BeginGroup" type="WordBool" />
    <property name="BuiltIn" visibility="public" read="Get_BuiltIn" type="WordBool" />
    <property name="Caption" visibility="public" read="Get_Caption" type="WideString" default="0" />
    <property name="Control" visibility="public" read="Get_Control" type="IDispatch" />
    <property name="DescriptionText" visibility="public" read="Get_DescriptionText" type="WideString" default="0" />
    <property name="Enabled" visibility="public" read="Get_Enabled" type="WordBool" />
    <property name="Height" visibility="public" read="Get_Height" type="Integer" />
    <property name="HelpContextId" visibility="public" read="Get_HelpContextId" type="Integer" />
    <property name="HelpFile" visibility="public" read="Get_HelpFile" type="WideString" default="0" />
    <property name="Id" visibility="public" read="Get_Id" type="Integer" />
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="InstanceId" visibility="public" read="Get_InstanceId" type="Integer" />
    <property name="Left" visibility="public" read="Get_Left" type="Integer" />
    <property name="OLEUsage" visibility="public" read="Get_OLEUsage" type="TOleEnum" />
    <property name="OnAction" visibility="public" read="Get_OnAction" type="WideString" default="0" />
    <property name="Parent" visibility="public" read="Get_Parent" type="CommandBar" />
    <property name="Parameter" visibility="public" read="Get_Parameter" type="WideString" default="0" />
    <property name="Priority" visibility="public" read="Get_Priority" type="Integer" />
    <property name="Tag" visibility="public" read="Get_Tag" type="WideString" default="0" />
    <property name="TooltipText" visibility="public" read="Get_TooltipText" type="WideString" default="0" />
    <property name="Top" visibility="public" read="Get_Top" type="Integer" />
    <property name="Type_" visibility="public" read="Get_Type_" type="TOleEnum" />
    <property name="Visible" visibility="public" read="Get_Visible" type="WordBool" />
    <property name="Width" visibility="public" read="Get_Width" type="Integer" />
    <property name="IsPriorityDropped" visibility="public" read="Get_IsPriorityDropped" type="WordBool" />
  </interface>
  <interface name="CommandBarControlDisp" GUID="{000C0308-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="BeginGroup" visibility="automated" type="WordBool" />
    <property name="BuiltIn" visibility="automated" type="WordBool" />
    <property name="Caption" visibility="automated" type="WideString" />
    <property name="Control" visibility="automated" type="IDispatch" />
    <function name="Copy" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Temporary" type="OleVariant" />
      </parameters>
    </procedure>
    <property name="DescriptionText" visibility="automated" type="WideString" />
    <property name="Enabled" visibility="automated" type="WordBool" />
    <procedure name="Execute" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Height" visibility="automated" type="Integer" />
    <property name="HelpContextId" visibility="automated" type="Integer" />
    <property name="HelpFile" visibility="automated" type="WideString" />
    <property name="Id" visibility="automated" type="Integer" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="InstanceId" visibility="automated" type="Integer" />
    <function name="Move" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <property name="Left" visibility="automated" type="Integer" />
    <property name="OLEUsage" visibility="automated" type="TOleEnum" />
    <property name="OnAction" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="CommandBar" />
    <property name="Parameter" visibility="automated" type="WideString" />
    <property name="Priority" visibility="automated" type="Integer" />
    <procedure name="Reset" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetFocus" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Tag" visibility="automated" type="WideString" />
    <property name="TooltipText" visibility="automated" type="WideString" />
    <property name="Top" visibility="automated" type="Integer" />
    <property name="Type_" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="WordBool" />
    <property name="Width" visibility="automated" type="Integer" />
    <property name="IsPriorityDropped" visibility="automated" type="WordBool" />
    <procedure name="Reserved1" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved2" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved3" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved4" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved5" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved6" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved7" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="accParent" visibility="automated" type="IDispatch" />
    <property name="accChildCount" visibility="automated" type="Integer" />
    <property name="accChild[varChild]" visibility="automated" type="IDispatch" />
    <property name="accName[varChild]" visibility="automated" type="WideString" />
    <property name="accValue[varChild]" visibility="automated" type="WideString" />
    <property name="accDescription[varChild]" visibility="automated" type="WideString" />
    <property name="accRole[varChild]" visibility="automated" type="OleVariant" />
    <property name="accState[varChild]" visibility="automated" type="OleVariant" />
    <property name="accHelp[varChild]" visibility="automated" type="WideString" />
    <property name="accHelpTopic[pszHelpFile][varChild]" visibility="automated" type="Integer" />
    <property name="accKeyboardShortcut[varChild]" visibility="automated" type="WideString" />
    <property name="accFocus" visibility="automated" type="OleVariant" />
    <property name="accSelection" visibility="automated" type="OleVariant" />
    <property name="accDefaultAction[varChild]" visibility="automated" type="WideString" />
    <procedure name="accSelect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="flagsSelect" type="Integer" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="accLocation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="pxLeft" type="Integer" paramflags="out" />
        <parameter name="pyTop" type="Integer" paramflags="out" />
        <parameter name="pcxWidth" type="Integer" paramflags="out" />
        <parameter name="pcyHeight" type="Integer" paramflags="out" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="accNavigate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="navDir" type="Integer" />
        <parameter name="varStart" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="accHitTest" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="accDoDefaultAction" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
  </interface>
  <interface name="_CommandBarButton" GUID="{000C030E-0000-0000-C000-000000000046}" ancestor="CommandBarControl">
    <function name="Get_BuiltInFace" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_BuiltInFace" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfBuiltIn" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="CopyFace" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_FaceId" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_FaceId" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pid" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="PasteFace" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_ShortcutText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ShortcutText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrText" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_State" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_State" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pstate" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pstyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_HyperlinkType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_HyperlinkType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="phlType" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Picture" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IPictureDisp" />
      </parameters>
    </function>
    <procedure name="Set_Picture" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ppdispPicture" type="IPictureDisp" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Mask" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IPictureDisp" />
      </parameters>
    </function>
    <procedure name="Set_Mask" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ppipictdispMask" type="IPictureDisp" paramflags="const" />
      </parameters>
    </procedure>
    <property name="BuiltInFace" visibility="public" read="Get_BuiltInFace" type="WordBool" />
    <property name="FaceId" visibility="public" read="Get_FaceId" type="Integer" />
    <property name="ShortcutText" visibility="public" read="Get_ShortcutText" type="WideString" default="0" />
    <property name="State" visibility="public" read="Get_State" type="TOleEnum" />
    <property name="Style" visibility="public" read="Get_Style" type="TOleEnum" />
    <property name="HyperlinkType" visibility="public" read="Get_HyperlinkType" type="TOleEnum" />
    <property name="Picture" visibility="public" read="Get_Picture" type="IPictureDisp" />
    <property name="Mask" visibility="public" read="Get_Mask" type="IPictureDisp" />
  </interface>
  <interface name="_CommandBarButtonDisp" GUID="{000C030E-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="BuiltInFace" visibility="automated" type="WordBool" />
    <procedure name="CopyFace" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="FaceId" visibility="automated" type="Integer" />
    <procedure name="PasteFace" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="ShortcutText" visibility="automated" type="WideString" />
    <property name="State" visibility="automated" type="TOleEnum" />
    <property name="Style" visibility="automated" type="TOleEnum" />
    <property name="HyperlinkType" visibility="automated" type="TOleEnum" />
    <property name="Picture" visibility="automated" type="IPictureDisp" />
    <property name="Mask" visibility="automated" type="IPictureDisp" />
    <property name="BeginGroup" visibility="automated" type="WordBool" />
    <property name="BuiltIn" visibility="automated" type="WordBool" />
    <property name="Caption" visibility="automated" type="WideString" />
    <property name="Control" visibility="automated" type="IDispatch" />
    <function name="Copy" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Temporary" type="OleVariant" />
      </parameters>
    </procedure>
    <property name="DescriptionText" visibility="automated" type="WideString" />
    <property name="Enabled" visibility="automated" type="WordBool" />
    <procedure name="Execute" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Height" visibility="automated" type="Integer" />
    <property name="HelpContextId" visibility="automated" type="Integer" />
    <property name="HelpFile" visibility="automated" type="WideString" />
    <property name="Id" visibility="automated" type="Integer" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="InstanceId" visibility="automated" type="Integer" />
    <function name="Move" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <property name="Left" visibility="automated" type="Integer" />
    <property name="OLEUsage" visibility="automated" type="TOleEnum" />
    <property name="OnAction" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="CommandBar" />
    <property name="Parameter" visibility="automated" type="WideString" />
    <property name="Priority" visibility="automated" type="Integer" />
    <procedure name="Reset" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetFocus" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Tag" visibility="automated" type="WideString" />
    <property name="TooltipText" visibility="automated" type="WideString" />
    <property name="Top" visibility="automated" type="Integer" />
    <property name="Type_" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="WordBool" />
    <property name="Width" visibility="automated" type="Integer" />
    <property name="IsPriorityDropped" visibility="automated" type="WordBool" />
    <procedure name="Reserved1" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved2" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved3" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved4" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved5" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved6" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved7" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="accParent" visibility="automated" type="IDispatch" />
    <property name="accChildCount" visibility="automated" type="Integer" />
    <property name="accChild[varChild]" visibility="automated" type="IDispatch" />
    <property name="accName[varChild]" visibility="automated" type="WideString" />
    <property name="accValue[varChild]" visibility="automated" type="WideString" />
    <property name="accDescription[varChild]" visibility="automated" type="WideString" />
    <property name="accRole[varChild]" visibility="automated" type="OleVariant" />
    <property name="accState[varChild]" visibility="automated" type="OleVariant" />
    <property name="accHelp[varChild]" visibility="automated" type="WideString" />
    <property name="accHelpTopic[pszHelpFile][varChild]" visibility="automated" type="Integer" />
    <property name="accKeyboardShortcut[varChild]" visibility="automated" type="WideString" />
    <property name="accFocus" visibility="automated" type="OleVariant" />
    <property name="accSelection" visibility="automated" type="OleVariant" />
    <property name="accDefaultAction[varChild]" visibility="automated" type="WideString" />
    <procedure name="accSelect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="flagsSelect" type="Integer" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="accLocation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="pxLeft" type="Integer" paramflags="out" />
        <parameter name="pyTop" type="Integer" paramflags="out" />
        <parameter name="pcxWidth" type="Integer" paramflags="out" />
        <parameter name="pcyHeight" type="Integer" paramflags="out" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="accNavigate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="navDir" type="Integer" />
        <parameter name="varStart" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="accHitTest" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="accDoDefaultAction" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
  </interface>
  <interface name="CommandBarPopup" GUID="{000C030A-0000-0000-C000-000000000046}" ancestor="CommandBarControl">
    <function name="Get_CommandBar" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBar" />
      </parameters>
    </function>
    <function name="Get_Controls" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CommandBarControls" />
      </parameters>
    </function>
    <function name="Get_OLEMenuGroup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_OLEMenuGroup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pomg" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="CommandBar" visibility="public" read="Get_CommandBar" type="CommandBar" />
    <property name="Controls" visibility="public" read="Get_Controls" type="CommandBarControls" />
    <property name="OLEMenuGroup" visibility="public" read="Get_OLEMenuGroup" type="TOleEnum" />
  </interface>
  <interface name="CommandBarPopupDisp" GUID="{000C030A-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="CommandBar" visibility="automated" type="CommandBar" />
    <property name="Controls" visibility="automated" type="CommandBarControls" />
    <property name="OLEMenuGroup" visibility="automated" type="TOleEnum" />
    <property name="BeginGroup" visibility="automated" type="WordBool" />
    <property name="BuiltIn" visibility="automated" type="WordBool" />
    <property name="Caption" visibility="automated" type="WideString" />
    <property name="Control" visibility="automated" type="IDispatch" />
    <function name="Copy" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Temporary" type="OleVariant" />
      </parameters>
    </procedure>
    <property name="DescriptionText" visibility="automated" type="WideString" />
    <property name="Enabled" visibility="automated" type="WordBool" />
    <procedure name="Execute" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Height" visibility="automated" type="Integer" />
    <property name="HelpContextId" visibility="automated" type="Integer" />
    <property name="HelpFile" visibility="automated" type="WideString" />
    <property name="Id" visibility="automated" type="Integer" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="InstanceId" visibility="automated" type="Integer" />
    <function name="Move" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <property name="Left" visibility="automated" type="Integer" />
    <property name="OLEUsage" visibility="automated" type="TOleEnum" />
    <property name="OnAction" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="CommandBar" />
    <property name="Parameter" visibility="automated" type="WideString" />
    <property name="Priority" visibility="automated" type="Integer" />
    <procedure name="Reset" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetFocus" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Tag" visibility="automated" type="WideString" />
    <property name="TooltipText" visibility="automated" type="WideString" />
    <property name="Top" visibility="automated" type="Integer" />
    <property name="Type_" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="WordBool" />
    <property name="Width" visibility="automated" type="Integer" />
    <property name="IsPriorityDropped" visibility="automated" type="WordBool" />
    <procedure name="Reserved1" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved2" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved3" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved4" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved5" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved6" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved7" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="accParent" visibility="automated" type="IDispatch" />
    <property name="accChildCount" visibility="automated" type="Integer" />
    <property name="accChild[varChild]" visibility="automated" type="IDispatch" />
    <property name="accName[varChild]" visibility="automated" type="WideString" />
    <property name="accValue[varChild]" visibility="automated" type="WideString" />
    <property name="accDescription[varChild]" visibility="automated" type="WideString" />
    <property name="accRole[varChild]" visibility="automated" type="OleVariant" />
    <property name="accState[varChild]" visibility="automated" type="OleVariant" />
    <property name="accHelp[varChild]" visibility="automated" type="WideString" />
    <property name="accHelpTopic[pszHelpFile][varChild]" visibility="automated" type="Integer" />
    <property name="accKeyboardShortcut[varChild]" visibility="automated" type="WideString" />
    <property name="accFocus" visibility="automated" type="OleVariant" />
    <property name="accSelection" visibility="automated" type="OleVariant" />
    <property name="accDefaultAction[varChild]" visibility="automated" type="WideString" />
    <procedure name="accSelect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="flagsSelect" type="Integer" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="accLocation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="pxLeft" type="Integer" paramflags="out" />
        <parameter name="pyTop" type="Integer" paramflags="out" />
        <parameter name="pcxWidth" type="Integer" paramflags="out" />
        <parameter name="pcyHeight" type="Integer" paramflags="out" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="accNavigate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="navDir" type="Integer" />
        <parameter name="varStart" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="accHitTest" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="accDoDefaultAction" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
  </interface>
  <interface name="_CommandBarComboBox" GUID="{000C030C-0000-0000-C000-000000000046}" ancestor="CommandBarControl">
    <procedure name="AddItem" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Text" type="WideString" paramflags="const" />
        <parameter name="Index" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="Clear" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_DropDownLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_DropDownLines" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pcLines" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_DropDownWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_DropDownWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdx" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_List" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_List" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="pbstrItem" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ListCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_ListHeaderCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_ListHeaderCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pcItems" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_ListIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_ListIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pi" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="RemoveItem" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pstyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrText" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="DropDownLines" visibility="public" read="Get_DropDownLines" type="Integer" />
    <property name="DropDownWidth" visibility="public" read="Get_DropDownWidth" type="Integer" />
    <property name="List[Index]" visibility="public" read="Get_List" type="WideString" />
    <property name="ListCount" visibility="public" read="Get_ListCount" type="Integer" />
    <property name="ListHeaderCount" visibility="public" read="Get_ListHeaderCount" type="Integer" />
    <property name="ListIndex" visibility="public" read="Get_ListIndex" type="Integer" />
    <property name="Style" visibility="public" read="Get_Style" type="TOleEnum" />
    <property name="Text" visibility="public" read="Get_Text" type="WideString" default="0" />
  </interface>
  <interface name="_CommandBarComboBoxDisp" GUID="{000C030C-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <procedure name="AddItem" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Text" type="WideString" paramflags="const" />
        <parameter name="Index" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="Clear" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="DropDownLines" visibility="automated" type="Integer" />
    <property name="DropDownWidth" visibility="automated" type="Integer" />
    <property name="List[Index]" visibility="automated" type="WideString" />
    <property name="ListCount" visibility="automated" type="Integer" />
    <property name="ListHeaderCount" visibility="automated" type="Integer" />
    <property name="ListIndex" visibility="automated" type="Integer" />
    <procedure name="RemoveItem" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <property name="Style" visibility="automated" type="TOleEnum" />
    <property name="Text" visibility="automated" type="WideString" />
    <property name="BeginGroup" visibility="automated" type="WordBool" />
    <property name="BuiltIn" visibility="automated" type="WordBool" />
    <property name="Caption" visibility="automated" type="WideString" />
    <property name="Control" visibility="automated" type="IDispatch" />
    <function name="Copy" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Temporary" type="OleVariant" />
      </parameters>
    </procedure>
    <property name="DescriptionText" visibility="automated" type="WideString" />
    <property name="Enabled" visibility="automated" type="WordBool" />
    <procedure name="Execute" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Height" visibility="automated" type="Integer" />
    <property name="HelpContextId" visibility="automated" type="Integer" />
    <property name="HelpFile" visibility="automated" type="WideString" />
    <property name="Id" visibility="automated" type="Integer" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="InstanceId" visibility="automated" type="Integer" />
    <function name="Move" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <property name="Left" visibility="automated" type="Integer" />
    <property name="OLEUsage" visibility="automated" type="TOleEnum" />
    <property name="OnAction" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="CommandBar" />
    <property name="Parameter" visibility="automated" type="WideString" />
    <property name="Priority" visibility="automated" type="Integer" />
    <procedure name="Reset" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetFocus" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Tag" visibility="automated" type="WideString" />
    <property name="TooltipText" visibility="automated" type="WideString" />
    <property name="Top" visibility="automated" type="Integer" />
    <property name="Type_" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="WordBool" />
    <property name="Width" visibility="automated" type="Integer" />
    <property name="IsPriorityDropped" visibility="automated" type="WordBool" />
    <procedure name="Reserved1" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved2" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved3" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved4" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved5" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved6" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved7" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="accParent" visibility="automated" type="IDispatch" />
    <property name="accChildCount" visibility="automated" type="Integer" />
    <property name="accChild[varChild]" visibility="automated" type="IDispatch" />
    <property name="accName[varChild]" visibility="automated" type="WideString" />
    <property name="accValue[varChild]" visibility="automated" type="WideString" />
    <property name="accDescription[varChild]" visibility="automated" type="WideString" />
    <property name="accRole[varChild]" visibility="automated" type="OleVariant" />
    <property name="accState[varChild]" visibility="automated" type="OleVariant" />
    <property name="accHelp[varChild]" visibility="automated" type="WideString" />
    <property name="accHelpTopic[pszHelpFile][varChild]" visibility="automated" type="Integer" />
    <property name="accKeyboardShortcut[varChild]" visibility="automated" type="WideString" />
    <property name="accFocus" visibility="automated" type="OleVariant" />
    <property name="accSelection" visibility="automated" type="OleVariant" />
    <property name="accDefaultAction[varChild]" visibility="automated" type="WideString" />
    <procedure name="accSelect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="flagsSelect" type="Integer" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="accLocation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="pxLeft" type="Integer" paramflags="out" />
        <parameter name="pyTop" type="Integer" paramflags="out" />
        <parameter name="pcxWidth" type="Integer" paramflags="out" />
        <parameter name="pcyHeight" type="Integer" paramflags="out" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="accNavigate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="navDir" type="Integer" />
        <parameter name="varStart" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="accHitTest" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="accDoDefaultAction" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
  </interface>
  <interface name="_CommandBarActiveX" GUID="{000C030D-0000-0000-C000-000000000046}" ancestor="CommandBarControl">
    <function name="Get_ControlCLSID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ControlCLSID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrClsid" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_QueryControlInterface" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrIid" type="WideString" paramflags="const" />
        <retval type="IInterface" />
      </parameters>
    </function>
    <procedure name="SetInnerObjectFactory" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pUnk" type="IInterface" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="EnsureControl" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Set_InitWith" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Param1" type="IInterface" paramflags="const" />
      </parameters>
    </procedure>
    <property name="ControlCLSID" visibility="public" read="Get_ControlCLSID" type="WideString" default="0" />
    <property name="QueryControlInterface[const bstrIid]" visibility="public" read="Get_QueryControlInterface" type="IInterface" />
    <property name="InitWith" visibility="public" write="Set_InitWith" type="IInterface" />
  </interface>
  <interface name="_CommandBarActiveXDisp" GUID="{000C030D-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="ControlCLSID" visibility="automated" type="WideString" />
    <property name="QueryControlInterface[const bstrIid]" visibility="automated" type="IInterface" />
    <procedure name="SetInnerObjectFactory" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="pUnk" type="IInterface" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="EnsureControl" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="InitWith" visibility="automated" type="IInterface" />
    <property name="BeginGroup" visibility="automated" type="WordBool" />
    <property name="BuiltIn" visibility="automated" type="WordBool" />
    <property name="Caption" visibility="automated" type="WideString" />
    <property name="Control" visibility="automated" type="IDispatch" />
    <function name="Copy" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Temporary" type="OleVariant" />
      </parameters>
    </procedure>
    <property name="DescriptionText" visibility="automated" type="WideString" />
    <property name="Enabled" visibility="automated" type="WordBool" />
    <procedure name="Execute" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Height" visibility="automated" type="Integer" />
    <property name="HelpContextId" visibility="automated" type="Integer" />
    <property name="HelpFile" visibility="automated" type="WideString" />
    <property name="Id" visibility="automated" type="Integer" />
    <property name="Index" visibility="automated" type="Integer" />
    <property name="InstanceId" visibility="automated" type="Integer" />
    <function name="Move" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Bar" type="OleVariant" />
        <parameter name="Before" type="OleVariant" />
        <retval type="CommandBarControl" />
      </parameters>
    </function>
    <property name="Left" visibility="automated" type="Integer" />
    <property name="OLEUsage" visibility="automated" type="TOleEnum" />
    <property name="OnAction" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="CommandBar" />
    <property name="Parameter" visibility="automated" type="WideString" />
    <property name="Priority" visibility="automated" type="Integer" />
    <procedure name="Reset" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetFocus" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Tag" visibility="automated" type="WideString" />
    <property name="TooltipText" visibility="automated" type="WideString" />
    <property name="Top" visibility="automated" type="Integer" />
    <property name="Type_" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="WordBool" />
    <property name="Width" visibility="automated" type="Integer" />
    <property name="IsPriorityDropped" visibility="automated" type="WordBool" />
    <procedure name="Reserved1" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved2" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved3" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved4" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved5" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved6" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Reserved7" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
    <property name="accParent" visibility="automated" type="IDispatch" />
    <property name="accChildCount" visibility="automated" type="Integer" />
    <property name="accChild[varChild]" visibility="automated" type="IDispatch" />
    <property name="accName[varChild]" visibility="automated" type="WideString" />
    <property name="accValue[varChild]" visibility="automated" type="WideString" />
    <property name="accDescription[varChild]" visibility="automated" type="WideString" />
    <property name="accRole[varChild]" visibility="automated" type="OleVariant" />
    <property name="accState[varChild]" visibility="automated" type="OleVariant" />
    <property name="accHelp[varChild]" visibility="automated" type="WideString" />
    <property name="accHelpTopic[pszHelpFile][varChild]" visibility="automated" type="Integer" />
    <property name="accKeyboardShortcut[varChild]" visibility="automated" type="WideString" />
    <property name="accFocus" visibility="automated" type="OleVariant" />
    <property name="accSelection" visibility="automated" type="OleVariant" />
    <property name="accDefaultAction[varChild]" visibility="automated" type="WideString" />
    <procedure name="accSelect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="flagsSelect" type="Integer" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="accLocation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="pxLeft" type="Integer" paramflags="out" />
        <parameter name="pyTop" type="Integer" paramflags="out" />
        <parameter name="pcxWidth" type="Integer" paramflags="out" />
        <parameter name="pcyHeight" type="Integer" paramflags="out" />
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
    <function name="accNavigate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="navDir" type="Integer" />
        <parameter name="varStart" type="OleVariant" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="accHitTest" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
        <retval type="OleVariant" />
      </parameters>
    </function>
    <procedure name="accDoDefaultAction" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="varChild" type="OleVariant" />
      </parameters>
    </procedure>
  </interface>
  <interface name="Adjustments" GUID="{000C0310-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="Val" type="Single" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Item[Index]" visibility="public" read="Get_Item" write="Set_Item" type="Single" />
  </interface>
  <interface name="AdjustmentsDisp" GUID="{000C0310-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Item[Index]" visibility="automated" type="Single" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="CalloutFormat" GUID="{000C0311-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="AutomaticLength" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="CustomDrop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Drop" type="Single" />
      </parameters>
    </procedure>
    <procedure name="CustomLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Length" type="Single" />
      </parameters>
    </procedure>
    <procedure name="PresetDrop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="DropType" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Accent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Accent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Accent" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Angle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Angle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Angle" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_AutoAttach" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_AutoAttach" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="AutoAttach" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_AutoLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Border" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Border" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Border" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Drop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <function name="Get_DropType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Gap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Gap" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Gap" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Length" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <function name="Get_Type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Accent" visibility="public" read="Get_Accent" write="Set_Accent" type="TOleEnum" />
    <property name="Angle" visibility="public" read="Get_Angle" write="Set_Angle" type="TOleEnum" />
    <property name="AutoAttach" visibility="public" read="Get_AutoAttach" write="Set_AutoAttach" type="TOleEnum" />
    <property name="AutoLength" visibility="public" read="Get_AutoLength" type="TOleEnum" />
    <property name="Border" visibility="public" read="Get_Border" write="Set_Border" type="TOleEnum" />
    <property name="Drop" visibility="public" read="Get_Drop" type="Single" default="0" />
    <property name="DropType" visibility="public" read="Get_DropType" type="TOleEnum" />
    <property name="Gap" visibility="public" read="Get_Gap" write="Set_Gap" type="Single" default="0" />
    <property name="Length" visibility="public" read="Get_Length" type="Single" default="0" />
    <property name="Type_" visibility="public" read="Get_Type_" write="Set_Type_" type="TOleEnum" />
  </interface>
  <interface name="CalloutFormatDisp" GUID="{000C0311-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="AutomaticLength" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="CustomDrop" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Drop" type="Single" />
      </parameters>
    </procedure>
    <procedure name="CustomLength" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Length" type="Single" />
      </parameters>
    </procedure>
    <procedure name="PresetDrop" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="DropType" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Accent" visibility="automated" type="TOleEnum" />
    <property name="Angle" visibility="automated" type="TOleEnum" />
    <property name="AutoAttach" visibility="automated" type="TOleEnum" />
    <property name="AutoLength" visibility="automated" type="TOleEnum" />
    <property name="Border" visibility="automated" type="TOleEnum" />
    <property name="Drop" visibility="automated" type="Single" />
    <property name="DropType" visibility="automated" type="TOleEnum" />
    <property name="Gap" visibility="automated" type="Single" />
    <property name="Length" visibility="automated" type="Single" />
    <property name="Type_" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ColorFormat" GUID="{000C0312-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_RGB" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_RGB" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RGB" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_SchemeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_SchemeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SchemeColor" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_TintAndShade" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_TintAndShade" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pValue" type="Single" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="RGB" visibility="public" read="Get_RGB" write="Set_RGB" type="Integer" />
    <property name="SchemeColor" visibility="public" read="Get_SchemeColor" write="Set_SchemeColor" type="Integer" />
    <property name="Type_" visibility="public" read="Get_Type_" type="TOleEnum" />
    <property name="TintAndShade" visibility="public" read="Get_TintAndShade" write="Set_TintAndShade" type="Single" default="0" />
  </interface>
  <interface name="ColorFormatDisp" GUID="{000C0312-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="RGB" visibility="automated" type="Integer" />
    <property name="SchemeColor" visibility="automated" type="Integer" />
    <property name="Type_" visibility="automated" type="TOleEnum" />
    <property name="TintAndShade" visibility="automated" type="Single" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ConnectorFormat" GUID="{000C0313-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="BeginConnect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ConnectedShape" type="Shape" paramflags="const" />
        <parameter name="ConnectionSite" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="BeginDisconnect" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="EndConnect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ConnectedShape" type="Shape" paramflags="const" />
        <parameter name="ConnectionSite" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="EndDisconnect" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_BeginConnected" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_BeginConnectedShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get_BeginConnectionSite" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_EndConnected" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_EndConnectedShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get_EndConnectionSite" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="BeginConnected" visibility="public" read="Get_BeginConnected" type="TOleEnum" />
    <property name="BeginConnectedShape" visibility="public" read="Get_BeginConnectedShape" type="Shape" />
    <property name="BeginConnectionSite" visibility="public" read="Get_BeginConnectionSite" type="Integer" />
    <property name="EndConnected" visibility="public" read="Get_EndConnected" type="TOleEnum" />
    <property name="EndConnectedShape" visibility="public" read="Get_EndConnectedShape" type="Shape" />
    <property name="EndConnectionSite" visibility="public" read="Get_EndConnectionSite" type="Integer" />
    <property name="Type_" visibility="public" read="Get_Type_" write="Set_Type_" type="TOleEnum" />
  </interface>
  <interface name="ConnectorFormatDisp" GUID="{000C0313-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="BeginConnect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ConnectedShape" type="Shape" paramflags="const" />
        <parameter name="ConnectionSite" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="BeginDisconnect" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="EndConnect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ConnectedShape" type="Shape" paramflags="const" />
        <parameter name="ConnectionSite" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="EndDisconnect" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="BeginConnected" visibility="automated" type="TOleEnum" />
    <property name="BeginConnectedShape" visibility="automated" type="Shape" />
    <property name="BeginConnectionSite" visibility="automated" type="Integer" />
    <property name="EndConnected" visibility="automated" type="TOleEnum" />
    <property name="EndConnectedShape" visibility="automated" type="Shape" />
    <property name="EndConnectionSite" visibility="automated" type="Integer" />
    <property name="Type_" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="FillFormat" GUID="{000C0314-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Background" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="OneColorGradient" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
        <parameter name="Variant" type="Integer" />
        <parameter name="Degree" type="Single" />
      </parameters>
    </procedure>
    <procedure name="Patterned" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Pattern" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="PresetGradient" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
        <parameter name="Variant" type="Integer" />
        <parameter name="PresetGradientType" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="PresetTextured" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetTexture" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Solid" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="TwoColorGradient" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
        <parameter name="Variant" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="UserPicture" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PictureFile" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="UserTextured" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="TextureFile" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_BackColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ColorFormat" />
      </parameters>
    </function>
    <procedure name="Set_BackColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BackColor" type="ColorFormat" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ForeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ColorFormat" />
      </parameters>
    </function>
    <procedure name="Set_ForeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ForeColor" type="ColorFormat" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_GradientColorType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_GradientDegree" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <function name="Get_GradientStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_GradientVariant" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Pattern" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_PresetGradientType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_PresetTexture" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_TextureName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_TextureType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Transparency" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Transparency" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Transparency" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Visible" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="BackColor" visibility="public" read="Get_BackColor" write="Set_BackColor" type="ColorFormat" />
    <property name="ForeColor" visibility="public" read="Get_ForeColor" write="Set_ForeColor" type="ColorFormat" />
    <property name="GradientColorType" visibility="public" read="Get_GradientColorType" type="TOleEnum" />
    <property name="GradientDegree" visibility="public" read="Get_GradientDegree" type="Single" default="0" />
    <property name="GradientStyle" visibility="public" read="Get_GradientStyle" type="TOleEnum" />
    <property name="GradientVariant" visibility="public" read="Get_GradientVariant" type="Integer" />
    <property name="Pattern" visibility="public" read="Get_Pattern" type="TOleEnum" />
    <property name="PresetGradientType" visibility="public" read="Get_PresetGradientType" type="TOleEnum" />
    <property name="PresetTexture" visibility="public" read="Get_PresetTexture" type="TOleEnum" />
    <property name="TextureName" visibility="public" read="Get_TextureName" type="WideString" default="0" />
    <property name="TextureType" visibility="public" read="Get_TextureType" type="TOleEnum" />
    <property name="Transparency" visibility="public" read="Get_Transparency" write="Set_Transparency" type="Single" default="0" />
    <property name="Type_" visibility="public" read="Get_Type_" type="TOleEnum" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="TOleEnum" />
  </interface>
  <interface name="FillFormatDisp" GUID="{000C0314-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="Background" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="OneColorGradient" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
        <parameter name="Variant" type="Integer" />
        <parameter name="Degree" type="Single" />
      </parameters>
    </procedure>
    <procedure name="Patterned" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Pattern" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="PresetGradient" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
        <parameter name="Variant" type="Integer" />
        <parameter name="PresetGradientType" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="PresetTextured" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="PresetTexture" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Solid" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="TwoColorGradient" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
        <parameter name="Variant" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="UserPicture" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="PictureFile" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="UserTextured" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="TextureFile" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="BackColor" visibility="automated" type="ColorFormat" />
    <property name="ForeColor" visibility="automated" type="ColorFormat" />
    <property name="GradientColorType" visibility="automated" type="TOleEnum" />
    <property name="GradientDegree" visibility="automated" type="Single" />
    <property name="GradientStyle" visibility="automated" type="TOleEnum" />
    <property name="GradientVariant" visibility="automated" type="Integer" />
    <property name="Pattern" visibility="automated" type="TOleEnum" />
    <property name="PresetGradientType" visibility="automated" type="TOleEnum" />
    <property name="PresetTexture" visibility="automated" type="TOleEnum" />
    <property name="TextureName" visibility="automated" type="WideString" />
    <property name="TextureType" visibility="automated" type="TOleEnum" />
    <property name="Transparency" visibility="automated" type="Single" />
    <property name="Type_" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="FreeformBuilder" GUID="{000C0315-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="AddNodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SegmentType" type="TOleEnum" />
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <parameter name="X2" type="Single" />
        <parameter name="Y2" type="Single" />
        <parameter name="X3" type="Single" />
        <parameter name="Y3" type="Single" />
      </parameters>
    </procedure>
    <function name="ConvertToShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="FreeformBuilderDisp" GUID="{000C0315-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="AddNodes" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="SegmentType" type="TOleEnum" />
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <parameter name="X2" type="Single" />
        <parameter name="Y2" type="Single" />
        <parameter name="X3" type="Single" />
        <parameter name="Y3" type="Single" />
      </parameters>
    </procedure>
    <function name="ConvertToShape" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="GroupShapes" GUID="{000C0316-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="GroupShapesDisp" GUID="{000C0316-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <function name="Range" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="LineFormat" GUID="{000C0317-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_BackColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ColorFormat" />
      </parameters>
    </function>
    <procedure name="Set_BackColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BackColor" type="ColorFormat" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_BeginArrowheadLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_BeginArrowheadLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BeginArrowheadLength" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_BeginArrowheadStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_BeginArrowheadStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BeginArrowheadStyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_BeginArrowheadWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_BeginArrowheadWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BeginArrowheadWidth" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_DashStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_DashStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="DashStyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_EndArrowheadLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_EndArrowheadLength" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="EndArrowheadLength" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_EndArrowheadStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_EndArrowheadStyle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="EndArrowheadStyle" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_EndArrowheadWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_EndArrowheadWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="EndArrowheadWidth" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_ForeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ColorFormat" />
      </parameters>
    </function>
    <procedure name="Set_ForeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ForeColor" type="ColorFormat" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Pattern" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Pattern" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Pattern" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Style" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Style" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Transparency" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Transparency" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Transparency" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Visible" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Weight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Weight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Weight" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_InsetPen" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_InsetPen" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="InsetPen" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="BackColor" visibility="public" read="Get_BackColor" write="Set_BackColor" type="ColorFormat" />
    <property name="BeginArrowheadLength" visibility="public" read="Get_BeginArrowheadLength" write="Set_BeginArrowheadLength" type="TOleEnum" />
    <property name="BeginArrowheadStyle" visibility="public" read="Get_BeginArrowheadStyle" write="Set_BeginArrowheadStyle" type="TOleEnum" />
    <property name="BeginArrowheadWidth" visibility="public" read="Get_BeginArrowheadWidth" write="Set_BeginArrowheadWidth" type="TOleEnum" />
    <property name="DashStyle" visibility="public" read="Get_DashStyle" write="Set_DashStyle" type="TOleEnum" />
    <property name="EndArrowheadLength" visibility="public" read="Get_EndArrowheadLength" write="Set_EndArrowheadLength" type="TOleEnum" />
    <property name="EndArrowheadStyle" visibility="public" read="Get_EndArrowheadStyle" write="Set_EndArrowheadStyle" type="TOleEnum" />
    <property name="EndArrowheadWidth" visibility="public" read="Get_EndArrowheadWidth" write="Set_EndArrowheadWidth" type="TOleEnum" />
    <property name="ForeColor" visibility="public" read="Get_ForeColor" write="Set_ForeColor" type="ColorFormat" />
    <property name="Pattern" visibility="public" read="Get_Pattern" write="Set_Pattern" type="TOleEnum" />
    <property name="Style" visibility="public" read="Get_Style" write="Set_Style" type="TOleEnum" />
    <property name="Transparency" visibility="public" read="Get_Transparency" write="Set_Transparency" type="Single" default="0" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="TOleEnum" />
    <property name="Weight" visibility="public" read="Get_Weight" write="Set_Weight" type="Single" default="0" />
    <property name="InsetPen" visibility="public" read="Get_InsetPen" write="Set_InsetPen" type="TOleEnum" />
  </interface>
  <interface name="LineFormatDisp" GUID="{000C0317-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="BackColor" visibility="automated" type="ColorFormat" />
    <property name="BeginArrowheadLength" visibility="automated" type="TOleEnum" />
    <property name="BeginArrowheadStyle" visibility="automated" type="TOleEnum" />
    <property name="BeginArrowheadWidth" visibility="automated" type="TOleEnum" />
    <property name="DashStyle" visibility="automated" type="TOleEnum" />
    <property name="EndArrowheadLength" visibility="automated" type="TOleEnum" />
    <property name="EndArrowheadStyle" visibility="automated" type="TOleEnum" />
    <property name="EndArrowheadWidth" visibility="automated" type="TOleEnum" />
    <property name="ForeColor" visibility="automated" type="ColorFormat" />
    <property name="Pattern" visibility="automated" type="TOleEnum" />
    <property name="Style" visibility="automated" type="TOleEnum" />
    <property name="Transparency" visibility="automated" type="Single" />
    <property name="Visible" visibility="automated" type="TOleEnum" />
    <property name="Weight" visibility="automated" type="Single" />
    <property name="InsetPen" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ShapeNode" GUID="{000C0318-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_EditingType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Points" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_SegmentType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="EditingType" visibility="public" read="Get_EditingType" type="TOleEnum" />
    <property name="Points" visibility="public" read="Get_Points" type="OleVariant" default="0" />
    <property name="SegmentType" visibility="public" read="Get_SegmentType" type="TOleEnum" />
  </interface>
  <interface name="ShapeNodeDisp" GUID="{000C0318-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="EditingType" visibility="automated" type="TOleEnum" />
    <property name="Points" visibility="automated" type="OleVariant" />
    <property name="SegmentType" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ShapeNodes" GUID="{000C0319-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="ShapeNode" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Insert" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="SegmentType" type="TOleEnum" />
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <parameter name="X2" type="Single" />
        <parameter name="Y2" type="Single" />
        <parameter name="X3" type="Single" />
        <parameter name="Y3" type="Single" />
      </parameters>
    </procedure>
    <procedure name="SetEditingType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="EditingType" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
      </parameters>
    </procedure>
    <procedure name="SetSegmentType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="SegmentType" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="ShapeNodesDisp" GUID="{000C0319-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="ShapeNode" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Insert" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="SegmentType" type="TOleEnum" />
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <parameter name="X2" type="Single" />
        <parameter name="Y2" type="Single" />
        <parameter name="X3" type="Single" />
        <parameter name="Y3" type="Single" />
      </parameters>
    </procedure>
    <procedure name="SetEditingType" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="EditingType" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetPosition" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
      </parameters>
    </procedure>
    <procedure name="SetSegmentType" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="SegmentType" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="PictureFormat" GUID="{000C031A-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="IncrementBrightness" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementContrast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Brightness" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Brightness" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Brightness" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ColorType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_ColorType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ColorType" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Contrast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Contrast" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Contrast" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_CropBottom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_CropBottom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="CropBottom" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_CropLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_CropLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="CropLeft" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_CropRight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_CropRight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="CropRight" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_CropTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_CropTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="CropTop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_TransparencyColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_TransparencyColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="TransparencyColor" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_TransparentBackground" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_TransparentBackground" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="TransparentBackground" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Brightness" visibility="public" read="Get_Brightness" write="Set_Brightness" type="Single" default="0" />
    <property name="ColorType" visibility="public" read="Get_ColorType" write="Set_ColorType" type="TOleEnum" />
    <property name="Contrast" visibility="public" read="Get_Contrast" write="Set_Contrast" type="Single" default="0" />
    <property name="CropBottom" visibility="public" read="Get_CropBottom" write="Set_CropBottom" type="Single" default="0" />
    <property name="CropLeft" visibility="public" read="Get_CropLeft" write="Set_CropLeft" type="Single" default="0" />
    <property name="CropRight" visibility="public" read="Get_CropRight" write="Set_CropRight" type="Single" default="0" />
    <property name="CropTop" visibility="public" read="Get_CropTop" write="Set_CropTop" type="Single" default="0" />
    <property name="TransparencyColor" visibility="public" read="Get_TransparencyColor" write="Set_TransparencyColor" type="Integer" />
    <property name="TransparentBackground" visibility="public" read="Get_TransparentBackground" write="Set_TransparentBackground" type="TOleEnum" />
  </interface>
  <interface name="PictureFormatDisp" GUID="{000C031A-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="IncrementBrightness" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementContrast" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <property name="Brightness" visibility="automated" type="Single" />
    <property name="ColorType" visibility="automated" type="TOleEnum" />
    <property name="Contrast" visibility="automated" type="Single" />
    <property name="CropBottom" visibility="automated" type="Single" />
    <property name="CropLeft" visibility="automated" type="Single" />
    <property name="CropRight" visibility="automated" type="Single" />
    <property name="CropTop" visibility="automated" type="Single" />
    <property name="TransparencyColor" visibility="automated" type="Integer" />
    <property name="TransparentBackground" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ShadowFormat" GUID="{000C031B-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="IncrementOffsetX" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementOffsetY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ForeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ColorFormat" />
      </parameters>
    </function>
    <procedure name="Set_ForeColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ForeColor" type="ColorFormat" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Obscured" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Obscured" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Obscured" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_OffsetX" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_OffsetX" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="OffsetX" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_OffsetY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_OffsetY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="OffsetY" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Transparency" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Transparency" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Transparency" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Visible" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="ForeColor" visibility="public" read="Get_ForeColor" write="Set_ForeColor" type="ColorFormat" />
    <property name="Obscured" visibility="public" read="Get_Obscured" write="Set_Obscured" type="TOleEnum" />
    <property name="OffsetX" visibility="public" read="Get_OffsetX" write="Set_OffsetX" type="Single" default="0" />
    <property name="OffsetY" visibility="public" read="Get_OffsetY" write="Set_OffsetY" type="Single" default="0" />
    <property name="Transparency" visibility="public" read="Get_Transparency" write="Set_Transparency" type="Single" default="0" />
    <property name="Type_" visibility="public" read="Get_Type_" write="Set_Type_" type="TOleEnum" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="TOleEnum" />
  </interface>
  <interface name="ShadowFormatDisp" GUID="{000C031B-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="IncrementOffsetX" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementOffsetY" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <property name="ForeColor" visibility="automated" type="ColorFormat" />
    <property name="Obscured" visibility="automated" type="TOleEnum" />
    <property name="OffsetX" visibility="automated" type="Single" />
    <property name="OffsetY" visibility="automated" type="Single" />
    <property name="Transparency" visibility="automated" type="Single" />
    <property name="Type_" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="Script" GUID="{000C0341-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Extended" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Extended" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Extended" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Id" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Id" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Id" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Language" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Language" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Language" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Location" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_Shape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_ScriptText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ScriptText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Script" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Extended" visibility="public" read="Get_Extended" type="WideString" default="0" />
    <property name="Id" visibility="public" read="Get_Id" type="WideString" default="0" />
    <property name="Language" visibility="public" read="Get_Language" type="TOleEnum" />
    <property name="Location" visibility="public" read="Get_Location" type="TOleEnum" />
    <property name="Shape" visibility="public" read="Get_Shape" type="IDispatch" />
    <property name="ScriptText" visibility="public" read="Get_ScriptText" write="Set_ScriptText" type="WideString" default="0" />
  </interface>
  <interface name="ScriptDisp" GUID="{000C0341-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Extended" visibility="automated" type="WideString" />
    <property name="Id" visibility="automated" type="WideString" />
    <property name="Language" visibility="automated" type="TOleEnum" />
    <property name="Location" visibility="automated" type="TOleEnum" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Shape" visibility="automated" type="IDispatch" />
    <property name="ScriptText" visibility="automated" type="WideString" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="Scripts" GUID="{000C0340-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="Script" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Anchor" type="IDispatch" paramflags="const" />
        <parameter name="Location" type="TOleEnum" />
        <parameter name="Language" type="TOleEnum" />
        <parameter name="Id" type="WideString" paramflags="const" />
        <parameter name="Extended" type="WideString" paramflags="const" />
        <parameter name="ScriptText" type="WideString" paramflags="const" />
        <retval type="Script" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="ScriptsDisp" GUID="{000C0340-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="Script" />
      </parameters>
    </function>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Anchor" type="IDispatch" paramflags="const" />
        <parameter name="Location" type="TOleEnum" />
        <parameter name="Language" type="TOleEnum" />
        <parameter name="Id" type="WideString" paramflags="const" />
        <parameter name="Extended" type="WideString" paramflags="const" />
        <parameter name="ScriptText" type="WideString" paramflags="const" />
        <retval type="Script" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="Shape" GUID="{000C031C-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Apply" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Duplicate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="Flip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FlipCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="IncrementLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementRotation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="PickUp" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="RerouteConnections" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ScaleHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="fScale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="ScaleWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="fScale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Replace" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="SetShapesDefaultProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Ungroup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="ZOrder" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ZOrderCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Adjustments" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Adjustments" />
      </parameters>
    </function>
    <function name="Get_AutoShapeType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_AutoShapeType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="AutoShapeType" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_BlackWhiteMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_BlackWhiteMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BlackWhiteMode" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Callout" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CalloutFormat" />
      </parameters>
    </function>
    <function name="Get_ConnectionSiteCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Connector" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_ConnectorFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ConnectorFormat" />
      </parameters>
    </function>
    <function name="Get_Fill" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FillFormat" />
      </parameters>
    </function>
    <function name="Get_GroupItems" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="GroupShapes" />
      </parameters>
    </function>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Height" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_HorizontalFlip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Left" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Line" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="LineFormat" />
      </parameters>
    </function>
    <function name="Get_LockAspectRatio" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LockAspectRatio" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="LockAspectRatio" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Nodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShapeNodes" />
      </parameters>
    </function>
    <function name="Get_Rotation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Rotation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Rotation" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_PictureFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="PictureFormat" />
      </parameters>
    </function>
    <function name="Get_Shadow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShadowFormat" />
      </parameters>
    </function>
    <function name="Get_TextEffect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TextEffectFormat" />
      </parameters>
    </function>
    <function name="Get_TextFrame" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TextFrame" />
      </parameters>
    </function>
    <function name="Get_ThreeD" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ThreeDFormat" />
      </parameters>
    </function>
    <function name="Get_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Top" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_VerticalFlip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Vertices" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Visible" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Width" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ZOrderPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Script" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Script" />
      </parameters>
    </function>
    <function name="Get_AlternativeText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_AlternativeText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="AlternativeText" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_HasDiagram" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Diagram" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IMsoDiagram" />
      </parameters>
    </function>
    <function name="Get_HasDiagramNode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_DiagramNode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="DiagramNode" />
      </parameters>
    </function>
    <function name="Get_Child" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_ParentGroup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get_CanvasItems" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CanvasShapes" />
      </parameters>
    </function>
    <function name="Get_Id" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="CanvasCropLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="CanvasCropTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="CanvasCropRight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="CanvasCropBottom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="Set_RTF" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Param1" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Adjustments" visibility="public" read="Get_Adjustments" type="Adjustments" />
    <property name="AutoShapeType" visibility="public" read="Get_AutoShapeType" write="Set_AutoShapeType" type="TOleEnum" />
    <property name="BlackWhiteMode" visibility="public" read="Get_BlackWhiteMode" write="Set_BlackWhiteMode" type="TOleEnum" />
    <property name="Callout" visibility="public" read="Get_Callout" type="CalloutFormat" />
    <property name="ConnectionSiteCount" visibility="public" read="Get_ConnectionSiteCount" type="Integer" />
    <property name="Connector" visibility="public" read="Get_Connector" type="TOleEnum" />
    <property name="ConnectorFormat" visibility="public" read="Get_ConnectorFormat" type="ConnectorFormat" />
    <property name="Fill" visibility="public" read="Get_Fill" type="FillFormat" />
    <property name="GroupItems" visibility="public" read="Get_GroupItems" type="GroupShapes" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Single" default="0" />
    <property name="HorizontalFlip" visibility="public" read="Get_HorizontalFlip" type="TOleEnum" />
    <property name="Left" visibility="public" read="Get_Left" write="Set_Left" type="Single" default="0" />
    <property name="Line" visibility="public" read="Get_Line" type="LineFormat" />
    <property name="LockAspectRatio" visibility="public" read="Get_LockAspectRatio" write="Set_LockAspectRatio" type="TOleEnum" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
    <property name="Nodes" visibility="public" read="Get_Nodes" type="ShapeNodes" />
    <property name="Rotation" visibility="public" read="Get_Rotation" write="Set_Rotation" type="Single" default="0" />
    <property name="PictureFormat" visibility="public" read="Get_PictureFormat" type="PictureFormat" />
    <property name="Shadow" visibility="public" read="Get_Shadow" type="ShadowFormat" />
    <property name="TextEffect" visibility="public" read="Get_TextEffect" type="TextEffectFormat" />
    <property name="TextFrame" visibility="public" read="Get_TextFrame" type="TextFrame" />
    <property name="ThreeD" visibility="public" read="Get_ThreeD" type="ThreeDFormat" />
    <property name="Top" visibility="public" read="Get_Top" write="Set_Top" type="Single" default="0" />
    <property name="Type_" visibility="public" read="Get_Type_" type="TOleEnum" />
    <property name="VerticalFlip" visibility="public" read="Get_VerticalFlip" type="TOleEnum" />
    <property name="Vertices" visibility="public" read="Get_Vertices" type="OleVariant" default="0" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="TOleEnum" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Single" default="0" />
    <property name="ZOrderPosition" visibility="public" read="Get_ZOrderPosition" type="Integer" />
    <property name="Script" visibility="public" read="Get_Script" type="Script" />
    <property name="AlternativeText" visibility="public" read="Get_AlternativeText" write="Set_AlternativeText" type="WideString" default="0" />
    <property name="HasDiagram" visibility="public" read="Get_HasDiagram" type="TOleEnum" />
    <property name="Diagram" visibility="public" read="Get_Diagram" type="IMsoDiagram" />
    <property name="HasDiagramNode" visibility="public" read="Get_HasDiagramNode" type="TOleEnum" />
    <property name="DiagramNode" visibility="public" read="Get_DiagramNode" type="DiagramNode" />
    <property name="Child" visibility="public" read="Get_Child" type="TOleEnum" />
    <property name="ParentGroup" visibility="public" read="Get_ParentGroup" type="Shape" />
    <property name="CanvasItems" visibility="public" read="Get_CanvasItems" type="CanvasShapes" />
    <property name="Id" visibility="public" read="Get_Id" type="Integer" />
    <property name="RTF" visibility="public" write="Set_RTF" type="WideString" default="0" />
  </interface>
  <interface name="ShapeDisp" GUID="{000C031C-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="Apply" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Duplicate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="Flip" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FlipCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="IncrementLeft" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementRotation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementTop" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="PickUp" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="RerouteConnections" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ScaleHeight" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="fScale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="ScaleWidth" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="fScale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Replace" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="SetShapesDefaultProperties" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Ungroup" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="ZOrder" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ZOrderCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Adjustments" visibility="automated" type="Adjustments" />
    <property name="AutoShapeType" visibility="automated" type="TOleEnum" />
    <property name="BlackWhiteMode" visibility="automated" type="TOleEnum" />
    <property name="Callout" visibility="automated" type="CalloutFormat" />
    <property name="ConnectionSiteCount" visibility="automated" type="Integer" />
    <property name="Connector" visibility="automated" type="TOleEnum" />
    <property name="ConnectorFormat" visibility="automated" type="ConnectorFormat" />
    <property name="Fill" visibility="automated" type="FillFormat" />
    <property name="GroupItems" visibility="automated" type="GroupShapes" />
    <property name="Height" visibility="automated" type="Single" />
    <property name="HorizontalFlip" visibility="automated" type="TOleEnum" />
    <property name="Left" visibility="automated" type="Single" />
    <property name="Line" visibility="automated" type="LineFormat" />
    <property name="LockAspectRatio" visibility="automated" type="TOleEnum" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Nodes" visibility="automated" type="ShapeNodes" />
    <property name="Rotation" visibility="automated" type="Single" />
    <property name="PictureFormat" visibility="automated" type="PictureFormat" />
    <property name="Shadow" visibility="automated" type="ShadowFormat" />
    <property name="TextEffect" visibility="automated" type="TextEffectFormat" />
    <property name="TextFrame" visibility="automated" type="TextFrame" />
    <property name="ThreeD" visibility="automated" type="ThreeDFormat" />
    <property name="Top" visibility="automated" type="Single" />
    <property name="Type_" visibility="automated" type="TOleEnum" />
    <property name="VerticalFlip" visibility="automated" type="TOleEnum" />
    <property name="Vertices" visibility="automated" type="OleVariant" />
    <property name="Visible" visibility="automated" type="TOleEnum" />
    <property name="Width" visibility="automated" type="Single" />
    <property name="ZOrderPosition" visibility="automated" type="Integer" />
    <property name="Script" visibility="automated" type="Script" />
    <property name="AlternativeText" visibility="automated" type="WideString" />
    <property name="HasDiagram" visibility="automated" type="TOleEnum" />
    <property name="Diagram" visibility="automated" type="IMsoDiagram" />
    <property name="HasDiagramNode" visibility="automated" type="TOleEnum" />
    <property name="DiagramNode" visibility="automated" type="DiagramNode" />
    <property name="Child" visibility="automated" type="TOleEnum" />
    <property name="ParentGroup" visibility="automated" type="Shape" />
    <property name="CanvasItems" visibility="automated" type="CanvasShapes" />
    <property name="Id" visibility="automated" type="Integer" />
    <procedure name="CanvasCropLeft" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="CanvasCropTop" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="CanvasCropRight" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="CanvasCropBottom" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <property name="RTF" visibility="automated" type="WideString" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ShapeRange" GUID="{000C031D-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <procedure name="Align" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="AlignCmd" type="TOleEnum" />
        <parameter name="RelativeTo" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Apply" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Distribute" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="DistributeCmd" type="TOleEnum" />
        <parameter name="RelativeTo" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Duplicate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="Flip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FlipCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="IncrementLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementRotation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <function name="Group" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="PickUp" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Regroup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="RerouteConnections" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ScaleHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="fScale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="ScaleWidth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="fScale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Select" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Replace" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="SetShapesDefaultProperties" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Ungroup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="ZOrder" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ZOrderCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Adjustments" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Adjustments" />
      </parameters>
    </function>
    <function name="Get_AutoShapeType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_AutoShapeType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="AutoShapeType" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_BlackWhiteMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_BlackWhiteMode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BlackWhiteMode" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Callout" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CalloutFormat" />
      </parameters>
    </function>
    <function name="Get_ConnectionSiteCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Connector" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_ConnectorFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ConnectorFormat" />
      </parameters>
    </function>
    <function name="Get_Fill" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FillFormat" />
      </parameters>
    </function>
    <function name="Get_GroupItems" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="GroupShapes" />
      </parameters>
    </function>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Height" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_HorizontalFlip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Left" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Line" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="LineFormat" />
      </parameters>
    </function>
    <function name="Get_LockAspectRatio" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LockAspectRatio" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="LockAspectRatio" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Nodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShapeNodes" />
      </parameters>
    </function>
    <function name="Get_Rotation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Rotation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Rotation" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_PictureFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="PictureFormat" />
      </parameters>
    </function>
    <function name="Get_Shadow" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ShadowFormat" />
      </parameters>
    </function>
    <function name="Get_TextEffect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TextEffectFormat" />
      </parameters>
    </function>
    <function name="Get_TextFrame" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TextFrame" />
      </parameters>
    </function>
    <function name="Get_ThreeD" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ThreeDFormat" />
      </parameters>
    </function>
    <function name="Get_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Top" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_VerticalFlip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Vertices" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Visible" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Width" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ZOrderPosition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Script" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Script" />
      </parameters>
    </function>
    <function name="Get_AlternativeText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_AlternativeText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="AlternativeText" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_HasDiagram" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Diagram" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IMsoDiagram" />
      </parameters>
    </function>
    <function name="Get_HasDiagramNode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_DiagramNode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="DiagramNode" />
      </parameters>
    </function>
    <function name="Get_Child" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_ParentGroup" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get_CanvasItems" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="CanvasShapes" />
      </parameters>
    </function>
    <function name="Get_Id" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="CanvasCropLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="CanvasCropTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="CanvasCropRight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="CanvasCropBottom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="Set_RTF" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Param1" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Adjustments" visibility="public" read="Get_Adjustments" type="Adjustments" />
    <property name="AutoShapeType" visibility="public" read="Get_AutoShapeType" write="Set_AutoShapeType" type="TOleEnum" />
    <property name="BlackWhiteMode" visibility="public" read="Get_BlackWhiteMode" write="Set_BlackWhiteMode" type="TOleEnum" />
    <property name="Callout" visibility="public" read="Get_Callout" type="CalloutFormat" />
    <property name="ConnectionSiteCount" visibility="public" read="Get_ConnectionSiteCount" type="Integer" />
    <property name="Connector" visibility="public" read="Get_Connector" type="TOleEnum" />
    <property name="ConnectorFormat" visibility="public" read="Get_ConnectorFormat" type="ConnectorFormat" />
    <property name="Fill" visibility="public" read="Get_Fill" type="FillFormat" />
    <property name="GroupItems" visibility="public" read="Get_GroupItems" type="GroupShapes" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Single" default="0" />
    <property name="HorizontalFlip" visibility="public" read="Get_HorizontalFlip" type="TOleEnum" />
    <property name="Left" visibility="public" read="Get_Left" write="Set_Left" type="Single" default="0" />
    <property name="Line" visibility="public" read="Get_Line" type="LineFormat" />
    <property name="LockAspectRatio" visibility="public" read="Get_LockAspectRatio" write="Set_LockAspectRatio" type="TOleEnum" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
    <property name="Nodes" visibility="public" read="Get_Nodes" type="ShapeNodes" />
    <property name="Rotation" visibility="public" read="Get_Rotation" write="Set_Rotation" type="Single" default="0" />
    <property name="PictureFormat" visibility="public" read="Get_PictureFormat" type="PictureFormat" />
    <property name="Shadow" visibility="public" read="Get_Shadow" type="ShadowFormat" />
    <property name="TextEffect" visibility="public" read="Get_TextEffect" type="TextEffectFormat" />
    <property name="TextFrame" visibility="public" read="Get_TextFrame" type="TextFrame" />
    <property name="ThreeD" visibility="public" read="Get_ThreeD" type="ThreeDFormat" />
    <property name="Top" visibility="public" read="Get_Top" write="Set_Top" type="Single" default="0" />
    <property name="Type_" visibility="public" read="Get_Type_" type="TOleEnum" />
    <property name="VerticalFlip" visibility="public" read="Get_VerticalFlip" type="TOleEnum" />
    <property name="Vertices" visibility="public" read="Get_Vertices" type="OleVariant" default="0" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="TOleEnum" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Single" default="0" />
    <property name="ZOrderPosition" visibility="public" read="Get_ZOrderPosition" type="Integer" />
    <property name="Script" visibility="public" read="Get_Script" type="Script" />
    <property name="AlternativeText" visibility="public" read="Get_AlternativeText" write="Set_AlternativeText" type="WideString" default="0" />
    <property name="HasDiagram" visibility="public" read="Get_HasDiagram" type="TOleEnum" />
    <property name="Diagram" visibility="public" read="Get_Diagram" type="IMsoDiagram" />
    <property name="HasDiagramNode" visibility="public" read="Get_HasDiagramNode" type="TOleEnum" />
    <property name="DiagramNode" visibility="public" read="Get_DiagramNode" type="DiagramNode" />
    <property name="Child" visibility="public" read="Get_Child" type="TOleEnum" />
    <property name="ParentGroup" visibility="public" read="Get_ParentGroup" type="Shape" />
    <property name="CanvasItems" visibility="public" read="Get_CanvasItems" type="CanvasShapes" />
    <property name="Id" visibility="public" read="Get_Id" type="Integer" />
    <property name="RTF" visibility="public" write="Set_RTF" type="WideString" default="0" />
  </interface>
  <interface name="ShapeRangeDisp" GUID="{000C031D-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <procedure name="Align" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="AlignCmd" type="TOleEnum" />
        <parameter name="RelativeTo" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Apply" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Distribute" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="DistributeCmd" type="TOleEnum" />
        <parameter name="RelativeTo" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Duplicate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="Flip" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FlipCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="IncrementLeft" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementRotation" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementTop" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <function name="Group" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="PickUp" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Regroup" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <procedure name="RerouteConnections" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ScaleHeight" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="fScale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="ScaleWidth" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Factor" type="Single" />
        <parameter name="RelativeToOriginalSize" type="TOleEnum" />
        <parameter name="fScale" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Select" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Replace" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="SetShapesDefaultProperties" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Ungroup" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="ZOrder" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ZOrderCmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Adjustments" visibility="automated" type="Adjustments" />
    <property name="AutoShapeType" visibility="automated" type="TOleEnum" />
    <property name="BlackWhiteMode" visibility="automated" type="TOleEnum" />
    <property name="Callout" visibility="automated" type="CalloutFormat" />
    <property name="ConnectionSiteCount" visibility="automated" type="Integer" />
    <property name="Connector" visibility="automated" type="TOleEnum" />
    <property name="ConnectorFormat" visibility="automated" type="ConnectorFormat" />
    <property name="Fill" visibility="automated" type="FillFormat" />
    <property name="GroupItems" visibility="automated" type="GroupShapes" />
    <property name="Height" visibility="automated" type="Single" />
    <property name="HorizontalFlip" visibility="automated" type="TOleEnum" />
    <property name="Left" visibility="automated" type="Single" />
    <property name="Line" visibility="automated" type="LineFormat" />
    <property name="LockAspectRatio" visibility="automated" type="TOleEnum" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Nodes" visibility="automated" type="ShapeNodes" />
    <property name="Rotation" visibility="automated" type="Single" />
    <property name="PictureFormat" visibility="automated" type="PictureFormat" />
    <property name="Shadow" visibility="automated" type="ShadowFormat" />
    <property name="TextEffect" visibility="automated" type="TextEffectFormat" />
    <property name="TextFrame" visibility="automated" type="TextFrame" />
    <property name="ThreeD" visibility="automated" type="ThreeDFormat" />
    <property name="Top" visibility="automated" type="Single" />
    <property name="Type_" visibility="automated" type="TOleEnum" />
    <property name="VerticalFlip" visibility="automated" type="TOleEnum" />
    <property name="Vertices" visibility="automated" type="OleVariant" />
    <property name="Visible" visibility="automated" type="TOleEnum" />
    <property name="Width" visibility="automated" type="Single" />
    <property name="ZOrderPosition" visibility="automated" type="Integer" />
    <property name="Script" visibility="automated" type="Script" />
    <property name="AlternativeText" visibility="automated" type="WideString" />
    <property name="HasDiagram" visibility="automated" type="TOleEnum" />
    <property name="Diagram" visibility="automated" type="IMsoDiagram" />
    <property name="HasDiagramNode" visibility="automated" type="TOleEnum" />
    <property name="DiagramNode" visibility="automated" type="DiagramNode" />
    <property name="Child" visibility="automated" type="TOleEnum" />
    <property name="ParentGroup" visibility="automated" type="Shape" />
    <property name="CanvasItems" visibility="automated" type="CanvasShapes" />
    <property name="Id" visibility="automated" type="Integer" />
    <procedure name="CanvasCropLeft" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="CanvasCropTop" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="CanvasCropRight" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="CanvasCropBottom" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <property name="RTF" visibility="automated" type="WideString" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="Shapes" GUID="{000C031E-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="AddCallout" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddConnector" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="BeginX" type="Single" />
        <parameter name="BeginY" type="Single" />
        <parameter name="EndX" type="Single" />
        <parameter name="EndY" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddCurve" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SafeArrayOfPoints" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddLabel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Orientation" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddLine" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BeginX" type="Single" />
        <parameter name="BeginY" type="Single" />
        <parameter name="EndX" type="Single" />
        <parameter name="EndY" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddPicture" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="LinkToFile" type="TOleEnum" />
        <parameter name="SaveWithDocument" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddPolyline" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SafeArrayOfPoints" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddTextEffect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetTextEffect" type="TOleEnum" />
        <parameter name="Text" type="WideString" paramflags="const" />
        <parameter name="FontName" type="WideString" paramflags="const" />
        <parameter name="FontSize" type="Single" />
        <parameter name="FontBold" type="TOleEnum" />
        <parameter name="FontItalic" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddTextbox" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Orientation" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="BuildFreeform" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <retval type="FreeformBuilder" />
      </parameters>
    </function>
    <function name="Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="SelectAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_Background" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get_Default" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddDiagram" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddCanvas" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Background" visibility="public" read="Get_Background" type="Shape" />
    <property name="Default" visibility="public" read="Get_Default" type="Shape" />
  </interface>
  <interface name="ShapesDisp" GUID="{000C031E-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <function name="AddCallout" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddConnector" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="BeginX" type="Single" />
        <parameter name="BeginY" type="Single" />
        <parameter name="EndX" type="Single" />
        <parameter name="EndY" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddCurve" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="SafeArrayOfPoints" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddLabel" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Orientation" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddLine" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="BeginX" type="Single" />
        <parameter name="BeginY" type="Single" />
        <parameter name="EndX" type="Single" />
        <parameter name="EndY" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddPicture" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="LinkToFile" type="TOleEnum" />
        <parameter name="SaveWithDocument" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddPolyline" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="SafeArrayOfPoints" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddShape" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddTextEffect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="PresetTextEffect" type="TOleEnum" />
        <parameter name="Text" type="WideString" paramflags="const" />
        <parameter name="FontName" type="WideString" paramflags="const" />
        <parameter name="FontSize" type="Single" />
        <parameter name="FontBold" type="TOleEnum" />
        <parameter name="FontItalic" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddTextbox" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Orientation" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="BuildFreeform" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <retval type="FreeformBuilder" />
      </parameters>
    </function>
    <function name="Range" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="SelectAll" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Background" visibility="automated" type="Shape" />
    <property name="Default" visibility="automated" type="Shape" />
    <function name="AddDiagram" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddCanvas" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="TextEffectFormat" GUID="{000C031F-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="ToggleVerticalText" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Alignment" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Alignment" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_FontBold" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_FontBold" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FontBold" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_FontItalic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_FontItalic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FontItalic" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_FontName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_FontName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FontName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_FontSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_FontSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FontSize" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_KernedPairs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_KernedPairs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="KernedPairs" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_NormalizedHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_NormalizedHeight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="NormalizedHeight" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PresetShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_PresetShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetShape" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PresetTextEffect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_PresetTextEffect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Preset" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_RotatedChars" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_RotatedChars" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RotatedChars" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Text" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Tracking" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Tracking" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Tracking" type="Single" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Alignment" visibility="public" read="Get_Alignment" write="Set_Alignment" type="TOleEnum" />
    <property name="FontBold" visibility="public" read="Get_FontBold" write="Set_FontBold" type="TOleEnum" />
    <property name="FontItalic" visibility="public" read="Get_FontItalic" write="Set_FontItalic" type="TOleEnum" />
    <property name="FontName" visibility="public" read="Get_FontName" write="Set_FontName" type="WideString" default="0" />
    <property name="FontSize" visibility="public" read="Get_FontSize" write="Set_FontSize" type="Single" default="0" />
    <property name="KernedPairs" visibility="public" read="Get_KernedPairs" write="Set_KernedPairs" type="TOleEnum" />
    <property name="NormalizedHeight" visibility="public" read="Get_NormalizedHeight" write="Set_NormalizedHeight" type="TOleEnum" />
    <property name="PresetShape" visibility="public" read="Get_PresetShape" write="Set_PresetShape" type="TOleEnum" />
    <property name="PresetTextEffect" visibility="public" read="Get_PresetTextEffect" write="Set_PresetTextEffect" type="TOleEnum" />
    <property name="RotatedChars" visibility="public" read="Get_RotatedChars" write="Set_RotatedChars" type="TOleEnum" />
    <property name="Text" visibility="public" read="Get_Text" write="Set_Text" type="WideString" default="0" />
    <property name="Tracking" visibility="public" read="Get_Tracking" write="Set_Tracking" type="Single" default="0" />
  </interface>
  <interface name="TextEffectFormatDisp" GUID="{000C031F-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="ToggleVerticalText" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Alignment" visibility="automated" type="TOleEnum" />
    <property name="FontBold" visibility="automated" type="TOleEnum" />
    <property name="FontItalic" visibility="automated" type="TOleEnum" />
    <property name="FontName" visibility="automated" type="WideString" />
    <property name="FontSize" visibility="automated" type="Single" />
    <property name="KernedPairs" visibility="automated" type="TOleEnum" />
    <property name="NormalizedHeight" visibility="automated" type="TOleEnum" />
    <property name="PresetShape" visibility="automated" type="TOleEnum" />
    <property name="PresetTextEffect" visibility="automated" type="TOleEnum" />
    <property name="RotatedChars" visibility="automated" type="TOleEnum" />
    <property name="Text" visibility="automated" type="WideString" />
    <property name="Tracking" visibility="automated" type="Single" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="TextFrame" GUID="{000C0320-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_MarginBottom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_MarginBottom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="MarginBottom" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_MarginLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_MarginLeft" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="MarginLeft" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_MarginRight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_MarginRight" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="MarginRight" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_MarginTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_MarginTop" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="MarginTop" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Orientation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Orientation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Orientation" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="MarginBottom" visibility="public" read="Get_MarginBottom" write="Set_MarginBottom" type="Single" default="0" />
    <property name="MarginLeft" visibility="public" read="Get_MarginLeft" write="Set_MarginLeft" type="Single" default="0" />
    <property name="MarginRight" visibility="public" read="Get_MarginRight" write="Set_MarginRight" type="Single" default="0" />
    <property name="MarginTop" visibility="public" read="Get_MarginTop" write="Set_MarginTop" type="Single" default="0" />
    <property name="Orientation" visibility="public" read="Get_Orientation" write="Set_Orientation" type="TOleEnum" />
  </interface>
  <interface name="TextFrameDisp" GUID="{000C0320-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="MarginBottom" visibility="automated" type="Single" />
    <property name="MarginLeft" visibility="automated" type="Single" />
    <property name="MarginRight" visibility="automated" type="Single" />
    <property name="MarginTop" visibility="automated" type="Single" />
    <property name="Orientation" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ThreeDFormat" GUID="{000C0321-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="IncrementRotationX" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementRotationY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="ResetRotation" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SetThreeDFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetThreeDFormat" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetExtrusionDirection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetExtrusionDirection" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Depth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_Depth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Depth" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_ExtrusionColor" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ColorFormat" />
      </parameters>
    </function>
    <function name="Get_ExtrusionColorType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_ExtrusionColorType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ExtrusionColorType" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Perspective" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Perspective" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Perspective" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PresetExtrusionDirection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_PresetLightingDirection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_PresetLightingDirection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetLightingDirection" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PresetLightingSoftness" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_PresetLightingSoftness" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetLightingSoftness" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PresetMaterial" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_PresetMaterial" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetMaterial" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_PresetThreeDFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_RotationX" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_RotationX" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RotationX" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_RotationY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_RotationY" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RotationY" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Visible" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Depth" visibility="public" read="Get_Depth" write="Set_Depth" type="Single" default="0" />
    <property name="ExtrusionColor" visibility="public" read="Get_ExtrusionColor" type="ColorFormat" />
    <property name="ExtrusionColorType" visibility="public" read="Get_ExtrusionColorType" write="Set_ExtrusionColorType" type="TOleEnum" />
    <property name="Perspective" visibility="public" read="Get_Perspective" write="Set_Perspective" type="TOleEnum" />
    <property name="PresetExtrusionDirection" visibility="public" read="Get_PresetExtrusionDirection" type="TOleEnum" />
    <property name="PresetLightingDirection" visibility="public" read="Get_PresetLightingDirection" write="Set_PresetLightingDirection" type="TOleEnum" />
    <property name="PresetLightingSoftness" visibility="public" read="Get_PresetLightingSoftness" write="Set_PresetLightingSoftness" type="TOleEnum" />
    <property name="PresetMaterial" visibility="public" read="Get_PresetMaterial" write="Set_PresetMaterial" type="TOleEnum" />
    <property name="PresetThreeDFormat" visibility="public" read="Get_PresetThreeDFormat" type="TOleEnum" />
    <property name="RotationX" visibility="public" read="Get_RotationX" write="Set_RotationX" type="Single" default="0" />
    <property name="RotationY" visibility="public" read="Get_RotationY" write="Set_RotationY" type="Single" default="0" />
    <property name="Visible" visibility="public" read="Get_Visible" write="Set_Visible" type="TOleEnum" />
  </interface>
  <interface name="ThreeDFormatDisp" GUID="{000C0321-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="IncrementRotationX" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="IncrementRotationY" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Increment" type="Single" />
      </parameters>
    </procedure>
    <procedure name="ResetRotation" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetThreeDFormat" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="PresetThreeDFormat" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SetExtrusionDirection" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="PresetExtrusionDirection" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Depth" visibility="automated" type="Single" />
    <property name="ExtrusionColor" visibility="automated" type="ColorFormat" />
    <property name="ExtrusionColorType" visibility="automated" type="TOleEnum" />
    <property name="Perspective" visibility="automated" type="TOleEnum" />
    <property name="PresetExtrusionDirection" visibility="automated" type="TOleEnum" />
    <property name="PresetLightingDirection" visibility="automated" type="TOleEnum" />
    <property name="PresetLightingSoftness" visibility="automated" type="TOleEnum" />
    <property name="PresetMaterial" visibility="automated" type="TOleEnum" />
    <property name="PresetThreeDFormat" visibility="automated" type="TOleEnum" />
    <property name="RotationX" visibility="automated" type="Single" />
    <property name="RotationY" visibility="automated" type="Single" />
    <property name="Visible" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="IMsoDispCagNotifySink" GUID="{000C0359-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <procedure name="InsertClip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pClipMoniker" type="IInterface" paramflags="const" />
        <parameter name="pItemMoniker" type="IInterface" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="WindowIsClosing" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
  </interface>
  <interface name="IMsoDispCagNotifySinkDisp" GUID="{000C0359-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <procedure name="InsertClip" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="pClipMoniker" type="IInterface" paramflags="const" />
        <parameter name="pItemMoniker" type="IInterface" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="WindowIsClosing" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="Balloon" GUID="{000C0324-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Checkboxes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Labels" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Set_BalloonType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbty" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_BalloonType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Icon" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="picn" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Icon" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Heading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Heading" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Mode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pmd" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Mode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Animation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pfca" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Animation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Button" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="psbs" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Button" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Callback" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Callback" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Private_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="plPrivate" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Private_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="SetAvoidRectangle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Left" type="Integer" />
        <parameter name="Top" type="Integer" />
        <parameter name="Right" type="Integer" />
        <parameter name="Bottom" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Show" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Close" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Checkboxes" visibility="public" read="Get_Checkboxes" type="IDispatch" />
    <property name="Labels" visibility="public" read="Get_Labels" type="IDispatch" />
    <property name="BalloonType" visibility="public" write="Set_BalloonType" type="TOleEnum" />
    <property name="Icon" visibility="public" write="Set_Icon" type="TOleEnum" />
    <property name="Heading" visibility="public" write="Set_Heading" type="WideString" default="0" />
    <property name="Text" visibility="public" write="Set_Text" type="WideString" default="0" />
    <property name="Mode" visibility="public" write="Set_Mode" type="TOleEnum" />
    <property name="Animation" visibility="public" write="Set_Animation" type="TOleEnum" />
    <property name="Button" visibility="public" write="Set_Button" type="TOleEnum" />
    <property name="Callback" visibility="public" write="Set_Callback" type="WideString" default="0" />
    <property name="Private_" visibility="public" write="Set_Private_" type="Integer" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
  </interface>
  <interface name="BalloonDisp" GUID="{000C0324-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Checkboxes" visibility="automated" type="IDispatch" />
    <property name="Labels" visibility="automated" type="IDispatch" />
    <property name="BalloonType" visibility="automated" type="TOleEnum" />
    <property name="Icon" visibility="automated" type="TOleEnum" />
    <property name="Heading" visibility="automated" type="WideString" />
    <property name="Text" visibility="automated" type="WideString" />
    <property name="Mode" visibility="automated" type="TOleEnum" />
    <property name="Animation" visibility="automated" type="TOleEnum" />
    <property name="Button" visibility="automated" type="TOleEnum" />
    <property name="Callback" visibility="automated" type="WideString" />
    <property name="Private_" visibility="automated" type="Integer" />
    <procedure name="SetAvoidRectangle" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Left" type="Integer" />
        <parameter name="Top" type="Integer" />
        <parameter name="Right" type="Integer" />
        <parameter name="Bottom" type="Integer" />
      </parameters>
    </procedure>
    <property name="Name" visibility="automated" type="WideString" />
    <function name="Show" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Close" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="BalloonCheckboxes" GUID="{000C0326-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pccbx" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Item[Index]" visibility="public" read="Get_Item" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="BalloonCheckboxesDisp" GUID="{000C0326-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Item[Index]" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="BalloonCheckbox" GUID="{000C0328-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Set_Checked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfChecked" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Checked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <property name="Item" visibility="public" read="Get_Item" type="WideString" default="0" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Checked" visibility="public" write="Set_Checked" type="WordBool" />
    <property name="Text" visibility="public" write="Set_Text" type="WideString" default="0" />
  </interface>
  <interface name="BalloonCheckboxDisp" GUID="{000C0328-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Item" visibility="automated" type="WideString" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Checked" visibility="automated" type="WordBool" />
    <property name="Text" visibility="automated" type="WideString" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="BalloonLabels" GUID="{000C032E-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pcwz" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Item[Index]" visibility="public" read="Get_Item" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="BalloonLabelsDisp" GUID="{000C032E-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Item[Index]" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="BalloonLabel" GUID="{000C0330-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Set_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <property name="Item" visibility="public" read="Get_Item" type="WideString" default="0" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Text" visibility="public" write="Set_Text" type="WideString" default="0" />
  </interface>
  <interface name="BalloonLabelDisp" GUID="{000C0330-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Item" visibility="automated" type="WideString" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Text" visibility="automated" type="WideString" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="AnswerWizardFiles" GUID="{000C0361-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Item[Index]" visibility="public" read="Get_Item" type="WideString" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="AnswerWizardFilesDisp" GUID="{000C0361-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Item[Index]" visibility="automated" type="WideString" />
    <property name="Count" visibility="automated" type="Integer" />
    <procedure name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="AnswerWizard" GUID="{000C0360-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Files" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="AnswerWizardFiles" />
      </parameters>
    </function>
    <procedure name="ClearFileList" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="ResetFileList" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Files" visibility="public" read="Get_Files" type="AnswerWizardFiles" />
  </interface>
  <interface name="AnswerWizardDisp" GUID="{000C0360-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Files" visibility="automated" type="AnswerWizardFiles" />
    <procedure name="ClearFileList" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="ResetFileList" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="Assistant" GUID="{000C0322-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Move" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Set_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pyTop" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Top" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pxLeft" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Left" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Help" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="StartWizard" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="On_" type="WordBool" />
        <parameter name="Callback" type="WideString" paramflags="const" />
        <parameter name="PrivateX" type="Integer" />
        <parameter name="Animation" type="OleVariant" />
        <parameter name="CustomTeaser" type="OleVariant" />
        <parameter name="Top" type="OleVariant" />
        <parameter name="Left" type="OleVariant" />
        <parameter name="Bottom" type="OleVariant" />
        <parameter name="Right" type="OleVariant" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="EndWizard" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="WizardID" type="Integer" />
        <parameter name="varfSuccess" type="WordBool" />
        <parameter name="Animation" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="ActivateWizard" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="WizardID" type="Integer" />
        <parameter name="act" type="TOleEnum" />
        <parameter name="Animation" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="ResetTips" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_NewBalloon" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Balloon" />
      </parameters>
    </function>
    <function name="Get_BalloonError" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Visible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfVisible" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Animation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Animation" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pfca" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Reduced" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Reduced" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfReduced" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Set_AssistWithHelp" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfAssistWithHelp" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AssistWithHelp" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AssistWithWizards" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfAssistWithWizards" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AssistWithWizards" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AssistWithAlerts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfAssistWithAlerts" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_AssistWithAlerts" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MoveWhenInTheWay" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfMove" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MoveWhenInTheWay" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Sounds" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfSounds" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Sounds" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_FeatureTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfFeatures" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_FeatureTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MouseTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfMouse" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MouseTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_KeyboardShortcutTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfKeyboardShortcuts" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_KeyboardShortcutTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_HighPriorityTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfHighPriorityTips" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_HighPriorityTips" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_TipOfDay" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfTipOfDay" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_TipOfDay" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_GuessHelp" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfGuessHelp" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_GuessHelp" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SearchWhenProgramming" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfSearchInProgram" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_SearchWhenProgramming" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_FileName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_FileName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_On_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_On_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfOn" type="WordBool" />
      </parameters>
    </procedure>
    <function name="DoAlert" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrAlertTitle" type="WideString" paramflags="const" />
        <parameter name="bstrAlertText" type="WideString" paramflags="const" />
        <parameter name="alb" type="TOleEnum" />
        <parameter name="alc" type="TOleEnum" />
        <parameter name="ald" type="TOleEnum" />
        <parameter name="alq" type="TOleEnum" />
        <parameter name="varfSysAlert" type="WordBool" />
        <retval type="Integer" />
      </parameters>
    </function>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Top" visibility="public" write="Set_Top" type="Integer" />
    <property name="Left" visibility="public" write="Set_Left" type="Integer" />
    <property name="NewBalloon" visibility="public" read="Get_NewBalloon" type="Balloon" />
    <property name="BalloonError" visibility="public" read="Get_BalloonError" type="TOleEnum" />
    <property name="Visible" visibility="public" read="Get_Visible" type="WordBool" />
    <property name="Animation" visibility="public" read="Get_Animation" type="TOleEnum" />
    <property name="Reduced" visibility="public" read="Get_Reduced" type="WordBool" />
    <property name="AssistWithHelp" visibility="public" write="Set_AssistWithHelp" type="WordBool" />
    <property name="AssistWithWizards" visibility="public" write="Set_AssistWithWizards" type="WordBool" />
    <property name="AssistWithAlerts" visibility="public" write="Set_AssistWithAlerts" type="WordBool" />
    <property name="MoveWhenInTheWay" visibility="public" write="Set_MoveWhenInTheWay" type="WordBool" />
    <property name="Sounds" visibility="public" write="Set_Sounds" type="WordBool" />
    <property name="FeatureTips" visibility="public" write="Set_FeatureTips" type="WordBool" />
    <property name="MouseTips" visibility="public" write="Set_MouseTips" type="WordBool" />
    <property name="KeyboardShortcutTips" visibility="public" write="Set_KeyboardShortcutTips" type="WordBool" />
    <property name="HighPriorityTips" visibility="public" write="Set_HighPriorityTips" type="WordBool" />
    <property name="TipOfDay" visibility="public" write="Set_TipOfDay" type="WordBool" />
    <property name="GuessHelp" visibility="public" write="Set_GuessHelp" type="WordBool" />
    <property name="SearchWhenProgramming" visibility="public" write="Set_SearchWhenProgramming" type="WordBool" />
    <property name="Item" visibility="public" read="Get_Item" type="WideString" default="0" />
    <property name="FileName" visibility="public" read="Get_FileName" type="WideString" default="0" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="On_" visibility="public" read="Get_On_" type="WordBool" />
  </interface>
  <interface name="AssistantDisp" GUID="{000C0322-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="Move" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="xLeft" type="Integer" />
        <parameter name="yTop" type="Integer" />
      </parameters>
    </procedure>
    <property name="Top" visibility="automated" type="Integer" />
    <property name="Left" visibility="automated" type="Integer" />
    <procedure name="Help" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="StartWizard" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="On_" type="WordBool" />
        <parameter name="Callback" type="WideString" paramflags="const" />
        <parameter name="PrivateX" type="Integer" />
        <parameter name="Animation" type="OleVariant" />
        <parameter name="CustomTeaser" type="OleVariant" />
        <parameter name="Top" type="OleVariant" />
        <parameter name="Left" type="OleVariant" />
        <parameter name="Bottom" type="OleVariant" />
        <parameter name="Right" type="OleVariant" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="EndWizard" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="WizardID" type="Integer" />
        <parameter name="varfSuccess" type="WordBool" />
        <parameter name="Animation" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="ActivateWizard" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="WizardID" type="Integer" />
        <parameter name="act" type="TOleEnum" />
        <parameter name="Animation" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="ResetTips" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="NewBalloon" visibility="automated" type="Balloon" />
    <property name="BalloonError" visibility="automated" type="TOleEnum" />
    <property name="Visible" visibility="automated" type="WordBool" />
    <property name="Animation" visibility="automated" type="TOleEnum" />
    <property name="Reduced" visibility="automated" type="WordBool" />
    <property name="AssistWithHelp" visibility="automated" type="WordBool" />
    <property name="AssistWithWizards" visibility="automated" type="WordBool" />
    <property name="AssistWithAlerts" visibility="automated" type="WordBool" />
    <property name="MoveWhenInTheWay" visibility="automated" type="WordBool" />
    <property name="Sounds" visibility="automated" type="WordBool" />
    <property name="FeatureTips" visibility="automated" type="WordBool" />
    <property name="MouseTips" visibility="automated" type="WordBool" />
    <property name="KeyboardShortcutTips" visibility="automated" type="WordBool" />
    <property name="HighPriorityTips" visibility="automated" type="WordBool" />
    <property name="TipOfDay" visibility="automated" type="WordBool" />
    <property name="GuessHelp" visibility="automated" type="WordBool" />
    <property name="SearchWhenProgramming" visibility="automated" type="WordBool" />
    <property name="Item" visibility="automated" type="WideString" />
    <property name="FileName" visibility="automated" type="WideString" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="On_" visibility="automated" type="WordBool" />
    <function name="DoAlert" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrAlertTitle" type="WideString" paramflags="const" />
        <parameter name="bstrAlertText" type="WideString" paramflags="const" />
        <parameter name="alb" type="TOleEnum" />
        <parameter name="alc" type="TOleEnum" />
        <parameter name="ald" type="TOleEnum" />
        <parameter name="alq" type="TOleEnum" />
        <parameter name="varfSysAlert" type="WordBool" />
        <retval type="Integer" />
      </parameters>
    </function>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="DocumentProperty" GUID="{2DF8D04E-5BFA-101B-BDE5-00AA0044DE52}" ancestor="IDispatch">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Delete" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="lcid" type="Integer" />
        <parameter name="pbstrRetVal" type="WideString" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Set_Name" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="lcid" type="Integer" />
        <parameter name="pbstrRetVal" type="WideString" paramflags="const" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_Value" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="lcid" type="Integer" />
        <parameter name="pvargRetVal" type="OleVariant" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Set_Value" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="lcid" type="Integer" />
        <parameter name="pvargRetVal" type="OleVariant" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_Type_" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="lcid" type="Integer" />
        <parameter name="ptypeRetVal" type="TOleEnum" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Set_Type_" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="lcid" type="Integer" />
        <parameter name="ptypeRetVal" type="TOleEnum" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_LinkToContent" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="pfLinkRetVal" type="WordBool" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Set_LinkToContent" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="pfLinkRetVal" type="WordBool" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_LinkSource" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="pbstrSourceRetVal" type="WideString" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Set_LinkSource" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="pbstrSourceRetVal" type="WideString" paramflags="const" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="ppidisp" type="IDispatch" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="plCreator" type="Integer" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
  </interface>
  <interface name="DocumentProperties" GUID="{2DF8D04D-5BFA-101B-BDE5-00AA0044DE52}" ancestor="IDispatch">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <parameter name="lcid" type="Integer" />
        <parameter name="ppIDocProp" type="DocumentProperty" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="pc" type="Integer" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="LinkToContent" type="WordBool" />
        <parameter name="Type_" type="OleVariant" />
        <parameter name="Value" type="OleVariant" />
        <parameter name="LinkSource" type="OleVariant" />
        <parameter name="lcid" type="Integer" />
        <parameter name="ppIDocProp" type="DocumentProperty" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="ppunkEnum" type="IInterface" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="ppidisp" type="IDispatch" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
    <function name="Get_Creator" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="plCreator" type="Integer" paramflags="out" />
        <retval type="HRESULT" />
      </parameters>
    </function>
  </interface>
  <interface name="IFoundFiles" GUID="{000C0338-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <property name="Item[Index]" visibility="public" read="Get_Item" type="WideString" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="IFoundFilesDisp" GUID="{000C0338-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Item[Index]" visibility="automated" type="WideString" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
  </interface>
  <interface name="IFind" GUID="{000C0337-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_SearchPath" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_SubDir" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Title" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Author" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Keywords" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Subject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Options" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_MatchCase" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_PatternMatch" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_DateSavedFrom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_DateSavedTo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_SavedBy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_DateCreatedFrom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_DateCreatedTo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_View" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_SortBy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_ListBy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_SelectedFile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Results" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IFoundFiles" />
      </parameters>
    </function>
    <function name="Show" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_SearchPath" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_SubDir" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="retval" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Set_Title" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_Author" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_Keywords" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_Subject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_Options" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="penmOptions" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Set_MatchCase" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="retval" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Set_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_PatternMatch" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="retval" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Set_DateSavedFrom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdatSavedFrom" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="Set_DateSavedTo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdatSavedTo" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="Set_SavedBy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Set_DateCreatedFrom" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdatCreatedFrom" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="Set_DateCreatedTo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdatCreatedTo" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="Set_View" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="penmView" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Set_SortBy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="penmSortBy" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Set_ListBy" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="penmListBy" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Set_SelectedFile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pintSelectedFile" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Execute" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Load" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrQueryName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Save" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrQueryName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrQueryName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_FileType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_FileType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="plFileType" type="Integer" />
      </parameters>
    </procedure>
    <property name="SearchPath" visibility="public" read="Get_SearchPath" write="Set_SearchPath" type="WideString" default="0" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="SubDir" visibility="public" read="Get_SubDir" type="WordBool" />
    <property name="Title" visibility="public" read="Get_Title" type="WideString" default="0" />
    <property name="Author" visibility="public" read="Get_Author" type="WideString" default="0" />
    <property name="Keywords" visibility="public" read="Get_Keywords" type="WideString" default="0" />
    <property name="Subject" visibility="public" read="Get_Subject" type="WideString" default="0" />
    <property name="Options" visibility="public" read="Get_Options" type="TOleEnum" />
    <property name="MatchCase" visibility="public" read="Get_MatchCase" type="WordBool" />
    <property name="Text" visibility="public" read="Get_Text" type="WideString" default="0" />
    <property name="PatternMatch" visibility="public" read="Get_PatternMatch" type="WordBool" />
    <property name="DateSavedFrom" visibility="public" read="Get_DateSavedFrom" type="OleVariant" default="0" />
    <property name="DateSavedTo" visibility="public" read="Get_DateSavedTo" type="OleVariant" default="0" />
    <property name="SavedBy" visibility="public" read="Get_SavedBy" type="WideString" default="0" />
    <property name="DateCreatedFrom" visibility="public" read="Get_DateCreatedFrom" type="OleVariant" default="0" />
    <property name="DateCreatedTo" visibility="public" read="Get_DateCreatedTo" type="OleVariant" default="0" />
    <property name="View" visibility="public" read="Get_View" type="TOleEnum" />
    <property name="SortBy" visibility="public" read="Get_SortBy" type="TOleEnum" />
    <property name="ListBy" visibility="public" read="Get_ListBy" type="TOleEnum" />
    <property name="SelectedFile" visibility="public" read="Get_SelectedFile" type="Integer" />
    <property name="Results" visibility="public" read="Get_Results" type="IFoundFiles" />
    <property name="FileType" visibility="public" read="Get_FileType" type="Integer" />
  </interface>
  <interface name="IFindDisp" GUID="{000C0337-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="SearchPath" visibility="automated" type="WideString" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="SubDir" visibility="automated" type="WordBool" />
    <property name="Title" visibility="automated" type="WideString" />
    <property name="Author" visibility="automated" type="WideString" />
    <property name="Keywords" visibility="automated" type="WideString" />
    <property name="Subject" visibility="automated" type="WideString" />
    <property name="Options" visibility="automated" type="TOleEnum" />
    <property name="MatchCase" visibility="automated" type="WordBool" />
    <property name="Text" visibility="automated" type="WideString" />
    <property name="PatternMatch" visibility="automated" type="WordBool" />
    <property name="DateSavedFrom" visibility="automated" type="OleVariant" />
    <property name="DateSavedTo" visibility="automated" type="OleVariant" />
    <property name="SavedBy" visibility="automated" type="WideString" />
    <property name="DateCreatedFrom" visibility="automated" type="OleVariant" />
    <property name="DateCreatedTo" visibility="automated" type="OleVariant" />
    <property name="View" visibility="automated" type="TOleEnum" />
    <property name="SortBy" visibility="automated" type="TOleEnum" />
    <property name="ListBy" visibility="automated" type="TOleEnum" />
    <property name="SelectedFile" visibility="automated" type="Integer" />
    <property name="Results" visibility="automated" type="IFoundFiles" />
    <function name="Show" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Execute" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Load" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrQueryName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Save" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrQueryName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrQueryName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="FileType" visibility="automated" type="Integer" />
  </interface>
  <interface name="FoundFiles" GUID="{000C0331-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="lcid" type="Integer" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <property name="Item[Index][lcid]" visibility="public" read="Get_Item" type="WideString" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="FoundFilesDisp" GUID="{000C0331-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Item[Index][lcid]" visibility="automated" type="WideString" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="PropertyTest" GUID="{000C0333-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Condition" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Value" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_SecondValue" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_Connector" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Condition" visibility="public" read="Get_Condition" type="TOleEnum" />
    <property name="Value" visibility="public" read="Get_Value" type="OleVariant" default="0" />
    <property name="SecondValue" visibility="public" read="Get_SecondValue" type="OleVariant" default="0" />
    <property name="Connector" visibility="public" read="Get_Connector" type="TOleEnum" />
  </interface>
  <interface name="PropertyTestDisp" GUID="{000C0333-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Condition" visibility="automated" type="TOleEnum" />
    <property name="Value" visibility="automated" type="OleVariant" />
    <property name="SecondValue" visibility="automated" type="OleVariant" />
    <property name="Connector" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="PropertyTests" GUID="{000C0334-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="lcid" type="Integer" />
        <retval type="PropertyTest" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Condition" type="TOleEnum" />
        <parameter name="Value" type="OleVariant" />
        <parameter name="SecondValue" type="OleVariant" />
        <parameter name="Connector" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Remove" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <property name="Item[Index][lcid]" visibility="public" read="Get_Item" type="PropertyTest" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="PropertyTestsDisp" GUID="{000C0334-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Item[Index][lcid]" visibility="automated" type="PropertyTest" />
    <property name="Count" visibility="automated" type="Integer" />
    <procedure name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Name" type="WideString" paramflags="const" />
        <parameter name="Condition" type="TOleEnum" />
        <parameter name="Value" type="OleVariant" />
        <parameter name="SecondValue" type="OleVariant" />
        <parameter name="Connector" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Remove" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="FileSearch" GUID="{000C0332-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_SearchSubFolders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_SearchSubFolders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SearchSubFoldersRetVal" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchTextExactly" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchTextExactly" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="MatchTextRetVal" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_MatchAllWordForms" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_MatchAllWordForms" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="MatchAllWordFormsRetVal" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_FileName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_FileName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileNameRetVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_FileType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_FileType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileTypeRetVal" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_LastModified" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_LastModified" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="LastModifiedRetVal" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_TextOrProperty" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_TextOrProperty" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="TextOrProperty" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_LookIn" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_LookIn" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="LookInRetVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Execute" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SortBy" type="TOleEnum" />
        <parameter name="SortOrder" type="TOleEnum" />
        <parameter name="AlwaysAccurate" type="WordBool" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="NewSearch" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_FoundFiles" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FoundFiles" />
      </parameters>
    </function>
    <function name="Get_PropertyTests" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="PropertyTests" />
      </parameters>
    </function>
    <function name="Get_SearchScopes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="SearchScopes" />
      </parameters>
    </function>
    <function name="Get_SearchFolders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="SearchFolders" />
      </parameters>
    </function>
    <function name="Get_FileTypes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FileTypes" />
      </parameters>
    </function>
    <procedure name="RefreshScopes" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="SearchSubFolders" visibility="public" read="Get_SearchSubFolders" write="Set_SearchSubFolders" type="WordBool" />
    <property name="MatchTextExactly" visibility="public" read="Get_MatchTextExactly" write="Set_MatchTextExactly" type="WordBool" />
    <property name="MatchAllWordForms" visibility="public" read="Get_MatchAllWordForms" write="Set_MatchAllWordForms" type="WordBool" />
    <property name="FileName" visibility="public" read="Get_FileName" write="Set_FileName" type="WideString" default="0" />
    <property name="FileType" visibility="public" read="Get_FileType" write="Set_FileType" type="TOleEnum" />
    <property name="LastModified" visibility="public" read="Get_LastModified" write="Set_LastModified" type="TOleEnum" />
    <property name="TextOrProperty" visibility="public" read="Get_TextOrProperty" write="Set_TextOrProperty" type="WideString" default="0" />
    <property name="LookIn" visibility="public" read="Get_LookIn" write="Set_LookIn" type="WideString" default="0" />
    <property name="FoundFiles" visibility="public" read="Get_FoundFiles" type="FoundFiles" />
    <property name="PropertyTests" visibility="public" read="Get_PropertyTests" type="PropertyTests" />
    <property name="SearchScopes" visibility="public" read="Get_SearchScopes" type="SearchScopes" />
    <property name="SearchFolders" visibility="public" read="Get_SearchFolders" type="SearchFolders" />
    <property name="FileTypes" visibility="public" read="Get_FileTypes" type="FileTypes" />
  </interface>
  <interface name="FileSearchDisp" GUID="{000C0332-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="SearchSubFolders" visibility="automated" type="WordBool" />
    <property name="MatchTextExactly" visibility="automated" type="WordBool" />
    <property name="MatchAllWordForms" visibility="automated" type="WordBool" />
    <property name="FileName" visibility="automated" type="WideString" />
    <property name="FileType" visibility="automated" type="TOleEnum" />
    <property name="LastModified" visibility="automated" type="TOleEnum" />
    <property name="TextOrProperty" visibility="automated" type="WideString" />
    <property name="LookIn" visibility="automated" type="WideString" />
    <function name="Execute" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="SortBy" type="TOleEnum" />
        <parameter name="SortOrder" type="TOleEnum" />
        <parameter name="AlwaysAccurate" type="WordBool" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="NewSearch" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="FoundFiles" visibility="automated" type="FoundFiles" />
    <property name="PropertyTests" visibility="automated" type="PropertyTests" />
    <property name="SearchScopes" visibility="automated" type="SearchScopes" />
    <property name="SearchFolders" visibility="automated" type="SearchFolders" />
    <property name="FileTypes" visibility="automated" type="FileTypes" />
    <procedure name="RefreshScopes" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="COMAddIn" GUID="{000C033A-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Description" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Description" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ProgId" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Guid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Connect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_Connect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_Object_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Set_Object_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="IDispatch" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <property name="Description" visibility="public" read="Get_Description" write="Set_Description" type="WideString" default="0" />
    <property name="ProgId" visibility="public" read="Get_ProgId" type="WideString" default="0" />
    <property name="Guid" visibility="public" read="Get_Guid" type="WideString" default="0" />
    <property name="Connect" visibility="public" read="Get_Connect" write="Set_Connect" type="WordBool" />
    <property name="Object_" visibility="public" read="Get_Object_" write="Set_Object_" type="IDispatch" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="COMAddInDisp" GUID="{000C033A-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Description" visibility="automated" type="WideString" />
    <property name="ProgId" visibility="automated" type="WideString" />
    <property name="Guid" visibility="automated" type="WideString" />
    <property name="Connect" visibility="automated" type="WordBool" />
    <property name="Object_" visibility="automated" type="IDispatch" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="COMAddIns" GUID="{000C0339-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="COMAddIn" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <procedure name="Update" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="SetAppModal" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varfModal" type="WordBool" />
      </parameters>
    </procedure>
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="COMAddInsDisp" GUID="{000C0339-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="COMAddIn" />
      </parameters>
    </function>
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <procedure name="Update" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="SetAppModal" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="varfModal" type="WordBool" />
      </parameters>
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="LanguageSettings" GUID="{000C0353-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_LanguageID" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Id" type="TOleEnum" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_LanguagePreferredForEditing" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="lid" type="TOleEnum" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <property name="LanguageID[Id]" visibility="public" read="Get_LanguageID" type="Integer" />
    <property name="LanguagePreferredForEditing[lid]" visibility="public" read="Get_LanguagePreferredForEditing" type="WordBool" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="LanguageSettingsDisp" GUID="{000C0353-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="LanguageID[Id]" visibility="automated" type="Integer" />
    <property name="LanguagePreferredForEditing[lid]" visibility="automated" type="WordBool" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ICommandBarsEvents" GUID="{55F88892-7708-11D1-ACEB-006008961DA5}" ancestor="IDispatch">
    <procedure name="OnUpdate" visibility="public" procflags="abstract virtual" callconv="stdcall">
    </procedure>
  </interface>
  <interface name="ICommandBarsEventsDisp" GUID="{55F88892-7708-11D1-ACEB-006008961DA5}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <procedure name="OnUpdate" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="_CommandBarsEvents" GUID="{000C0352-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <procedure name="OnUpdate" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="ICommandBarComboBoxEvents" GUID="{55F88896-7708-11D1-ACEB-006008961DA5}" ancestor="IDispatch">
    <procedure name="Change" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="Ctrl" type="_CommandBarComboBox" paramflags="const" />
      </parameters>
    </procedure>
  </interface>
  <interface name="ICommandBarComboBoxEventsDisp" GUID="{55F88896-7708-11D1-ACEB-006008961DA5}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <procedure name="Change" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Ctrl" type="_CommandBarComboBox" paramflags="const" />
      </parameters>
    </procedure>
  </interface>
  <interface name="_CommandBarComboBoxEvents" GUID="{000C0354-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <procedure name="Change" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Ctrl" type="_CommandBarComboBox" paramflags="const" />
      </parameters>
    </procedure>
  </interface>
  <interface name="ICommandBarButtonEvents" GUID="{55F88890-7708-11D1-ACEB-006008961DA5}" ancestor="IDispatch">
    <procedure name="Click" visibility="public" procflags="abstract virtual" callconv="stdcall">
      <parameters>
        <parameter name="Ctrl" type="_CommandBarButton" paramflags="const" />
        <parameter name="CancelDefault" type="WordBool" paramflags="var" />
      </parameters>
    </procedure>
  </interface>
  <interface name="ICommandBarButtonEventsDisp" GUID="{55F88890-7708-11D1-ACEB-006008961DA5}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <procedure name="Click" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Ctrl" type="_CommandBarButton" paramflags="const" />
        <parameter name="CancelDefault" type="WordBool" paramflags="var" />
      </parameters>
    </procedure>
  </interface>
  <interface name="_CommandBarButtonEvents" GUID="{000C0351-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <procedure name="Click" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Ctrl" type="_CommandBarButton" paramflags="const" />
        <parameter name="CancelDefault" type="WordBool" paramflags="var" />
      </parameters>
    </procedure>
  </interface>
  <interface name="WebPageFont" GUID="{000C0913-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_ProportionalFont" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ProportionalFont" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ProportionalFontSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_ProportionalFontSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pf" type="Single" />
      </parameters>
    </procedure>
    <function name="Get_FixedWidthFont" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_FixedWidthFont" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pstr" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_FixedWidthFontSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Single" />
      </parameters>
    </function>
    <procedure name="Set_FixedWidthFontSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pf" type="Single" />
      </parameters>
    </procedure>
    <property name="ProportionalFont" visibility="public" read="Get_ProportionalFont" write="Set_ProportionalFont" type="WideString" default="0" />
    <property name="ProportionalFontSize" visibility="public" read="Get_ProportionalFontSize" write="Set_ProportionalFontSize" type="Single" default="0" />
    <property name="FixedWidthFont" visibility="public" read="Get_FixedWidthFont" write="Set_FixedWidthFont" type="WideString" default="0" />
    <property name="FixedWidthFontSize" visibility="public" read="Get_FixedWidthFontSize" write="Set_FixedWidthFontSize" type="Single" default="0" />
  </interface>
  <interface name="WebPageFontDisp" GUID="{000C0913-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="ProportionalFont" visibility="automated" type="WideString" />
    <property name="ProportionalFontSize" visibility="automated" type="Single" />
    <property name="FixedWidthFont" visibility="automated" type="WideString" />
    <property name="FixedWidthFontSize" visibility="automated" type="Single" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="WebPageFonts" GUID="{000C0914-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="TOleEnum" />
        <retval type="WebPageFont" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Item[Index]" visibility="public" read="Get_Item" type="WebPageFont" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="WebPageFontsDisp" GUID="{000C0914-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Item[Index]" visibility="automated" type="WebPageFont" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="HTMLProjectItem" GUID="{000C0358-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_IsOpen" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="LoadFromFile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Open" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="OpenKind" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SaveCopyAs" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Text" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Text" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="IsOpen" visibility="public" read="Get_IsOpen" type="WordBool" />
    <property name="Text" visibility="public" read="Get_Text" write="Set_Text" type="WideString" default="0" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="HTMLProjectItemDisp" GUID="{000C0358-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Name" visibility="automated" type="WideString" />
    <property name="IsOpen" visibility="automated" type="WordBool" />
    <procedure name="LoadFromFile" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Open" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="OpenKind" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="SaveCopyAs" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="Text" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="HTMLProjectItems" GUID="{000C0357-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="HTMLProjectItem" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="HTMLProjectItemsDisp" GUID="{000C0357-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" paramflags="var" />
        <retval type="HTMLProjectItem" />
      </parameters>
    </function>
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="HTMLProject" GUID="{000C0356-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_State" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="RefreshProject" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Refresh" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="RefreshDocument" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Refresh" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_HTMLProjectItems" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="HTMLProjectItems" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Open" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="OpenKind" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="State" visibility="public" read="Get_State" type="TOleEnum" />
    <property name="HTMLProjectItems" visibility="public" read="Get_HTMLProjectItems" type="HTMLProjectItems" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="HTMLProjectDisp" GUID="{000C0356-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="State" visibility="automated" type="TOleEnum" />
    <procedure name="RefreshProject" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Refresh" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="RefreshDocument" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Refresh" type="WordBool" />
      </parameters>
    </procedure>
    <property name="HTMLProjectItems" visibility="automated" type="HTMLProjectItems" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <procedure name="Open" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="OpenKind" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="MsoDebugOptions" GUID="{000C035A-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_FeatureReports" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_FeatureReports" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="puintFeatureReports" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_OutputToDebugger" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_OutputToDebugger" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfOutputToDebugger" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_OutputToFile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_OutputToFile" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfOutputToFile" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_OutputToMessageBox" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_OutputToMessageBox" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfOutputToMessageBox" type="WordBool" />
      </parameters>
    </procedure>
    <property name="FeatureReports" visibility="public" read="Get_FeatureReports" write="Set_FeatureReports" type="Integer" />
    <property name="OutputToDebugger" visibility="public" read="Get_OutputToDebugger" write="Set_OutputToDebugger" type="WordBool" />
    <property name="OutputToFile" visibility="public" read="Get_OutputToFile" write="Set_OutputToFile" type="WordBool" />
    <property name="OutputToMessageBox" visibility="public" read="Get_OutputToMessageBox" write="Set_OutputToMessageBox" type="WordBool" />
  </interface>
  <interface name="MsoDebugOptionsDisp" GUID="{000C035A-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="FeatureReports" visibility="automated" type="Integer" />
    <property name="OutputToDebugger" visibility="automated" type="WordBool" />
    <property name="OutputToFile" visibility="automated" type="WordBool" />
    <property name="OutputToMessageBox" visibility="automated" type="WordBool" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="FileDialogSelectedItems" GUID="{000C0363-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="WideString" />
      </parameters>
    </function>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="FileDialogSelectedItemsDisp" GUID="{000C0363-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="WideString" />
      </parameters>
    </function>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="FileDialogFilter" GUID="{000C0364-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Extensions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Description" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Extensions" visibility="public" read="Get_Extensions" type="WideString" default="0" />
    <property name="Description" visibility="public" read="Get_Description" type="WideString" default="0" />
  </interface>
  <interface name="FileDialogFilterDisp" GUID="{000C0364-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Extensions" visibility="automated" type="WideString" />
    <property name="Description" visibility="automated" type="WideString" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="FileDialogFilters" GUID="{000C0365-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="FileDialogFilter" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="filter" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="Clear" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Description" type="WideString" paramflags="const" />
        <parameter name="Extensions" type="WideString" paramflags="const" />
        <parameter name="Position" type="OleVariant" />
        <retval type="FileDialogFilter" />
      </parameters>
    </function>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="FileDialogFiltersDisp" GUID="{000C0365-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="FileDialogFilter" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="filter" type="OleVariant" />
      </parameters>
    </procedure>
    <procedure name="Clear" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Description" type="WideString" paramflags="const" />
        <parameter name="Extensions" type="WideString" paramflags="const" />
        <parameter name="Position" type="OleVariant" />
        <retval type="FileDialogFilter" />
      </parameters>
    </function>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="FileDialog" GUID="{000C0362-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Filters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FileDialogFilters" />
      </parameters>
    </function>
    <function name="Get_FilterIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_FilterIndex" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FilterIndex" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Title" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Title" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Title" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ButtonName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ButtonName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ButtonName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_AllowMultiSelect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AllowMultiSelect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarfAllowMultiSelect" type="WordBool" />
      </parameters>
    </procedure>
    <function name="Get_InitialView" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_InitialView" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pinitialview" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_InitialFileName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_InitialFileName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="InitialFileName" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_SelectedItems" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="FileDialogSelectedItems" />
      </parameters>
    </function>
    <function name="Get_DialogType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Show" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Execute" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Filters" visibility="public" read="Get_Filters" type="FileDialogFilters" />
    <property name="FilterIndex" visibility="public" read="Get_FilterIndex" type="Integer" />
    <property name="Title" visibility="public" read="Get_Title" type="WideString" default="0" />
    <property name="ButtonName" visibility="public" read="Get_ButtonName" type="WideString" default="0" />
    <property name="AllowMultiSelect" visibility="public" read="Get_AllowMultiSelect" type="WordBool" />
    <property name="InitialView" visibility="public" read="Get_InitialView" type="TOleEnum" />
    <property name="InitialFileName" visibility="public" read="Get_InitialFileName" type="WideString" default="0" />
    <property name="SelectedItems" visibility="public" read="Get_SelectedItems" type="FileDialogSelectedItems" />
    <property name="DialogType" visibility="public" read="Get_DialogType" type="TOleEnum" />
    <property name="Item" visibility="public" read="Get_Item" type="WideString" default="0" />
  </interface>
  <interface name="FileDialogDisp" GUID="{000C0362-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Filters" visibility="automated" type="FileDialogFilters" />
    <property name="FilterIndex" visibility="automated" type="Integer" />
    <property name="Title" visibility="automated" type="WideString" />
    <property name="ButtonName" visibility="automated" type="WideString" />
    <property name="AllowMultiSelect" visibility="automated" type="WordBool" />
    <property name="InitialView" visibility="automated" type="TOleEnum" />
    <property name="InitialFileName" visibility="automated" type="WideString" />
    <property name="SelectedItems" visibility="automated" type="FileDialogSelectedItems" />
    <property name="DialogType" visibility="automated" type="TOleEnum" />
    <property name="Item" visibility="automated" type="WideString" />
    <function name="Show" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Execute" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="SignatureSet" GUID="{000C0410-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="iSig" type="Integer" />
        <retval type="Signature" />
      </parameters>
    </function>
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Signature" />
      </parameters>
    </function>
    <procedure name="Commit" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Item[iSig]" visibility="public" read="Get_Item" type="Signature" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="SignatureSetDisp" GUID="{000C0410-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Item[iSig]" visibility="automated" type="Signature" />
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Signature" />
      </parameters>
    </function>
    <procedure name="Commit" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="Signature" GUID="{000C0411-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Signer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Issuer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_ExpireDate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_IsValid" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_AttachCertificate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <procedure name="Set_AttachCertificate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pfAttach" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_IsCertificateExpired" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_IsCertificateRevoked" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Get_SignDate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <property name="Signer" visibility="public" read="Get_Signer" type="WideString" default="0" />
    <property name="Issuer" visibility="public" read="Get_Issuer" type="WideString" default="0" />
    <property name="ExpireDate" visibility="public" read="Get_ExpireDate" type="OleVariant" default="0" />
    <property name="IsValid" visibility="public" read="Get_IsValid" type="WordBool" />
    <property name="AttachCertificate" visibility="public" read="Get_AttachCertificate" type="WordBool" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="IsCertificateExpired" visibility="public" read="Get_IsCertificateExpired" type="WordBool" />
    <property name="IsCertificateRevoked" visibility="public" read="Get_IsCertificateRevoked" type="WordBool" />
    <property name="SignDate" visibility="public" read="Get_SignDate" type="OleVariant" default="0" />
  </interface>
  <interface name="SignatureDisp" GUID="{000C0411-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Signer" visibility="automated" type="WideString" />
    <property name="Issuer" visibility="automated" type="WideString" />
    <property name="ExpireDate" visibility="automated" type="OleVariant" />
    <property name="IsValid" visibility="automated" type="WordBool" />
    <property name="AttachCertificate" visibility="automated" type="WordBool" />
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="IsCertificateExpired" visibility="automated" type="WordBool" />
    <property name="IsCertificateRevoked" visibility="automated" type="WordBool" />
    <property name="SignDate" visibility="automated" type="OleVariant" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="IMsoEnvelopeVB" GUID="{000672AC-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Introduction" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Introduction" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrIntro" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_CommandBars" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <property name="Introduction" visibility="public" read="Get_Introduction" write="Set_Introduction" type="WideString" default="0" />
    <property name="Item" visibility="public" read="Get_Item" type="IDispatch" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="CommandBars" visibility="public" read="Get_CommandBars" type="IDispatch" />
  </interface>
  <interface name="IMsoEnvelopeVBDisp" GUID="{000672AC-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Introduction" visibility="automated" type="WideString" />
    <property name="Item" visibility="automated" type="IDispatch" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="CommandBars" visibility="automated" type="IDispatch" />
  </interface>
  <interface name="IMsoEnvelopeVBEvents" GUID="{000672AD-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <procedure name="EnvelopeShow" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="EnvelopeHide" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="FileTypes" GUID="{000C036C-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileType" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Remove" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <property name="Item[Index]" visibility="public" read="Get_Item" type="TOleEnum" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="FileTypesDisp" GUID="{000C036C-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Item[Index]" visibility="automated" type="TOleEnum" />
    <property name="Count" visibility="automated" type="Integer" />
    <procedure name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileType" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Remove" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="SearchFolders" GUID="{000C036A-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="ScopeFolder" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ScopeFolder" type="ScopeFolder" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Remove" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <property name="Item[Index]" visibility="public" read="Get_Item" type="ScopeFolder" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="SearchFoldersDisp" GUID="{000C036A-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Item[Index]" visibility="automated" type="ScopeFolder" />
    <property name="Count" visibility="automated" type="Integer" />
    <procedure name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ScopeFolder" type="ScopeFolder" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Remove" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
      </parameters>
    </procedure>
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ScopeFolders" GUID="{000C0369-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="ScopeFolder" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <property name="Item[Index]" visibility="public" read="Get_Item" type="ScopeFolder" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="ScopeFoldersDisp" GUID="{000C0369-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Item[Index]" visibility="automated" type="ScopeFolder" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ScopeFolder" GUID="{000C0368-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Path" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_ScopeFolders" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ScopeFolders" />
      </parameters>
    </function>
    <procedure name="AddToSearchFolders" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Path" visibility="public" read="Get_Path" type="WideString" default="0" />
    <property name="ScopeFolders" visibility="public" read="Get_ScopeFolders" type="ScopeFolders" />
  </interface>
  <interface name="ScopeFolderDisp" GUID="{000C0368-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Path" visibility="automated" type="WideString" />
    <property name="ScopeFolders" visibility="automated" type="ScopeFolders" />
    <procedure name="AddToSearchFolders" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="SearchScope" GUID="{000C0367-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_ScopeFolder" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="ScopeFolder" />
      </parameters>
    </function>
    <property name="Type_" visibility="public" read="Get_Type_" type="TOleEnum" />
    <property name="ScopeFolder" visibility="public" read="Get_ScopeFolder" type="ScopeFolder" />
  </interface>
  <interface name="SearchScopeDisp" GUID="{000C0367-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Type_" visibility="automated" type="TOleEnum" />
    <property name="ScopeFolder" visibility="automated" type="ScopeFolder" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="SearchScopes" GUID="{000C0366-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="SearchScope" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <property name="Item[Index]" visibility="public" read="Get_Item" type="SearchScope" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
  </interface>
  <interface name="SearchScopesDisp" GUID="{000C0366-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Item[Index]" visibility="automated" type="SearchScope" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="IMsoDiagram" GUID="{000C036D-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Nodes" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="DiagramNodes" />
      </parameters>
    </function>
    <function name="Get_Type_" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <function name="Get_AutoLayout" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_AutoLayout" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="AutoLayout" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_Reverse" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Reverse" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Reverse" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_AutoFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_AutoFormat" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="AutoFormat" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="Convert" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Nodes" visibility="public" read="Get_Nodes" type="DiagramNodes" />
    <property name="Type_" visibility="public" read="Get_Type_" type="TOleEnum" />
    <property name="AutoLayout" visibility="public" read="Get_AutoLayout" write="Set_AutoLayout" type="TOleEnum" />
    <property name="Reverse" visibility="public" read="Get_Reverse" write="Set_Reverse" type="TOleEnum" />
    <property name="AutoFormat" visibility="public" read="Get_AutoFormat" write="Set_AutoFormat" type="TOleEnum" />
  </interface>
  <interface name="IMsoDiagramDisp" GUID="{000C036D-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Nodes" visibility="automated" type="DiagramNodes" />
    <property name="Type_" visibility="automated" type="TOleEnum" />
    <property name="AutoLayout" visibility="automated" type="TOleEnum" />
    <property name="Reverse" visibility="automated" type="TOleEnum" />
    <property name="AutoFormat" visibility="automated" type="TOleEnum" />
    <procedure name="Convert" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="DiagramNodes" GUID="{000C036E-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="DiagramNode" />
      </parameters>
    </function>
    <procedure name="SelectAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
  </interface>
  <interface name="DiagramNodesDisp" GUID="{000C036E-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="DiagramNode" />
      </parameters>
    </function>
    <procedure name="SelectAll" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="DiagramNodeChildren" GUID="{000C036F-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="DiagramNode" />
      </parameters>
    </function>
    <function name="AddNode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <parameter name="NodeType" type="TOleEnum" />
        <retval type="DiagramNode" />
      </parameters>
    </function>
    <procedure name="SelectAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_FirstChild" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="DiagramNode" />
      </parameters>
    </function>
    <function name="Get_LastChild" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="DiagramNode" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="FirstChild" visibility="public" read="Get_FirstChild" type="DiagramNode" />
    <property name="LastChild" visibility="public" read="Get_LastChild" type="DiagramNode" />
  </interface>
  <interface name="DiagramNodeChildrenDisp" GUID="{000C036F-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="DiagramNode" />
      </parameters>
    </function>
    <function name="AddNode" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <parameter name="NodeType" type="TOleEnum" />
        <retval type="DiagramNode" />
      </parameters>
    </function>
    <procedure name="SelectAll" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <property name="FirstChild" visibility="automated" type="DiagramNode" />
    <property name="LastChild" visibility="automated" type="DiagramNode" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="DiagramNode" GUID="{000C0370-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="AddNode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Pos" type="TOleEnum" />
        <parameter name="NodeType" type="TOleEnum" />
        <retval type="DiagramNode" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="MoveNode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="TargetNode" type="DiagramNode" paramflags="const" />
        <parameter name="Pos" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="ReplaceNode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="TargetNode" type="DiagramNode" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="SwapNode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="TargetNode" type="DiagramNode" paramflags="const" />
        <parameter name="SwapChildren" type="WordBool" />
      </parameters>
    </procedure>
    <function name="CloneNode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="CopyChildren" type="WordBool" />
        <parameter name="TargetNode" type="DiagramNode" paramflags="const" />
        <parameter name="Pos" type="TOleEnum" />
        <retval type="DiagramNode" />
      </parameters>
    </function>
    <procedure name="TransferChildren" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ReceivingNode" type="DiagramNode" paramflags="const" />
      </parameters>
    </procedure>
    <function name="NextNode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="DiagramNode" />
      </parameters>
    </function>
    <function name="PrevNode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="DiagramNode" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Children" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="DiagramNodeChildren" />
      </parameters>
    </function>
    <function name="Get_Shape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get_Root" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="DiagramNode" />
      </parameters>
    </function>
    <function name="Get_Diagram" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IMsoDiagram" />
      </parameters>
    </function>
    <function name="Get_Layout" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Layout" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_TextShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Children" visibility="public" read="Get_Children" type="DiagramNodeChildren" />
    <property name="Shape" visibility="public" read="Get_Shape" type="Shape" />
    <property name="Root" visibility="public" read="Get_Root" type="DiagramNode" />
    <property name="Diagram" visibility="public" read="Get_Diagram" type="IMsoDiagram" />
    <property name="Layout" visibility="public" read="Get_Layout" write="Set_Layout" type="TOleEnum" />
    <property name="TextShape" visibility="public" read="Get_TextShape" type="Shape" />
  </interface>
  <interface name="DiagramNodeDisp" GUID="{000C0370-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <function name="AddNode" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Pos" type="TOleEnum" />
        <parameter name="NodeType" type="TOleEnum" />
        <retval type="DiagramNode" />
      </parameters>
    </function>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="MoveNode" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="TargetNode" type="DiagramNode" paramflags="const" />
        <parameter name="Pos" type="TOleEnum" />
      </parameters>
    </procedure>
    <procedure name="ReplaceNode" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="TargetNode" type="DiagramNode" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="SwapNode" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="TargetNode" type="DiagramNode" paramflags="const" />
        <parameter name="SwapChildren" type="WordBool" />
      </parameters>
    </procedure>
    <function name="CloneNode" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="CopyChildren" type="WordBool" />
        <parameter name="TargetNode" type="DiagramNode" paramflags="const" />
        <parameter name="Pos" type="TOleEnum" />
        <retval type="DiagramNode" />
      </parameters>
    </function>
    <procedure name="TransferChildren" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ReceivingNode" type="DiagramNode" paramflags="const" />
      </parameters>
    </procedure>
    <function name="NextNode" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="DiagramNode" />
      </parameters>
    </function>
    <function name="PrevNode" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="DiagramNode" />
      </parameters>
    </function>
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Children" visibility="automated" type="DiagramNodeChildren" />
    <property name="Shape" visibility="automated" type="Shape" />
    <property name="Root" visibility="automated" type="DiagramNode" />
    <property name="Diagram" visibility="automated" type="IMsoDiagram" />
    <property name="Layout" visibility="automated" type="TOleEnum" />
    <property name="TextShape" visibility="automated" type="Shape" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="CanvasShapes" GUID="{000C0371-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="Get__NewEnum" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IInterface" />
      </parameters>
    </function>
    <function name="AddCallout" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddConnector" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="BeginX" type="Single" />
        <parameter name="BeginY" type="Single" />
        <parameter name="EndX" type="Single" />
        <parameter name="EndY" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddCurve" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SafeArrayOfPoints" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddLabel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Orientation" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddLine" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BeginX" type="Single" />
        <parameter name="BeginY" type="Single" />
        <parameter name="EndX" type="Single" />
        <parameter name="EndY" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddPicture" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="LinkToFile" type="TOleEnum" />
        <parameter name="SaveWithDocument" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddPolyline" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SafeArrayOfPoints" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddShape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddTextEffect" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PresetTextEffect" type="TOleEnum" />
        <parameter name="Text" type="WideString" paramflags="const" />
        <parameter name="FontName" type="WideString" paramflags="const" />
        <parameter name="FontSize" type="Single" />
        <parameter name="FontBold" type="TOleEnum" />
        <parameter name="FontItalic" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddTextbox" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Orientation" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="BuildFreeform" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <retval type="FreeformBuilder" />
      </parameters>
    </function>
    <function name="Range" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="SelectAll" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_Background" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="_NewEnum" visibility="public" read="Get__NewEnum" type="IInterface" />
    <property name="Background" visibility="public" read="Get_Background" type="Shape" />
  </interface>
  <interface name="CanvasShapesDisp" GUID="{000C0371-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Count" visibility="automated" type="Integer" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <property name="_NewEnum" visibility="automated" type="IInterface" />
    <function name="AddCallout" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddConnector" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="BeginX" type="Single" />
        <parameter name="BeginY" type="Single" />
        <parameter name="EndX" type="Single" />
        <parameter name="EndY" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddCurve" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="SafeArrayOfPoints" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddLabel" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Orientation" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddLine" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="BeginX" type="Single" />
        <parameter name="BeginY" type="Single" />
        <parameter name="EndX" type="Single" />
        <parameter name="EndY" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddPicture" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="LinkToFile" type="TOleEnum" />
        <parameter name="SaveWithDocument" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddPolyline" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="SafeArrayOfPoints" type="OleVariant" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddShape" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Type_" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddTextEffect" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="PresetTextEffect" type="TOleEnum" />
        <parameter name="Text" type="WideString" paramflags="const" />
        <parameter name="FontName" type="WideString" paramflags="const" />
        <parameter name="FontSize" type="Single" />
        <parameter name="FontBold" type="TOleEnum" />
        <parameter name="FontItalic" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="AddTextbox" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Orientation" type="TOleEnum" />
        <parameter name="Left" type="Single" />
        <parameter name="Top" type="Single" />
        <parameter name="Width" type="Single" />
        <parameter name="Height" type="Single" />
        <retval type="Shape" />
      </parameters>
    </function>
    <function name="BuildFreeform" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="EditingType" type="TOleEnum" />
        <parameter name="X1" type="Single" />
        <parameter name="Y1" type="Single" />
        <retval type="FreeformBuilder" />
      </parameters>
    </function>
    <function name="Range" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="OleVariant" />
        <retval type="ShapeRange" />
      </parameters>
    </function>
    <procedure name="SelectAll" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="Background" visibility="automated" type="Shape" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="OfficeDataSourceObject" GUID="{000C1530-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_ConnectString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_ConnectString" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrConnect" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Table" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Table" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrTable" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_DataSource" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_DataSource" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrSrc" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Columns" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_RowCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Filters" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Move" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="MsoMoveRow" type="TOleEnum" />
        <parameter name="RowNbr" type="Integer" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Open" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrSrc" type="WideString" paramflags="const" />
        <parameter name="bstrConnect" type="WideString" paramflags="const" />
        <parameter name="bstrTable" type="WideString" paramflags="const" />
        <parameter name="fOpenExclusive" type="Integer" />
        <parameter name="fNeverPrompt" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="SetSortOrder" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="SortField1" type="WideString" paramflags="const" />
        <parameter name="SortAscending1" type="WordBool" />
        <parameter name="SortField2" type="WideString" paramflags="const" />
        <parameter name="SortAscending2" type="WordBool" />
        <parameter name="SortField3" type="WideString" paramflags="const" />
        <parameter name="SortAscending3" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="ApplyFilter" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="ConnectString" visibility="public" read="Get_ConnectString" write="Set_ConnectString" type="WideString" default="0" />
    <property name="Table" visibility="public" read="Get_Table" write="Set_Table" type="WideString" default="0" />
    <property name="DataSource" visibility="public" read="Get_DataSource" write="Set_DataSource" type="WideString" default="0" />
    <property name="Columns" visibility="public" read="Get_Columns" type="IDispatch" />
    <property name="RowCount" visibility="public" read="Get_RowCount" type="Integer" />
    <property name="Filters" visibility="public" read="Get_Filters" type="IDispatch" />
  </interface>
  <interface name="OfficeDataSourceObjectDisp" GUID="{000C1530-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="ConnectString" visibility="automated" type="WideString" />
    <property name="Table" visibility="automated" type="WideString" />
    <property name="DataSource" visibility="automated" type="WideString" />
    <property name="Columns" visibility="automated" type="IDispatch" />
    <property name="RowCount" visibility="automated" type="Integer" />
    <property name="Filters" visibility="automated" type="IDispatch" />
    <function name="Move" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="MsoMoveRow" type="TOleEnum" />
        <parameter name="RowNbr" type="Integer" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Open" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrSrc" type="WideString" paramflags="const" />
        <parameter name="bstrConnect" type="WideString" paramflags="const" />
        <parameter name="bstrTable" type="WideString" paramflags="const" />
        <parameter name="fOpenExclusive" type="Integer" />
        <parameter name="fNeverPrompt" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="SetSortOrder" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="SortField1" type="WideString" paramflags="const" />
        <parameter name="SortAscending1" type="WordBool" />
        <parameter name="SortField2" type="WideString" paramflags="const" />
        <parameter name="SortAscending2" type="WordBool" />
        <parameter name="SortField3" type="WideString" paramflags="const" />
        <parameter name="SortAscending3" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="ApplyFilter" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="ODSOColumn" GUID="{000C1531-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Value" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="Name" visibility="public" read="Get_Name" type="WideString" default="0" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Value" visibility="public" read="Get_Value" type="WideString" default="0" />
  </interface>
  <interface name="ODSOColumnDisp" GUID="{000C1531-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Index" visibility="automated" type="Integer" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Value" visibility="automated" type="WideString" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ODSOColumns" GUID="{000C1532-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="varIndex" type="OleVariant" />
        <retval type="IDispatch" />
      </parameters>
    </function>
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="ODSOColumnsDisp" GUID="{000C1532-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="varIndex" type="OleVariant" />
        <retval type="IDispatch" />
      </parameters>
    </function>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ODSOFilter" GUID="{000C1533-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Index" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Column" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Column" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrCol" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Comparison" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Comparison" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pComparison" type="TOleEnum" />
      </parameters>
    </procedure>
    <function name="Get_CompareTo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_CompareTo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pbstrCompareTo" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Conjunction" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TOleEnum" />
      </parameters>
    </function>
    <procedure name="Set_Conjunction" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pConjunction" type="TOleEnum" />
      </parameters>
    </procedure>
    <property name="Index" visibility="public" read="Get_Index" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="Column" visibility="public" read="Get_Column" write="Set_Column" type="WideString" default="0" />
    <property name="Comparison" visibility="public" read="Get_Comparison" write="Set_Comparison" type="TOleEnum" />
    <property name="CompareTo" visibility="public" read="Get_CompareTo" write="Set_CompareTo" type="WideString" default="0" />
    <property name="Conjunction" visibility="public" read="Get_Conjunction" write="Set_Conjunction" type="TOleEnum" />
  </interface>
  <interface name="ODSOFilterDisp" GUID="{000C1533-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Index" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="Column" visibility="automated" type="WideString" />
    <property name="Comparison" visibility="automated" type="TOleEnum" />
    <property name="CompareTo" visibility="automated" type="WideString" />
    <property name="Conjunction" visibility="automated" type="TOleEnum" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="ODSOFilters" GUID="{000C1534-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Get_Count" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Item" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Column" type="WideString" paramflags="const" />
        <parameter name="Comparison" type="TOleEnum" />
        <parameter name="Conjunction" type="TOleEnum" />
        <parameter name="bstrCompareTo" type="WideString" paramflags="const" />
        <parameter name="DeferUpdate" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="DeferUpdate" type="WordBool" />
      </parameters>
    </procedure>
    <property name="Count" visibility="public" read="Get_Count" type="Integer" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
  </interface>
  <interface name="ODSOFiltersDisp" GUID="{000C1534-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Count" visibility="automated" type="Integer" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <function name="Item" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Column" type="WideString" paramflags="const" />
        <parameter name="Comparison" type="TOleEnum" />
        <parameter name="Conjunction" type="TOleEnum" />
        <parameter name="bstrCompareTo" type="WideString" paramflags="const" />
        <parameter name="DeferUpdate" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="Delete" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Index" type="Integer" />
        <parameter name="DeferUpdate" type="WordBool" />
      </parameters>
    </procedure>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="NewFile" GUID="{000C0936-0000-0000-C000-000000000046}" ancestor="_IMsoDispObj">
    <function name="Add" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="Section" type="OleVariant" />
        <parameter name="DisplayName" type="OleVariant" />
        <parameter name="Action" type="OleVariant" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Remove" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="Section" type="OleVariant" />
        <parameter name="DisplayName" type="OleVariant" />
        <parameter name="Action" type="OleVariant" />
        <retval type="WordBool" />
      </parameters>
    </function>
  </interface>
  <interface name="NewFileDisp" GUID="{000C0936-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <function name="Add" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="Section" type="OleVariant" />
        <parameter name="DisplayName" type="OleVariant" />
        <parameter name="Action" type="OleVariant" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <function name="Remove" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="FileName" type="WideString" paramflags="const" />
        <parameter name="Section" type="OleVariant" />
        <parameter name="DisplayName" type="OleVariant" />
        <parameter name="Action" type="OleVariant" />
        <retval type="WordBool" />
      </parameters>
    </function>
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Creator" visibility="automated" type="Integer" />
  </interface>
  <interface name="WebComponent" GUID="{000CD100-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Shape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_URL" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_URL" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_HTML" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_HTML" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="SetPlaceHolderGraphic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="PlaceHolderGraphic" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Commit" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="Revert" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Shape" visibility="public" read="Get_Shape" type="IDispatch" />
    <property name="URL" visibility="public" read="Get_URL" write="Set_URL" type="WideString" default="0" />
    <property name="HTML" visibility="public" read="Get_HTML" write="Set_HTML" type="WideString" default="0" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Integer" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Integer" />
  </interface>
  <interface name="WebComponentDisp" GUID="{000CD100-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Shape" visibility="automated" type="IDispatch" />
    <property name="URL" visibility="automated" type="WideString" />
    <property name="HTML" visibility="automated" type="WideString" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Width" visibility="automated" type="Integer" />
    <property name="Height" visibility="automated" type="Integer" />
    <procedure name="SetPlaceHolderGraphic" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="PlaceHolderGraphic" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="Commit" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="Revert" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="WebComponentWindowExternal" GUID="{000CD101-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_InterfaceVersion" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_ApplicationName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_ApplicationVersion" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <procedure name="CloseWindow" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="Get_WebComponent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WebComponent" />
      </parameters>
    </function>
    <property name="InterfaceVersion" visibility="public" read="Get_InterfaceVersion" type="Integer" />
    <property name="ApplicationName" visibility="public" read="Get_ApplicationName" type="WideString" default="0" />
    <property name="ApplicationVersion" visibility="public" read="Get_ApplicationVersion" type="Integer" />
    <property name="Application" visibility="public" read="Get_Application" type="IDispatch" />
    <property name="WebComponent" visibility="public" read="Get_WebComponent" type="WebComponent" />
  </interface>
  <interface name="WebComponentWindowExternalDisp" GUID="{000CD101-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="InterfaceVersion" visibility="automated" type="Integer" />
    <property name="ApplicationName" visibility="automated" type="WideString" />
    <property name="ApplicationVersion" visibility="automated" type="Integer" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <procedure name="CloseWindow" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <property name="WebComponent" visibility="automated" type="WebComponent" />
  </interface>
  <interface name="WebComponentFormat" GUID="{000CD102-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Parent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_URL" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_URL" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_HTML" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_HTML" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_PreviewGraphic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_PreviewGraphic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="retval" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="LaunchPropertiesWindow" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <property name="Application" visibility="public" read="Get_Application" type="IDispatch" />
    <property name="Parent" visibility="public" read="Get_Parent" type="IDispatch" />
    <property name="URL" visibility="public" read="Get_URL" write="Set_URL" type="WideString" default="0" />
    <property name="HTML" visibility="public" read="Get_HTML" write="Set_HTML" type="WideString" default="0" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Integer" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Integer" />
    <property name="PreviewGraphic" visibility="public" read="Get_PreviewGraphic" write="Set_PreviewGraphic" type="WideString" default="0" />
  </interface>
  <interface name="WebComponentFormatDisp" GUID="{000CD102-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="Parent" visibility="automated" type="IDispatch" />
    <property name="URL" visibility="automated" type="WideString" />
    <property name="HTML" visibility="automated" type="WideString" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="Width" visibility="automated" type="Integer" />
    <property name="Height" visibility="automated" type="Integer" />
    <property name="PreviewGraphic" visibility="automated" type="WideString" />
    <procedure name="LaunchPropertiesWindow" visibility="automated" procflags="abstract automated virtual">
    </procedure>
  </interface>
  <interface name="ILicWizExternal" GUID="{4CAC6328-B9B0-11D3-8D59-0050048384E3}" ancestor="IDispatch">
    <procedure name="PrintHtmlDocument" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="punkHtmlDoc" type="IInterface" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="InvokeDateTimeApplet" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="FormatDate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="date" type="TDateTime" />
        <parameter name="pFormat" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="ShowHelp" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pvarId" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Terminate" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="DisableVORWReminder" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="BPC" type="Integer" />
      </parameters>
    </procedure>
    <function name="SaveReceipt" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrReceipt" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="OpenInDefaultBrowser" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrUrl" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="MsoAlert" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrText" type="WideString" paramflags="const" />
        <parameter name="bstrButtons" type="WideString" paramflags="const" />
        <parameter name="bstrIcon" type="WideString" paramflags="const" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="DepositPidKey" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrKey" type="WideString" paramflags="const" />
        <parameter name="fMORW" type="Integer" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="WriteLog" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrMessage" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="ResignDpc" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrProductCode" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="ResetPID" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="SetDialogSize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="dx" type="Integer" />
        <parameter name="dy" type="Integer" />
      </parameters>
    </procedure>
    <function name="VerifyClock" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="lMode" type="Integer" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="SortSelectOptions" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="pdispSelect" type="IDispatch" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="InternetDisconnect" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="GetConnectedState" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Context" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="Get_Validator" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_LicAgent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_CountryInfo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_WizardVisible" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Param1" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="Set_WizardTitle" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Param1" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_AnimationEnabled" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_CurrentHelpId" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Param1" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_OfficeOnTheWebUrl" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <property name="Context" visibility="public" read="Get_Context" type="Integer" />
    <property name="Validator" visibility="public" read="Get_Validator" type="IDispatch" />
    <property name="LicAgent" visibility="public" read="Get_LicAgent" type="IDispatch" />
    <property name="CountryInfo" visibility="public" read="Get_CountryInfo" type="WideString" default="0" />
    <property name="WizardVisible" visibility="public" write="Set_WizardVisible" type="Integer" />
    <property name="WizardTitle" visibility="public" write="Set_WizardTitle" type="WideString" default="0" />
    <property name="AnimationEnabled" visibility="public" read="Get_AnimationEnabled" type="Integer" />
    <property name="CurrentHelpId" visibility="public" write="Set_CurrentHelpId" type="Integer" />
    <property name="OfficeOnTheWebUrl" visibility="public" read="Get_OfficeOnTheWebUrl" type="WideString" default="0" />
  </interface>
  <interface name="ILicWizExternalDisp" GUID="{4CAC6328-B9B0-11D3-8D59-0050048384E3}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <procedure name="PrintHtmlDocument" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="punkHtmlDoc" type="IInterface" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="InvokeDateTimeApplet" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="FormatDate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="date" type="TDateTime" />
        <parameter name="pFormat" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="ShowHelp" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="pvarId" type="OleVariant" paramflags="var" />
      </parameters>
    </procedure>
    <procedure name="Terminate" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="DisableVORWReminder" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="BPC" type="Integer" />
      </parameters>
    </procedure>
    <function name="SaveReceipt" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrReceipt" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="OpenInDefaultBrowser" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrUrl" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="MsoAlert" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrText" type="WideString" paramflags="const" />
        <parameter name="bstrButtons" type="WideString" paramflags="const" />
        <parameter name="bstrIcon" type="WideString" paramflags="const" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="DepositPidKey" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrKey" type="WideString" paramflags="const" />
        <parameter name="fMORW" type="Integer" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="WriteLog" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrMessage" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="ResignDpc" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrProductCode" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="ResetPID" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="SetDialogSize" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="dx" type="Integer" />
        <parameter name="dy" type="Integer" />
      </parameters>
    </procedure>
    <function name="VerifyClock" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="lMode" type="Integer" />
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="SortSelectOptions" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="pdispSelect" type="IDispatch" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="InternetDisconnect" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="GetConnectedState" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <property name="Context" visibility="automated" type="Integer" />
    <property name="Validator" visibility="automated" type="IDispatch" />
    <property name="LicAgent" visibility="automated" type="IDispatch" />
    <property name="CountryInfo" visibility="automated" type="WideString" />
    <property name="WizardVisible" visibility="automated" type="Integer" />
    <property name="WizardTitle" visibility="automated" type="WideString" />
    <property name="AnimationEnabled" visibility="automated" type="Integer" />
    <property name="CurrentHelpId" visibility="automated" type="Integer" />
    <property name="OfficeOnTheWebUrl" visibility="automated" type="WideString" />
  </interface>
  <interface name="ILicValidator" GUID="{919AA22C-B9AD-11D3-8D59-0050048384E3}" ancestor="IDispatch">
    <function name="Get_Products" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="OleVariant" />
      </parameters>
    </function>
    <function name="Get_Selection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Selection" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="piSel" type="Integer" />
      </parameters>
    </procedure>
    <property name="Products" visibility="public" read="Get_Products" type="OleVariant" default="0" />
    <property name="Selection" visibility="public" read="Get_Selection" write="Set_Selection" type="Integer" />
  </interface>
  <interface name="ILicValidatorDisp" GUID="{919AA22C-B9AD-11D3-8D59-0050048384E3}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Products" visibility="automated" type="OleVariant" />
    <property name="Selection" visibility="automated" type="Integer" />
  </interface>
  <interface name="ILicAgent" GUID="{00194002-D9C3-11D3-8D59-0050048384E3}" ancestor="IDispatch">
    <function name="Initialize" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="dwBPC" type="Cardinal" />
        <parameter name="dwMode" type="Cardinal" />
        <parameter name="bstrLicSource" type="WideString" paramflags="const" />
        <retval type="Cardinal" />
      </parameters>
    </function>
    <function name="GetFirstName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetFirstName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetLastName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetLastName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetOrgName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetOrgName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetEmail" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetEmail" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetPhone" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetPhone" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetAddress1" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetAddress1" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetCity" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetCity" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetState" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetState" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetCountryCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetCountryCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetCountryDesc" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetCountryDesc" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetZip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetZip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetIsoLanguage" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Cardinal" />
      </parameters>
    </function>
    <procedure name="SetIsoLanguage" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="dwNewVal" type="Cardinal" />
      </parameters>
    </procedure>
    <function name="GetMSUpdate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetMSUpdate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetMSOffer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetMSOffer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetOtherOffer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetOtherOffer" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetAddress2" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetAddress2" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="CheckSystemClock" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Cardinal" />
      </parameters>
    </function>
    <function name="GetExistingExpiryDate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TDateTime" />
      </parameters>
    </function>
    <function name="GetNewExpiryDate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TDateTime" />
      </parameters>
    </function>
    <function name="GetBillingFirstName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetBillingFirstName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetBillingLastName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetBillingLastName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetBillingPhone" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetBillingPhone" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetBillingAddress1" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetBillingAddress1" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetBillingAddress2" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetBillingAddress2" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetBillingCity" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetBillingCity" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetBillingState" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetBillingState" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetBillingCountryCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetBillingCountryCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetBillingZip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetBillingZip" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="SaveBillingInfo" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bSave" type="Integer" />
        <retval type="Cardinal" />
      </parameters>
    </function>
    <function name="IsCCRenewalCountry" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrCountryCode" type="WideString" paramflags="const" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="GetVATLabel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrCountryCode" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetCCRenewalExpiryDate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TDateTime" />
      </parameters>
    </function>
    <procedure name="SetVATNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrVATNumber" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="SetCreditCardType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrCCCode" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="SetCreditCardNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrCCNumber" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="SetCreditCardExpiryYear" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="dwCCYear" type="Cardinal" />
      </parameters>
    </procedure>
    <procedure name="SetCreditCardExpiryMonth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="dwCCMonth" type="Cardinal" />
      </parameters>
    </procedure>
    <function name="GetCreditCardCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Cardinal" />
      </parameters>
    </function>
    <function name="GetCreditCardCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="dwIndex" type="Cardinal" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetCreditCardName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="dwIndex" type="Cardinal" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetVATNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetCreditCardType" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetCreditCardNumber" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetCreditCardExpiryYear" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Cardinal" />
      </parameters>
    </function>
    <function name="GetCreditCardExpiryMonth" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Cardinal" />
      </parameters>
    </function>
    <function name="GetDisconnectOption" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="SetDisconnectOption" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bNewVal" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="AsyncProcessHandshakeRequest" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bReviseCustInfo" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="AsyncProcessNewLicenseRequest" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="AsyncProcessReissueLicenseRequest" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="AsyncProcessRetailRenewalLicenseRequest" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="AsyncProcessReviseCustInfoRequest" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="AsyncProcessCCRenewalPriceRequest" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <procedure name="AsyncProcessCCRenewalLicenseRequest" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="GetAsyncProcessReturnCode" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Cardinal" />
      </parameters>
    </function>
    <function name="IsUpgradeAvailable" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="WantUpgrade" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bWantUpgrade" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="AsyncProcessDroppedLicenseRequest" visibility="public" procflags="abstract virtual" callconv="safecall">
    </procedure>
    <function name="GenerateInstallationId" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="DepositConfirmationId" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrVal" type="WideString" paramflags="const" />
        <retval type="Cardinal" />
      </parameters>
    </function>
    <function name="VerifyCheckDigits" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bstrCIDIID" type="WideString" paramflags="const" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="GetCurrentExpiryDate" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="TDateTime" />
      </parameters>
    </function>
    <procedure name="CancelAsyncProcessRequest" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="bIsLicenseRequest" type="Integer" />
      </parameters>
    </procedure>
    <function name="GetCurrencyDescription" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="dwCurrencyIndex" type="Cardinal" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetPriceItemCount" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Cardinal" />
      </parameters>
    </function>
    <function name="GetPriceItemLabel" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="dwIndex" type="Cardinal" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetPriceItemValue" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="dwCurrencyIndex" type="Cardinal" />
        <parameter name="dwIndex" type="Cardinal" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetInvoiceText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetBackendErrorMsg" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetCurrencyOption" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Cardinal" />
      </parameters>
    </function>
    <procedure name="SetCurrencyOption" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="dwCurrencyOption" type="Cardinal" />
      </parameters>
    </procedure>
    <function name="GetEndOfLifeHtmlText" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="DisplaySSLCert" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Cardinal" />
      </parameters>
    </function>
  </interface>
  <interface name="ILicAgentDisp" GUID="{00194002-D9C3-11D3-8D59-0050048384E3}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <function name="Initialize" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="dwBPC" type="Cardinal" />
        <parameter name="dwMode" type="Cardinal" />
        <parameter name="bstrLicSource" type="WideString" paramflags="const" />
        <retval type="Cardinal" />
      </parameters>
    </function>
    <function name="GetFirstName" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetFirstName" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetLastName" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetLastName" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetOrgName" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetOrgName" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetEmail" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetEmail" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetPhone" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetPhone" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetAddress1" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetAddress1" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetCity" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetCity" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetState" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetState" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetCountryCode" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetCountryCode" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetCountryDesc" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetCountryDesc" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetZip" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetZip" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetIsoLanguage" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Cardinal" />
      </parameters>
    </function>
    <procedure name="SetIsoLanguage" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="dwNewVal" type="Cardinal" />
      </parameters>
    </procedure>
    <function name="GetMSUpdate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetMSUpdate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetMSOffer" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetMSOffer" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetOtherOffer" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetOtherOffer" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetAddress2" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetAddress2" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="CheckSystemClock" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Cardinal" />
      </parameters>
    </function>
    <function name="GetExistingExpiryDate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="TDateTime" />
      </parameters>
    </function>
    <function name="GetNewExpiryDate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="TDateTime" />
      </parameters>
    </function>
    <function name="GetBillingFirstName" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetBillingFirstName" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetBillingLastName" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetBillingLastName" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetBillingPhone" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetBillingPhone" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetBillingAddress1" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetBillingAddress1" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetBillingAddress2" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetBillingAddress2" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetBillingCity" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetBillingCity" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetBillingState" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetBillingState" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetBillingCountryCode" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetBillingCountryCode" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="GetBillingZip" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="SetBillingZip" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrNewVal" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="SaveBillingInfo" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bSave" type="Integer" />
        <retval type="Cardinal" />
      </parameters>
    </function>
    <function name="IsCCRenewalCountry" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrCountryCode" type="WideString" paramflags="const" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="GetVATLabel" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrCountryCode" type="WideString" paramflags="const" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetCCRenewalExpiryDate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="TDateTime" />
      </parameters>
    </function>
    <procedure name="SetVATNumber" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrVATNumber" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="SetCreditCardType" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrCCCode" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="SetCreditCardNumber" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrCCNumber" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <procedure name="SetCreditCardExpiryYear" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="dwCCYear" type="Cardinal" />
      </parameters>
    </procedure>
    <procedure name="SetCreditCardExpiryMonth" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="dwCCMonth" type="Cardinal" />
      </parameters>
    </procedure>
    <function name="GetCreditCardCount" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Cardinal" />
      </parameters>
    </function>
    <function name="GetCreditCardCode" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="dwIndex" type="Cardinal" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetCreditCardName" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="dwIndex" type="Cardinal" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetVATNumber" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetCreditCardType" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetCreditCardNumber" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetCreditCardExpiryYear" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Cardinal" />
      </parameters>
    </function>
    <function name="GetCreditCardExpiryMonth" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Cardinal" />
      </parameters>
    </function>
    <function name="GetDisconnectOption" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="SetDisconnectOption" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bNewVal" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="AsyncProcessHandshakeRequest" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bReviseCustInfo" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="AsyncProcessNewLicenseRequest" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="AsyncProcessReissueLicenseRequest" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="AsyncProcessRetailRenewalLicenseRequest" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="AsyncProcessReviseCustInfoRequest" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="AsyncProcessCCRenewalPriceRequest" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <procedure name="AsyncProcessCCRenewalLicenseRequest" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="GetAsyncProcessReturnCode" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Cardinal" />
      </parameters>
    </function>
    <function name="IsUpgradeAvailable" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="WantUpgrade" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bWantUpgrade" type="Integer" />
      </parameters>
    </procedure>
    <procedure name="AsyncProcessDroppedLicenseRequest" visibility="automated" procflags="abstract automated virtual">
    </procedure>
    <function name="GenerateInstallationId" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="DepositConfirmationId" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrVal" type="WideString" paramflags="const" />
        <retval type="Cardinal" />
      </parameters>
    </function>
    <function name="VerifyCheckDigits" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bstrCIDIID" type="WideString" paramflags="const" />
        <retval type="Integer" />
      </parameters>
    </function>
    <function name="GetCurrentExpiryDate" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="TDateTime" />
      </parameters>
    </function>
    <procedure name="CancelAsyncProcessRequest" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="bIsLicenseRequest" type="Integer" />
      </parameters>
    </procedure>
    <function name="GetCurrencyDescription" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="dwCurrencyIndex" type="Cardinal" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetPriceItemCount" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Cardinal" />
      </parameters>
    </function>
    <function name="GetPriceItemLabel" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="dwIndex" type="Cardinal" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetPriceItemValue" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="dwCurrencyIndex" type="Cardinal" />
        <parameter name="dwIndex" type="Cardinal" />
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetInvoiceText" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetBackendErrorMsg" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="GetCurrencyOption" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Cardinal" />
      </parameters>
    </function>
    <procedure name="SetCurrencyOption" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="dwCurrencyOption" type="Cardinal" />
      </parameters>
    </procedure>
    <function name="GetEndOfLifeHtmlText" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="DisplaySSLCert" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <retval type="Cardinal" />
      </parameters>
    </function>
  </interface>
  <interface name="IMsoEServicesDialog" GUID="{000C0372-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <procedure name="Close" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="ApplyWebComponentChanges" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="AddTrustedDomain" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="Domain" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_ApplicationName" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <function name="Get_Application" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_WebComponent" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_ClipArt" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <property name="ApplicationName" visibility="public" read="Get_ApplicationName" type="WideString" default="0" />
    <property name="Application" visibility="public" read="Get_Application" type="IDispatch" />
    <property name="WebComponent" visibility="public" read="Get_WebComponent" type="IDispatch" />
    <property name="ClipArt" visibility="public" read="Get_ClipArt" type="IDispatch" />
  </interface>
  <interface name="IMsoEServicesDialogDisp" GUID="{000C0372-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <procedure name="Close" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="ApplyWebComponentChanges" type="WordBool" />
      </parameters>
    </procedure>
    <procedure name="AddTrustedDomain" visibility="automated" procflags="abstract automated virtual">
      <parameters>
        <parameter name="Domain" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="ApplicationName" visibility="automated" type="WideString" />
    <property name="Application" visibility="automated" type="IDispatch" />
    <property name="WebComponent" visibility="automated" type="IDispatch" />
    <property name="ClipArt" visibility="automated" type="IDispatch" />
  </interface>
  <interface name="WebComponentProperties" GUID="{000C0373-0000-0000-C000-000000000046}" ancestor="IDispatch">
    <function name="Get_Shape" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="IDispatch" />
      </parameters>
    </function>
    <function name="Get_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Name" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_URL" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_URL" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_HTML" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_HTML" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_PreviewGraphic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_PreviewGraphic" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_PreviewHTML" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_PreviewHTML" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <function name="Get_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Width" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="Integer" />
      </parameters>
    </function>
    <procedure name="Set_Height" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="Integer" />
      </parameters>
    </procedure>
    <function name="Get_Tag" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <retval type="WideString" />
      </parameters>
    </function>
    <procedure name="Set_Tag" visibility="public" procflags="abstract virtual" callconv="safecall">
      <parameters>
        <parameter name="RetValue" type="WideString" paramflags="const" />
      </parameters>
    </procedure>
    <property name="Shape" visibility="public" read="Get_Shape" type="IDispatch" />
    <property name="Name" visibility="public" read="Get_Name" write="Set_Name" type="WideString" default="0" />
    <property name="URL" visibility="public" read="Get_URL" write="Set_URL" type="WideString" default="0" />
    <property name="HTML" visibility="public" read="Get_HTML" write="Set_HTML" type="WideString" default="0" />
    <property name="PreviewGraphic" visibility="public" read="Get_PreviewGraphic" write="Set_PreviewGraphic" type="WideString" default="0" />
    <property name="PreviewHTML" visibility="public" read="Get_PreviewHTML" write="Set_PreviewHTML" type="WideString" default="0" />
    <property name="Width" visibility="public" read="Get_Width" write="Set_Width" type="Integer" />
    <property name="Height" visibility="public" read="Get_Height" write="Set_Height" type="Integer" />
    <property name="Tag" visibility="public" read="Get_Tag" write="Set_Tag" type="WideString" default="0" />
  </interface>
  <interface name="WebComponentPropertiesDisp" GUID="{000C0373-0000-0000-C000-000000000046}" ancestor="IDispatch" dispatch="true" symflags="platform">
    <property name="Shape" visibility="automated" type="IDispatch" />
    <property name="Name" visibility="automated" type="WideString" />
    <property name="URL" visibility="automated" type="WideString" />
    <property name="HTML" visibility="automated" type="WideString" />
    <property name="PreviewGraphic" visibility="automated" type="WideString" />
    <property name="PreviewHTML" visibility="automated" type="WideString" />
    <property name="Width" visibility="automated" type="Integer" />
    <property name="Height" visibility="automated" type="Integer" />
    <property name="Tag" visibility="automated" type="WideString" />
  </interface>
  <class name="CoCommandBars">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="DisposeOf" visibility="public" procflags="inline" symflags="deprecated">
      </methodref>
      <methodref name="InitInstance" visibility="public" procflags="class">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public" procflags="inline">
      </methodref>
      <methodref name="ClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassNameIs" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassParent" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="ClassInfo" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InstanceSize" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InheritsFrom" visibility="public" procflags="class">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodName" visibility="public" procflags="class">
      </methodref>
      <methodref name="QualifiedClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="UnitName" visibility="public" procflags="class">
      </methodref>
      <methodref name="UnitScope" visibility="public" procflags="class">
      </methodref>
      <methodref name="Equals" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetHashCode" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToString" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="SafeCallException" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Dispatch" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="NewInstance" visibility="public" procflags="class virtual">
      </methodref>
      <methodref name="FreeInstance" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
      </methodref>
      <methodref name="GetDisposed" visibility="protected" procflags="inline">
      </methodref>
      <methodref name="CheckDisposed" visibility="protected" procflags="inline">
      </methodref>
      <propertyref name="Disposed" visibility="protected">
      </propertyref>
    </ancestor>
    <members>
      <function name="Create" visibility="public" procflags="class">
        <parameters>
          <retval type="_CommandBars" />
        </parameters>
      </function>
      <function name="CreateRemote" visibility="public" procflags="class">
        <parameters>
          <parameter name="MachineName" type="string" paramflags="const" />
          <retval type="_CommandBars" />
        </parameters>
      </function>
    </members>
  </class>
  <class name="CoCommandBarComboBox">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="DisposeOf" visibility="public" procflags="inline" symflags="deprecated">
      </methodref>
      <methodref name="InitInstance" visibility="public" procflags="class">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public" procflags="inline">
      </methodref>
      <methodref name="ClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassNameIs" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassParent" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="ClassInfo" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InstanceSize" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InheritsFrom" visibility="public" procflags="class">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodName" visibility="public" procflags="class">
      </methodref>
      <methodref name="QualifiedClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="UnitName" visibility="public" procflags="class">
      </methodref>
      <methodref name="UnitScope" visibility="public" procflags="class">
      </methodref>
      <methodref name="Equals" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetHashCode" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToString" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="SafeCallException" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Dispatch" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="NewInstance" visibility="public" procflags="class virtual">
      </methodref>
      <methodref name="FreeInstance" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
      </methodref>
      <methodref name="GetDisposed" visibility="protected" procflags="inline">
      </methodref>
      <methodref name="CheckDisposed" visibility="protected" procflags="inline">
      </methodref>
      <propertyref name="Disposed" visibility="protected">
      </propertyref>
    </ancestor>
    <members>
      <function name="Create" visibility="public" procflags="class">
        <parameters>
          <retval type="_CommandBarComboBox" />
        </parameters>
      </function>
      <function name="CreateRemote" visibility="public" procflags="class">
        <parameters>
          <parameter name="MachineName" type="string" paramflags="const" />
          <retval type="_CommandBarComboBox" />
        </parameters>
      </function>
    </members>
  </class>
  <class name="CoCommandBarButton">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="DisposeOf" visibility="public" procflags="inline" symflags="deprecated">
      </methodref>
      <methodref name="InitInstance" visibility="public" procflags="class">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public" procflags="inline">
      </methodref>
      <methodref name="ClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassNameIs" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassParent" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="ClassInfo" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InstanceSize" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InheritsFrom" visibility="public" procflags="class">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodName" visibility="public" procflags="class">
      </methodref>
      <methodref name="QualifiedClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="UnitName" visibility="public" procflags="class">
      </methodref>
      <methodref name="UnitScope" visibility="public" procflags="class">
      </methodref>
      <methodref name="Equals" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetHashCode" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToString" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="SafeCallException" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Dispatch" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="NewInstance" visibility="public" procflags="class virtual">
      </methodref>
      <methodref name="FreeInstance" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
      </methodref>
      <methodref name="GetDisposed" visibility="protected" procflags="inline">
      </methodref>
      <methodref name="CheckDisposed" visibility="protected" procflags="inline">
      </methodref>
      <propertyref name="Disposed" visibility="protected">
      </propertyref>
    </ancestor>
    <members>
      <function name="Create" visibility="public" procflags="class">
        <parameters>
          <retval type="_CommandBarButton" />
        </parameters>
      </function>
      <function name="CreateRemote" visibility="public" procflags="class">
        <parameters>
          <parameter name="MachineName" type="string" paramflags="const" />
          <retval type="_CommandBarButton" />
        </parameters>
      </function>
    </members>
  </class>
  <class name="CoMsoEnvelope">
    <ancestor name="TObject" namespace="System">
      <methodref name="Create" visibility="public" procflags="constructor">
      </methodref>
      <methodref name="Free" visibility="public">
      </methodref>
      <methodref name="DisposeOf" visibility="public" procflags="inline" symflags="deprecated">
      </methodref>
      <methodref name="InitInstance" visibility="public" procflags="class">
      </methodref>
      <methodref name="CleanupInstance" visibility="public">
      </methodref>
      <methodref name="ClassType" visibility="public" procflags="inline">
      </methodref>
      <methodref name="ClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassNameIs" visibility="public" procflags="class">
      </methodref>
      <methodref name="ClassParent" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="ClassInfo" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InstanceSize" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="InheritsFrom" visibility="public" procflags="class">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodAddress" visibility="public" procflags="class overload">
      </methodref>
      <methodref name="MethodName" visibility="public" procflags="class">
      </methodref>
      <methodref name="QualifiedClassName" visibility="public" procflags="class">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="FieldAddress" visibility="public" procflags="overload">
      </methodref>
      <methodref name="GetInterface" visibility="public">
      </methodref>
      <methodref name="GetInterfaceEntry" visibility="public" procflags="class">
      </methodref>
      <methodref name="GetInterfaceTable" visibility="public" procflags="class inline">
      </methodref>
      <methodref name="UnitName" visibility="public" procflags="class">
      </methodref>
      <methodref name="UnitScope" visibility="public" procflags="class">
      </methodref>
      <methodref name="Equals" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="GetHashCode" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="ToString" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="SafeCallException" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="AfterConstruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="BeforeDestruction" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Dispatch" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="DefaultHandler" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="NewInstance" visibility="public" procflags="class virtual">
      </methodref>
      <methodref name="FreeInstance" visibility="public" procflags="virtual">
      </methodref>
      <methodref name="Destroy" visibility="public" procflags="destructor virtual">
      </methodref>
      <methodref name="GetDisposed" visibility="protected" procflags="inline">
      </methodref>
      <methodref name="CheckDisposed" visibility="protected" procflags="inline">
      </methodref>
      <propertyref name="Disposed" visibility="protected">
      </propertyref>
    </ancestor>
    <members>
      <function name="Create" visibility="public" procflags="class">
        <parameters>
          <retval type="IMsoEnvelopeVB" />
        </parameters>
      </function>
      <function name="CreateRemote" visibility="public" procflags="class">
        <parameters>
          <parameter name="MachineName" type="string" paramflags="const" />
          <retval type="IMsoEnvelopeVB" />
        </parameters>
      </function>
    </members>
  </class>
</namespace>
